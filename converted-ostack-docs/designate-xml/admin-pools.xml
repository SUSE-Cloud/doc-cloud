<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.1" xml:id="pools">
  <title>DNS Server Pools</title>
  <section>
    <title>Overview</title>
    <para>In designate we support the concept of multiple “pools” of DNS Servers.</para>
    <para>This allows operators to scale out their DNS Service by adding more pools, avoiding
                the scalling problems that some DNS servers have for number of zones, and the total
                number of records hosted by a single server.</para>
    <para>This also allows providers to have tiers of service (i.e. the difference
                between GOLD vs SILVER tiers may be the number of DNS Servers, and how they
                are distributed around the world.)</para>
    <para>In a private cloud situation, it allows operators to separate internal and
                external facing zones.</para>
    <para>To help users create zones on the  correct pool we have a “scheduler” that is
                responsible for examining the zone being created and the pools that are
                available for use, and matching the zone to a pool.</para>
    <para>The filters are pluggable (i.e. operator replaceable) and all follow a simple
                interface.</para>
    <para>The zones are matched using “zone attributes” and “pool attributes”. These are
                key: value pairs that are attached to the zone when it is being created, and
                the pool. The pool attributes can be updated by the operator in the future,
                but it will <emphasis role="bold">not</emphasis> trigger zones to be moved from one pool to another.</para>
    <note>
      <para>Currently the only zone attribute that is accepted is the <literal>pool_id</literal> attribute.
                    As more filters are merged there will be support for dynamic filters.</para>
    </note>
  </section>
  <section>
    <title>Target vs. Nameserver</title>
    <para>One thing that can be confusing about pools is the differentiation
                between a target and a nameserver. The target is where Designate will
                try to write the change, while a namserver is where Designate checks
                that the change exists.</para>
    <para>A great example of this is <link xlink:href="http://www.zytrax.com/books/dns/ch4/#stealth">bind’s stealth master system</link>. In this
                configuration, there could be a stealth master that you configure as
                your target and a set of slaves pointed to that master as your
                nameservers. Designate will write to the master and then look for the
                changes on the slaves before considering the change active.</para>
    <para>Another example would be where Designate uses an API backend such as
                DynDNS or even another Designate instance. In this situation, you will
                typically have a single target with a set of nameservers to test that
                meet your requirements.</para>
    <para>Yet another example is when using a Designate agent. In this scenario
                your agent instances are the targets and the nameservers the agent
                updates would be checked for the correct information.</para>
  </section>
  <section>
    <title>Managing Pools</title>
    <para>In mitaka we moved the method of updating pools to a CLI in <literal>designate-manage</literal></para>
    <para>There is a YAML file that defines the pool, and is used to load this information into the database.</para>
    <screen language="yaml"><?dbsuse-fo font-size="8pt"?>---

- name: default
  # The name is immutable. There will be no option to change the name after
  # creation and the only way will to change it will be to delete it
  # (and all zones associated with it) and recreate it.
  description: Default PowerDNS Pool


  # Attributes are Key:Value pairs that describe the pool. for example the level
  # of service (i.e. service_tier:GOLD), capabilities (i.e. anycast: true) or
  # other metadata. Users can use this information to point their zones to the
  # correct pool
  attributes: {}

  # List out the NS records for zones hosted within this pool
  ns_records:
    - hostname: ns1-1.example.org.
      priority: 1
    - hostname: ns1-2.example.org.
      priority: 2

  # List out the nameservers for this pool. These are the actual PowerDNS
  # servers. We use these to verify changes have propagated to all nameservers.
  nameservers:
    - host: 192.0.2.2
      port: 53
    - host: 192.0.2.3
      port: 53

  # List out the targets for this pool. For PowerDNS, this is the database
  # (or databases, if you deploy a separate DB for each PowerDNS server)
  targets:
    - type: powerdns
      description: PowerDNS Database Cluster

      # List out the designate-mdns servers from which PowerDNS servers should
      # request zone transfers (AXFRs) from.
      masters:
        - host: 192.0.2.1
          port: 5354

      # PowerDNS Configuration options
      options:
        host: 192.0.2.1
        port: 53
        connection: 'mysql+pymysql://designate:password@127.0.0.1/designate_pdns?charset=utf8'

  # Optional list of additional IP/Port's for which designate-mdns will send
  # DNS NOTIFY packets to
  also_notifies:
   - host: 192.0.2.4
     port: 53

</screen>
    <section>
      <title>Designate Manage Pools Command Reference</title>
      <section>
        <title>Update Pools Information</title>
        <screen language="console">designate-manage pool update [options]</screen>
        <section>
          <title>Options:</title>
          <variablelist>
            <varlistentry>
              <term>
                <option>--file</option>
              </term>
              <listitem>
                <para>Input file (Default: <literal>/etc/designate/pools.yaml</literal>)</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <option>--dry_run</option>
              </term>
              <listitem>
                <para>Simulate an update. (Default: False)</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <option>--delete</option>
              </term>
              <listitem>
                <para>Delete Pools that are not in the input file (Defaults: False)</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
      </section>
      <section>
        <title>Generate YAML File</title>
        <screen language="console">designate-manage pool generate_file [options]</screen>
        <section>
          <title>Options:</title>
          <variablelist>
            <varlistentry>
              <term>
                <option>--file</option>
              </term>
              <listitem>
                <para>YAML file output too (Default: <literal>/etc/designate/pools.yaml</literal>)</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
      </section>
      <section>
        <title>Generate YAML File from Liberty Config</title>
        <screen language="console">designate-manage pool export_from_config [options]</screen>
        <section>
          <title>Options:</title>
          <variablelist>
            <varlistentry>
              <term>
                <option>--file</option>
              </term>
              <listitem>
                <para>YAML file output too (Default: <literal>/etc/designate/pools.yaml</literal>)</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
      </section>
    </section>
  </section>
</section>
