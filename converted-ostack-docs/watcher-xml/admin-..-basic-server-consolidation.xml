<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.1">
  <title>Basic Offline Server Consolidation</title>
  <section>
    <title>Synopsis</title>
    <para><emphasis role="bold">display name</emphasis>: <literal>basic</literal></para>
    <para><emphasis role="bold">goal</emphasis>: <literal>server_consolidation</literal></para>
    <para>
      <emphasis>Good server consolidation strategy</emphasis>
    </para>
    <para>Consolidation of VMs is essential to achieve energy optimization in cloud
                    environments such as OpenStack. As VMs are spinned up and/or moved over time,
                    it becomes necessary to migrate VMs among servers to lower the costs. However,
                    migration of VMs introduces runtime overheads and consumes extra energy, thus
                    a good server consolidation strategy should carefully plan for migration in
                    order to both minimize energy consumption and comply to the various SLAs.</para>
    <para>This algorithm not only minimizes the overall number of used servers, but also
                    minimizes the number of migrations.</para>
    <para>It has been developed only for tests. You must have at least 2 physical compute
                    nodes to run it, so you can easily run it on DevStack. It assumes that live
                    migration is possible on your OpenStack cluster.</para>
  </section>
  <section>
    <title>Requirements</title>
    <section>
      <title>Metrics</title>
      <para>The <emphasis>basic</emphasis> strategy requires the following metrics:</para>
      <informaltable>
        <tgroup cols="4">
          <colspec colname="c1" colwidth="51.9*"/>
          <colspec colname="c2" colwidth="22.2*"/>
          <colspec colname="c3" colwidth="13.0*"/>
          <colspec colname="c4" colwidth="13.0*"/>
          <thead>
            <row>
              <entry>
                <para>metric</para>
              </entry>
              <entry>
                <para>service name</para>
              </entry>
              <entry>
                <para>plugins</para>
              </entry>
              <entry>
                <para>comment</para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <para>
                  <literal>compute.node.cpu.percent</literal>
                </para>
              </entry>
              <entry>
                <para>
                  <link xlink:href="http://docs.openstack.org/admin-guide/telemetry-measurements.html#openstack-compute">ceilometer</link>
                </para>
              </entry>
              <entry>
                <para>none</para>
              </entry>
              <entry/>
            </row>
            <row>
              <entry>
                <para>
                  <literal>cpu_util</literal>
                </para>
              </entry>
              <entry>
                <para>
                  <link xlink:href="http://docs.openstack.org/admin-guide/telemetry-measurements.html#openstack-compute">ceilometer</link>
                </para>
              </entry>
              <entry>
                <para>none</para>
              </entry>
              <entry/>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section>
      <title>Cluster data model</title>
      <para>Default Watcher’s Compute cluster data model:</para>
      <para>Nova cluster data model collector</para>
      <para>The Nova cluster data model collector creates an in-memory
                        representation of the resources exposed by the compute service.</para>
    </section>
    <section>
      <title>Actions</title>
      <para>Default Watcher’s actions:</para>
      <informaltable>
        <tgroup cols="2">
          <colspec colname="c1" colwidth="50.0*"/>
          <colspec colname="c2" colwidth="50.0*"/>
          <thead>
            <row>
              <entry>
                <para>action</para>
              </entry>
              <entry>
                <para>description</para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <para>
                  <literal>migration</literal>
                </para>
              </entry>
              <entry>
                <para>Migrates a server to a destination nova-compute host</para>
                <para>This action will allow you to migrate a server to another compute
                                            destination host.
                                            Migration type ‘live’ can only be used for migrating active VMs.
                                            Migration type ‘cold’ can be used for migrating non-active VMs
                                            as well active VMs, which will be shut down while migrating.</para>
                <para>The action schema is:</para>
                <screen>schema = Schema({
 'resource_id': str,  # should be a UUID
 'migration_type': str,  # choices -&gt; "live", "cold"
 'destination_node': str,
 'source_node': str,
})</screen>
                <para>The <literal>resource_id</literal> is the UUID of the server to migrate.
                                            The <literal>source_node</literal> and <literal>destination_node</literal> parameters are respectively the
                                            source and the destination compute hostname (list of available compute
                                            hosts is returned by this command: <literal>nova service-list --binary
nova-compute</literal>).</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
                  <literal>change_nova_service_state</literal>
                </para>
              </entry>
              <entry>
                <para>Disables or enables the nova-compute service, deployed on a host</para>
                <para>By using this action, you will be able to update the state of a
                                            nova-compute service. A disabled nova-compute service can not be selected
                                            by the nova scheduler for future deployment of server.</para>
                <para>The action schema is:</para>
                <screen>schema = Schema({
 'resource_id': str,
 'state': str,
})</screen>
                <para>The <literal>resource_id</literal> references a nova-compute service name (list of available
                                            nova-compute services is returned by this command: <literal>nova service-list
--binary nova-compute</literal>).
                                            The <literal>state</literal> value should either be <literal>ONLINE</literal> or <literal>OFFLINE</literal>.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section>
      <title>Planner</title>
      <para>Default Watcher’s planner:</para>
      <para>Weight planner implementation</para>
      <para>This implementation builds actions with parents in accordance with weights.
                        Set of actions having a higher weight will be scheduled before
                        the other ones. There are two config options to configure:
                        action_weights and parallelization.</para>
      <para>
        <emphasis>Limitations</emphasis>
      </para>
      <itemizedlist>
        <listitem>
          <para>This planner requires to have action_weights and parallelization configs
                                tuned well.</para>
        </listitem>
      </itemizedlist>
    </section>
  </section>
  <section>
    <title>Configuration</title>
    <para>Strategy parameter is:</para>
    <informaltable>
      <tgroup cols="4">
        <colspec colname="c1" colwidth="28.9*"/>
        <colspec colname="c2" colwidth="7.9*"/>
        <colspec colname="c3" colwidth="17.1*"/>
        <colspec colname="c4" colwidth="46.1*"/>
        <thead>
          <row>
            <entry>
              <para>parameter</para>
            </entry>
            <entry>
              <para>type</para>
            </entry>
            <entry>
              <para>default Value</para>
            </entry>
            <entry>
              <para>description</para>
            </entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <para>
                <literal>migration_attempts</literal>
              </para>
            </entry>
            <entry>
              <para>Number</para>
            </entry>
            <entry>
              <para>0</para>
            </entry>
            <entry>
              <para>Maximum number of combinations to
                                    be tried by the strategy while
                                    searching for potential candidates.
                                    To remove the limit, set it to 0</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>
                <literal>period</literal>
              </para>
            </entry>
            <entry>
              <para>Number</para>
            </entry>
            <entry>
              <para>7200</para>
            </entry>
            <entry>
              <para>The time interval in seconds
                                    for getting statistic aggregation
                                    from metric data source</para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section>
  <section>
    <title>Efficacy Indicator</title>
    <screen>
      <para>{'name': 'released_nodes_ratio', 'description': 'Ratio of released compute nodes divided by the total number of enabled compute nodes.', 'unit': '%', 'value': 0}</para>
    </screen>
  </section>
  <section>
    <title>How to use it ?</title>
    <screen language="shell">$ openstack optimize audittemplate create \
  at1 server_consolidation --strategy basic

$ openstack optimize audit create -a at1 -p migration_attempts=4</screen>
  </section>
  <section>
    <title>External Links</title>
    <para>None.</para>
  </section>
</section>
