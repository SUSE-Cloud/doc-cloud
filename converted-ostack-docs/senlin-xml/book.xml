<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Converted by suse-upgrade version 1.1 -->
<book xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:lang="en">
  <title>Welcome to the Senlin documentation!</title>
  <info/>
  <chapter>
    <title>1 Introduction</title>
    <info/>
    <para>Senlin is a service to create and manage <xref linkend="term-cluster"/> of multiple cloud
                resources. Senlin provides an OpenStack-native REST API and a AWS
                AutoScaling-compatible Query API is in plan.</para>
    <xi:include href="overview.xml"/>
    <xi:include href="install.xml"/>
    <xi:include href="configuration.xml"/>
  </chapter>
  <chapter>
    <title>2 Tutorial</title>
    <info/>
    <para>This tutorial walks you through the Senlin features step-by-step. For more
                details, please check the <xref linkend="user-references"/> section.</para>
    <xi:include href="tutorial.xml"/>
    <xi:include href="tutorial.xml"/>
    <xi:include href="tutorial.xml"/>
    <xi:include href="tutorial.xml"/>
  </chapter>
  <chapter xml:id="user-references">
    <title>3 User References</title>
    <info/>
    <para>This section provides a detailed documentation for the concepts and built-in
                policy types.</para>
    <section>
      <title>3.1 Basic Concepts</title>
      <xi:include href="user.xml"/>
      <xi:include href="user.xml"/>
      <xi:include href="user.xml"/>
      <xi:include href="user.xml"/>
      <xi:include href="user.xml"/>
      <xi:include href="user.xml"/>
      <xi:include href="user.xml"/>
      <xi:include href="user.xml"/>
      <xi:include href="user.xml"/>
      <xi:include href="user.xml"/>
      <xi:include href="user.xml"/>
    </section>
    <section>
      <title>3.2 Built-in Policy Types</title>
      <para>The senlin service is released with some built-in policy types that target
                    some common use cases. You can develop and deploy your own policy types by
                    following the instructions in the <xref linkend="developer-guide"/> section.</para>
      <para>The following is a list of builtin policy types:</para>
      <xi:include href="user.xml"/>
      <xi:include href="user.xml"/>
      <xi:include href="user.xml"/>
      <xi:include href="user.xml"/>
      <xi:include href="user.xml"/>
      <xi:include href="user.xml"/>
    </section>
  </chapter>
  <chapter>
    <title>4 Usage Scenarios</title>
    <info/>
    <para>This section provides some guides for typical usage scenarios. More scenarios
                are to be added</para>
    <section>
      <title>4.1 Managing Node Affinity</title>
      <para>Senlin provides an  for
                    managing node affinity. This section contains a detailed introduction on how
                    to use it.</para>
      <xi:include href="scenarios.xml"/>
    </section>
    <section>
      <title>4.2 Building AutoScaling Clusters</title>
      <xi:include href="scenarios.xml"/>
      <xi:include href="scenarios.xml"/>
      <xi:include href="scenarios.xml"/>
    </section>
  </chapter>
  <chapter xml:id="developer-guide">
    <title>5. Developer’s Guide</title>
    <info/>
    <para>This section targets senlin developers.</para>
    <section>
      <title>5.1 Understanding the Design</title>
      <xi:include href="contributor.xml"/>
      <xi:include href="contributor.xml"/>
      <xi:include href="contributor.xml"/>
      <xi:include href="contributor.xml"/>
      <xi:include href="contributor.xml"/>
      <xi:include href="contributor.xml"/>
      <xi:include href="contributor.xml"/>
      <xi:include href="contributor.xml"/>
      <xi:include href="contributor.xml"/>
      <xi:include href="contributor.xml"/>
      <xi:include href="contributor.xml"/>
    </section>
    <section>
      <title>5.2 Built-in Policy Types</title>
      <para>Senlin provides some built-in policy types which can be instantiated and then
                    attached to your clusters. These policy types are designed to be orthogonal so
                    that each of them can be used independently. They are also expected to work
                    in a collaborative way to meet the needs of complicated usage scenarios.</para>
      <xi:include href="contributor.xml"/>
      <xi:include href="contributor.xml"/>
      <xi:include href="contributor.xml"/>
      <xi:include href="contributor.xml"/>
      <xi:include href="contributor.xml"/>
      <xi:include href="contributor.xml"/>
      <xi:include href="contributor.xml"/>
    </section>
    <section>
      <title>5.3 Reviewing Patches</title>
      <para>There are many general guidelines across the community about code reviews, for
                    example:</para>
      <itemizedlist>
        <listitem>
          <para>
            <link xlink:href="https://wiki.openstack.org/wiki/CodeReviewGuidelines">Code review guidelines (wiki)</link>
          </para>
        </listitem>
        <listitem>
          <para>
            <link xlink:href="https://docs.openstack.org/infra/manual/developers.html">OpenStack developer’s guide</link>
          </para>
        </listitem>
      </itemizedlist>
      <para>Besides these guidelines, senlin has some additional amendments based on daily
                    review experiences that should be practiced.</para>
      <xi:include href="contributor.xml"/>
    </section>
  </chapter>
  <chapter>
    <title>6 Administering Senlin</title>
    <info/>
    <xi:include href="admin.xml"/>
  </chapter>
  <chapter>
    <title>7 References</title>
    <info/>
    <xi:include href="reference.xml"/>
    <xi:include href="reference.xml"/>
    <xi:include href="reference.xml"/>
    <section>
      <title>Indices and tables</title>
      <itemizedlist>
        <listitem>
          <para/>
        </listitem>
        <listitem>
          <para/>
        </listitem>
      </itemizedlist>
    </section>
  </chapter>
</book>
