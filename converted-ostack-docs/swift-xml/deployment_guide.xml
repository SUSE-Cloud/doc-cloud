<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.1">
  <title>Deployment Guide</title>
  <section>
    <title>Hardware Considerations</title>
    <para>Swift is designed to run on commodity hardware. At Rackspace, our storage
                servers are currently running fairly generic 4U servers with 24 2T SATA
                drives and 8 cores of processing power. RAID on the storage drives is not
                required and not recommended. Swift’s disk usage pattern is the worst
                case possible for RAID, and performance degrades very quickly using RAID 5
                or 6.</para>
  </section>
  <section>
    <title>Deployment Options</title>
    <para>The Swift services run completely autonomously, which provides for a lot of
                flexibility when architecting the hardware deployment for Swift. The 4 main
                services are:</para>
    <procedure>
      <step>
        <para>Proxy Services</para>
      </step>
      <step>
        <para>Object Services</para>
      </step>
      <step>
        <para>Container Services</para>
      </step>
      <step>
        <para>Account Services</para>
      </step>
    </procedure>
    <para>The Proxy Services are more CPU and network I/O intensive. If you are using
                10g networking to the proxy, or are terminating SSL traffic at the proxy,
                greater CPU power will be required.</para>
    <para>The Object, Container, and Account Services (Storage Services) are more disk
                and network I/O intensive.</para>
    <para>The easiest deployment is to install all services on each server. There is
                nothing wrong with doing this, as it scales each service out horizontally.</para>
    <para>At Rackspace, we put the Proxy Services on their own servers and all of the
                Storage Services on the same server. This allows us to send 10g networking to
                the proxy and 1g to the storage servers, and keep load balancing to the
                proxies more manageable.  Storage Services scale out horizontally as storage
                servers are added, and we can scale overall API throughput by adding more
                Proxies.</para>
    <para>If you need more throughput to either Account or Container Services, they may
                each be deployed to their own servers. For example you might use faster (but
                more expensive) SAS or even SSD drives to get faster disk I/O to the databases.</para>
    <para>A high-availability (HA) deployment of Swift requires that multiple proxy
                servers are deployed and requests are load-balanced between them. Each proxy
                server instance is stateless and able to respond to requests for the entire
                cluster.</para>
    <para>Load balancing and network design is left as an exercise to the reader,
                but this is a very important part of the cluster, so time should be spent
                designing the network for a Swift cluster.</para>
  </section>
  <section>
    <title>Web Front End Options</title>
    <para>Swift comes with an integral web front end. However, it can also be deployed
                as a request processor of an Apache2 using mod_wsgi as described in
                .</para>
  </section>
  <section xml:id="ring-preparing">
    <title>Preparing the Ring</title>
    <para>The first step is to determine the number of partitions that will be in the
                ring. We recommend that there be a minimum of 100 partitions per drive to
                insure even distribution across the drives. A good starting point might be
                to figure out the maximum number of drives the cluster will contain, and then
                multiply by 100, and then round up to the nearest power of two.</para>
    <para>For example, imagine we are building a cluster that will have no more than
                5,000 drives. That would mean that we would have a total number of 500,000
                partitions, which is pretty close to 2^19, rounded up.</para>
    <para>It is also a good idea to keep the number of partitions small (relatively).
                The more partitions there are, the more work that has to be done by the
                replicators and other backend jobs and the more memory the rings consume in
                process. The goal is to find a good balance between small rings and maximum
                cluster size.</para>
    <para>The next step is to determine the number of replicas to store of the data.
                Currently it is recommended to use 3 (as this is the only value that has
                been tested). The higher the number, the more storage that is used but the
                less likely you are to lose data.</para>
    <para>It is also important to determine how many zones the cluster should have. It is
                recommended to start with a minimum of 5 zones. You can start with fewer, but
                our testing has shown that having at least five zones is optimal when failures
                occur. We also recommend trying to configure the zones at as high a level as
                possible to create as much isolation as possible. Some example things to take
                into consideration can include physical location, power availability, and
                network connectivity. For example, in a small cluster you might decide to
                split the zones up by cabinet, with each cabinet having its own power and
                network connectivity. The zone concept is very abstract, so feel free to use
                it in whatever way best isolates your data from failure. Each zone exists
                in a region.</para>
    <para>A region is also an abstract concept that may be used to distinguish between
                geographically separated areas as well as can be used within same datacenter.
                Regions and zones are referenced by a positive integer.</para>
    <para>You can now start building the ring with:</para>
    <screen>swift-ring-builder &lt;builder_file&gt; create &lt;part_power&gt; &lt;replicas&gt; &lt;min_part_hours&gt;</screen>
    <para>This will start the ring build process creating the &lt;builder_file&gt; with
                2^&lt;part_power&gt; partitions. &lt;min_part_hours&gt; is the time in hours before a
                specific partition can be moved in succession (24 is a good value for this).</para>
    <para>Devices can be added to the ring with:</para>
    <screen><?dbsuse-fo font-size="8pt"?>swift-ring-builder &lt;builder_file&gt; add r&lt;region&gt;z&lt;zone&gt;-&lt;ip&gt;:&lt;port&gt;/&lt;device_name&gt;_&lt;meta&gt; &lt;weight&gt;</screen>
    <para>This will add a device to the ring where &lt;builder_file&gt; is the name of the
                builder file that was created previously, &lt;region&gt; is the number of the region
                the zone is in, &lt;zone&gt; is the number of the zone this device is in, &lt;ip&gt; is
                the ip address of the server the device is in, &lt;port&gt; is the port number that
                the server is running on, &lt;device_name&gt; is the name of the device on the server
                (for example: sdb1), &lt;meta&gt; is a string of metadata for the device (optional),
                and &lt;weight&gt; is a float weight that determines how many partitions are put on
                the device relative to the rest of the devices in the cluster (a good starting
                point is 100.0 x TB on the drive).Add each device that will be initially in the
                cluster.</para>
    <para>Once all of the devices are added to the ring, run:</para>
    <screen>swift-ring-builder &lt;builder_file&gt; rebalance</screen>
    <para>This will distribute the partitions across the drives in the ring. It is
                important whenever making changes to the ring to make all the changes
                required before running rebalance. This will ensure that the ring stays as
                balanced as possible, and as few partitions are moved as possible.</para>
    <para>The above process should be done to make a ring for each storage service
                (Account, Container and Object). The builder files will be needed in future
                changes to the ring, so it is very important that these be kept and backed up.
                The resulting .tar.gz ring file should be pushed to all of the servers in the
                cluster. For more information about building rings, running
                swift-ring-builder with no options will display help text with available
                commands and options. More information on how the ring works internally
                can be found in the .</para>
  </section>
  <section xml:id="server-per-port-configuration">
    <title>Running object-servers Per Disk</title>
    <para>The lack of true asynchronous file I/O on Linux leaves the object-server
                workers vulnerable to misbehaving disks.  Because any object-server worker can
                service a request for any disk, and a slow I/O request blocks the eventlet hub,
                a single slow disk can impair an entire storage node.  This also prevents
                object servers from fully utilizing all their disks during heavy load.</para>
    <para>Another way to get full I/O isolation is to give each disk on a storage node a
                different port in the storage policy rings.  Then set the
                <xref linkend="object-server-default-options"/>
                option in the object-server config.  NOTE: while the purpose of this config
                setting is to run one or more object-server worker processes per <emphasis>disk</emphasis>, the
                implementation just runs object-servers per unique port of local devices in the
                rings.  The deployer must combine this option with appropriately-configured
                rings to benefit from this feature.</para>
    <para>Here’s an example (abbreviated) old-style ring (2 node cluster with 2 disks
                each):</para>
    <screen><?dbsuse-fo font-size="8pt"?>Devices:    id  region  zone      ip address  port  replication ip  replication port      name
             0       1     1       1.1.0.1    6200       1.1.0.1                6200      d1
             1       1     1       1.1.0.1    6200       1.1.0.1                6200      d2
             2       1     2       1.1.0.2    6200       1.1.0.2                6200      d3
             3       1     2       1.1.0.2    6200       1.1.0.2                6200      d4</screen>
    <para>And here’s the same ring set up for <literal>servers_per_port</literal>:</para>
    <screen><?dbsuse-fo font-size="8pt"?>Devices:    id  region  zone      ip address  port  replication ip  replication port      name
             0       1     1       1.1.0.1    6200       1.1.0.1                6200      d1
             1       1     1       1.1.0.1    6201       1.1.0.1                6201      d2
             2       1     2       1.1.0.2    6200       1.1.0.2                6200      d3
             3       1     2       1.1.0.2    6201       1.1.0.2                6201      d4</screen>
    <para>When migrating from normal to <literal>servers_per_port</literal>, perform these steps in order:</para>
    <procedure>
      <step>
        <para>Upgrade Swift code to a version capable of doing <literal>servers_per_port</literal>.</para>
      </step>
      <step>
        <para>Enable <literal>servers_per_port</literal> with a &gt; 0 value</para>
      </step>
      <step>
        <para>Restart <literal>swift-object-server</literal> processes with a SIGHUP.  At this point, you
                            will have the <literal>servers_per_port</literal> number of <literal>swift-object-server</literal> processes
                            serving all requests for all disks on each node.  This preserves
                            availability, but you should perform the next step as quickly as possible.</para>
      </step>
      <step>
        <para>Push out new rings that actually have different ports per disk on each
                            server.  One of the ports in the new ring should be the same as the port
                            used in the old ring (“6200” in the example above).  This will cover
                            existing proxy-server processes who haven’t loaded the new ring yet.  They
                            can still talk to any storage node regardless of whether or not that
                            storage node has loaded the ring and started object-server processes on the
                            new ports.</para>
      </step>
    </procedure>
    <para>If you do not run a separate object-server for replication, then this setting
                must be available to the object-replicator and object-reconstructor (i.e.
                appear in the [DEFAULT] config section).</para>
  </section>
  <section>
    <title>General Service Configuration</title>
    <para>Most Swift services fall into two categories.  Swift’s wsgi servers and
                background daemons.</para>
    <para>For more information specific to the configuration of Swift’s wsgi servers
                with paste deploy see <xref linkend="general-server-configuration"/>.</para>
    <para>Configuration for servers and daemons can be expressed together in the same
                file for each type of server, or separately.  If a required section for the
                service trying to start is missing there will be an error.  The sections not
                used by the service are ignored.</para>
    <para>Consider the example of an object storage node.  By convention, configuration
                for the object-server, object-updater, object-replicator, object-auditor, and
                object-reconstructor exist in a single file <literal>/etc/swift/object-server.conf</literal>:</para>
    <screen>[DEFAULT]
reclaim_age = 604800

[pipeline:main]
pipeline = object-server

[app:object-server]
use = egg:swift#object

[object-replicator]

[object-updater]

[object-auditor]</screen>
    <para>Swift services expect a configuration path as the first argument:</para>
    <screen>$ swift-object-auditor
Usage: swift-object-auditor CONFIG [options]

Error: missing config path argument</screen>
    <para>If you omit the object-auditor section this file could not be used as the
                configuration path when starting the <literal>swift-object-auditor</literal> daemon:</para>
    <screen>$ swift-object-auditor /etc/swift/object-server.conf
Unable to find object-auditor config section in /etc/swift/object-server.conf</screen>
    <para>If the configuration path is a directory instead of a file all of the files in
                the directory with the file extension “.conf” will be combined to generate the
                configuration object which is delivered to the Swift service.  This is
                referred to generally as “directory based configuration”.</para>
    <para>Directory based configuration leverages ConfigParser’s native multi-file
                support.  Files ending in “.conf” in the given directory are parsed in
                lexicographical order.  Filenames starting with ‘.’ are ignored.  A mixture of
                file and directory configuration paths is not supported - if the configuration
                path is a file only that file will be parsed.</para>
    <para>The Swift service management tool <literal>swift-init</literal> has adopted the convention of
                looking for <literal>/etc/swift/{type}-server.conf.d/</literal> if the file
                <literal>/etc/swift/{type}-server.conf</literal> file does not exist.</para>
    <para>When using directory based configuration, if the same option under the same
                section appears more than once in different files, the last value parsed is
                said to override previous occurrences.  You can ensure proper override
                precedence by prefixing the files in the configuration directory with
                numerical values.:</para>
    <screen>/etc/swift/
    default.base
    object-server.conf.d/
        000_default.conf -&gt; ../default.base
        001_default-override.conf
        010_server.conf
        020_replicator.conf
        030_updater.conf
        040_auditor.conf</screen>
    <para>You can inspect the resulting combined configuration object using the
                <literal>swift-config</literal> command line tool</para>
  </section>
  <section xml:id="general-server-configuration">
    <title>General Server Configuration</title>
    <para>Swift uses paste.deploy (<link xlink:href="http://pythonpaste.org/deploy/"/>) to manage server
                configurations.</para>
    <para>Default configuration options are set in the <literal>[DEFAULT]</literal> section, and any
                options specified there can be overridden in any of the other sections BUT
                ONLY BY USING THE SYNTAX <literal>set option_name = value</literal>. This is the unfortunate
                way paste.deploy works and I’ll try to explain it in full.</para>
    <para>First, here’s an example paste.deploy configuration file:</para>
    <screen>[DEFAULT]
name1 = globalvalue
name2 = globalvalue
name3 = globalvalue
set name4 = globalvalue

[pipeline:main]
pipeline = myapp

[app:myapp]
use = egg:mypkg#myapp
name2 = localvalue
set name3 = localvalue
set name5 = localvalue
name6 = localvalue</screen>
    <para>The resulting configuration that myapp receives is:</para>
    <screen>global {'__file__': '/etc/mypkg/wsgi.conf', 'here': '/etc/mypkg',
        'name1': 'globalvalue',
        'name2': 'globalvalue',
        'name3': 'localvalue',
        'name4': 'globalvalue',
        'name5': 'localvalue',
        'set name4': 'globalvalue'}
local {'name6': 'localvalue'}</screen>
    <para>So, <literal>name1</literal> got the global value which is fine since it’s only in the <literal>DEFAULT</literal>
                section anyway.</para>
    <para><literal>name2</literal> got the global value from <literal>DEFAULT</literal> even though it appears to be
                overridden in the <literal>app:myapp</literal> subsection. This is just the unfortunate way
                paste.deploy works (at least at the time of this writing.)</para>
    <para><literal>name3</literal> got the local value from the <literal>app:myapp</literal> subsection because it is using
                the special paste.deploy syntax of <literal>set option_name = value</literal>. So, if you want
                a default value for most app/filters but want to override it in one
                subsection, this is how you do it.</para>
    <para><literal>name4</literal> got the global value from <literal>DEFAULT</literal> since it’s only in that section
                anyway. But, since we used the <literal>set</literal> syntax in the <literal>DEFAULT</literal> section even
                though we shouldn’t, notice we also got a <literal>set name4</literal> variable. Weird, but
                probably not harmful.</para>
    <para><literal>name5</literal> got the local value from the <literal>app:myapp</literal> subsection since it’s only
                there anyway, but notice that it is in the global configuration and not the
                local configuration. This is because we used the <literal>set</literal> syntax to set the
                value. Again, weird, but not harmful since Swift just treats the two sets of
                configuration values as one set anyway.</para>
    <para><literal>name6</literal> got the local value from <literal>app:myapp</literal> subsection since it’s only there,
                and since we didn’t use the <literal>set</literal> syntax, it’s only in the local
                configuration and not the global one. Though, as indicated above, there is no
                special distinction with Swift.</para>
    <para>That’s quite an explanation for something that should be so much simpler, but
                it might be important to know how paste.deploy interprets configuration files.
                The main rule to remember when working with Swift configuration files is:</para>
    <note>
      <para>Use the <literal>set option_name = value</literal> syntax in subsections if the option is
                    also set in the <literal>[DEFAULT]</literal> section. Don’t get in the habit of always
                    using the <literal>set</literal> syntax or you’ll probably mess up your non-paste.deploy
                    configuration files.</para>
    </note>
  </section>
  <section>
    <title>Common configuration</title>
    <para>An example of common configuration file can be found at etc/swift.conf-sample</para>
    <para>The following configuration options are available:</para>
    <informaltable>
      <tgroup cols="3">
        <colspec colname="c1" colwidth="25.7*"/>
        <colspec colname="c2" colwidth="13.5*"/>
        <colspec colname="c3" colwidth="60.8*"/>
        <tbody>
          <row>
            <entry>
              <para>Option</para>
            </entry>
            <entry>
              <para>Default</para>
            </entry>
            <entry>
              <para>Description</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>max_header_size</para>
            </entry>
            <entry>
              <para>8192</para>
            </entry>
            <entry>
              <para>max_header_size is the max number of bytes in
                                    the utf8 encoding of each header. Using 8192
                                    as default because eventlet use 8192 as max
                                    size of header line. This value may need to
                                    be increased when using identity v3 API
                                    tokens including more than 7 catalog entries.
                                    See also include_service_catalog in
                                    proxy-server.conf-sample (documented in
                                    overview_auth.rst).</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>extra_header_count</para>
            </entry>
            <entry>
              <para>0</para>
            </entry>
            <entry>
              <para>By default the maximum number of allowed
                                    headers depends on the number of max
                                    allowed metadata settings plus a default
                                    value of 32 for regular http  headers.
                                    If for some reason this is not enough (custom
                                    middleware for example) it can be increased
                                    with the extra_header_count constraint.</para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section>
  <section>
    <title>Object Server Configuration</title>
    <para>An Example Object Server configuration can be found at
                etc/object-server.conf-sample in the source code repository.</para>
    <para>The following configuration sections are available:</para>
    <itemizedlist>
      <listitem>
        <para>
          <xref linkend="object-server-default-options"/>
        </para>
      </listitem>
      <listitem>
        <para>
          <xref linkend="object-server"/>
        </para>
      </listitem>
      <listitem>
        <para>
          <xref linkend="object-replicator"/>
        </para>
      </listitem>
      <listitem>
        <para>
          <xref linkend="object-reconstructor"/>
        </para>
      </listitem>
      <listitem>
        <para>
          <xref linkend="object-updater"/>
        </para>
      </listitem>
      <listitem>
        <para>
          <xref linkend="object-auditor"/>
        </para>
      </listitem>
    </itemizedlist>
    <section xml:id="object-server-default-options">
      <title>[DEFAULT]</title>
      <informaltable>
        <tgroup cols="3">
          <colspec colname="c1" colwidth="36.8*"/>
          <colspec colname="c2" colwidth="11.5*"/>
          <colspec colname="c3" colwidth="51.7*"/>
          <tbody>
            <row>
              <entry>
                <para>Option</para>
              </entry>
              <entry>
                <para>Default</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>swift_dir</para>
              </entry>
              <entry>
                <para>/etc/swift</para>
              </entry>
              <entry>
                <para>Swift configuration directory</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>devices</para>
              </entry>
              <entry>
                <para>/srv/node</para>
              </entry>
              <entry>
                <para>Parent directory of where devices are
                                        mounted</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>mount_check</para>
              </entry>
              <entry>
                <para>true</para>
              </entry>
              <entry>
                <para>Whether or not check if the devices are
                                        mounted to prevent accidentally writing
                                        to the root device</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>bind_ip</para>
              </entry>
              <entry>
                <para>0.0.0.0</para>
              </entry>
              <entry>
                <para>IP Address for server to bind to</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>bind_port</para>
              </entry>
              <entry>
                <para>6200</para>
              </entry>
              <entry>
                <para>Port for server to bind to</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>bind_timeout</para>
              </entry>
              <entry>
                <para>30</para>
              </entry>
              <entry>
                <para>Seconds to attempt bind before giving up</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>backlog</para>
              </entry>
              <entry>
                <para>4096</para>
              </entry>
              <entry>
                <para>Maximum number of allowed pending
                                        connections</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>workers</para>
              </entry>
              <entry>
                <para>auto</para>
              </entry>
              <entry>
                <para>Override the number of pre-forked workers
                                        that will accept connections.  If set it
                                        should be an integer, zero means no fork.
                                        If unset, it will try to default to the
                                        number of effective cpu cores and fallback
                                        to one. Increasing the number of workers
                                        helps slow filesystem operations in one
                                        request from negatively impacting other
                                        requests, but only the
                                        <xref linkend="server-per-port-configuration"/> option
                                        provides complete I/O isolation with no
                                        measurable overhead.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>servers_per_port</para>
              </entry>
              <entry>
                <para>0</para>
              </entry>
              <entry>
                <para>If each disk in each storage policy ring
                                        has unique port numbers for its “ip”
                                        value, you can use this setting to have
                                        each object-server worker only service
                                        requests for the single disk matching the
                                        port in the ring. The value of this
                                        setting determines how many worker
                                        processes run for each port (disk) in the
                                        ring. If you have 24 disks per server, and
                                        this setting is 4, then each storage node
                                        will have 1 + (24 * 4) = 97 total
                                        object-server processes running. This
                                        gives complete I/O isolation, drastically
                                        reducing the impact of slow disks on
                                        storage node performance. The
                                        object-replicator and object-reconstructor
                                        need to see this setting too, so it must
                                        be in the [DEFAULT] section.
                                        See <xref linkend="server-per-port-configuration"/>.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>max_clients</para>
              </entry>
              <entry>
                <para>1024</para>
              </entry>
              <entry>
                <para>Maximum number of clients one worker can
                                        process simultaneously (it will actually
                                        accept(2) N + 1). Setting this to one (1)
                                        will only handle one request at a time,
                                        without accepting another request
                                        concurrently.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>disable_fallocate</para>
              </entry>
              <entry>
                <para>false</para>
              </entry>
              <entry>
                <para>Disable “fast fail” fallocate checks if
                                        the underlying filesystem does not support
                                        it.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_name</para>
              </entry>
              <entry>
                <para>swift</para>
              </entry>
              <entry>
                <para>Label used when logging</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_facility</para>
              </entry>
              <entry>
                <para>LOG_LOCAL0</para>
              </entry>
              <entry>
                <para>Syslog log facility</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_level</para>
              </entry>
              <entry>
                <para>INFO</para>
              </entry>
              <entry>
                <para>Logging level</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_address</para>
              </entry>
              <entry>
                <para>/dev/log</para>
              </entry>
              <entry>
                <para>Logging directory</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_max_line_length</para>
              </entry>
              <entry>
                <para>0</para>
              </entry>
              <entry>
                <para>Caps the length of log lines to the
                                        value given; no limit if set to 0, the
                                        default.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_custom_handlers</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Comma-separated list of functions to call
                                        to setup custom log handlers.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_udp_host</para>
              </entry>
              <entry/>
              <entry>
                <para>Override log_address</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_udp_port</para>
              </entry>
              <entry>
                <para>514</para>
              </entry>
              <entry>
                <para>UDP log port</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_statsd_host</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Enables StatsD logging; IPv4/IPv6
                                        address or a hostname.  If a
                                        hostname resolves to an IPv4 and IPv6
                                        address, the IPv4 address will be
                                        used.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_statsd_port</para>
              </entry>
              <entry>
                <para>8125</para>
              </entry>
              <entry/>
            </row>
            <row>
              <entry>
                <para>log_statsd_default_sample_rate</para>
              </entry>
              <entry>
                <para>1.0</para>
              </entry>
              <entry/>
            </row>
            <row>
              <entry>
                <para>log_statsd_sample_rate_factor</para>
              </entry>
              <entry>
                <para>1.0</para>
              </entry>
              <entry/>
            </row>
            <row>
              <entry>
                <para>log_statsd_metric_prefix</para>
              </entry>
              <entry/>
              <entry/>
            </row>
            <row>
              <entry>
                <para>eventlet_debug</para>
              </entry>
              <entry>
                <para>false</para>
              </entry>
              <entry>
                <para>If true, turn on debug logging for
                                        eventlet</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>fallocate_reserve</para>
              </entry>
              <entry>
                <para>1%</para>
              </entry>
              <entry>
                <para>You can set fallocate_reserve to the
                                        number of bytes or percentage of disk
                                        space you’d like fallocate to reserve,
                                        whether there is space for the given
                                        file size or not. Percentage will be used
                                        if the value ends with a ‘%’. This is
                                        useful for systems that behave badly when
                                        they completely run out of space; you can
                                        make the services pretend they’re out of
                                        space early.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>conn_timeout</para>
              </entry>
              <entry>
                <para>0.5</para>
              </entry>
              <entry>
                <para>Time to wait while attempting to connect
                                        to another backend node.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>node_timeout</para>
              </entry>
              <entry>
                <para>3</para>
              </entry>
              <entry>
                <para>Time to wait while sending each chunk of
                                        data to another backend node.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>client_timeout</para>
              </entry>
              <entry>
                <para>60</para>
              </entry>
              <entry>
                <para>Time to wait while receiving each chunk of
                                        data from a client or another backend node</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>network_chunk_size</para>
              </entry>
              <entry>
                <para>65536</para>
              </entry>
              <entry>
                <para>Size of chunks to read/write over the
                                        network</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>disk_chunk_size</para>
              </entry>
              <entry>
                <para>65536</para>
              </entry>
              <entry>
                <para>Size of chunks to read/write to disk</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>container_update_timeout</para>
              </entry>
              <entry>
                <para>1</para>
              </entry>
              <entry>
                <para>Time to wait while sending a container
                                        update on object update.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>reclaim_age</para>
              </entry>
              <entry>
                <para>604800</para>
              </entry>
              <entry>
                <para>Time elapsed in seconds before the tombstone
                                        file representing a deleted object can be
                                        reclaimed.  This is the maximum window for
                                        your consistency engine.  If a node that was
                                        disconnected from the cluster because of a
                                        fault is reintroduced into the cluster after
                                        this window without having its data purged
                                        it will result in dark data.  This setting
                                        should be consistent across all object
                                        services.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>nice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Scheduling priority of server processes.
                                        Niceness values range from -20 (most
                                        favorable to the process) to 19 (least
                                        favorable to the process). The default
                                        does not modify priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_class</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling class of server processes.
                                        I/O niceness class values are IOPRIO_CLASS_RT
                                        (realtime), IOPRIO_CLASS_BE (best-effort),
                                        and IOPRIO_CLASS_IDLE (idle).
                                        The default does not modify class and
                                        priority. Linux supports io scheduling
                                        priorities and classes since 2.6.13 with
                                        the CFQ io scheduler.
                                        Work only with ionice_priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling priority of server
                                        processes. I/O niceness priority is
                                        a number which goes from 0 to 7.
                                        The higher the value, the lower the I/O
                                        priority of the process. Work only with
                                        ionice_class.
                                        Ignored if IOPRIO_CLASS_IDLE is set.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section>
      <title>[object-server]</title>
      <informaltable>
        <tgroup cols="3">
          <colspec colname="c1" colwidth="29.3*"/>
          <colspec colname="c2" colwidth="22.2*"/>
          <colspec colname="c3" colwidth="48.5*"/>
          <tbody>
            <row>
              <entry>
                <para>Option</para>
              </entry>
              <entry>
                <para>Default</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>use</para>
              </entry>
              <entry/>
              <entry>
                <para>paste.deploy entry point for the
                                        object server.  For most cases,
                                        this should be
                                        <literal>egg:swift#object</literal>.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>set log_name</para>
              </entry>
              <entry>
                <para>object-server</para>
              </entry>
              <entry>
                <para>Label used when logging</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>set log_facility</para>
              </entry>
              <entry>
                <para>LOG_LOCAL0</para>
              </entry>
              <entry>
                <para>Syslog log facility</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>set log_level</para>
              </entry>
              <entry>
                <para>INFO</para>
              </entry>
              <entry>
                <para>Logging level</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>set log_requests</para>
              </entry>
              <entry>
                <para>True</para>
              </entry>
              <entry>
                <para>Whether or not to log each
                                        request</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>set log_address</para>
              </entry>
              <entry>
                <para>/dev/log</para>
              </entry>
              <entry>
                <para>Logging directory</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>user</para>
              </entry>
              <entry>
                <para>swift</para>
              </entry>
              <entry>
                <para>User to run as</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>max_upload_time</para>
              </entry>
              <entry>
                <para>86400</para>
              </entry>
              <entry>
                <para>Maximum time allowed to upload an
                                        object</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>slow</para>
              </entry>
              <entry>
                <para>0</para>
              </entry>
              <entry>
                <para>If &gt; 0, Minimum time in seconds for a PUT or
                                        DELETE request to complete.  This is only
                                        useful to simulate slow devices during testing
                                        and development.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>mb_per_sync</para>
              </entry>
              <entry>
                <para>512</para>
              </entry>
              <entry>
                <para>On PUT requests, sync file every
                                        n MB</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>keep_cache_size</para>
              </entry>
              <entry>
                <para>5242880</para>
              </entry>
              <entry>
                <para>Largest object size to keep in
                                        buffer cache</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>keep_cache_private</para>
              </entry>
              <entry>
                <para>false</para>
              </entry>
              <entry>
                <para>Allow non-public objects to stay
                                        in kernel’s buffer cache</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>allowed_headers</para>
              </entry>
              <entry>
                <para>Content-Disposition,
                                        Content-Encoding,
                                        X-Delete-At,
                                        X-Object-Manifest,
                                        X-Static-Large-Object</para>
              </entry>
              <entry>
                <para>Comma separated list of headers
                                        that can be set in metadata on an object.
                                        This list is in addition to
                                        X-Object-Meta-* headers and cannot include
                                        Content-Type, etag, Content-Length, or deleted</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>auto_create_account_prefix</para>
              </entry>
              <entry>
                <para>.</para>
              </entry>
              <entry>
                <para>Prefix used when automatically
                                        creating accounts.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>replication_server</para>
              </entry>
              <entry/>
              <entry>
                <para>Configure parameter for creating
                                        specific server. To handle all verbs,
                                        including replication verbs, do not
                                        specify “replication_server”
                                        (this is the default). To only
                                        handle replication, set to a True
                                        value (e.g. “True” or “1”).
                                        To handle only non-replication
                                        verbs, set to “False”. Unless you
                                        have a separate replication network, you
                                        should not specify any value for
                                        “replication_server”.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>replication_concurrency</para>
              </entry>
              <entry>
                <para>4</para>
              </entry>
              <entry>
                <para>Set to restrict the number of
                                        concurrent incoming SSYNC
                                        requests; set to 0 for unlimited</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>replication_one_per_device</para>
              </entry>
              <entry>
                <para>True</para>
              </entry>
              <entry>
                <para>Restricts incoming SSYNC
                                        requests to one per device,
                                        replication_currency above
                                        allowing. This can help control
                                        I/O to each device, but you may
                                        wish to set this to False to
                                        allow multiple SSYNC
                                        requests (up to the above
                                        replication_concurrency setting)
                                        per device.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>replication_lock_timeout</para>
              </entry>
              <entry>
                <para>15</para>
              </entry>
              <entry>
                <para>Number of seconds to wait for an
                                        existing replication device lock
                                        before giving up.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>replication_failure_threshold</para>
              </entry>
              <entry>
                <para>100</para>
              </entry>
              <entry>
                <para>The number of subrequest failures
                                        before the
                                        replication_failure_ratio is
                                        checked</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>replication_failure_ratio</para>
              </entry>
              <entry>
                <para>1.0</para>
              </entry>
              <entry>
                <para>If the value of failures /
                                        successes of SSYNC
                                        subrequests exceeds this ratio,
                                        the overall SSYNC request
                                        will be aborted</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>splice</para>
              </entry>
              <entry>
                <para>no</para>
              </entry>
              <entry>
                <para>Use splice() for zero-copy object
                                        GETs. This requires Linux kernel
                                        version 3.0 or greater. If you set
                                        “splice = yes” but the kernel
                                        does not support it, error messages
                                        will appear in the object server
                                        logs at startup, but your object
                                        servers should continue to function.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>nice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Scheduling priority of server processes.
                                        Niceness values range from -20 (most
                                        favorable to the process) to 19 (least
                                        favorable to the process). The default
                                        does not modify priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_class</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling class of server processes.
                                        I/O niceness class values are IOPRIO_CLASS_RT
                                        (realtime), IOPRIO_CLASS_BE (best-effort),
                                        and IOPRIO_CLASS_IDLE (idle).
                                        The default does not modify class and
                                        priority. Linux supports io scheduling
                                        priorities and classes since 2.6.13 with
                                        the CFQ io scheduler.
                                        Work only with ionice_priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling priority of server
                                        processes. I/O niceness priority is
                                        a number which goes from 0 to 7.
                                        The higher the value, the lower the I/O
                                        priority of the process. Work only with
                                        ionice_class.
                                        Ignored if IOPRIO_CLASS_IDLE is set.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>eventlet_tpool_num_threads</para>
              </entry>
              <entry>
                <para>auto</para>
              </entry>
              <entry>
                <para>The number of threads in eventlet’s thread pool.
                                        Most IO will occur in the object server’s main
                                        thread, but certain “heavy” IO operations will
                                        occur in separate IO threads, managed by
                                        eventlet.
                                        The default value is auto, whose actual value
                                        is dependent on the servers_per_port value.
                                        If servers_per_port is zero then it uses
                                        eventlet’s default (currently 20 threads).
                                        If the servers_per_port is nonzero then it’ll
                                        only use 1 thread per process.
                                        This value can be overridden with an integer
                                        value.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section xml:id="object-replicator">
      <title>[object-replicator]</title>
      <informaltable>
        <tgroup cols="3">
          <colspec colname="c1" colwidth="30.3*"/>
          <colspec colname="c2" colwidth="27.0*"/>
          <colspec colname="c3" colwidth="42.7*"/>
          <tbody>
            <row>
              <entry>
                <para>Option</para>
              </entry>
              <entry>
                <para>Default</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_name</para>
              </entry>
              <entry>
                <para>object-replicator</para>
              </entry>
              <entry>
                <para>Label used when logging</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_facility</para>
              </entry>
              <entry>
                <para>LOG_LOCAL0</para>
              </entry>
              <entry>
                <para>Syslog log facility</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_level</para>
              </entry>
              <entry>
                <para>INFO</para>
              </entry>
              <entry>
                <para>Logging level</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_address</para>
              </entry>
              <entry>
                <para>/dev/log</para>
              </entry>
              <entry>
                <para>Logging directory</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>daemonize</para>
              </entry>
              <entry>
                <para>yes</para>
              </entry>
              <entry>
                <para>Whether or not to run replication
                                        as a daemon</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>interval</para>
              </entry>
              <entry>
                <para>30</para>
              </entry>
              <entry>
                <para>Time in seconds to wait between
                                        replication passes</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>concurrency</para>
              </entry>
              <entry>
                <para>1</para>
              </entry>
              <entry>
                <para>Number of replication workers to
                                        spawn</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>sync_method</para>
              </entry>
              <entry>
                <para>rsync</para>
              </entry>
              <entry>
                <para>The sync method to use; default
                                        is rsync but you can use ssync to
                                        try the EXPERIMENTAL
                                        all-swift-code-no-rsync-callouts
                                        method. Once ssync is verified as
                                        or better than, rsync, we plan to
                                        deprecate rsync so we can move on
                                        with more features for
                                        replication.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>rsync_timeout</para>
              </entry>
              <entry>
                <para>900</para>
              </entry>
              <entry>
                <para>Max duration of a partition rsync</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>rsync_bwlimit</para>
              </entry>
              <entry>
                <para>0</para>
              </entry>
              <entry>
                <para>Bandwidth limit for rsync in kB/s.
                                        0 means unlimited.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>rsync_io_timeout</para>
              </entry>
              <entry>
                <para>30</para>
              </entry>
              <entry>
                <para>Timeout value sent to rsync
                                        –timeout and –contimeout
                                        options</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>rsync_compress</para>
              </entry>
              <entry>
                <para>no</para>
              </entry>
              <entry>
                <para>Allow rsync to compress data
                                        which is transmitted to destination
                                        node during sync. However, this
                                        is applicable only when destination
                                        node is in a different region
                                        than the local one.
                                        NOTE: Objects that are already
                                        compressed (for example: .tar.gz,
                                        .mp3) might slow down the syncing
                                        process.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>stats_interval</para>
              </entry>
              <entry>
                <para>300</para>
              </entry>
              <entry>
                <para>Interval in seconds between
                                        logging replication statistics</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>handoffs_first</para>
              </entry>
              <entry>
                <para>false</para>
              </entry>
              <entry>
                <para>If set to True, partitions that
                                        are not supposed to be on the
                                        node will be replicated first.
                                        The default setting should not be
                                        changed, except for extreme
                                        situations.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>handoff_delete</para>
              </entry>
              <entry>
                <para>auto</para>
              </entry>
              <entry>
                <para>By default handoff partitions
                                        will be removed when it has
                                        successfully replicated to all
                                        the canonical nodes. If set to an
                                        integer n, it will remove the
                                        partition if it is successfully
                                        replicated to n nodes.  The
                                        default setting should not be
                                        changed, except for extreme
                                        situations.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>node_timeout</para>
              </entry>
              <entry>
                <para>DEFAULT or 10</para>
              </entry>
              <entry>
                <para>Request timeout to external
                                        services. This uses what’s set
                                        here, or what’s set in the
                                        DEFAULT section, or 10 (though
                                        other sections use 3 as the final
                                        default).</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>http_timeout</para>
              </entry>
              <entry>
                <para>60</para>
              </entry>
              <entry>
                <para>Max duration of an http request.
                                        This is for REPLICATE finalization
                                        calls and so should be longer
                                        than node_timeout.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>lockup_timeout</para>
              </entry>
              <entry>
                <para>1800</para>
              </entry>
              <entry>
                <para>Attempts to kill all workers if
                                        nothing replicates for
                                        lockup_timeout seconds</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>rsync_module</para>
              </entry>
              <entry>
                <para>{replication_ip}::object</para>
              </entry>
              <entry>
                <para>Format of the rsync module where
                                        the replicator will send data.
                                        The configuration value can
                                        include some variables that will
                                        be extracted from the ring.
                                        Variables must follow the format
                                        {NAME} where NAME is one of: ip,
                                        port, replication_ip,
                                        replication_port, region, zone,
                                        device, meta. See
                                        etc/rsyncd.conf-sample for some
                                        examples.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>rsync_error_log_line_length</para>
              </entry>
              <entry>
                <para>0</para>
              </entry>
              <entry>
                <para>Limits how long rsync error log
                                        lines are</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ring_check_interval</para>
              </entry>
              <entry>
                <para>15</para>
              </entry>
              <entry>
                <para>Interval for checking new ring
                                        file</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>recon_cache_path</para>
              </entry>
              <entry>
                <para>/var/cache/swift</para>
              </entry>
              <entry>
                <para>Path to recon cache</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>nice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Scheduling priority of server
                                        processes. Niceness values
                                        range from -20 (most favorable
                                        to the process) to 19 (least
                                        favorable to the process).
                                        The default does not modify
                                        priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_class</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling class of server
                                        processes. I/O niceness class
                                        values are IOPRIO_CLASS_RT (realtime),
                                        IOPRIO_CLASS_BE (best-effort),
                                        and IOPRIO_CLASS_IDLE (idle).
                                        The default does not modify
                                        class and priority.
                                        Linux supports io scheduling
                                        priorities and classes since
                                        2.6.13 with the CFQ io scheduler.
                                        Work only with ionice_priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling priority of server
                                        processes. I/O niceness priority
                                        is a number which goes from
                                        0 to 7. The higher the value,
                                        the lower the I/O priority of
                                        the process.
                                        Work only with ionice_class.
                                        Ignored if IOPRIO_CLASS_IDLE
                                        is set.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section xml:id="object-reconstructor">
      <title>[object-reconstructor]</title>
      <informaltable>
        <tgroup cols="3">
          <colspec colname="c1" colwidth="30.3*"/>
          <colspec colname="c2" colwidth="27.0*"/>
          <colspec colname="c3" colwidth="42.7*"/>
          <tbody>
            <row>
              <entry>
                <para>Option</para>
              </entry>
              <entry>
                <para>Default</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_name</para>
              </entry>
              <entry>
                <para>object-reconstructor</para>
              </entry>
              <entry>
                <para>Label used when logging</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_facility</para>
              </entry>
              <entry>
                <para>LOG_LOCAL0</para>
              </entry>
              <entry>
                <para>Syslog log facility</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_level</para>
              </entry>
              <entry>
                <para>INFO</para>
              </entry>
              <entry>
                <para>Logging level</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_address</para>
              </entry>
              <entry>
                <para>/dev/log</para>
              </entry>
              <entry>
                <para>Logging directory</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>daemonize</para>
              </entry>
              <entry>
                <para>yes</para>
              </entry>
              <entry>
                <para>Whether or not to run
                                        reconstruction as a daemon</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>interval</para>
              </entry>
              <entry>
                <para>30</para>
              </entry>
              <entry>
                <para>Time in seconds to wait between
                                        reconstruction passes</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>reconstructor_workers</para>
              </entry>
              <entry>
                <para>0</para>
              </entry>
              <entry>
                <para>Maximum number of worker processes
                                        to spawn.  Each worker will handle
                                        a subset of devices.  Devices will
                                        be assigned evenly among the workers
                                        so that workers cycle at similar
                                        intervals (which can lead to fewer
                                        workers than requested).  You can not
                                        have more workers than devices.  If
                                        you have no devices only a single
                                        worker is spawned.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>concurrency</para>
              </entry>
              <entry>
                <para>1</para>
              </entry>
              <entry>
                <para>Number of reconstruction threads to
                                        spawn per reconstructor process.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>stats_interval</para>
              </entry>
              <entry>
                <para>300</para>
              </entry>
              <entry>
                <para>Interval in seconds between
                                        logging reconstruction statistics</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>handoffs_only</para>
              </entry>
              <entry>
                <para>false</para>
              </entry>
              <entry>
                <para>The handoffs_only mode option is for
                                        special case emergency situations
                                        during rebalance such as disk full in
                                        the cluster.  This option SHOULD NOT
                                        BE CHANGED, except for extreme
                                        situations.  When handoffs_only mode
                                        is enabled the reconstructor will
                                        <emphasis>only</emphasis> revert fragments from handoff
                                        nodes to primary nodes and will not
                                        sync primary nodes with neighboring
                                        primary nodes.  This will force the
                                        reconstructor to sync and delete
                                        handoffs’ fragments more quickly and
                                        minimize the time of the rebalance by
                                        limiting the number of rebuilds.  The
                                        handoffs_only option is only for
                                        temporary use and should be disabled
                                        as soon as the emergency situation
                                        has been resolved.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>node_timeout</para>
              </entry>
              <entry>
                <para>DEFAULT or 10</para>
              </entry>
              <entry>
                <para>Request timeout to external
                                        services. The value used is the value
                                        set in this section, or the value set
                                        in the DEFAULT section, or 10.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>http_timeout</para>
              </entry>
              <entry>
                <para>60</para>
              </entry>
              <entry>
                <para>Max duration of an http request.
                                        This is for REPLICATE finalization
                                        calls and so should be longer
                                        than node_timeout.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>lockup_timeout</para>
              </entry>
              <entry>
                <para>1800</para>
              </entry>
              <entry>
                <para>Attempts to kill all threads if
                                        no fragment has been reconstructed
                                        for lockup_timeout seconds.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ring_check_interval</para>
              </entry>
              <entry>
                <para>15</para>
              </entry>
              <entry>
                <para>Interval for checking new ring
                                        file</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>recon_cache_path</para>
              </entry>
              <entry>
                <para>/var/cache/swift</para>
              </entry>
              <entry>
                <para>Path to recon cache</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>nice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Scheduling priority of server
                                        processes. Niceness values
                                        range from -20 (most favorable
                                        to the process) to 19 (least
                                        favorable to the process).
                                        The default does not modify
                                        priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_class</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling class of server
                                        processes. I/O niceness class
                                        values are IOPRIO_CLASS_RT (realtime),
                                        IOPRIO_CLASS_BE (best-effort),
                                        and IOPRIO_CLASS_IDLE (idle).
                                        The default does not modify
                                        class and priority.
                                        Linux supports io scheduling
                                        priorities and classes since
                                        2.6.13 with the CFQ io scheduler.
                                        Work only with ionice_priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling priority of server
                                        processes. I/O niceness priority
                                        is a number which goes from
                                        0 to 7. The higher the value,
                                        the lower the I/O priority of
                                        the process.
                                        Work only with ionice_class.
                                        Ignored if IOPRIO_CLASS_IDLE
                                        is set.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section xml:id="object-updater">
      <title>[object-updater]</title>
      <informaltable>
        <tgroup cols="3">
          <colspec colname="c1" colwidth="22.9*"/>
          <colspec colname="c2" colwidth="22.9*"/>
          <colspec colname="c3" colwidth="54.2*"/>
          <tbody>
            <row>
              <entry>
                <para>Option</para>
              </entry>
              <entry>
                <para>Default</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_name</para>
              </entry>
              <entry>
                <para>object-updater</para>
              </entry>
              <entry>
                <para>Label used when logging</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_facility</para>
              </entry>
              <entry>
                <para>LOG_LOCAL0</para>
              </entry>
              <entry>
                <para>Syslog log facility</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_level</para>
              </entry>
              <entry>
                <para>INFO</para>
              </entry>
              <entry>
                <para>Logging level</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_address</para>
              </entry>
              <entry>
                <para>/dev/log</para>
              </entry>
              <entry>
                <para>Logging directory</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>interval</para>
              </entry>
              <entry>
                <para>300</para>
              </entry>
              <entry>
                <para>Minimum time for a pass to take</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>concurrency</para>
              </entry>
              <entry>
                <para>1</para>
              </entry>
              <entry>
                <para>Number of updater workers to spawn</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>node_timeout</para>
              </entry>
              <entry>
                <para>DEFAULT or 10</para>
              </entry>
              <entry>
                <para>Request timeout to external services. This
                                        uses what’s set here, or what’s set in the
                                        DEFAULT section, or 10 (though other
                                        sections use 3 as the final default).</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>objects_per_second</para>
              </entry>
              <entry>
                <para>50</para>
              </entry>
              <entry>
                <para>Maximum objects updated per second.
                                        Should be tuned according to individual
                                        system specs. 0 is unlimited.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>slowdown</para>
              </entry>
              <entry>
                <para>0.01</para>
              </entry>
              <entry>
                <para>Time in seconds to wait between objects.
                                        Deprecated in favor of objects_per_second.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>recon_cache_path</para>
              </entry>
              <entry>
                <para>/var/cache/swift</para>
              </entry>
              <entry>
                <para>Path to recon cache</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>nice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Scheduling priority of server processes.
                                        Niceness values range from -20 (most
                                        favorable to the process) to 19 (least
                                        favorable to the process). The default
                                        does not modify priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_class</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling class of server processes.
                                        I/O niceness class values are IOPRIO_CLASS_RT
                                        (realtime), IOPRIO_CLASS_BE (best-effort),
                                        and IOPRIO_CLASS_IDLE (idle).
                                        The default does not modify class and
                                        priority. Linux supports io scheduling
                                        priorities and classes since 2.6.13 with
                                        the CFQ io scheduler.
                                        Work only with ionice_priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling priority of server
                                        processes. I/O niceness priority is
                                        a number which goes from 0 to 7.
                                        The higher the value, the lower the I/O
                                        priority of the process. Work only with
                                        ionice_class.
                                        Ignored if IOPRIO_CLASS_IDLE is set.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section xml:id="object-auditor">
      <title>[object-auditor]</title>
      <informaltable>
        <tgroup cols="3">
          <colspec colname="c1" colwidth="29.7*"/>
          <colspec colname="c2" colwidth="20.9*"/>
          <colspec colname="c3" colwidth="49.5*"/>
          <tbody>
            <row>
              <entry>
                <para>Option</para>
              </entry>
              <entry>
                <para>Default</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_name</para>
              </entry>
              <entry>
                <para>object-auditor</para>
              </entry>
              <entry>
                <para>Label used when logging</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_facility</para>
              </entry>
              <entry>
                <para>LOG_LOCAL0</para>
              </entry>
              <entry>
                <para>Syslog log facility</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_level</para>
              </entry>
              <entry>
                <para>INFO</para>
              </entry>
              <entry>
                <para>Logging level</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_address</para>
              </entry>
              <entry>
                <para>/dev/log</para>
              </entry>
              <entry>
                <para>Logging directory</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_time</para>
              </entry>
              <entry>
                <para>3600</para>
              </entry>
              <entry>
                <para>Frequency of status logs in seconds.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>interval</para>
              </entry>
              <entry>
                <para>30</para>
              </entry>
              <entry>
                <para>Time in seconds to wait between
                                        auditor passes</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>disk_chunk_size</para>
              </entry>
              <entry>
                <para>65536</para>
              </entry>
              <entry>
                <para>Size of chunks read during auditing</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>files_per_second</para>
              </entry>
              <entry>
                <para>20</para>
              </entry>
              <entry>
                <para>Maximum files audited per second per
                                        auditor process. Should be tuned according
                                        to individual system specs. 0 is unlimited.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>bytes_per_second</para>
              </entry>
              <entry>
                <para>10000000</para>
              </entry>
              <entry>
                <para>Maximum bytes audited per second per
                                        auditor process. Should be tuned according
                                        to individual system specs. 0 is unlimited.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>concurrency</para>
              </entry>
              <entry>
                <para>1</para>
              </entry>
              <entry>
                <para>The number of parallel processes to use
                                        for checksum auditing.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>zero_byte_files_per_second</para>
              </entry>
              <entry>
                <para>50</para>
              </entry>
              <entry/>
            </row>
            <row>
              <entry>
                <para>object_size_stats</para>
              </entry>
              <entry/>
              <entry/>
            </row>
            <row>
              <entry>
                <para>recon_cache_path</para>
              </entry>
              <entry>
                <para>/var/cache/swift</para>
              </entry>
              <entry>
                <para>Path to recon cache</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>rsync_tempfile_timeout</para>
              </entry>
              <entry>
                <para>auto</para>
              </entry>
              <entry>
                <para>Time elapsed in seconds before rsync
                                        tempfiles will be unlinked. Config value
                                        of “auto” try to use object-replicator’s
                                        rsync_timeout + 900 or fallback to 86400
                                        (1 day).</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>nice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Scheduling priority of server processes.
                                        Niceness values range from -20 (most
                                        favorable to the process) to 19 (least
                                        favorable to the process). The default
                                        does not modify priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_class</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling class of server processes.
                                        I/O niceness class values are IOPRIO_CLASS_RT
                                        (realtime), IOPRIO_CLASS_BE (best-effort),
                                        and IOPRIO_CLASS_IDLE (idle).
                                        The default does not modify class and
                                        priority. Linux supports io scheduling
                                        priorities and classes since 2.6.13 with
                                        the CFQ io scheduler.
                                        Work only with ionice_priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling priority of server
                                        processes. I/O niceness priority is
                                        a number which goes from 0 to 7.
                                        The higher the value, the lower the I/O
                                        priority of the process. Work only with
                                        ionice_class.
                                        Ignored if IOPRIO_CLASS_IDLE is set.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
  </section>
  <section>
    <title>Container Server Configuration</title>
    <para>An example Container Server configuration can be found at
                etc/container-server.conf-sample in the source code repository.</para>
    <para>The following configuration sections are available:</para>
    <itemizedlist>
      <listitem>
        <para>
          <xref linkend="container-server-default-options"/>
        </para>
      </listitem>
      <listitem>
        <para>
          <xref linkend="container-server"/>
        </para>
      </listitem>
      <listitem>
        <para>
          <xref linkend="container-replicator"/>
        </para>
      </listitem>
      <listitem>
        <para>
          <xref linkend="container-updater"/>
        </para>
      </listitem>
      <listitem>
        <para>
          <xref linkend="container-auditor"/>
        </para>
      </listitem>
    </itemizedlist>
    <section xml:id="container-server-default-options">
      <title>[DEFAULT]</title>
      <informaltable>
        <tgroup cols="3">
          <colspec colname="c1" colwidth="34.8*"/>
          <colspec colname="c2" colwidth="11.2*"/>
          <colspec colname="c3" colwidth="53.9*"/>
          <tbody>
            <row>
              <entry>
                <para>Option</para>
              </entry>
              <entry>
                <para>Default</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>swift_dir</para>
              </entry>
              <entry>
                <para>/etc/swift</para>
              </entry>
              <entry>
                <para>Swift configuration directory</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>devices</para>
              </entry>
              <entry>
                <para>/srv/node</para>
              </entry>
              <entry>
                <para>Parent directory of where devices are mounted</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>mount_check</para>
              </entry>
              <entry>
                <para>true</para>
              </entry>
              <entry>
                <para>Whether or not check if the devices are
                                        mounted to prevent accidentally writing
                                        to the root device</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>bind_ip</para>
              </entry>
              <entry>
                <para>0.0.0.0</para>
              </entry>
              <entry>
                <para>IP Address for server to bind to</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>bind_port</para>
              </entry>
              <entry>
                <para>6201</para>
              </entry>
              <entry>
                <para>Port for server to bind to</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>bind_timeout</para>
              </entry>
              <entry>
                <para>30</para>
              </entry>
              <entry>
                <para>Seconds to attempt bind before giving up</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>backlog</para>
              </entry>
              <entry>
                <para>4096</para>
              </entry>
              <entry>
                <para>Maximum number of allowed pending
                                        connections</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>workers</para>
              </entry>
              <entry>
                <para>auto</para>
              </entry>
              <entry>
                <para>Override the number of pre-forked workers
                                        that will accept connections.  If set it
                                        should be an integer, zero means no fork.  If
                                        unset, it will try to default to the number
                                        of effective cpu cores and fallback to one.
                                        Increasing the number of workers may reduce
                                        the possibility of slow file system
                                        operations in one request from negatively
                                        impacting other requests.  See
                                        <xref linkend="general-service-tuning"/>.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>max_clients</para>
              </entry>
              <entry>
                <para>1024</para>
              </entry>
              <entry>
                <para>Maximum number of clients one worker can
                                        process simultaneously (it will actually
                                        accept(2) N + 1). Setting this to one (1)
                                        will only handle one request at a time,
                                        without accepting another request
                                        concurrently.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>user</para>
              </entry>
              <entry>
                <para>swift</para>
              </entry>
              <entry>
                <para>User to run as</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>disable_fallocate</para>
              </entry>
              <entry>
                <para>false</para>
              </entry>
              <entry>
                <para>Disable “fast fail” fallocate checks if the
                                        underlying filesystem does not support it.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_name</para>
              </entry>
              <entry>
                <para>swift</para>
              </entry>
              <entry>
                <para>Label used when logging</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_facility</para>
              </entry>
              <entry>
                <para>LOG_LOCAL0</para>
              </entry>
              <entry>
                <para>Syslog log facility</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_level</para>
              </entry>
              <entry>
                <para>INFO</para>
              </entry>
              <entry>
                <para>Logging level</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_address</para>
              </entry>
              <entry>
                <para>/dev/log</para>
              </entry>
              <entry>
                <para>Logging directory</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_max_line_length</para>
              </entry>
              <entry>
                <para>0</para>
              </entry>
              <entry>
                <para>Caps the length of log lines to the
                                        value given; no limit if set to 0, the
                                        default.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_custom_handlers</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Comma-separated list of functions to call
                                        to setup custom log handlers.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_udp_host</para>
              </entry>
              <entry/>
              <entry>
                <para>Override log_address</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_udp_port</para>
              </entry>
              <entry>
                <para>514</para>
              </entry>
              <entry>
                <para>UDP log port</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_statsd_host</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Enables StatsD logging; IPv4/IPv6
                                        address or a hostname.  If a
                                        hostname resolves to an IPv4 and IPv6
                                        address, the IPv4 address will be
                                        used.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_statsd_port</para>
              </entry>
              <entry>
                <para>8125</para>
              </entry>
              <entry/>
            </row>
            <row>
              <entry>
                <para>log_statsd_default_sample_rate</para>
              </entry>
              <entry>
                <para>1.0</para>
              </entry>
              <entry/>
            </row>
            <row>
              <entry>
                <para>log_statsd_sample_rate_factor</para>
              </entry>
              <entry>
                <para>1.0</para>
              </entry>
              <entry/>
            </row>
            <row>
              <entry>
                <para>log_statsd_metric_prefix</para>
              </entry>
              <entry/>
              <entry/>
            </row>
            <row>
              <entry>
                <para>eventlet_debug</para>
              </entry>
              <entry>
                <para>false</para>
              </entry>
              <entry>
                <para>If true, turn on debug logging for eventlet</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>fallocate_reserve</para>
              </entry>
              <entry>
                <para>1%</para>
              </entry>
              <entry>
                <para>You can set fallocate_reserve to the
                                        number of bytes or percentage of disk
                                        space you’d like fallocate to reserve,
                                        whether there is space for the given
                                        file size or not. Percentage will be used
                                        if the value ends with a ‘%’. This is
                                        useful for systems that behave badly when
                                        they completely run out of space; you can
                                        make the services pretend they’re out of
                                        space early.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>db_preallocation</para>
              </entry>
              <entry>
                <para>off</para>
              </entry>
              <entry>
                <para>If you don’t mind the extra disk space usage
                                        in overhead, you can turn this on to preallocate
                                        disk space with SQLite databases to decrease
                                        fragmentation.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>nice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Scheduling priority of server processes.
                                        Niceness values range from -20 (most
                                        favorable to the process) to 19 (least
                                        favorable to the process). The default
                                        does not modify priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_class</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling class of server processes.
                                        I/O niceness class values are IOPRIO_CLASS_RT
                                        (realtime), IOPRIO_CLASS_BE (best-effort),
                                        and IOPRIO_CLASS_IDLE (idle).
                                        The default does not modify class and
                                        priority. Linux supports io scheduling
                                        priorities and classes since 2.6.13
                                        with the CFQ io scheduler.
                                        Work only with ionice_priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling priority of server processes.
                                        I/O niceness priority is a number which
                                        goes from 0 to 7. The higher the value,
                                        the lower the I/O priority of the process.
                                        Work only with ionice_class.
                                        Ignored if IOPRIO_CLASS_IDLE is set.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section xml:id="container-server">
      <title>[container-server]</title>
      <informaltable>
        <tgroup cols="3">
          <colspec colname="c1" colwidth="34.5*"/>
          <colspec colname="c2" colwidth="18.4*"/>
          <colspec colname="c3" colwidth="47.1*"/>
          <tbody>
            <row>
              <entry>
                <para>Option</para>
              </entry>
              <entry>
                <para>Default</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>use</para>
              </entry>
              <entry/>
              <entry>
                <para>paste.deploy entry point for the
                                        container server.  For most cases, this
                                        should be <literal>egg:swift#container</literal>.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>set log_name</para>
              </entry>
              <entry>
                <para>container-server</para>
              </entry>
              <entry>
                <para>Label used when logging</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>set log_facility</para>
              </entry>
              <entry>
                <para>LOG_LOCAL0</para>
              </entry>
              <entry>
                <para>Syslog log facility</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>set log_level</para>
              </entry>
              <entry>
                <para>INFO</para>
              </entry>
              <entry>
                <para>Logging level</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>set log_requests</para>
              </entry>
              <entry>
                <para>True</para>
              </entry>
              <entry>
                <para>Whether or not to log each
                                        request</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>set log_address</para>
              </entry>
              <entry>
                <para>/dev/log</para>
              </entry>
              <entry>
                <para>Logging directory</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>node_timeout</para>
              </entry>
              <entry>
                <para>3</para>
              </entry>
              <entry>
                <para>Request timeout to external services</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>conn_timeout</para>
              </entry>
              <entry>
                <para>0.5</para>
              </entry>
              <entry>
                <para>Connection timeout to external services</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>allow_versions</para>
              </entry>
              <entry>
                <para>false</para>
              </entry>
              <entry>
                <para>Enable/Disable object versioning feature</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>auto_create_account_prefix</para>
              </entry>
              <entry>
                <para>.</para>
              </entry>
              <entry>
                <para>Prefix used when automatically</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>replication_server</para>
              </entry>
              <entry/>
              <entry>
                <para>Configure parameter for creating
                                        specific server. To handle all verbs,
                                        including replication verbs, do not
                                        specify “replication_server”
                                        (this is the default). To only
                                        handle replication, set to a True
                                        value (e.g. “True” or “1”).
                                        To handle only non-replication
                                        verbs, set to “False”. Unless you
                                        have a separate replication network, you
                                        should not specify any value for
                                        “replication_server”.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>nice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Scheduling priority of server processes.
                                        Niceness values range from -20 (most
                                        favorable to the process) to 19 (least
                                        favorable to the process). The default
                                        does not modify priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_class</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling class of server processes.
                                        I/O niceness class values are
                                        IOPRIO_CLASS_RT (realtime),
                                        IOPRIO_CLASS_BE (best-effort),
                                        and IOPRIO_CLASS_IDLE (idle).
                                        The default does not modify class and
                                        priority. Linux supports io scheduling
                                        priorities and classes since 2.6.13 with
                                        the CFQ io scheduler.
                                        Work only with ionice_priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling priority of server
                                        processes. I/O niceness priority is
                                        a number which goes from 0 to 7.
                                        The higher the value, the lower the I/O
                                        priority of the process. Work only with
                                        ionice_class.
                                        Ignored if IOPRIO_CLASS_IDLE is set.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section xml:id="container-replicator">
      <title>[container-replicator]</title>
      <informaltable>
        <tgroup cols="3">
          <colspec colname="c1" colwidth="23.4*"/>
          <colspec colname="c2" colwidth="35.1*"/>
          <colspec colname="c3" colwidth="41.6*"/>
          <tbody>
            <row>
              <entry>
                <para>Option</para>
              </entry>
              <entry>
                <para>Default</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_name</para>
              </entry>
              <entry>
                <para>container-replicator</para>
              </entry>
              <entry>
                <para>Label used when logging</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_facility</para>
              </entry>
              <entry>
                <para>LOG_LOCAL0</para>
              </entry>
              <entry>
                <para>Syslog log facility</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_level</para>
              </entry>
              <entry>
                <para>INFO</para>
              </entry>
              <entry>
                <para>Logging level</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_address</para>
              </entry>
              <entry>
                <para>/dev/log</para>
              </entry>
              <entry>
                <para>Logging directory</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>per_diff</para>
              </entry>
              <entry>
                <para>1000</para>
              </entry>
              <entry>
                <para>Maximum number of database
                                        rows that will be sync’d in a
                                        single HTTP replication
                                        request. Databases with less
                                        than or equal to this number
                                        of differing rows will always
                                        be sync’d using an HTTP
                                        replication request rather
                                        than using rsync.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>max_diffs</para>
              </entry>
              <entry>
                <para>100</para>
              </entry>
              <entry>
                <para>Maximum number of HTTP
                                        replication requests attempted
                                        on each replication pass for
                                        any one container. This caps
                                        how long the replicator will
                                        spend trying to sync a given
                                        database per pass so the other
                                        databases don’t get starved.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>concurrency</para>
              </entry>
              <entry>
                <para>8</para>
              </entry>
              <entry>
                <para>Number of replication workers
                                        to spawn</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>interval</para>
              </entry>
              <entry>
                <para>30</para>
              </entry>
              <entry>
                <para>Time in seconds to wait
                                        between replication passes</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>node_timeout</para>
              </entry>
              <entry>
                <para>10</para>
              </entry>
              <entry>
                <para>Request timeout to external
                                        services</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>conn_timeout</para>
              </entry>
              <entry>
                <para>0.5</para>
              </entry>
              <entry>
                <para>Connection timeout to external
                                        services</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>reclaim_age</para>
              </entry>
              <entry>
                <para>604800</para>
              </entry>
              <entry>
                <para>Time elapsed in seconds before
                                        a container can be reclaimed</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>rsync_module</para>
              </entry>
              <entry>
                <para>{replication_ip}::container</para>
              </entry>
              <entry>
                <para>Format of the rsync module
                                        where the replicator will send
                                        data. The configuration value
                                        can include some variables
                                        that will be extracted from
                                        the ring. Variables must
                                        follow the format {NAME} where
                                        NAME is one of: ip, port,
                                        replication_ip,
                                        replication_port, region,
                                        zone, device, meta. See
                                        etc/rsyncd.conf-sample for
                                        some examples.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>rsync_compress</para>
              </entry>
              <entry>
                <para>no</para>
              </entry>
              <entry>
                <para>Allow rsync to compress data
                                        which is transmitted to
                                        destination node during sync.
                                        However, this is applicable
                                        only when destination node is
                                        in a different region than the
                                        local one. NOTE: Objects that
                                        are already compressed (for
                                        example: .tar.gz, mp3) might
                                        slow down the syncing process.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>recon_cache_path</para>
              </entry>
              <entry>
                <para>/var/cache/swift</para>
              </entry>
              <entry>
                <para>Path to recon cache</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>nice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Scheduling priority of server
                                        processes. Niceness values
                                        range from -20 (most favorable
                                        to the process) to 19 (least
                                        favorable to the process).
                                        The default does not modify
                                        priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_class</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling class of server
                                        processes. I/O niceness class
                                        values are
                                        IOPRIO_CLASS_RT (realtime),
                                        IOPRIO_CLASS_BE (best-effort),
                                        and IOPRIO_CLASS_IDLE (idle).
                                        The default does not modify
                                        class and priority. Linux
                                        supports io scheduling
                                        priorities and classes since
                                        2.6.13 with the CFQ io
                                        scheduler.
                                        Work only with ionice_priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling priority of
                                        server processes. I/O niceness
                                        priority is a number which goes
                                        from 0 to 7.
                                        The higher the value, the lower
                                        the I/O priority of the process.
                                        Work only with ionice_class.
                                        Ignored if IOPRIO_CLASS_IDLE
                                        is set.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section xml:id="container-updater">
      <title>[container-updater]</title>
      <informaltable>
        <tgroup cols="3">
          <colspec colname="c1" colwidth="29.6*"/>
          <colspec colname="c2" colwidth="21.0*"/>
          <colspec colname="c3" colwidth="49.4*"/>
          <tbody>
            <row>
              <entry>
                <para>Option</para>
              </entry>
              <entry>
                <para>Default</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_name</para>
              </entry>
              <entry>
                <para>container-updater</para>
              </entry>
              <entry>
                <para>Label used when logging</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_facility</para>
              </entry>
              <entry>
                <para>LOG_LOCAL0</para>
              </entry>
              <entry>
                <para>Syslog log facility</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_level</para>
              </entry>
              <entry>
                <para>INFO</para>
              </entry>
              <entry>
                <para>Logging level</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_address</para>
              </entry>
              <entry>
                <para>/dev/log</para>
              </entry>
              <entry>
                <para>Logging directory</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>interval</para>
              </entry>
              <entry>
                <para>300</para>
              </entry>
              <entry>
                <para>Minimum time for a pass to take</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>concurrency</para>
              </entry>
              <entry>
                <para>4</para>
              </entry>
              <entry>
                <para>Number of updater workers to spawn</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>node_timeout</para>
              </entry>
              <entry>
                <para>3</para>
              </entry>
              <entry>
                <para>Request timeout to external
                                        services</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>conn_timeout</para>
              </entry>
              <entry>
                <para>0.5</para>
              </entry>
              <entry>
                <para>Connection timeout to external
                                        services</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>containers_per_second</para>
              </entry>
              <entry>
                <para>50</para>
              </entry>
              <entry>
                <para>Maximum containers updated per second.
                                        Should be tuned according to individual
                                        system specs. 0 is unlimited.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>slowdown</para>
              </entry>
              <entry>
                <para>0.01</para>
              </entry>
              <entry>
                <para>Time in seconds to wait between
                                        containers. Deprecated in favor of
                                        containers_per_second.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>account_suppression_time</para>
              </entry>
              <entry>
                <para>60</para>
              </entry>
              <entry>
                <para>Seconds to suppress updating an
                                        account that has generated an
                                        error (timeout, not yet found,
                                        etc.)</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>recon_cache_path</para>
              </entry>
              <entry>
                <para>/var/cache/swift</para>
              </entry>
              <entry>
                <para>Path to recon cache</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>nice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Scheduling priority of server
                                        processes. Niceness values range
                                        from -20 (most favorable to the
                                        process) to 19 (least favorable
                                        to the process). The default does
                                        not modify priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_class</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling class of server
                                        processes. I/O niceness class
                                        values are IOPRIO_CLASS_RT (realtime),
                                        IOPRIO_CLASS_BE (best-effort),
                                        and IOPRIO_CLASS_IDLE (idle).
                                        The default does not modify class and
                                        priority. Linux supports io scheduling
                                        priorities and classes since 2.6.13 with
                                        the CFQ io scheduler.
                                        Work only with ionice_priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling priority of server
                                        processes. I/O niceness priority is
                                        a number which goes from 0 to 7.
                                        The higher the value, the lower
                                        the I/O priority of the process.
                                        Work only with ionice_class.
                                        Ignored if IOPRIO_CLASS_IDLE is set.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section xml:id="container-auditor">
      <title>[container-auditor]</title>
      <informaltable>
        <tgroup cols="3">
          <colspec colname="c1" colwidth="26.6*"/>
          <colspec colname="c2" colwidth="21.5*"/>
          <colspec colname="c3" colwidth="51.9*"/>
          <tbody>
            <row>
              <entry>
                <para>Option</para>
              </entry>
              <entry>
                <para>Default</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_name</para>
              </entry>
              <entry>
                <para>container-auditor</para>
              </entry>
              <entry>
                <para>Label used when logging</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_facility</para>
              </entry>
              <entry>
                <para>LOG_LOCAL0</para>
              </entry>
              <entry>
                <para>Syslog log facility</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_level</para>
              </entry>
              <entry>
                <para>INFO</para>
              </entry>
              <entry>
                <para>Logging level</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_address</para>
              </entry>
              <entry>
                <para>/dev/log</para>
              </entry>
              <entry>
                <para>Logging directory</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>interval</para>
              </entry>
              <entry>
                <para>1800</para>
              </entry>
              <entry>
                <para>Minimum time for a pass to take</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>containers_per_second</para>
              </entry>
              <entry>
                <para>200</para>
              </entry>
              <entry>
                <para>Maximum containers audited per second.
                                        Should be tuned according to individual
                                        system specs. 0 is unlimited.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>recon_cache_path</para>
              </entry>
              <entry>
                <para>/var/cache/swift</para>
              </entry>
              <entry>
                <para>Path to recon cache</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>nice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Scheduling priority of server processes.
                                        Niceness values range from -20 (most
                                        favorable to the process) to 19 (least
                                        favorable to the process). The default
                                        does not modify priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_class</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling class of server processes.
                                        I/O niceness class values are
                                        IOPRIO_CLASS_RT (realtime),
                                        IOPRIO_CLASS_BE (best-effort),
                                        and IOPRIO_CLASS_IDLE (idle).
                                        The default does not modify class and
                                        priority. Linux supports io scheduling
                                        priorities and classes since 2.6.13 with
                                        the CFQ io scheduler.
                                        Work only with ionice_priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling priority of server
                                        processes. I/O niceness priority is
                                        a number which goes from 0 to 7.
                                        The higher the value, the lower the I/O
                                        priority of the process. Work only with
                                        ionice_class.
                                        Ignored if IOPRIO_CLASS_IDLE is set.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
  </section>
  <section>
    <title>Account Server Configuration</title>
    <para>An example Account Server configuration can be found at
                etc/account-server.conf-sample in the source code repository.</para>
    <para>The following configuration sections are available:</para>
    <itemizedlist>
      <listitem>
        <para>
          <xref linkend="account-server-default-options"/>
        </para>
      </listitem>
      <listitem>
        <para>
          <xref linkend="account-server"/>
        </para>
      </listitem>
      <listitem>
        <para>
          <xref linkend="account-replicator"/>
        </para>
      </listitem>
      <listitem>
        <para>
          <xref linkend="account-auditor"/>
        </para>
      </listitem>
      <listitem>
        <para>
          <xref linkend="account-reaper"/>
        </para>
      </listitem>
    </itemizedlist>
    <section xml:id="account-server-default-options">
      <title>[DEFAULT]</title>
      <informaltable>
        <tgroup cols="3">
          <colspec colname="c1" colwidth="35.2*"/>
          <colspec colname="c2" colwidth="11.4*"/>
          <colspec colname="c3" colwidth="53.4*"/>
          <tbody>
            <row>
              <entry>
                <para>Option</para>
              </entry>
              <entry>
                <para>Default</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>swift_dir</para>
              </entry>
              <entry>
                <para>/etc/swift</para>
              </entry>
              <entry>
                <para>Swift configuration directory</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>devices</para>
              </entry>
              <entry>
                <para>/srv/node</para>
              </entry>
              <entry>
                <para>Parent directory or where devices are mounted</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>mount_check</para>
              </entry>
              <entry>
                <para>true</para>
              </entry>
              <entry>
                <para>Whether or not check if the devices are
                                        mounted to prevent accidentally writing
                                        to the root device</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>bind_ip</para>
              </entry>
              <entry>
                <para>0.0.0.0</para>
              </entry>
              <entry>
                <para>IP Address for server to bind to</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>bind_port</para>
              </entry>
              <entry>
                <para>6202</para>
              </entry>
              <entry>
                <para>Port for server to bind to</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>bind_timeout</para>
              </entry>
              <entry>
                <para>30</para>
              </entry>
              <entry>
                <para>Seconds to attempt bind before giving up</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>backlog</para>
              </entry>
              <entry>
                <para>4096</para>
              </entry>
              <entry>
                <para>Maximum number of allowed pending
                                        connections</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>workers</para>
              </entry>
              <entry>
                <para>auto</para>
              </entry>
              <entry>
                <para>Override the number of pre-forked workers
                                        that will accept connections.  If set it
                                        should be an integer, zero means no fork.  If
                                        unset, it will try to default to the number
                                        of effective cpu cores and fallback to one.
                                        Increasing the number of workers may reduce
                                        the possibility of slow file system
                                        operations in one request from negatively
                                        impacting other requests.  See
                                        <xref linkend="general-service-tuning"/>.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>max_clients</para>
              </entry>
              <entry>
                <para>1024</para>
              </entry>
              <entry>
                <para>Maximum number of clients one worker can
                                        process simultaneously (it will actually
                                        accept(2) N + 1). Setting this to one (1)
                                        will only handle one request at a time,
                                        without accepting another request
                                        concurrently.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>user</para>
              </entry>
              <entry>
                <para>swift</para>
              </entry>
              <entry>
                <para>User to run as</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>db_preallocation</para>
              </entry>
              <entry>
                <para>off</para>
              </entry>
              <entry>
                <para>If you don’t mind the extra disk space usage in
                                        overhead, you can turn this on to preallocate
                                        disk space with SQLite databases to decrease
                                        fragmentation.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>disable_fallocate</para>
              </entry>
              <entry>
                <para>false</para>
              </entry>
              <entry>
                <para>Disable “fast fail” fallocate checks if the
                                        underlying filesystem does not support it.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_name</para>
              </entry>
              <entry>
                <para>swift</para>
              </entry>
              <entry>
                <para>Label used when logging</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_facility</para>
              </entry>
              <entry>
                <para>LOG_LOCAL0</para>
              </entry>
              <entry>
                <para>Syslog log facility</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_level</para>
              </entry>
              <entry>
                <para>INFO</para>
              </entry>
              <entry>
                <para>Logging level</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_address</para>
              </entry>
              <entry>
                <para>/dev/log</para>
              </entry>
              <entry>
                <para>Logging directory</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_max_line_length</para>
              </entry>
              <entry>
                <para>0</para>
              </entry>
              <entry>
                <para>Caps the length of log lines to the
                                        value given; no limit if set to 0, the
                                        default.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_custom_handlers</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Comma-separated list of functions to call
                                        to setup custom log handlers.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_udp_host</para>
              </entry>
              <entry/>
              <entry>
                <para>Override log_address</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_udp_port</para>
              </entry>
              <entry>
                <para>514</para>
              </entry>
              <entry>
                <para>UDP log port</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_statsd_host</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Enables StatsD logging; IPv4/IPv6
                                        address or a hostname.  If a
                                        hostname resolves to an IPv4 and IPv6
                                        address, the IPv4 address will be
                                        used.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_statsd_port</para>
              </entry>
              <entry>
                <para>8125</para>
              </entry>
              <entry/>
            </row>
            <row>
              <entry>
                <para>log_statsd_default_sample_rate</para>
              </entry>
              <entry>
                <para>1.0</para>
              </entry>
              <entry/>
            </row>
            <row>
              <entry>
                <para>log_statsd_sample_rate_factor</para>
              </entry>
              <entry>
                <para>1.0</para>
              </entry>
              <entry/>
            </row>
            <row>
              <entry>
                <para>log_statsd_metric_prefix</para>
              </entry>
              <entry/>
              <entry/>
            </row>
            <row>
              <entry>
                <para>eventlet_debug</para>
              </entry>
              <entry>
                <para>false</para>
              </entry>
              <entry>
                <para>If true, turn on debug logging for eventlet</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>fallocate_reserve</para>
              </entry>
              <entry>
                <para>1%</para>
              </entry>
              <entry>
                <para>You can set fallocate_reserve to the
                                        number of bytes or percentage of disk
                                        space you’d like fallocate to reserve,
                                        whether there is space for the given
                                        file size or not. Percentage will be used
                                        if the value ends with a ‘%’. This is
                                        useful for systems that behave badly when
                                        they completely run out of space; you can
                                        make the services pretend they’re out of
                                        space early.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>nice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Scheduling priority of server processes.
                                        Niceness values range from -20 (most
                                        favorable to the process) to 19 (least
                                        favorable to the process). The default
                                        does not modify priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_class</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling class of server processes.
                                        I/O niceness class values are IOPRIO_CLASS_RT
                                        (realtime), IOPRIO_CLASS_BE (best-effort),
                                        and IOPRIO_CLASS_IDLE (idle).
                                        The default does not modify class and
                                        priority. Linux supports io scheduling
                                        priorities and classes since 2.6.13 with
                                        the CFQ io scheduler.
                                        Work only with ionice_priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling priority of server processes.
                                        I/O niceness priority is a number which
                                        goes from 0 to 7. The higher the value,
                                        the lower the I/O priority of the process.
                                        Work only with ionice_class.
                                        Ignored if IOPRIO_CLASS_IDLE is set.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section xml:id="account-server">
      <title>[account-server]</title>
      <informaltable>
        <tgroup cols="3">
          <colspec colname="c1" colwidth="33.0*"/>
          <colspec colname="c2" colwidth="15.9*"/>
          <colspec colname="c3" colwidth="51.1*"/>
          <tbody>
            <row>
              <entry>
                <para>Option</para>
              </entry>
              <entry>
                <para>Default</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>use</para>
              </entry>
              <entry/>
              <entry>
                <para>Entry point for paste.deploy for the account
                                        server.  For most cases, this should be
                                        <literal>egg:swift#account</literal>.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>set log_name</para>
              </entry>
              <entry>
                <para>account-server</para>
              </entry>
              <entry>
                <para>Label used when logging</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>set log_facility</para>
              </entry>
              <entry>
                <para>LOG_LOCAL0</para>
              </entry>
              <entry>
                <para>Syslog log facility</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>set log_level</para>
              </entry>
              <entry>
                <para>INFO</para>
              </entry>
              <entry>
                <para>Logging level</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>set log_requests</para>
              </entry>
              <entry>
                <para>True</para>
              </entry>
              <entry>
                <para>Whether or not to log each
                                        request</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>set log_address</para>
              </entry>
              <entry>
                <para>/dev/log</para>
              </entry>
              <entry>
                <para>Logging directory</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>auto_create_account_prefix</para>
              </entry>
              <entry>
                <para>.</para>
              </entry>
              <entry>
                <para>Prefix used when automatically
                                        creating accounts.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>replication_server</para>
              </entry>
              <entry/>
              <entry>
                <para>Configure parameter for creating
                                        specific server. To handle all verbs,
                                        including replication verbs, do not
                                        specify “replication_server”
                                        (this is the default). To only
                                        handle replication, set to a True
                                        value (e.g. “True” or “1”).
                                        To handle only non-replication
                                        verbs, set to “False”. Unless you
                                        have a separate replication network, you
                                        should not specify any value for
                                        “replication_server”.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>nice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Scheduling priority of server processes.
                                        Niceness values range from -20 (most
                                        favorable to the process) to 19 (least
                                        favorable to the process). The default
                                        does not modify priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_class</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling class of server processes.
                                        I/O niceness class values are IOPRIO_CLASS_RT
                                        (realtime), IOPRIO_CLASS_BE (best-effort),
                                        and IOPRIO_CLASS_IDLE (idle).
                                        The default does not modify class and
                                        priority. Linux supports io scheduling
                                        priorities and classes since 2.6.13 with
                                        the CFQ io scheduler.
                                        Work only with ionice_priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling priority of server
                                        processes. I/O niceness priority is
                                        a number which goes from 0 to 7.
                                        The higher the value, the lower the I/O
                                        priority of the process. Work only with
                                        ionice_class.
                                        Ignored if IOPRIO_CLASS_IDLE is set.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section xml:id="account-replicator">
      <title>[account-replicator]</title>
      <informaltable>
        <tgroup cols="3">
          <colspec colname="c1" colwidth="22.0*"/>
          <colspec colname="c2" colwidth="30.5*"/>
          <colspec colname="c3" colwidth="47.6*"/>
          <tbody>
            <row>
              <entry>
                <para>Option</para>
              </entry>
              <entry>
                <para>Default</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_name</para>
              </entry>
              <entry>
                <para>account-replicator</para>
              </entry>
              <entry>
                <para>Label used when logging</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_facility</para>
              </entry>
              <entry>
                <para>LOG_LOCAL0</para>
              </entry>
              <entry>
                <para>Syslog log facility</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_level</para>
              </entry>
              <entry>
                <para>INFO</para>
              </entry>
              <entry>
                <para>Logging level</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_address</para>
              </entry>
              <entry>
                <para>/dev/log</para>
              </entry>
              <entry>
                <para>Logging directory</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>per_diff</para>
              </entry>
              <entry>
                <para>1000</para>
              </entry>
              <entry>
                <para>Maximum number of database rows
                                        that will be sync’d in a single
                                        HTTP replication request.
                                        Databases with less than or
                                        equal to this number of
                                        differing rows will always be
                                        sync’d using an HTTP replication
                                        request rather than using rsync.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>max_diffs</para>
              </entry>
              <entry>
                <para>100</para>
              </entry>
              <entry>
                <para>Maximum number of HTTP
                                        replication requests attempted
                                        on each replication pass for any
                                        one container. This caps how
                                        long the replicator will spend
                                        trying to sync a given database
                                        per pass so the other databases
                                        don’t get starved.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>concurrency</para>
              </entry>
              <entry>
                <para>8</para>
              </entry>
              <entry>
                <para>Number of replication workers
                                        to spawn</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>interval</para>
              </entry>
              <entry>
                <para>30</para>
              </entry>
              <entry>
                <para>Time in seconds to wait between
                                        replication passes</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>node_timeout</para>
              </entry>
              <entry>
                <para>10</para>
              </entry>
              <entry>
                <para>Request timeout to external
                                        services</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>conn_timeout</para>
              </entry>
              <entry>
                <para>0.5</para>
              </entry>
              <entry>
                <para>Connection timeout to external
                                        services</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>reclaim_age</para>
              </entry>
              <entry>
                <para>604800</para>
              </entry>
              <entry>
                <para>Time elapsed in seconds before
                                        an account can be reclaimed</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>rsync_module</para>
              </entry>
              <entry>
                <para>{replication_ip}::account</para>
              </entry>
              <entry>
                <para>Format of the rsync module where
                                        the replicator will send data.
                                        The configuration value can
                                        include some variables that will
                                        be extracted from the ring.
                                        Variables must follow the format
                                        {NAME} where NAME is one of: ip,
                                        port, replication_ip,
                                        replication_port, region, zone,
                                        device, meta. See
                                        etc/rsyncd.conf-sample for some
                                        examples.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>rsync_compress</para>
              </entry>
              <entry>
                <para>no</para>
              </entry>
              <entry>
                <para>Allow rsync to compress data
                                        which is transmitted to
                                        destination node during sync.
                                        However, this is applicable only
                                        when destination node is in a
                                        different region than the local
                                        one. NOTE: Objects that are
                                        already compressed (for example:
                                        .tar.gz, mp3) might slow down
                                        the syncing process.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>recon_cache_path</para>
              </entry>
              <entry>
                <para>/var/cache/swift</para>
              </entry>
              <entry>
                <para>Path to recon cache</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>nice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Scheduling priority of server
                                        processes. Niceness values
                                        range from -20 (most favorable
                                        to the process) to 19 (least
                                        favorable to the process).
                                        The default does not modify
                                        priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_class</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling class of server
                                        processes. I/O niceness class
                                        values are IOPRIO_CLASS_RT
                                        (realtime), IOPRIO_CLASS_BE
                                        (best-effort), and IOPRIO_CLASS_IDLE
                                        (idle).
                                        The default does not modify
                                        class and priority. Linux supports
                                        io scheduling priorities and classes
                                        since 2.6.13 with the CFQ io scheduler.
                                        Work only with ionice_priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling priority of server
                                        processes. I/O niceness priority
                                        is a number which goes from 0 to 7.
                                        The higher the value, the lower
                                        the I/O priority of the process.
                                        Work only with ionice_class.
                                        Ignored if IOPRIO_CLASS_IDLE
                                        is set.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section xml:id="account-auditor">
      <title>[account-auditor]</title>
      <informaltable>
        <tgroup cols="3">
          <colspec colname="c1" colwidth="26.0*"/>
          <colspec colname="c2" colwidth="20.8*"/>
          <colspec colname="c3" colwidth="53.2*"/>
          <tbody>
            <row>
              <entry>
                <para>Option</para>
              </entry>
              <entry>
                <para>Default</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_name</para>
              </entry>
              <entry>
                <para>account-auditor</para>
              </entry>
              <entry>
                <para>Label used when logging</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_facility</para>
              </entry>
              <entry>
                <para>LOG_LOCAL0</para>
              </entry>
              <entry>
                <para>Syslog log facility</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_level</para>
              </entry>
              <entry>
                <para>INFO</para>
              </entry>
              <entry>
                <para>Logging level</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_address</para>
              </entry>
              <entry>
                <para>/dev/log</para>
              </entry>
              <entry>
                <para>Logging directory</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>interval</para>
              </entry>
              <entry>
                <para>1800</para>
              </entry>
              <entry>
                <para>Minimum time for a pass to take</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>accounts_per_second</para>
              </entry>
              <entry>
                <para>200</para>
              </entry>
              <entry>
                <para>Maximum accounts audited per second.
                                        Should be tuned according to individual
                                        system specs. 0 is unlimited.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>recon_cache_path</para>
              </entry>
              <entry>
                <para>/var/cache/swift</para>
              </entry>
              <entry>
                <para>Path to recon cache</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>nice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Scheduling priority of server processes.
                                        Niceness values range from -20 (most
                                        favorable to the process) to 19 (least
                                        favorable to the process). The default
                                        does not modify priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_class</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling class of server processes.
                                        I/O niceness class values are
                                        IOPRIO_CLASS_RT (realtime),
                                        IOPRIO_CLASS_BE (best-effort),
                                        and IOPRIO_CLASS_IDLE (idle).
                                        The default does not modify class and
                                        priority. Linux supports io scheduling
                                        priorities and classes since 2.6.13 with
                                        the CFQ io scheduler.
                                        Work only with ionice_priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling priority of server
                                        processes. I/O niceness priority is
                                        a number which goes from 0 to 7.
                                        The higher the value, the lower the I/O
                                        priority of the process. Work only with
                                        ionice_class.
                                        Ignored if IOPRIO_CLASS_IDLE is set.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section xml:id="account-reaper">
      <title>[account-reaper]</title>
      <informaltable>
        <tgroup cols="3">
          <colspec colname="c1" colwidth="22.5*"/>
          <colspec colname="c2" colwidth="18.8*"/>
          <colspec colname="c3" colwidth="58.8*"/>
          <tbody>
            <row>
              <entry>
                <para>Option</para>
              </entry>
              <entry>
                <para>Default</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_name</para>
              </entry>
              <entry>
                <para>account-reaper</para>
              </entry>
              <entry>
                <para>Label used when logging</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_facility</para>
              </entry>
              <entry>
                <para>LOG_LOCAL0</para>
              </entry>
              <entry>
                <para>Syslog log facility</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_level</para>
              </entry>
              <entry>
                <para>INFO</para>
              </entry>
              <entry>
                <para>Logging level</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_address</para>
              </entry>
              <entry>
                <para>/dev/log</para>
              </entry>
              <entry>
                <para>Logging directory</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>concurrency</para>
              </entry>
              <entry>
                <para>25</para>
              </entry>
              <entry>
                <para>Number of replication workers to spawn</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>interval</para>
              </entry>
              <entry>
                <para>3600</para>
              </entry>
              <entry>
                <para>Minimum time for a pass to take</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>node_timeout</para>
              </entry>
              <entry>
                <para>10</para>
              </entry>
              <entry>
                <para>Request timeout to external services</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>conn_timeout</para>
              </entry>
              <entry>
                <para>0.5</para>
              </entry>
              <entry>
                <para>Connection timeout to external services</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>delay_reaping</para>
              </entry>
              <entry>
                <para>0</para>
              </entry>
              <entry>
                <para>Normally, the reaper begins deleting
                                        account information for deleted accounts
                                        immediately; you can set this to delay
                                        its work however. The value is in seconds,
                                        2592000 = 30 days, for example.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>reap_warn_after</para>
              </entry>
              <entry>
                <para>2892000</para>
              </entry>
              <entry>
                <para>If the account fails to be be reaped due
                                        to a persistent error, the account reaper
                                        will log a message such as:
                                        Account &lt;name&gt; has not been reaped since &lt;date&gt;
                                        You can search logs for this message if
                                        space is not being reclaimed after you
                                        delete account(s). This is in addition to
                                        any time requested by delay_reaping.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>nice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Scheduling priority of server processes.
                                        Niceness values range from -20 (most
                                        favorable to the process) to 19 (least
                                        favorable to the process). The default
                                        does not modify priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_class</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling class of server processes.
                                        I/O niceness class values are IOPRIO_CLASS_RT
                                        (realtime), IOPRIO_CLASS_BE (best-effort),
                                        and IOPRIO_CLASS_IDLE (idle).
                                        The default does not modify class and
                                        priority. Linux supports io scheduling
                                        priorities and classes since 2.6.13 with
                                        the CFQ io scheduler.
                                        Work only with ionice_priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling priority of server
                                        processes. I/O niceness priority is
                                        a number which goes from 0 to 7.
                                        The higher the value, the lower the I/O
                                        priority of the process. Work only with
                                        ionice_class.
                                        Ignored if IOPRIO_CLASS_IDLE is set.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
  </section>
  <section xml:id="proxy-server-config">
    <title>Proxy Server Configuration</title>
    <para>An example Proxy Server configuration can be found at
                etc/proxy-server.conf-sample in the source code repository.</para>
    <para>The following configuration sections are available:</para>
    <para>An example Account Server configuration can be found at
                etc/account-server.conf-sample in the source code repository.</para>
    <para>The following configuration sections are available:</para>
    <itemizedlist>
      <listitem>
        <para>
          <xref linkend="proxy-server-default-options"/>
        </para>
      </listitem>
      <listitem>
        <para>
          <xref linkend="proxy-server"/>
        </para>
      </listitem>
      <listitem>
        <para>Individual sections for <xref linkend="proxy-middlewares"/></para>
      </listitem>
    </itemizedlist>
    <section xml:id="proxy-server-default-options">
      <title>[DEFAULT]</title>
      <informaltable>
        <tgroup cols="3">
          <colspec colname="c1" colwidth="36.0*"/>
          <colspec colname="c2" colwidth="24.0*"/>
          <colspec colname="c3" colwidth="40.0*"/>
          <tbody>
            <row>
              <entry>
                <para>Option</para>
              </entry>
              <entry>
                <para>Default</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>bind_ip</para>
              </entry>
              <entry>
                <para>0.0.0.0</para>
              </entry>
              <entry>
                <para>IP Address for server to
                                        bind to</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>bind_port</para>
              </entry>
              <entry>
                <para>80</para>
              </entry>
              <entry>
                <para>Port for server to bind to</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>bind_timeout</para>
              </entry>
              <entry>
                <para>30</para>
              </entry>
              <entry>
                <para>Seconds to attempt bind before
                                        giving up</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>backlog</para>
              </entry>
              <entry>
                <para>4096</para>
              </entry>
              <entry>
                <para>Maximum number of allowed pending
                                        connections</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>swift_dir</para>
              </entry>
              <entry>
                <para>/etc/swift</para>
              </entry>
              <entry>
                <para>Swift configuration directory</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>workers</para>
              </entry>
              <entry>
                <para>auto</para>
              </entry>
              <entry>
                <para>Override the number of
                                        pre-forked workers that will
                                        accept connections.  If set it
                                        should be an integer, zero
                                        means no fork.  If unset, it
                                        will try to default to the
                                        number of effective cpu cores
                                        and fallback to one.  See
                                        <xref linkend="general-service-tuning"/>.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>max_clients</para>
              </entry>
              <entry>
                <para>1024</para>
              </entry>
              <entry>
                <para>Maximum number of clients one
                                        worker can process
                                        simultaneously (it will
                                        actually accept(2) N +
                                        1). Setting this to one (1)
                                        will only handle one request at
                                        a time, without accepting
                                        another request
                                        concurrently.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>user</para>
              </entry>
              <entry>
                <para>swift</para>
              </entry>
              <entry>
                <para>User to run as</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>cert_file</para>
              </entry>
              <entry/>
              <entry>
                <para>Path to the ssl .crt. This
                                        should be enabled for testing
                                        purposes only.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>key_file</para>
              </entry>
              <entry/>
              <entry>
                <para>Path to the ssl .key. This
                                        should be enabled for testing
                                        purposes only.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>cors_allow_origin</para>
              </entry>
              <entry/>
              <entry>
                <para>This is a list of hosts that
                                        are included with any CORS
                                        request by default and
                                        returned with the
                                        Access-Control-Allow-Origin
                                        header in addition to what
                                        the container has set.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>strict_cors_mode</para>
              </entry>
              <entry>
                <para>True</para>
              </entry>
              <entry/>
            </row>
            <row>
              <entry>
                <para>cors_expose_headers</para>
              </entry>
              <entry/>
              <entry>
                <para>This is a list of headers that
                                        are included in the header
                                        Access-Control-Expose-Headers
                                        in addition to what the container
                                        has set.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>client_timeout</para>
              </entry>
              <entry>
                <para>60</para>
              </entry>
              <entry/>
            </row>
            <row>
              <entry>
                <para>trans_id_suffix</para>
              </entry>
              <entry/>
              <entry>
                <para>This optional suffix (default is empty)
                                        that would be appended to the swift
                                        transaction id allows one to easily
                                        figure out from which cluster that
                                        X-Trans-Id belongs to. This is very
                                        useful when one is managing more than
                                        one swift cluster.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_name</para>
              </entry>
              <entry>
                <para>swift</para>
              </entry>
              <entry>
                <para>Label used when logging</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_facility</para>
              </entry>
              <entry>
                <para>LOG_LOCAL0</para>
              </entry>
              <entry>
                <para>Syslog log facility</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_level</para>
              </entry>
              <entry>
                <para>INFO</para>
              </entry>
              <entry>
                <para>Logging level</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_headers</para>
              </entry>
              <entry>
                <para>False</para>
              </entry>
              <entry/>
            </row>
            <row>
              <entry>
                <para>log_address</para>
              </entry>
              <entry>
                <para>/dev/log</para>
              </entry>
              <entry>
                <para>Logging directory</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_max_line_length</para>
              </entry>
              <entry>
                <para>0</para>
              </entry>
              <entry>
                <para>Caps the length of log
                                        lines to the value given;
                                        no limit if set to 0, the
                                        default.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_custom_handlers</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Comma separated list of functions
                                        to call to setup custom log
                                        handlers.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_udp_host</para>
              </entry>
              <entry/>
              <entry>
                <para>Override log_address</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_udp_port</para>
              </entry>
              <entry>
                <para>514</para>
              </entry>
              <entry>
                <para>UDP log port</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_statsd_host</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Enables StatsD logging; IPv4/IPv6
                                        address or a hostname.  If a
                                        hostname resolves to an IPv4 and IPv6
                                        address, the IPv4 address will be
                                        used.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>log_statsd_port</para>
              </entry>
              <entry>
                <para>8125</para>
              </entry>
              <entry/>
            </row>
            <row>
              <entry>
                <para>log_statsd_default_sample_rate</para>
              </entry>
              <entry>
                <para>1.0</para>
              </entry>
              <entry/>
            </row>
            <row>
              <entry>
                <para>log_statsd_sample_rate_factor</para>
              </entry>
              <entry>
                <para>1.0</para>
              </entry>
              <entry/>
            </row>
            <row>
              <entry>
                <para>log_statsd_metric_prefix</para>
              </entry>
              <entry/>
              <entry/>
            </row>
            <row>
              <entry>
                <para>eventlet_debug</para>
              </entry>
              <entry>
                <para>false</para>
              </entry>
              <entry>
                <para>If true, turn on debug logging
                                        for eventlet</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>expose_info</para>
              </entry>
              <entry>
                <para>true</para>
              </entry>
              <entry>
                <para>Enables exposing configuration
                                        settings via HTTP GET /info.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>admin_key</para>
              </entry>
              <entry/>
              <entry>
                <para>Key to use for admin calls that
                                        are HMAC signed.  Default
                                        is empty, which will
                                        disable admin calls to
                                        /info.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>disallowed_sections</para>
              </entry>
              <entry>
                <para>swift.valid_api_versions</para>
              </entry>
              <entry>
                <para>Allows the ability to withhold
                                        sections from showing up in the
                                        public calls to /info. You can
                                        withhold subsections by separating
                                        the dict level with a “.”.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>expiring_objects_container_divisor</para>
              </entry>
              <entry>
                <para>86400</para>
              </entry>
              <entry/>
            </row>
            <row>
              <entry>
                <para>expiring_objects_account_name</para>
              </entry>
              <entry>
                <para>expiring_objects</para>
              </entry>
              <entry/>
            </row>
            <row>
              <entry>
                <para>nice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Scheduling priority of server
                                        processes.
                                        Niceness values range from -20 (most
                                        favorable to the process) to 19 (least
                                        favorable to the process). The default
                                        does not modify priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_class</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling class of server
                                        processes. I/O niceness class values
                                        are IOPRIO_CLASS_RT (realtime),
                                        IOPRIO_CLASS_BE (best-effort) and
                                        IOPRIO_CLASS_IDLE (idle).
                                        The default does not
                                        modify class and priority. Linux
                                        supports io scheduling priorities
                                        and classes since 2.6.13 with
                                        the CFQ io scheduler.
                                        Work only with ionice_priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling priority of server
                                        processes. I/O niceness priority is
                                        a number which goes from 0 to 7.
                                        The higher the value, the lower
                                        the I/O priority of the process.
                                        Work only with ionice_class.
                                        Ignored if IOPRIO_CLASS_IDLE is set.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section xml:id="proxy-server">
      <title>[proxy-server]</title>
      <informaltable>
        <tgroup cols="3">
          <colspec colname="c1" colwidth="40.0*"/>
          <colspec colname="c2" colwidth="15.8*"/>
          <colspec colname="c3" colwidth="44.2*"/>
          <tbody>
            <row>
              <entry>
                <para>Option</para>
              </entry>
              <entry>
                <para>Default</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>use</para>
              </entry>
              <entry/>
              <entry>
                <para>Entry point for paste.deploy for
                                        the proxy server.  For most
                                        cases, this should be
                                        <literal>egg:swift#proxy</literal>.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>set log_name</para>
              </entry>
              <entry>
                <para>proxy-server</para>
              </entry>
              <entry>
                <para>Label used when logging</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>set log_facility</para>
              </entry>
              <entry>
                <para>LOG_LOCAL0</para>
              </entry>
              <entry>
                <para>Syslog log facility</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>set log_level</para>
              </entry>
              <entry>
                <para>INFO</para>
              </entry>
              <entry>
                <para>Log level</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>set log_headers</para>
              </entry>
              <entry>
                <para>True</para>
              </entry>
              <entry>
                <para>If True, log headers in each
                                        request</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>set log_handoffs</para>
              </entry>
              <entry>
                <para>True</para>
              </entry>
              <entry>
                <para>If True, the proxy will log
                                        whenever it has to failover to a
                                        handoff node</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>recheck_account_existence</para>
              </entry>
              <entry>
                <para>60</para>
              </entry>
              <entry>
                <para>Cache timeout in seconds to
                                        send memcached for account
                                        existence</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>recheck_container_existence</para>
              </entry>
              <entry>
                <para>60</para>
              </entry>
              <entry>
                <para>Cache timeout in seconds to
                                        send memcached for container
                                        existence</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>object_chunk_size</para>
              </entry>
              <entry>
                <para>65536</para>
              </entry>
              <entry>
                <para>Chunk size to read from
                                        object servers</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>client_chunk_size</para>
              </entry>
              <entry>
                <para>65536</para>
              </entry>
              <entry>
                <para>Chunk size to read from
                                        clients</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>memcache_servers</para>
              </entry>
              <entry>
                <para>127.0.0.1:11211</para>
              </entry>
              <entry>
                <para>Comma separated list of
                                        memcached servers
                                        ip:port or [ipv6addr]:port</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>memcache_max_connections</para>
              </entry>
              <entry>
                <para>2</para>
              </entry>
              <entry>
                <para>Max number of connections to
                                        each memcached server per
                                        worker</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>node_timeout</para>
              </entry>
              <entry>
                <para>10</para>
              </entry>
              <entry>
                <para>Request timeout to external
                                        services</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>recoverable_node_timeout</para>
              </entry>
              <entry>
                <para>node_timeout</para>
              </entry>
              <entry>
                <para>Request timeout to external
                                        services for requests that, on
                                        failure, can be recovered
                                        from. For example, object GET.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>client_timeout</para>
              </entry>
              <entry>
                <para>60</para>
              </entry>
              <entry>
                <para>Timeout to read one chunk
                                        from a client</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>conn_timeout</para>
              </entry>
              <entry>
                <para>0.5</para>
              </entry>
              <entry>
                <para>Connection timeout to
                                        external services</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>error_suppression_interval</para>
              </entry>
              <entry>
                <para>60</para>
              </entry>
              <entry>
                <para>Time in seconds that must
                                        elapse since the last error
                                        for a node to be considered
                                        no longer error limited</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>error_suppression_limit</para>
              </entry>
              <entry>
                <para>10</para>
              </entry>
              <entry>
                <para>Error count to consider a
                                        node error limited</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>allow_account_management</para>
              </entry>
              <entry>
                <para>false</para>
              </entry>
              <entry>
                <para>Whether account PUTs and DELETEs
                                        are even callable</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>object_post_as_copy</para>
              </entry>
              <entry>
                <para>false</para>
              </entry>
              <entry>
                <para>Deprecated.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>account_autocreate</para>
              </entry>
              <entry>
                <para>false</para>
              </entry>
              <entry>
                <para>If set to ‘true’ authorized
                                        accounts that do not yet exist
                                        within the Swift cluster will
                                        be automatically created.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>max_containers_per_account</para>
              </entry>
              <entry>
                <para>0</para>
              </entry>
              <entry>
                <para>If set to a positive value,
                                        trying to create a container
                                        when the account already has at
                                        least this maximum containers
                                        will result in a 403 Forbidden.
                                        Note: This is a soft limit,
                                        meaning a user might exceed the
                                        cap for
                                        recheck_account_existence before
                                        the 403s kick in.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>max_containers_whitelist</para>
              </entry>
              <entry/>
              <entry>
                <para>This is a comma separated list
                                        of account names that ignore
                                        the max_containers_per_account
                                        cap.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>rate_limit_after_segment</para>
              </entry>
              <entry>
                <para>10</para>
              </entry>
              <entry>
                <para>Rate limit the download of
                                        large object segments after
                                        this segment is downloaded.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>rate_limit_segments_per_sec</para>
              </entry>
              <entry>
                <para>1</para>
              </entry>
              <entry>
                <para>Rate limit large object
                                        downloads at this rate.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>request_node_count</para>
              </entry>
              <entry>
                <para>2 * replicas</para>
              </entry>
              <entry>
                <para>Set to the number of nodes to
                                        contact for a normal request.
                                        You can use ‘* replicas’ at the
                                        end to have it use the number
                                        given times the number of
                                        replicas for the ring being used
                                        for the request.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>swift_owner_headers</para>
              </entry>
              <entry>
                <para>&lt;see the sample
                                        conf file for
                                        the list of
                                        default
                                        headers&gt;</para>
              </entry>
              <entry>
                <para>These are the headers whose
                                        values will only be shown to
                                        swift_owners. The exact
                                        definition of a swift_owner is
                                        up to the auth system in use,
                                        but usually indicates
                                        administrative responsibilities.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>sorting_method</para>
              </entry>
              <entry>
                <para>shuffle</para>
              </entry>
              <entry>
                <para>Storage nodes can be chosen at
                                        random (shuffle), by using timing
                                        measurements (timing), or by using
                                        an explicit match (affinity).
                                        Using timing measurements may allow
                                        for lower overall latency, while
                                        using affinity allows for finer
                                        control. In both the timing and
                                        affinity cases, equally-sorting nodes
                                        are still randomly chosen to spread
                                        load. This option may be overridden
                                        in a per-policy configuration
                                        section.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>timing_expiry</para>
              </entry>
              <entry>
                <para>300</para>
              </entry>
              <entry>
                <para>If the “timing” sorting_method is
                                        used, the timings will only be valid
                                        for the number of seconds configured
                                        by timing_expiry.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>concurrent_gets</para>
              </entry>
              <entry>
                <para>off</para>
              </entry>
              <entry>
                <para>Use replica count number of
                                        threads concurrently during a
                                        GET/HEAD and return with the
                                        first successful response. In
                                        the EC case, this parameter only
                                        effects an EC HEAD as an EC GET
                                        behaves differently.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>concurrency_timeout</para>
              </entry>
              <entry>
                <para>conn_timeout</para>
              </entry>
              <entry>
                <para>This parameter controls how long
                                        to wait before firing off the
                                        next concurrent_get thread. A
                                        value of 0 would we fully concurrent
                                        any other number will stagger the
                                        firing of the threads. This number
                                        should be between 0 and node_timeout.
                                        The default is conn_timeout (0.5).</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>nice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Scheduling priority of server
                                        processes.
                                        Niceness values range from -20 (most
                                        favorable to the process) to 19 (least
                                        favorable to the process). The default
                                        does not modify priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_class</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling class of server
                                        processes. I/O niceness class values
                                        are IOPRIO_CLASS_RT (realtime),
                                        IOPRIO_CLASS_BE (best-effort),
                                        and IOPRIO_CLASS_IDLE (idle).
                                        The default does not modify class and
                                        priority. Linux supports io scheduling
                                        priorities and classes since 2.6.13
                                        with the CFQ io scheduler.
                                        Work only with ionice_priority.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ionice_priority</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>I/O scheduling priority of server
                                        processes. I/O niceness priority is
                                        a number which goes from 0 to 7.
                                        The higher the value, the lower the
                                        I/O priority of the process. Work
                                        only with ionice_class.
                                        Ignored if IOPRIO_CLASS_IDLE is set.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>read_affinity</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Specifies which backend servers to
                                        prefer on reads; used in conjunction
                                        with the sorting_method option being
                                        set to ‘affinity’. Format is a comma
                                        separated list of affinity descriptors
                                        of the form &lt;selection&gt;=&lt;priority&gt;.
                                        The &lt;selection&gt; may be r&lt;N&gt; for
                                        selecting nodes in region N or
                                        r&lt;N&gt;z&lt;M&gt; for selecting nodes in
                                        region N, zone M. The &lt;priority&gt;
                                        value should be a whole number
                                        that represents the priority to
                                        be given to the selection; lower
                                        numbers are higher priority.
                                        Default is empty, meaning no
                                        preference. This option may be
                                        overridden in a per-policy
                                        configuration section.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>write_affinity</para>
              </entry>
              <entry>
                <para>None</para>
              </entry>
              <entry>
                <para>Specifies which backend servers to
                                        prefer on writes. Format is a comma
                                        separated list of affinity
                                        descriptors of the form r&lt;N&gt; for
                                        region N or r&lt;N&gt;z&lt;M&gt; for region N,
                                        zone M. Default is empty, meaning no
                                        preference. This option may be
                                        overridden in a per-policy
                                        configuration section.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>write_affinity_node_count</para>
              </entry>
              <entry>
                <para>2 * replicas</para>
              </entry>
              <entry>
                <para>The number of local (as governed by
                                        the write_affinity setting) nodes to
                                        attempt to contact first on writes,
                                        before any non-local ones. The value
                                        should be an integer number, or use
                                        ‘* replicas’ at the end to have it
                                        use the number given times the number
                                        of replicas for the ring being used
                                        for the request. This option may be
                                        overridden in a per-policy
                                        configuration section.</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>write_affinity_handoff_delete_count</para>
              </entry>
              <entry>
                <para>auto</para>
              </entry>
              <entry>
                <para>The number of local (as governed by
                                        the write_affinity setting) handoff
                                        nodes to attempt to contact on
                                        deletion, in addition to primary
                                        nodes. Example: in geographically
                                        distributed deployment, If replicas=3,
                                        sometimes there may be 1 primary node
                                        and 2 local handoff nodes in one region
                                        holding the object after uploading but
                                        before object replicated to the
                                        appropriate locations in other regions.
                                        In this case, include these handoff
                                        nodes to send request when deleting
                                        object could help make correct decision
                                        for the response. The default value ‘auto’
                                        means Swift will calculate the number
                                        automatically, the default value is
                                        (replicas - len(local_primary_nodes)).
                                        This option may be overridden in a
                                        per-policy configuration section.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section xml:id="proxy-server-per-policy-config">
      <title>Per policy configuration</title>
      <para>Some proxy-server configuration options may be overridden for individual
                     by including per-policy config section(s). These
                    options are:</para>
      <itemizedlist>
        <listitem>
          <para>
            <literal>sorting_method</literal>
          </para>
        </listitem>
        <listitem>
          <para>
            <literal>read_affinity</literal>
          </para>
        </listitem>
        <listitem>
          <para>
            <literal>write_affinity</literal>
          </para>
        </listitem>
        <listitem>
          <para>
            <literal>write_affinity_node_count</literal>
          </para>
        </listitem>
        <listitem>
          <para>
            <literal>write_affinity_handoff_delete_count</literal>
          </para>
        </listitem>
      </itemizedlist>
      <para>The per-policy config section name must be of the form:</para>
      <screen>[proxy-server:policy:&lt;policy index&gt;]</screen>
      <note>
        <para>The per-policy config section name should refer to the policy index, not
                        the policy name.</para>
      </note>
      <note>
        <para>The first part of proxy-server config section name must match the name of
                        the proxy-server config section. This is typically <literal>proxy-server</literal> as
                        shown above, but if different then the names of any per-policy config
                        sections must be changed accordingly.</para>
      </note>
      <para>The value of an option specified in a per-policy section will override any
                    value given in the proxy-server section for that policy only. Otherwise the
                    value of these options will be that specified in the proxy-server section.</para>
      <para>For example, the following section provides policy-specific options for a
                    policy with index <literal>3</literal>:</para>
      <screen>[proxy-server:policy:3]
sorting_method = affinity
read_affinity = r2=1
write_affinity = r2
write_affinity_node_count = 1 * replicas
write_affinity_handoff_delete_count = 2</screen>
      <note>
        <para>It is recommended that per-policy config options are <emphasis>not</emphasis> included in the
                        <literal>[DEFAULT]</literal> section. If they are then the following behavior applies.</para>
        <para>Per-policy config sections will inherit options in the <literal>[DEFAULT]</literal>
                        section of the config file, and any such inheritance will take precedence
                        over inheriting options from the proxy-server config section.</para>
        <para>Per-policy config section options will override options in the
                        <literal>[DEFAULT]</literal> section. Unlike the behavior described under <xref linkend="id2"/> for paste-deploy <literal>filter</literal> and <literal>app</literal> sections, the
                        <literal>set</literal> keyword is not required for options to override in per-policy
                        config sections.</para>
        <para>For example, given the following settings in a config file:</para>
        <screen>[DEFAULT]
sorting_method = affinity
read_affinity = r0=100
write_affinity = r0

[app:proxy-server]
use = egg:swift#proxy
# use of set keyword here overrides [DEFAULT] option
set read_affinity = r1=100
# without set keyword, [DEFAULT] option overrides in a paste-deploy section
write_affinity = r1

[proxy-server:policy:0]
sorting_method = affinity
# set keyword not required here to override [DEFAULT] option
write_affinity = r1</screen>
        <para>would result in policy with index <literal>0</literal> having settings:</para>
        <itemizedlist>
          <listitem>
            <para><literal>read_affinity = r0=100</literal> (inherited from the <literal>[DEFAULT]</literal> section)</para>
          </listitem>
          <listitem>
            <para><literal>write_affinity = r1</literal> (specified in the policy 0 section)</para>
          </listitem>
        </itemizedlist>
        <para>and any other policy would have the default settings of:</para>
        <itemizedlist>
          <listitem>
            <para><literal>read_affinity = r1=100</literal> (set in the proxy-server section)</para>
          </listitem>
          <listitem>
            <para><literal>write_affinity = r0</literal> (inherited from the <literal>[DEFAULT]</literal> section)</para>
          </listitem>
        </itemizedlist>
      </note>
    </section>
    <section xml:id="proxy-middlewares">
      <title>Proxy Middlewares</title>
      <para>Many features in Swift are implemented as middleware in the proxy-server
                    pipeline. See  and the <literal>proxy-server.conf-sample</literal> file for
                    more information. In particular, the use of some type of  is highly recommended.</para>
    </section>
  </section>
  <section>
    <title>Memcached Considerations</title>
    <para>Several of the Services rely on Memcached for caching certain types of
                lookups, such as auth tokens, and container/account existence.  Swift does
                not do any caching of actual object data.  Memcached should be able to run
                on any servers that have available RAM and CPU.  At Rackspace, we run
                Memcached on the proxy servers.  The <literal>memcache_servers</literal> config option
                in the <literal>proxy-server.conf</literal> should contain all memcached servers.</para>
  </section>
  <section>
    <title>System Time</title>
    <para>Time may be relative but it is relatively important for Swift!  Swift uses
                timestamps to determine which is the most recent version of an object.
                It is very important for the system time on each server in the cluster to
                by synced as closely as possible (more so for the proxy server, but in general
                it is a good idea for all the servers).  At Rackspace, we use NTP with a local
                NTP server to ensure that the system times are as close as possible.  This
                should also be monitored to ensure that the times do not vary too much.</para>
  </section>
  <section xml:id="general-service-tuning">
    <title>General Service Tuning</title>
    <para>Most services support either a <literal>worker</literal> or <literal>concurrency</literal> value in the
                settings.  This allows the services to make effective use of the cores
                available. A good starting point to set the concurrency level for the proxy
                and storage services to 2 times the number of cores available. If more than
                one service is sharing a server, then some experimentation may be needed to
                find the best balance.</para>
    <para>At Rackspace, our Proxy servers have dual quad core processors, giving us 8
                cores. Our testing has shown 16 workers to be a pretty good balance when
                saturating a 10g network and gives good CPU utilization.</para>
    <para>Our Storage server processes all run together on the same servers. These servers have
                dual quad core processors, for 8 cores total. We run the Account, Container,
                and Object servers with 8 workers each. Most of the background jobs are run at
                a concurrency of 1, with the exception of the replicators which are run at a
                concurrency of 2.</para>
    <para>The <literal>max_clients</literal> parameter can be used to adjust the number of client
                requests an individual worker accepts for processing. The fewer requests being
                processed at one time, the less likely a request that consumes the worker’s
                CPU time, or blocks in the OS, will negatively impact other requests. The more
                requests being processed at one time, the more likely one worker can utilize
                network and disk capacity.</para>
    <para>On systems that have more cores, and more memory, where one can afford to run
                more workers, raising the number of workers and lowering the maximum number of
                clients serviced per worker can lessen the impact of CPU intensive or stalled
                requests.</para>
    <para>The <literal>nice_priority</literal> parameter can be used to set program scheduling priority.
                The <literal>ionice_class</literal> and <literal>ionice_priority</literal> parameters can be used to set I/O scheduling
                class and priority on the systems that use an I/O scheduler that supports
                I/O priorities. As at kernel 2.6.17 the only such scheduler is the Completely
                Fair Queuing (CFQ) I/O scheduler. If you run your Storage servers all together
                on the same servers, you can slow down the auditors or prioritize
                object-server I/O via these parameters (but probably do not need to change
                it on the proxy). It is a new feature and the best practices are still
                being developed. On some systems it may be required to run the daemons as root.
                For more info also see setpriority(2) and ioprio_set(2).</para>
    <para>The above configuration setting should be taken as suggestions and testing
                of configuration settings should be done to ensure best utilization of CPU,
                network connectivity, and disk I/O.</para>
  </section>
  <section>
    <title>Filesystem Considerations</title>
    <para>Swift is designed to be mostly filesystem agnostic–the only requirement
                being that the filesystem supports extended attributes (xattrs). After
                thorough testing with our use cases and hardware configurations, XFS was
                the best all-around choice. If you decide to use a filesystem other than
                XFS, we highly recommend thorough testing.</para>
    <para>For distros with more recent kernels (for example Ubuntu 12.04 Precise),
                we recommend using the default settings (including the default inode size
                of 256 bytes) when creating the file system:</para>
    <screen>mkfs.xfs /dev/sda1</screen>
    <para>In the last couple of years, XFS has made great improvements in how inodes
                are allocated and used.  Using the default inode size no longer has an
                impact on performance.</para>
    <para>For distros with older kernels (for example Ubuntu 10.04 Lucid),
                some settings can dramatically impact performance. We recommend the
                following when creating the file system:</para>
    <screen>mkfs.xfs -i size=1024 /dev/sda1</screen>
    <para>Setting the inode size is important, as XFS stores xattr data in the inode.
                If the metadata is too large to fit in the inode, a new extent is created,
                which can cause quite a performance problem. Upping the inode size to 1024
                bytes provides enough room to write the default metadata, plus a little
                headroom.</para>
    <para>The following example mount options are recommended when using XFS:</para>
    <screen>mount -t xfs -o noatime,nodiratime,nobarrier,logbufs=8 /dev/sda1 /srv/node/sda</screen>
    <para>We do not recommend running Swift on RAID, but if you are using
                RAID it is also important to make sure that the proper sunit and swidth
                settings get set so that XFS can make most efficient use of the RAID array.</para>
    <para>For a standard Swift install, all data drives are mounted directly under
                <literal>/srv/node</literal> (as can be seen in the above example of mounting <literal>/dev/sda1</literal> as
                <literal>/srv/node/sda</literal>). If you choose to mount the drives in another directory,
                be sure to set the <literal>devices</literal> config option in all of the server configs to
                point to the correct directory.</para>
    <para>The mount points for each drive in <literal>/srv/node/</literal> should be owned by the root user
                almost exclusively (<literal>root:root 755</literal>). This is required to prevent rsync from
                syncing files into the root drive in the event a drive is unmounted.</para>
    <para>Swift uses system calls to reserve space for new objects being written into
                the system. If your filesystem does not support <literal>fallocate()</literal> or
                <literal>posix_fallocate()</literal>, be sure to set the <literal>disable_fallocate = true</literal> config
                parameter in account, container, and object server configs.</para>
    <para>Most current Linux distributions ship with a default installation of updatedb.
                This tool runs periodically and updates the file name database that is used by
                the GNU locate tool. However, including Swift object and container database
                files is most likely not required and the periodic update affects the
                performance quite a bit. To disable the inclusion of these files add the path
                where Swift stores its data to the setting PRUNEPATHS in <literal>/etc/updatedb.conf</literal>:</para>
    <screen>PRUNEPATHS="... /tmp ... /var/spool ... /srv/node"</screen>
  </section>
  <section>
    <title>General System Tuning</title>
    <para>Rackspace currently runs Swift on Ubuntu Server 10.04, and the following
                changes have been found to be useful for our use cases.</para>
    <para>The following settings should be in <literal>/etc/sysctl.conf</literal>:</para>
    <screen># disable TIME_WAIT.. wait..
net.ipv4.tcp_tw_recycle=1
net.ipv4.tcp_tw_reuse=1

# disable syn cookies
net.ipv4.tcp_syncookies = 0

# double amount of allowed conntrack
net.ipv4.netfilter.ip_conntrack_max = 262144</screen>
    <para>To load the updated sysctl settings, run <literal>sudo sysctl -p</literal></para>
    <para>A note about changing the TIME_WAIT values.  By default the OS will hold
                a port open for 60 seconds to ensure that any remaining packets can be
                received.  During high usage, and with the number of connections that are
                created, it is easy to run out of ports.  We can change this since we are
                in control of the network.  If you are not in control of the network, or
                do not expect high loads, then you may not want to adjust those values.</para>
  </section>
  <section>
    <title>Logging Considerations</title>
    <para>Swift is set up to log directly to syslog. Every service can be configured
                with the <literal>log_facility</literal> option to set the syslog log facility destination.
                We recommended using syslog-ng to route the logs to specific log
                files locally on the server and also to remote log collecting servers.
                Additionally, custom log handlers can be used via the custom_log_handlers
                setting.</para>
  </section>
</section>
