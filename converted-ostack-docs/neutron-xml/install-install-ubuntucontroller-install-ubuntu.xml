<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.1">
  <title>Install and configure controller node</title>
  <section>
    <title>Prerequisites</title>
    <para>Before you configure the OpenStack Networking (neutron) service, you
                must create a database, service credentials, and API endpoints.</para>
    <procedure>
      <step>
        <para>To create the database, complete these steps:</para>
        <itemizedlist>
          <listitem>
            <para>Use the database access client to connect to the database
                                server as the <literal>root</literal> user:</para>
            <screen language="console">$ mysql -u root -p</screen>
          </listitem>
          <listitem>
            <para>Create the <literal>neutron</literal> database:</para>
            <screen language="console">MariaDB [(none)] CREATE DATABASE neutron;</screen>
          </listitem>
          <listitem>
            <para>Grant proper access to the <literal>neutron</literal> database, replacing
                                <literal>NEUTRON_DBPASS</literal> with a suitable password:</para>
            <screen language="console">MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' \
  IDENTIFIED BY 'NEUTRON_DBPASS';
MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%' \
  IDENTIFIED BY 'NEUTRON_DBPASS';</screen>
          </listitem>
          <listitem>
            <para>Exit the database access client.</para>
          </listitem>
        </itemizedlist>
      </step>
      <step>
        <para>Source the <literal>admin</literal> credentials to gain access to admin-only CLI
                        commands:</para>
        <screen language="console">$ . admin-openrc</screen>
      </step>
      <step>
        <para>To create the service credentials, complete these steps:</para>
        <itemizedlist>
          <listitem>
            <para>Create the <literal>neutron</literal> user:</para>
            <screen language="console">$ openstack user create --domain default --password-prompt neutron

User Password:
Repeat User Password:
+---------------------+----------------------------------+
| Field               | Value                            |
+---------------------+----------------------------------+
| domain_id           | default                          |
| enabled             | True                             |
| id                  | fdb0f541e28141719b6a43c8944bf1fb |
| name                | neutron                          |
| options             | {}                               |
| password_expires_at | None                             |
+---------------------+----------------------------------+</screen>
          </listitem>
          <listitem>
            <para>Add the <literal>admin</literal> role to the <literal>neutron</literal> user:</para>
            <screen language="console">$ openstack role add --project service --user neutron admin</screen>
            <note>
              <para>This command provides no output.</para>
            </note>
          </listitem>
          <listitem>
            <para>Create the <literal>neutron</literal> service entity:</para>
            <screen language="console">$ openstack service create --name neutron \
  --description "OpenStack Networking" network

+-------------+----------------------------------+
| Field       | Value                            |
+-------------+----------------------------------+
| description | OpenStack Networking             |
| enabled     | True                             |
| id          | f71529314dab4a4d8eca427e701d209e |
| name        | neutron                          |
| type        | network                          |
+-------------+----------------------------------+</screen>
          </listitem>
        </itemizedlist>
      </step>
      <step>
        <para>Create the Networking service API endpoints:</para>
        <screen language="console">$ openstack endpoint create --region RegionOne \
  network public http://controller:9696

+--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | 85d80a6d02fc4b7683f611d7fc1493a3 |
| interface    | public                           |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | f71529314dab4a4d8eca427e701d209e |
| service_name | neutron                          |
| service_type | network                          |
| url          | http://controller:9696           |
+--------------+----------------------------------+

$ openstack endpoint create --region RegionOne \
  network internal http://controller:9696

+--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | 09753b537ac74422a68d2d791cf3714f |
| interface    | internal                         |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | f71529314dab4a4d8eca427e701d209e |
| service_name | neutron                          |
| service_type | network                          |
| url          | http://controller:9696           |
+--------------+----------------------------------+

$ openstack endpoint create --region RegionOne \
  network admin http://controller:9696

+--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | 1ee14289c9374dffb5db92a5c112fc4e |
| interface    | admin                            |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | f71529314dab4a4d8eca427e701d209e |
| service_name | neutron                          |
| service_type | network                          |
| url          | http://controller:9696           |
+--------------+----------------------------------+</screen>
      </step>
    </procedure>
  </section>
  <section>
    <title>Configure networking options</title>
    <para>You can deploy the Networking service using one of two architectures
                represented by options 1 and 2.</para>
    <para>Option 1 deploys the simplest possible architecture that only supports
                attaching instances to provider (external) networks. No self-service (private)
                networks, routers, or floating IP addresses. Only the <literal>admin</literal> or other
                privileged user can manage provider networks.</para>
    <para>Option 2 augments option 1 with layer-3 services that support attaching
                instances to self-service networks. The <literal>demo</literal> or other unprivileged
                user can manage self-service networks including routers that provide
                connectivity between self-service and provider networks. Additionally,
                floating IP addresses provide connectivity to instances using self-service
                networks from external networks such as the Internet.</para>
    <para>Self-service networks typically use overlay networks. Overlay network
                protocols such as VXLAN include additional headers that increase overhead
                and decrease space available for the payload or user data. Without knowledge
                of the virtual network infrastructure, instances attempt to send packets
                using the default Ethernet maximum transmission unit (MTU) of 1500
                bytes. The Networking service automatically provides the correct MTU value
                to instances via DHCP. However, some cloud images do not use DHCP or ignore
                the DHCP MTU option and require configuration using metadata or a script.</para>
    <note>
      <para>Option 2 also supports attaching instances to provider networks.</para>
    </note>
    <para>Choose one of the following networking options to configure services
                specific to it. Afterwards, return here and proceed to
                <xref linkend="neutron-controller-metadata-agent-ubuntu"/>.</para>
    <xi:include href="install-install-ubuntucontroller-install-ubuntucontroller-install-option1-ubuntu.xml"/>
    <xi:include href="install-install-ubuntucontroller-install-ubuntucontroller-install-option2-ubuntu.xml"/>
  </section>
  <section xml:id="neutron-controller-metadata-agent-ubuntu">
    <title>Configure the metadata agent</title>
    <para>The metadata agent provides configuration information
                such as credentials to instances.</para>
    <itemizedlist>
      <listitem>
        <para>Edit the <literal>/etc/neutron/metadata_agent.ini</literal> file and complete the following
                        actions:</para>
        <itemizedlist>
          <listitem>
            <para>In the <literal>[DEFAULT]</literal> section, configure the metadata host and shared
                                secret:</para>
            <screen language="ini">[DEFAULT]
# ...
nova_metadata_host = controller
metadata_proxy_shared_secret = METADATA_SECRET</screen>
            <para>Replace <literal>METADATA_SECRET</literal> with a suitable secret for the metadata proxy.</para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>
  </section>
  <section>
    <title>Configure the Compute service to use the Networking service</title>
    <itemizedlist>
      <listitem>
        <para>Edit the <literal>/etc/nova/nova.conf</literal> file and perform the following actions:</para>
        <itemizedlist>
          <listitem>
            <para>In the <literal>[neutron]</literal> section, configure access parameters, enable the
                                metadata proxy, and configure the secret:</para>
            <screen language="ini">[neutron]
# ...
url = http://controller:9696
auth_url = http://controller:35357
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = neutron
password = NEUTRON_PASS
service_metadata_proxy = true
metadata_proxy_shared_secret = METADATA_SECRET</screen>
            <para>Replace <literal>NEUTRON_PASS</literal> with the password you chose for the <literal>neutron</literal>
                                user in the Identity service.</para>
            <para>Replace <literal>METADATA_SECRET</literal> with the secret you chose for the metadata
                                proxy.</para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>
  </section>
  <section>
    <title>Finalize installation</title>
    <procedure>
      <step>
        <para>Populate the database:</para>
        <screen language="console"># su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf \
  --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron</screen>
        <note>
          <para>Database population occurs later for Networking because the script
                            requires complete server and plug-in configuration files.</para>
        </note>
      </step>
      <step>
        <para>Restart the Compute API service:</para>
        <screen language="console"># service nova-api restart</screen>
      </step>
      <step>
        <para>Restart the Networking services.</para>
        <para>For both networking options:</para>
        <screen language="console"># service neutron-server restart
# service neutron-linuxbridge-agent restart
# service neutron-dhcp-agent restart
# service neutron-metadata-agent restart</screen>
        <para>For networking option 2, also restart the layer-3 service:</para>
        <screen language="console"># service neutron-l3-agent restart</screen>
      </step>
    </procedure>
  </section>
</section>
