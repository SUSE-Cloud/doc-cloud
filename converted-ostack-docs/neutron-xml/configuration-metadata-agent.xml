<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.1">
  <title>metadata_agent.ini</title>
  <section>
    <title>DEFAULT</title>
  </section>
  <variablelist>
    <varlistentry xml:id="DEFAULT.debug">
      <term>
        <literal>DEFAULT.debug</literal>
      </term>
      <listitem>
        <para>If set to true, the logging level will be set to DEBUG instead of the default INFO level.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.log_config_append">
      <term>
        <literal>DEFAULT.log_config_append</literal>
      </term>
      <listitem>
        <para>The name of a logging configuration file. This file is appended to any existing logging configuration files. For details about logging configuration files, see the Python logging module documentation. Note that when logging configuration files are used then all logging configuration is set in the configuration file and other logging configuration options are ignored (for example, logging_context_format_string).</para>
        <table>
          <title>Deprecated Variations</title>
          <tgroup cols="2">
            <colspec colname="c1" colwidth="50.0*"/>
            <colspec colname="c2" colwidth="50.0*"/>
            <thead>
              <row>
                <entry>
                  <para>Group</para>
                </entry>
                <entry>
                  <para>Name</para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>DEFAULT</para>
                </entry>
                <entry>
                  <para>log-config</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>DEFAULT</para>
                </entry>
                <entry>
                  <para>log_config</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.log_date_format">
      <term>
        <literal>DEFAULT.log_date_format</literal>
      </term>
      <listitem>
        <para>Defines the format string for %(asctime)s in log records. Default: the value above . This option is ignored if log_config_append is set.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.log_file">
      <term>
        <literal>DEFAULT.log_file</literal>
      </term>
      <listitem>
        <para>(Optional) Name of log file to send logging output to. If no default is set, logging will go to stderr as defined by use_stderr. This option is ignored if log_config_append is set.</para>
        <table>
          <title>Deprecated Variations</title>
          <tgroup cols="2">
            <colspec colname="c1" colwidth="50.0*"/>
            <colspec colname="c2" colwidth="50.0*"/>
            <thead>
              <row>
                <entry>
                  <para>Group</para>
                </entry>
                <entry>
                  <para>Name</para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>DEFAULT</para>
                </entry>
                <entry>
                  <para>logfile</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.log_dir">
      <term>
        <literal>DEFAULT.log_dir</literal>
      </term>
      <listitem>
        <para>(Optional) The base directory used for relative log_file  paths. This option is ignored if log_config_append is set.</para>
        <table>
          <title>Deprecated Variations</title>
          <tgroup cols="2">
            <colspec colname="c1" colwidth="50.0*"/>
            <colspec colname="c2" colwidth="50.0*"/>
            <thead>
              <row>
                <entry>
                  <para>Group</para>
                </entry>
                <entry>
                  <para>Name</para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>DEFAULT</para>
                </entry>
                <entry>
                  <para>logdir</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.watch_log_file">
      <term>
        <literal>DEFAULT.watch_log_file</literal>
      </term>
      <listitem>
        <para>Uses logging handler designed to watch file system. When log file is moved or removed this handler will open a new log file with specified path instantaneously. It makes sense only if log_file option is specified and Linux platform is used. This option is ignored if log_config_append is set.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.use_syslog">
      <term>
        <literal>DEFAULT.use_syslog</literal>
      </term>
      <listitem>
        <para>Use syslog for logging. Existing syslog format is DEPRECATED and will be changed later to honor RFC5424. This option is ignored if log_config_append is set.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.use_journal">
      <term>
        <literal>DEFAULT.use_journal</literal>
      </term>
      <listitem>
        <para>Enable journald for logging. If running in a systemd environment you may wish to enable journal support. Doing so will use the journal native protocol which includes structured metadata in addition to log messages.This option is ignored if log_config_append is set.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.syslog_log_facility">
      <term>
        <literal>DEFAULT.syslog_log_facility</literal>
      </term>
      <listitem>
        <para>Syslog facility to receive log lines. This option is ignored if log_config_append is set.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.use_stderr">
      <term>
        <literal>DEFAULT.use_stderr</literal>
      </term>
      <listitem>
        <para>Log output to standard error. This option is ignored if log_config_append is set.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.logging_context_format_string">
      <term>
        <literal>DEFAULT.logging_context_format_string</literal>
      </term>
      <listitem>
        <para>Format string to use for log messages with context.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.logging_default_format_string">
      <term>
        <literal>DEFAULT.logging_default_format_string</literal>
      </term>
      <listitem>
        <para>Format string to use for log messages when context is undefined.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.logging_debug_format_suffix">
      <term>
        <literal>DEFAULT.logging_debug_format_suffix</literal>
      </term>
      <listitem>
        <para>Additional data to append to log message when logging level for the message is DEBUG.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.logging_exception_prefix">
      <term>
        <literal>DEFAULT.logging_exception_prefix</literal>
      </term>
      <listitem>
        <para>Prefix each line of exception output with this format.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.logging_user_identity_format">
      <term>
        <literal>DEFAULT.logging_user_identity_format</literal>
      </term>
      <listitem>
        <para>Defines the format string for %(user_identity)s that is used in logging_context_format_string.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.default_log_levels">
      <term>
        <literal>DEFAULT.default_log_levels</literal>
      </term>
      <listitem>
        <para>List of package logging levels in logger=LEVEL pairs. This option is ignored if log_config_append is set.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.publish_errors">
      <term>
        <literal>DEFAULT.publish_errors</literal>
      </term>
      <listitem>
        <para>Enables or disables publication of error events.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.instance_format">
      <term>
        <literal>DEFAULT.instance_format</literal>
      </term>
      <listitem>
        <para>The format for an instance that is passed with the log message.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.instance_uuid_format">
      <term>
        <literal>DEFAULT.instance_uuid_format</literal>
      </term>
      <listitem>
        <para>The format for an instance UUID that is passed with the log message.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.rate_limit_interval">
      <term>
        <literal>DEFAULT.rate_limit_interval</literal>
      </term>
      <listitem>
        <para>Interval, number of seconds, of log rate limiting.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.rate_limit_burst">
      <term>
        <literal>DEFAULT.rate_limit_burst</literal>
      </term>
      <listitem>
        <para>Maximum number of logged messages per rate_limit_interval.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.rate_limit_except_level">
      <term>
        <literal>DEFAULT.rate_limit_except_level</literal>
      </term>
      <listitem>
        <para>Log level name used by rate limiting: CRITICAL, ERROR, INFO, WARNING, DEBUG or empty string. Logs with level greater or equal to rate_limit_except_level are not filtered. An empty string means that all levels are filtered.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.fatal_deprecations">
      <term>
        <literal>DEFAULT.fatal_deprecations</literal>
      </term>
      <listitem>
        <para>Enables or disables fatal status of deprecations.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.metadata_proxy_socket">
      <term>
        <literal>DEFAULT.metadata_proxy_socket</literal>
      </term>
      <listitem>
        <para>Location for Metadata Proxy UNIX domain socket.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.metadata_proxy_user">
      <term>
        <literal>DEFAULT.metadata_proxy_user</literal>
      </term>
      <listitem>
        <para>User (uid or name) running metadata proxy after its initialization (if empty: agent effective user).</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.metadata_proxy_group">
      <term>
        <literal>DEFAULT.metadata_proxy_group</literal>
      </term>
      <listitem>
        <para>Group (gid or name) running metadata proxy after its initialization (if empty: agent effective group).</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.auth_ca_cert">
      <term>
        <literal>DEFAULT.auth_ca_cert</literal>
      </term>
      <listitem>
        <para>Certificate Authority public key (CA cert) file for ssl</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.nova_metadata_host">
      <term>
        <literal>DEFAULT.nova_metadata_host</literal>
      </term>
      <listitem>
        <para>IP address or DNS name of Nova metadata server.</para>
        <table>
          <title>Deprecated Variations</title>
          <tgroup cols="2">
            <colspec colname="c1" colwidth="50.0*"/>
            <colspec colname="c2" colwidth="50.0*"/>
            <thead>
              <row>
                <entry>
                  <para>Group</para>
                </entry>
                <entry>
                  <para>Name</para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>DEFAULT</para>
                </entry>
                <entry>
                  <para>nova_metadata_ip</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.nova_metadata_port">
      <term>
        <literal>DEFAULT.nova_metadata_port</literal>
      </term>
      <listitem>
        <para>TCP Port used by Nova metadata server.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.metadata_proxy_shared_secret">
      <term>
        <literal>DEFAULT.metadata_proxy_shared_secret</literal>
      </term>
      <listitem>
        <para>When proxying metadata requests, Neutron signs the Instance-ID header with a shared secret to prevent spoofing. You may select any string for a secret, but it must match here and in the configuration used by the Nova Metadata Server. NOTE: Nova uses the same config key, but in [neutron] section.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.nova_metadata_protocol">
      <term>
        <literal>DEFAULT.nova_metadata_protocol</literal>
      </term>
      <listitem>
        <para>Protocol to access nova metadata, http or https</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.nova_metadata_insecure">
      <term>
        <literal>DEFAULT.nova_metadata_insecure</literal>
      </term>
      <listitem>
        <para>Allow to perform insecure SSL (https) requests to nova metadata</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.nova_client_cert">
      <term>
        <literal>DEFAULT.nova_client_cert</literal>
      </term>
      <listitem>
        <para>Client certificate for nova metadata api server.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.nova_client_priv_key">
      <term>
        <literal>DEFAULT.nova_client_priv_key</literal>
      </term>
      <listitem>
        <para>Private key of client certificate.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.metadata_proxy_socket_mode">
      <term>
        <literal>DEFAULT.metadata_proxy_socket_mode</literal>
      </term>
      <listitem>
        <para>Metadata Proxy UNIX domain socket mode, 4 values allowed: ‘deduce’: deduce mode from metadata_proxy_user/group values, ‘user’: set metadata proxy socket mode to 0o644, to use when metadata_proxy_user is agent effective user or root, ‘group’: set metadata proxy socket mode to 0o664, to use when metadata_proxy_group is agent effective group or root, ‘all’: set metadata proxy socket mode to 0o666, to use otherwise.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.metadata_workers">
      <term>
        <literal>DEFAULT.metadata_workers</literal>
      </term>
      <listitem>
        <para>Number of separate worker processes for metadata server (defaults to half of the number of CPUs)</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.metadata_backlog">
      <term>
        <literal>DEFAULT.metadata_backlog</literal>
      </term>
      <listitem>
        <para>Number of backlog requests to configure the metadata server socket with</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="DEFAULT.cache_url">
      <term>
        <literal>DEFAULT.cache_url</literal>
      </term>
      <listitem>
        <para>URL to connect to the cache back end. This option is deprecated in the Newton release and will be removed. Please add a [cache] group for oslo.cache in your neutron.conf and add “enable” and “backend” options in this section.</para>
        <warning>
          <para>This option is deprecated for removal.
                        Its value may be silently ignored 
                        in the future.</para>
        </warning>
      </listitem>
    </varlistentry>
  </variablelist>
  <section>
    <title>agent</title>
  </section>
  <variablelist>
    <varlistentry xml:id="agent.report_interval">
      <term>
        <literal>agent.report_interval</literal>
      </term>
      <listitem>
        <para>Seconds between nodes reporting state to server; should be less than agent_down_time, best if it is half or less than agent_down_time.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="agent.log_agent_heartbeats">
      <term>
        <literal>agent.log_agent_heartbeats</literal>
      </term>
      <listitem>
        <para>Log agent heartbeats</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <section>
    <title>cache</title>
  </section>
  <variablelist>
    <varlistentry xml:id="cache.config_prefix">
      <term>
        <literal>cache.config_prefix</literal>
      </term>
      <listitem>
        <para>Prefix for building the configuration dictionary for the cache region. This should not need to be changed unless there is another dogpile.cache region with the same configuration name.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="cache.expiration_time">
      <term>
        <literal>cache.expiration_time</literal>
      </term>
      <listitem>
        <para>Default TTL, in seconds, for any cached item in the dogpile.cache region. This applies to any cached method that doesn’t have an explicit cache expiration time defined for it.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="cache.backend">
      <term>
        <literal>cache.backend</literal>
      </term>
      <listitem>
        <para>Cache backend module. For eventlet-based or environments with hundreds of threaded servers, Memcache with pooling (oslo_cache.memcache_pool) is recommended. For environments with less than 100 threaded servers, Memcached (dogpile.cache.memcached) or Redis (dogpile.cache.redis) is recommended. Test environments with a single instance of the server can use the dogpile.cache.memory backend.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="cache.backend_argument">
      <term>
        <literal>cache.backend_argument</literal>
      </term>
      <listitem>
        <para>Arguments supplied to the backend module. Specify this option once per argument to be passed to the dogpile.cache backend. Example format: “&lt;argname&gt;:&lt;value&gt;”.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="cache.proxies">
      <term>
        <literal>cache.proxies</literal>
      </term>
      <listitem>
        <para>Proxy classes to import that will affect the way the dogpile.cache backend functions. See the dogpile.cache documentation on changing-backend-behavior.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="cache.enabled">
      <term>
        <literal>cache.enabled</literal>
      </term>
      <listitem>
        <para>Global toggle for caching.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="cache.debug_cache_backend">
      <term>
        <literal>cache.debug_cache_backend</literal>
      </term>
      <listitem>
        <para>Extra debugging from the cache backend (cache keys, get/set/delete/etc calls). This is only really useful if you need to see the specific cache-backend get/set/delete calls with the keys/values.  Typically this should be left set to false.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="cache.memcache_servers">
      <term>
        <literal>cache.memcache_servers</literal>
      </term>
      <listitem>
        <para>Memcache servers in the format of “host:port”. (dogpile.cache.memcache and oslo_cache.memcache_pool backends only).</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="cache.memcache_dead_retry">
      <term>
        <literal>cache.memcache_dead_retry</literal>
      </term>
      <listitem>
        <para>Number of seconds memcached server is considered dead before it is tried again. (dogpile.cache.memcache and oslo_cache.memcache_pool backends only).</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="cache.memcache_socket_timeout">
      <term>
        <literal>cache.memcache_socket_timeout</literal>
      </term>
      <listitem>
        <para>Timeout in seconds for every call to a server. (dogpile.cache.memcache and oslo_cache.memcache_pool backends only).</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="cache.memcache_pool_maxsize">
      <term>
        <literal>cache.memcache_pool_maxsize</literal>
      </term>
      <listitem>
        <para>Max total number of open connections to every memcached server. (oslo_cache.memcache_pool backend only).</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="cache.memcache_pool_unused_timeout">
      <term>
        <literal>cache.memcache_pool_unused_timeout</literal>
      </term>
      <listitem>
        <para>Number of seconds a connection to memcached is held unused in the pool before it is closed. (oslo_cache.memcache_pool backend only).</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry xml:id="cache.memcache_pool_connection_get_timeout">
      <term>
        <literal>cache.memcache_pool_connection_get_timeout</literal>
      </term>
      <listitem>
        <para>Number of seconds that an operation will wait to get a memcache client connection.</para>
      </listitem>
    </varlistentry>
  </variablelist>
</section>
