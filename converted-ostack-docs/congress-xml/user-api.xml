<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.1" xml:id="api">
  <title>API</title>
  <para>The design document for the API can be found below.  This document contains
            the API as of the current release:</para>
  <screen><?dbsuse-fo font-size="8pt"?>https://docs.google.com/document/d/14hM7-GSm3CcyohPT2Q7GalyrQRohVcx77hxEx4AO4Bk/edit#</screen>
  <para>There are two top-level concepts in today’s API: Policies and Data-sources.</para>
  <itemizedlist>
    <listitem>
      <para>Policies have <emphasis>rules</emphasis> that describe the permitted states of the cloud,
                    along with <emphasis>tables</emphasis> representing abstractions of the cloud state.</para>
    </listitem>
    <listitem>
      <para>Data-sources have <emphasis>tables</emphasis> representing the current state of the cloud.</para>
    </listitem>
    <listitem>
      <para>The <emphasis>tables</emphasis> of both policies and data-sources have rows that describe
                    their contents.</para>
    </listitem>
  </itemizedlist>
  <section>
    <title>1. Policy (/v1/)</title>
    <para>You can create and delete policies.  Two policies are provided by
                the system, and you are not permitted to delete them: <emphasis>classification</emphasis>
                and <emphasis>action</emphasis>.  A policy has the following fields:</para>
    <itemizedlist>
      <listitem>
        <para>name: a unique name that is human-readable</para>
      </listitem>
      <listitem>
        <para>abbreviation: a shorter name that appears in traces</para>
      </listitem>
      <listitem>
        <para>description: an explanation of this policy’s purpose</para>
      </listitem>
      <listitem>
        <variablelist>
          <varlistentry>
            <term>kind: kind of policy. Supported kinds are -</term>
            <listitem>
              <procedure>
                <step>
                  <para>nonrecursive,</para>
                </step>
                <step>
                  <para>action,</para>
                </step>
                <step>
                  <para>database,</para>
                </step>
                <step>
                  <para>materialized</para>
                </step>
              </procedure>
              <para>The default is <emphasis>nonrecursive</emphasis> and unless you are writing action
                                    descriptions for use with <literal>simulate</literal> you should always use the
                                    default.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </listitem>
    </itemizedlist>
    <informaltable>
      <tgroup cols="3">
        <colspec colname="c1" colwidth="10.4*"/>
        <colspec colname="c2" colwidth="41.8*"/>
        <colspec colname="c3" colwidth="47.8*"/>
        <thead>
          <row>
            <entry>
              <para>Op</para>
            </entry>
            <entry>
              <para>URL</para>
            </entry>
            <entry>
              <para>Result</para>
            </entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <para>GET</para>
            </entry>
            <entry>
              <para>…/policies</para>
            </entry>
            <entry>
              <para>List policies</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>GET</para>
            </entry>
            <entry>
              <para>…/policies/&lt;policy-id&gt;</para>
            </entry>
            <entry>
              <para>Read policy properties</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>POST</para>
            </entry>
            <entry>
              <para>…/policies/&lt;policy-id&gt;</para>
            </entry>
            <entry>
              <para>Create new policy</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>DELETE</para>
            </entry>
            <entry>
              <para>…/policies/&lt;policy-id&gt;</para>
            </entry>
            <entry>
              <para>Delete policy</para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
    <para>You can also utilize the simulation API call, which answers hypothetical
                questions: if we were to change the state of the cloud in this way,
                what would the answer to this query be?  See <xref linkend="enforcement"/> for
                more details and examples:</para>
    <screen>POST .../policies/&lt;policy-id&gt;
  ?action=simulate
  [&amp;delta=true]                    # return just change in &lt;query&gt;
  [&amp;trace=true]                    # also return explanation of result

Request Body
{
  "query" : "&lt;query&gt;",                 # string query like: 'error(x)'
  "sequence": "&lt;sequence&gt;",            # changes to state like: 'p+(1) p-(2)'
  "action_policy" : "&lt;action_policy&gt;"  # name of a policy: 'action'
}</screen>
  </section>
  <section>
    <title>2. Policy Rules (/v1/policies/&lt;policy-id&gt;/…)</title>
    <para>Each policy is a collection of rules.  Congress supports the usual CRUD
                operations for changing that collection.  A rule has the following fields:</para>
    <itemizedlist>
      <listitem>
        <para>ID: a unique identifier</para>
      </listitem>
      <listitem>
        <para>name: a human-friendly identifier</para>
      </listitem>
      <listitem>
        <para>rule: a string representing the actual rule as described in <xref linkend="policy"/></para>
      </listitem>
      <listitem>
        <para>comment: description or comment related to the rule</para>
      </listitem>
    </itemizedlist>
    <informaltable>
      <tgroup cols="3">
        <colspec colname="c1" colwidth="13.5*"/>
        <colspec colname="c2" colwidth="44.2*"/>
        <colspec colname="c3" colwidth="42.3*"/>
        <thead>
          <row>
            <entry>
              <para>Op</para>
            </entry>
            <entry>
              <para>URL</para>
            </entry>
            <entry>
              <para>Result</para>
            </entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <para>GET</para>
            </entry>
            <entry>
              <para>…/rules</para>
            </entry>
            <entry>
              <para>List policy rules</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>POST</para>
            </entry>
            <entry>
              <para>…/rules</para>
            </entry>
            <entry>
              <para>Create policy rule</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>GET</para>
            </entry>
            <entry>
              <para>…/rules/&lt;rule-id&gt;</para>
            </entry>
            <entry>
              <para>Read policy rule</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>DELETE</para>
            </entry>
            <entry>
              <para>…/rules/&lt;rule-id&gt;</para>
            </entry>
            <entry>
              <para>Delete policy rule</para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section>
  <section>
    <title>3. Policy Tables (/v1/policies/&lt;policy-id&gt;/…)</title>
    <para>All the tables mentioned in the rules of a policy can be queried
                via the API.  They have only an ID field.</para>
    <informaltable>
      <tgroup cols="3">
        <colspec colname="c1" colwidth="10.0*"/>
        <colspec colname="c2" colwidth="37.1*"/>
        <colspec colname="c3" colwidth="52.9*"/>
        <thead>
          <row>
            <entry>
              <para>Op</para>
            </entry>
            <entry>
              <para>URL</para>
            </entry>
            <entry>
              <para>Result</para>
            </entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <para>GET</para>
            </entry>
            <entry>
              <para>…/tables</para>
            </entry>
            <entry>
              <para>List tables</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>GET</para>
            </entry>
            <entry>
              <para>…/tables/&lt;table-id&gt;</para>
            </entry>
            <entry>
              <para>Read table properties</para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section>
  <section>
    <title>4. Policy Table Rows (/v1/policies/&lt;policy-id&gt;/tables/&lt;table-id&gt;/…)</title>
    <para>Rules are used to instruct Congress how to create new tables from existing
                tables.  Congress allows you to query the actual contents of tables
                at any point in time.  Congress will also provide a trace of how
                it computed a table, to help policy authors understand why
                certain rows belong to the table and others do not.</para>
    <informaltable>
      <tgroup cols="3">
        <colspec colname="c1" colwidth="8.5*"/>
        <colspec colname="c2" colwidth="26.8*"/>
        <colspec colname="c3" colwidth="64.6*"/>
        <thead>
          <row>
            <entry>
              <para>Op</para>
            </entry>
            <entry>
              <para>URL</para>
            </entry>
            <entry>
              <para>Result</para>
            </entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <para>GET</para>
            </entry>
            <entry>
              <para>…/rows</para>
            </entry>
            <entry>
              <para>List rows</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>GET</para>
            </entry>
            <entry>
              <para>…/rows?trace=true</para>
            </entry>
            <entry>
              <para>List rows with explanation (use ‘printf’ to display)</para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section>
  <section>
    <title>5. Drivers (/v1/system/)</title>
    <para>A driver is a piece of code that once instantiated and configured interacts
                with a specific cloud service like Nova or Neutron.  A driver has the following
                fields.</para>
    <itemizedlist>
      <listitem>
        <para>ID: a human-friendly unique identifier</para>
      </listitem>
      <listitem>
        <para>description: an explanation of which type of cloud service this driver
                        interacts with</para>
      </listitem>
    </itemizedlist>
    <informaltable>
      <tgroup cols="3">
        <colspec colname="c1" colwidth="9.1*"/>
        <colspec colname="c2" colwidth="31.2*"/>
        <colspec colname="c3" colwidth="59.7*"/>
        <thead>
          <row>
            <entry>
              <para>Op</para>
            </entry>
            <entry>
              <para>URL</para>
            </entry>
            <entry>
              <para>Result</para>
            </entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <para>GET</para>
            </entry>
            <entry>
              <para>…/drivers</para>
            </entry>
            <entry>
              <para>List drivers</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>GET</para>
            </entry>
            <entry>
              <para>…/drivers/&lt;driver-id&gt;</para>
            </entry>
            <entry>
              <para>Read driver properties</para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
    <para>Drivers were deprecated in Liberty, but the design changed slightly so that
                we could retain them.</para>
  </section>
  <section>
    <title>6. Data sources (/v1/)</title>
    <para>A data source is an instantiated and configured driver that interacts with a
                particular instance of a cloud service (like Nova or Neutron).  You can
                construct multiple datasources using the same driver.  For example, if you have
                two instances of Neutron running, one in production and one in test and you
                want to write policy over both of them, you would create two datasources using
                the Neutron driver and give them different names and configuration options. For
                example, you might call one datasource ‘neutron_prod’ and the other
                ‘neutron_test’ and configure them with different IP addresses.</para>
    <para>A datasource has the following fields.</para>
    <itemizedlist>
      <listitem>
        <para>ID: a unique identifier</para>
      </listitem>
      <listitem>
        <para>name: a human-friendly unique that is unique across datasources and policies</para>
      </listitem>
      <listitem>
        <para>driver: the name of the driver code that this datasource is running</para>
      </listitem>
      <listitem>
        <para>config: a dictionary capturing the configuration of this datasource</para>
      </listitem>
      <listitem>
        <para>description: an explanation of the purpose of this datasource</para>
      </listitem>
      <listitem>
        <para>enabled: whether or not this datasource is functioning (which is always True)</para>
      </listitem>
    </itemizedlist>
    <informaltable>
      <tgroup cols="3">
        <colspec colname="c1" colwidth="9.1*"/>
        <colspec colname="c2" colwidth="41.6*"/>
        <colspec colname="c3" colwidth="49.4*"/>
        <thead>
          <row>
            <entry>
              <para>Op</para>
            </entry>
            <entry>
              <para>URL</para>
            </entry>
            <entry>
              <para>Result</para>
            </entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <para>GET</para>
            </entry>
            <entry>
              <para>…/data-sources</para>
            </entry>
            <entry>
              <para>List data sources</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>POST</para>
            </entry>
            <entry>
              <para>…/data-sources</para>
            </entry>
            <entry>
              <para>Create data source</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>DELETE</para>
            </entry>
            <entry>
              <para>…/data-sources/&lt;ds-id&gt;</para>
            </entry>
            <entry>
              <para>Delete data source</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>GET</para>
            </entry>
            <entry>
              <para>…/data-sources/&lt;ds-id&gt;/schema</para>
            </entry>
            <entry>
              <para>Show schema (tables and table-columns)</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>GET</para>
            </entry>
            <entry>
              <para>…/data-sources/&lt;ds-id&gt;/status</para>
            </entry>
            <entry>
              <para>Show data source status</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>GET</para>
            </entry>
            <entry>
              <para>…/data-sources/&lt;ds-id&gt;/actions</para>
            </entry>
            <entry>
              <para>List supported data source actions</para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section>
  <section>
    <title>7. Data source Tables (/v1/data-sources/&lt;ds-id&gt;/…)</title>
    <para>Each data source maintains a collection of tables (very similar to a Policy).
                The list of available tables for each data source is available via the API.
                A table just has an ID field.</para>
    <informaltable>
      <tgroup cols="3">
        <colspec colname="c1" colwidth="9.5*"/>
        <colspec colname="c2" colwidth="35.1*"/>
        <colspec colname="c3" colwidth="55.4*"/>
        <thead>
          <row>
            <entry>
              <para>Op</para>
            </entry>
            <entry>
              <para>URL</para>
            </entry>
            <entry>
              <para>Result</para>
            </entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <para>GET</para>
            </entry>
            <entry>
              <para>…/tables</para>
            </entry>
            <entry>
              <para>List data sources</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>GET</para>
            </entry>
            <entry>
              <para>…/tables/&lt;table-id&gt;</para>
            </entry>
            <entry>
              <para>Read data source properties</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>GET</para>
            </entry>
            <entry>
              <para>…/tables/&lt;table-id&gt;/spec</para>
            </entry>
            <entry>
              <para>Show a table schema</para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section>
  <section>
    <title>8. Data source Table Rows (/v1/data-sources/&lt;ds-id&gt;/tables/&lt;table-id&gt;/…)</title>
    <para>The contents of each data source table (the rows of each table) can be queried
                via the API as well.  A row has just a Data field, which is a list of values.</para>
    <informaltable>
      <tgroup cols="3">
        <colspec colname="c1" colwidth="10.6*"/>
        <colspec colname="c2" colwidth="39.4*"/>
        <colspec colname="c3" colwidth="50.0*"/>
        <thead>
          <row>
            <entry>
              <para>Op</para>
            </entry>
            <entry>
              <para>URL</para>
            </entry>
            <entry>
              <para>Result</para>
            </entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <para>GET</para>
            </entry>
            <entry>
              <para>…/rows</para>
            </entry>
            <entry>
              <para>List rows</para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section>
  <section>
    <title>9. Versions (/)</title>
    <para>You can see the supported API versions.</para>
    <informaltable>
      <tgroup cols="3">
        <colspec colname="c1" colwidth="10.6*"/>
        <colspec colname="c2" colwidth="39.4*"/>
        <colspec colname="c3" colwidth="50.0*"/>
        <thead>
          <row>
            <entry>
              <para>Op</para>
            </entry>
            <entry>
              <para>URL</para>
            </entry>
            <entry>
              <para>Result</para>
            </entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <para>GET</para>
            </entry>
            <entry>
              <para>…/</para>
            </entry>
            <entry>
              <para>List supported versions</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>GET</para>
            </entry>
            <entry>
              <para>…/&lt;version-id&gt;</para>
            </entry>
            <entry>
              <para>Read version</para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section>
</section>
