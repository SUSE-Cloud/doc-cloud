<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.1">
  <title>Congress Installation Documentation</title>
  <info/>
  <para>There are 2 ways to install Congress.</para>
  <itemizedlist>
    <listitem>
      <para>As part of DevStack.  Get Congress running alongside other OpenStack services like Nova
                    and Neutron, all on a single machine.  This is a great way to try out Congress for the
                    first time.</para>
    </listitem>
    <listitem>
      <para>Separate install.  Get Congress running alongside an existing OpenStack
                    deployment</para>
    </listitem>
  </itemizedlist>
  <section>
    <title>Devstack-install</title>
    <para>For integrating Congress with DevStack:</para>
    <procedure>
      <step>
        <para>Download DevStack</para>
      </step>
    </procedure>
    <screen language="console">$ git clone https://git.openstack.org/openstack-dev/devstack.git
$ cd devstack</screen>
    <procedure>
      <step>
        <para>Configure DevStack to use Congress and any other service you want.  To do that, modify
                        the <literal>local.conf</literal> file (inside the DevStack directory).  Here is what
                        our file looks like:</para>
      </step>
    </procedure>
    <screen language="console">[[local|localrc]]

enable_plugin congress https://git.openstack.org/openstack/congress
enable_plugin heat https://git.openstack.org/openstack/heat
enable_plugin aodh https://git.openstack.org/openstack/aodh
enable_plugin ceilometer https://git.openstack.org/openstack/ceilometer
enable_service s-proxy s-object s-container s-account</screen>
    <procedure>
      <step>
        <para>Run <literal>stack.sh</literal>.  The default configuration expects the passwords to be ‘password’
                        without the quotes</para>
      </step>
    </procedure>
    <screen language="console">$ ./stack.sh</screen>
  </section>
  <section>
    <title>Separate install</title>
    <para>Install the following software, if you haven’t already.</para>
    <itemizedlist>
      <listitem>
        <para>python 2.7: <link xlink:href="https://www.python.org/download/releases/2.7/"/></para>
      </listitem>
      <listitem>
        <para>pip: <link xlink:href="https://pip.pypa.io/en/latest/installing.html"/></para>
      </listitem>
      <listitem>
        <para>java: <link xlink:href="https://java.com"/>  (any reasonably current version should work)
                        On Ubuntu:   console apt-get install default-jre
                        On Federa:   console yum install jre</para>
      </listitem>
      <listitem>
        <para>Additionally</para>
      </listitem>
    </itemizedlist>
    <screen language="console"><?dbsuse-fo font-size="8pt"?>$ sudo apt-get install git gcc python-dev python-antlr3 libxml2 libxslt1-dev libzip-dev build-essential libssl-dev libffi-dev
$ sudo apt install python-setuptools
$ sudo pip install --upgrade pip virtualenv pbr tox</screen>
    <para>Clone Congress</para>
    <screen language="console">$ git clone https://github.com/openstack/congress.git
$ cd congress</screen>
    <para>Install requirements</para>
    <screen language="console">$ sudo pip install .</screen>
    <para>Install Source code</para>
    <screen language="console">$ sudo python setup.py install</screen>
    <para>Configure Congress  (Assume you put config files in /etc/congress)</para>
    <screen language="console">$ sudo mkdir -p /etc/congress
$ sudo mkdir -p /etc/congress/snapshot
$ sudo cp etc/api-paste.ini /etc/congress
$ sudo cp etc/policy.json /etc/congress</screen>
    <variablelist>
      <varlistentry>
        <term>Set-up Policy Library [optional]</term>
        <listitem>
          <para>This step copies the bundled collection Congress policies into the Congress
                            policy library for easy activation by an administrator. The policies in the
                            library do not become active until explicitly activated by an administrator.
                            The step may be skipped if you do not want to load the bundled policies into
                            the policy library.</para>
        </listitem>
      </varlistentry>
    </variablelist>
    <screen language="console">$ sudo cp -r library /etc/congress/.</screen>
    <para>Generate a configuration file as outlined in the Configuration Options section
                of the <xref linkend="deployment"/> document. Note: you may have to run the command with sudo.</para>
    <para>There are several sections in the congress/etc/congress.conf.sample file you may want to change:</para>
    <itemizedlist>
      <listitem>
        <variablelist>
          <varlistentry>
            <term>[DEFAULT] Section</term>
            <listitem>
              <itemizedlist>
                <listitem>
                  <para>drivers</para>
                </listitem>
                <listitem>
                  <para>auth_strategy</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>
        </variablelist>
      </listitem>
      <listitem>
        <variablelist>
          <varlistentry>
            <term>“From oslo.log” Section</term>
            <listitem>
              <itemizedlist>
                <listitem>
                  <para>log_file</para>
                </listitem>
                <listitem>
                  <para>log_dir (remember to create the directory)</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>
        </variablelist>
      </listitem>
      <listitem>
        <variablelist>
          <varlistentry>
            <term>[database] Section</term>
            <listitem>
              <itemizedlist>
                <listitem>
                  <para>connection</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>
        </variablelist>
      </listitem>
    </itemizedlist>
    <para>Add drivers:</para>
    <screen language="text"><?dbsuse-fo font-size="8pt"?>drivers = congress.datasources.neutronv2_driver.NeutronV2Driver,congress.datasources.glancev2_driver.GlanceV2Driver,congress.datasources.nova_driver.NovaDriver,congress.datasources.keystone_driver.KeystoneDriver,congress.datasources.ceilometer_driver.CeilometerDriver,congress.datasources.cinder_driver.CinderDriver,congress.datasources.swift_driver.SwiftDriver,congress.datasources.plexxi_driver.PlexxiDriver,congress.datasources.vCenter_driver.VCenterDriver,congress.datasources.murano_driver.MuranoDriver,congress.datasources.ironic_driver.IronicDriver</screen>
    <para>The default auth_strategy is keystone. To set Congress to use no authorization strategy:</para>
    <screen language="text">auth_strategy = noauth</screen>
    <para>If you use noauth, you might want to delete or comment out the [keystone_authtoken] section.</para>
    <para>Set the database connection string in the [database] section (adapt MySQL root password):</para>
    <screen language="text">connection = mysql+pymysql://root:password@127.0.0.1/congress?charset=utf8</screen>
    <para>To use RabbitMQ with Congress, set the transport_url in the “From oslo.messaging” section according to your setup:</para>
    <screen language="text">transport_url = rabbit://$RABBIT_USERID:$RABBIT_PASSWORD@$RABBIT_HOST:5672</screen>
    <para>A bare-bones congress.conf is as follows:</para>
    <screen language="text"><?dbsuse-fo font-size="8pt"?>[DEFAULT]
auth_strategy = noauth
drivers = congress.datasources.neutronv2_driver.NeutronV2Driver,congress.datasources.glancev2_driver.GlanceV2Driver,congress.datasources.nova_driver.NovaDriver,congress.datasources.keystone_driver.KeystoneDriver,congress.datasources.ceilometer_driver.CeilometerDriver,congress.datasources.cinder_driver.CinderDriver,congress.datasources.swift_driver.SwiftDriver,congress.datasources.plexxi_driver.PlexxiDriver,congress.datasources.vCenter_driver.VCenterDriver,congress.datasources.murano_driver.MuranoDriver,congress.datasources.ironic_driver.IronicDriver
log_file=congress.log
log_dir=/var/log/congress
[database]
connection = mysql+pymysql://root:password@127.0.0.1/congress?charset=utf8</screen>
    <para>When you are finished editing congress.conf.sample, copy it to the /etc/congress directory.</para>
    <screen language="console">sudo cp etc/congress.conf.sample /etc/congress/congress.conf</screen>
    <para>Create database</para>
    <screen language="console"><?dbsuse-fo font-size="8pt"?>$ mysql -u root -p
$ mysql&gt; CREATE DATABASE congress;
$ mysql&gt; GRANT ALL PRIVILEGES ON congress.* TO 'congress'@'localhost' IDENTIFIED BY 'CONGRESS_DBPASS';
$ mysql&gt; GRANT ALL PRIVILEGES ON congress.* TO 'congress'@'%' IDENTIFIED BY 'CONGRESS_DBPASS';</screen>
    <para>Push down schema</para>
    <screen language="console">$ sudo congress-db-manage --config-file /etc/congress/congress.conf upgrade head</screen>
    <variablelist>
      <varlistentry>
        <term>Set up Congress accounts</term>
        <listitem>
          <para>Use your OpenStack RC file to set and export required environment variables:
                            OS_USERNAME, OS_PASSWORD, OS_PROJECT_NAME, OS_TENANT_NAME, OS_AUTH_URL.</para>
          <para>(Adapt parameters according to your environment)</para>
        </listitem>
      </varlistentry>
    </variablelist>
    <screen language="console"><?dbsuse-fo font-size="8pt"?>$ ADMIN_ROLE=$(openstack role list | awk "/ admin / { print \$2 }")
$ SERVICE_TENANT=$(openstack project list | awk "/ service / { print \$2 }")
$ CONGRESS_USER=$(openstack user create --password password --project service --email "congress@example.com" congress | awk "/ id / {print \$4 }")
$ openstack role add $ADMIN_ROLE --user $CONGRESS_USER --project  $SERVICE_TENANT
$ CONGRESS_SERVICE=$(openstack service create policy --name congress --description "Congress Service" | awk "/ id / { print \$4 }")</screen>
    <variablelist>
      <varlistentry>
        <term>Create the Congress Service Endpoint</term>
        <listitem>
          <para>Endpoint creation differs based upon the Identity version. Please see the <link xlink:href="https://docs.openstack.org/developer/python-openstackclient/command-objects/endpoint.html">endpoint</link> documentation for details.</para>
        </listitem>
      </varlistentry>
    </variablelist>
    <screen language="console"><?dbsuse-fo font-size="8pt"?>Identity v2:
$ openstack endpoint create $CONGRESS_SERVICE --region RegionOne --publicurl https://127.0.0.1:1789/  --adminurl https://127.0.0.1:1789/ --internalurl https://127.0.0.1:1789/</screen>
    <screen language="console"><?dbsuse-fo font-size="8pt"?>Identity v3:
$ openstack endpoint create --region $OS_REGION_NAME  $CONGRESS_SERVICE public https://$SERVICE_HOST:1789
$ openstack endpoint create --region $OS_REGION_NAME  $CONGRESS_SERVICE admin https://$SERVICE_HOST:1789
$ openstack endpoint create --region $OS_REGION_NAME  $CONGRESS_SERVICE internal https://$SERVICE_HOST:1789</screen>
    <variablelist>
      <varlistentry>
        <term>Start Congress</term>
        <listitem>
          <para>The default behavior is to start the Congress API, Policy Engine, and
                            Datasource in a single node. For HAHT deployment options, please see the
                            <xref linkend="ha-overview"/> document.</para>
        </listitem>
      </varlistentry>
    </variablelist>
    <screen language="console">$ sudo /usr/local/bin/congress-server --debug</screen>
    <variablelist>
      <varlistentry>
        <term>Install the Congress Client</term>
        <listitem>
          <para>The command line interface (CLI) for Congress resides in a project called python-congressclient.
                            Follow the installation instructions on the <link xlink:href="https://github.com/openstack/python-congressclient">GitHub page</link>.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Configure datasource drivers</term>
        <listitem>
          <para>For this you must have the Congress CLI installed. Run this command for every
                            service that Congress will poll for  data.
                            Please note that the service name $SERVICE should match the ID of the
                            datasource driver, e.g. “neutronv2” for Neutron and “glancev2” for Glance;
                            $OS_USERNAME, $OS_TENANT_NAME, $OS_PASSWORD and $SERVICE_HOST are used to
                            configure the related datasource driver so that congress knows how to
                            talk with the service.</para>
        </listitem>
      </varlistentry>
    </variablelist>
    <screen language="console">$ openstack congress datasource create $SERVICE $"SERVICE" \
  --config username=$OS_USERNAME \
  --config tenant_name=$OS_TENANT_NAME
  --config password=$OS_PASSWORD
  --config auth_url=https://$SERVICE_HOST:5000/v2.0</screen>
    <variablelist>
      <varlistentry>
        <term>Install the Congress Dashboard in Horizon</term>
        <listitem>
          <para>Clone congress-dashboard repo, located here <link xlink:href="https://github.com/openstack/congress-dashboard"/>
                            Follow the instructions in the README file located in <link xlink:href="https://github.com/openstack/congress-dashboard/blob/master/README.rst"/>
                            for further installation.</para>
          <para>Note: After you install the Congress Dashboard and restart apache, the OpenStack Dashboard may throw
                            a “You have offline compression enabled…” error, follow the instructions in the error message.
                            You may have to:</para>
        </listitem>
      </varlistentry>
    </variablelist>
    <screen language="console">$ cd /opt/stack/horizon
$ python manage.py compress
$ sudo service apache2 restart</screen>
    <variablelist>
      <varlistentry>
        <term>Read the HTML documentation</term>
        <listitem>
          <para>Install python-sphinx and the oslosphinx extension if missing and build the docs.
                            After building, open congress/doc/html/index.html in a browser.</para>
        </listitem>
      </varlistentry>
    </variablelist>
    <screen language="console">$ sudo pip install sphinx
$ sudo pip install oslosphinx
$ make docs</screen>
    <variablelist>
      <varlistentry>
        <term>Test Using the Congress CLI</term>
        <listitem>
          <para>If you are not familiar with using the OpenStack command-line clients, please read the <link xlink:href="https://docs.openstack.org/user-guide/cli.html">OpenStack documentation</link> before proceeding.</para>
          <para>Once you have set up or obtained credentials to use the OpenStack command-line clients, you may begin testing Congress. During installation a number of policies are created.</para>
          <para>To view policies: $ openstack congress policy list</para>
          <para>To view installed datasources: $ openstack congress datasource list</para>
          <para>To list available commands: $ openstack congress –help</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>
  <section>
    <title>Upgrade</title>
    <para>Here are the instructions for upgrading to a new release of the
                Congress server.</para>
    <procedure>
      <step>
        <para>Stop the Congress server.</para>
      </step>
      <step>
        <para>Update the Congress git repo</para>
      </step>
    </procedure>
    <screen language="console">$ cd /path/to/congress
$ git fetch origin</screen>
    <para>3. Checkout the release you are interested in, say Mitaka.  Note that this
                step will not succeed if you have any uncommitted changes in the repo.</para>
    <screen language="console">$ git checkout origin/stable/mitaka</screen>
    <para>If you have changes committed locally that are not merged into the public
                repository, you now need to cherry-pick those changes onto the new
                branch.</para>
    <procedure>
      <step>
        <para>Install dependencies</para>
      </step>
    </procedure>
    <screen language="console">$ sudo pip install</screen>
    <procedure>
      <step>
        <para>Install source code</para>
      </step>
    </procedure>
    <screen language="console">$ sudo python setup.py install</screen>
    <procedure>
      <step>
        <para>Migrate the database schema</para>
      </step>
    </procedure>
    <screen language="console">$ sudo congress-db-manage --config-file /etc/congress/congress.conf upgrade head</screen>
    <procedure>
      <step>
        <para>(optional) Check if the configuration options you are currently using are
                        still supported and whether there are any new configuration options you
                        would like to use.  To see the current list of configuration options,
                        use the following command, which will create a sample configuration file
                        in <literal>etc/congress.conf.sample</literal> for you to examine.</para>
      </step>
    </procedure>
    <screen language="console">$ tox -egenconfig</screen>
    <procedure>
      <step>
        <para>Restart Congress, e.g.</para>
      </step>
    </procedure>
    <screen language="console">$ sudo /usr/local/bin/congress-server --debug</screen>
  </section>
</chapter>
