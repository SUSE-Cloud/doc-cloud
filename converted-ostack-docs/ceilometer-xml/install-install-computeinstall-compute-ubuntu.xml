<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.1">
  <title>Enable Compute service meters for Ubuntu</title>
  <para>Telemetry uses a combination of notifications and an agent to collect
            Compute meters. Perform these steps on each compute node.</para>
  <section>
    <title>Install and configure components</title>
    <procedure>
      <step>
        <para>Install the packages:</para>
        <screen language="console"># apt-get install ceilometer-agent-compute
# apt-get install ceilometer-agent-ipmi (optional)</screen>
      </step>
    </procedure>
    <procedure>
      <step>
        <para>Edit the <literal>/etc/ceilometer/ceilometer.conf</literal> file and
                        complete the following actions:</para>
        <itemizedlist>
          <listitem>
            <para>In the <literal>[DEFAULT]</literal> section, configure <literal>RabbitMQ</literal>
                                message queue access:</para>
            <screen language="ini">[DEFAULT]
...
transport_url = rabbit://openstack:RABBIT_PASS@controller</screen>
            <para>Replace <literal>RABBIT_PASS</literal> with the password you chose for the
                                <literal>openstack</literal> account in <literal>RabbitMQ</literal>.</para>
          </listitem>
          <listitem>
            <para>In the <literal>[service_credentials]</literal> section, configure service
                                credentials:</para>
            <screen language="ini">[service_credentials]
...
auth_url = http://controller:5000
project_domain_id = default
user_domain_id = default
auth_type = password
username = ceilometer
project_name = service
password = CEILOMETER_PASS
interface = internalURL
region_name = RegionOne</screen>
            <para>Replace <literal>CEILOMETER_PASS</literal> with the password you chose for
                                the <literal>ceilometer</literal> user in the Identity service.</para>
          </listitem>
        </itemizedlist>
      </step>
    </procedure>
  </section>
  <section>
    <title>Configure Compute to use Telemetry</title>
    <itemizedlist>
      <listitem>
        <para>Edit the <literal>/etc/nova/nova.conf</literal> file and configure
                        notifications in the <literal>[DEFAULT]</literal> section:</para>
        <screen language="ini">[DEFAULT]
...
instance_usage_audit = True
instance_usage_audit_period = hour
notify_on_state_change = vm_and_task_state

[oslo_messaging_notifications]
...
driver = messagingv2</screen>
      </listitem>
    </itemizedlist>
  </section>
  <section>
    <title>Configure Compute to poll IPMI meters</title>
    <note>
      <para>To enable IPMI meters, ensure IPMITool is installed and the host supports
                    Intel Node Manager.</para>
    </note>
    <itemizedlist>
      <listitem>
        <para>Edit the <literal>/etc/sudoers</literal> file and include:</para>
        <screen>.. code-block:: ini</screen>
        <para>ceilometer ALL = (root) NOPASSWD: /usr/bin/ceilometer-rootwrap /etc/ceilometer/rootwrap.conf *</para>
      </listitem>
      <listitem>
        <para>Edit the <literal>/etc/ceilometer/polling.yaml</literal> to include the required meters, for example:</para>
        <screen>.. code-block:: yaml</screen>
        <itemizedlist>
          <listitem>
            <para>name: ipmi
                                    interval: 300
                                    meters:</para>
            <itemizedlist>
              <listitem>
                <para>hardware.ipmi.temperature</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>
  </section>
  <section>
    <title>Finalize installation</title>
    <procedure>
      <step>
        <para>Restart the agent:</para>
        <screen language="console"># service ceilometer-agent-compute restart
# service ceilometer-agent-ipmi restart (optional)</screen>
      </step>
      <step>
        <para>Restart the Compute service:</para>
        <screen language="console"># service nova-compute restart</screen>
      </step>
    </procedure>
  </section>
</section>
