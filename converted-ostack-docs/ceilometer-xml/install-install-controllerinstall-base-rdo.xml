<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.1" xml:id="install-rdo">
  <title>Install and configure for Red Hat Enterprise Linux and CentOS</title>
  <para>This section describes how to install and configure the
            Telemetry service, code-named ceilometer, on the controller node.</para>
  <section>
    <title>Prerequisites</title>
    <para>Before you install and configure the Telemetry service, you must
                configure a target to send metering data to. The recommended endpoint
                is <link xlink:href="http://gnocchi.xyz">Gnocchi</link>.</para>
    <procedure>
      <step>
        <para>Source the <literal>admin</literal> credentials to gain access to admin-only
                        CLI commands:</para>
        <screen language="console">$ . admin-openrc</screen>
      </step>
      <step>
        <para>To create the service credentials, complete these steps:</para>
        <itemizedlist>
          <listitem>
            <para>Create the <literal>ceilometer</literal> user:</para>
            <screen language="console">$ openstack user create --domain default --password-prompt ceilometer
User Password:
Repeat User Password:
+-----------+----------------------------------+
| Field     | Value                            |
+-----------+----------------------------------+
| domain_id | e0353a670a9e496da891347c589539e9 |
| enabled   | True                             |
| id        | c859c96f57bd4989a8ea1a0b1d8ff7cd |
| name      | ceilometer                       |
+-----------+----------------------------------+</screen>
          </listitem>
          <listitem>
            <para>Add the <literal>admin</literal> role to the <literal>ceilometer</literal> user.</para>
            <screen language="console">$ openstack role add --project service --user ceilometer admin</screen>
            <note>
              <para>This command provides no output.</para>
            </note>
          </listitem>
          <listitem>
            <para>Create the <literal>ceilometer</literal> service entity:</para>
            <screen language="console">$ openstack service create --name ceilometer \
  --description "Telemetry" metering
+-------------+----------------------------------+
| Field       | Value                            |
+-------------+----------------------------------+
| description | Telemetry                        |
| enabled     | True                             |
| id          | 5fb7fd1bb2954fddb378d4031c28c0e4 |
| name        | ceilometer                       |
| type        | metering                         |
+-------------+----------------------------------+</screen>
          </listitem>
        </itemizedlist>
      </step>
      <step>
        <para>Register Gnocchi service in Keystone:</para>
        <itemizedlist>
          <listitem>
            <para>Create the <literal>gnocchi</literal> user:</para>
            <screen language="console">$ openstack user create --domain default --password-prompt gnocchi
User Password:
Repeat User Password:
+-----------+----------------------------------+
| Field     | Value                            |
+-----------+----------------------------------+
| domain_id | e0353a670a9e496da891347c589539e9 |
| enabled   | True                             |
| id        | 8bacd064f6434ef2b6bbfbedb79b0318 |
| name      | gnocchi                          |
+-----------+----------------------------------+</screen>
          </listitem>
          <listitem>
            <para>Create the <literal>gnocchi</literal> service entity:</para>
            <screen language="console">$ openstack service create --name gnocchi \
  --description "Metric Service" metric
+-------------+----------------------------------+
| Field       | Value                            |
+-------------+----------------------------------+
| description | Metric Service                   |
| enabled     | True                             |
| id          | 205978b411674e5a9990428f81d69384 |
| name        | gnocchi                          |
| type        | metric                           |
+-------------+----------------------------------+</screen>
          </listitem>
          <listitem>
            <para>Add the <literal>admin</literal> role to the <literal>gnocchi</literal> user.</para>
            <screen language="console">$ openstack role add --project service --user gnocchi admin</screen>
            <note>
              <para>This command provides no output.</para>
            </note>
          </listitem>
          <listitem>
            <para>Create the Metric service API endpoints:</para>
            <screen language="console">$ openstack endpoint create --region RegionOne \
  metric public http://controller:8041
+--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | b808b67b848d443e9eaaa5e5d796970c |
| interface    | public                           |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | 205978b411674e5a9990428f81d69384 |
| service_name | gnocchi                          |
| service_type | metric                           |
| url          | http://controller:8041           |
+--------------+----------------------------------+

$ openstack endpoint create --region RegionOne \
  metric internal http://controller:8041
+--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | c7009b1c2ee54b71b771fa3d0ae4f948 |
| interface    | internal                         |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | 205978b411674e5a9990428f81d69384 |
| service_name | gnocchi                          |
| service_type | metric                           |
| url          | http://controller:8041           |
+--------------+----------------------------------+

$ openstack endpoint create --region RegionOne \
  metric admin http://controller:8041
+--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | b2c00566d0604551b5fe1540c699db3d |
| interface    | admin                            |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | 205978b411674e5a9990428f81d69384 |
| service_name | gnocchi                          |
| service_type | metric                           |
| url          | http://controller:8041           |
+--------------+----------------------------------+</screen>
          </listitem>
        </itemizedlist>
      </step>
    </procedure>
  </section>
  <section>
    <title>Install Gnocchi</title>
    <procedure>
      <step>
        <para>Install the Gnocchi packages. Alternatively, Gnocchi can be install using
                        pip:</para>
        <screen language="console"># yum install openstack-gnocchi-api openstack-gnocchi-metricd \
  python-gnocchiclient</screen>
        <note>
          <para>Depending on your environment size, consider installing Gnocchi
                            separately as it makes extensive use of the cpu.</para>
        </note>
      </step>
    </procedure>
    <procedure>
      <step>
        <para>Create the database for Gnocchiâ€™s indexer:</para>
        <itemizedlist>
          <listitem>
            <para>Use the database access client to connect to the database
                                server as the <literal>root</literal> user:</para>
            <screen language="console">$ mysql -u root -p</screen>
          </listitem>
          <listitem>
            <para>Create the <literal>gnocchi</literal> database:</para>
            <screen language="console">CREATE DATABASE gnocchi;</screen>
          </listitem>
          <listitem>
            <para>Grant proper access to the <literal>gnocchi</literal> database:</para>
            <screen language="console">GRANT ALL PRIVILEGES ON gnocchi.* TO 'gnocchi'@'localhost' \
  IDENTIFIED BY 'GNOCCHI_DBPASS';
GRANT ALL PRIVILEGES ON gnocchi.* TO 'gnocchi'@'%' \
  IDENTIFIED BY 'GNOCCHI_DBPASS';</screen>
            <para>Replace <literal>GNOCCHI_DBPASS</literal> with a suitable password.</para>
          </listitem>
          <listitem>
            <para>Exit the database access client.</para>
          </listitem>
        </itemizedlist>
      </step>
      <step>
        <para>Edit the <literal>/etc/gnocchi/gnocchi.conf</literal> file and add Keystone options:</para>
        <itemizedlist>
          <listitem>
            <para>In the <literal>[api]</literal> section, configure gnocchi to use keystone:</para>
            <screen language="ini">[api]
auth_mode = keystone</screen>
          </listitem>
          <listitem>
            <para>In the <literal>[keystone_authtoken]</literal> section, configure keystone
                                authentication:</para>
            <screen language="ini">[keystone_authtoken]
...
auth_type = password
auth_url = http://controller:5000/v3
project_domain_name = Default
user_domain_name = Default
project_name = service
username = gnocchi
password = GNOCCHI_PASS
interface = internalURL
region_name = RegionOne</screen>
            <para>Replace <literal>GNOCCHI_PASS</literal> with the password you chose for
                                the <literal>gnocchi</literal> user in the Identity service.</para>
          </listitem>
          <listitem>
            <para>In the <literal>[indexer]</literal> section, configure database access:</para>
            <screen language="ini">[indexer]
url = mysql+pymysql://gnocchi:GNOCCHI_DBPASS@controller/gnocchi</screen>
            <para>Replace <literal>GNOCCHI_DBPASS</literal> with the password you chose for Gnocchiâ€™s
                                indexer database.</para>
          </listitem>
          <listitem>
            <para>In the <literal>[storage]</literal> section, configure location to store metric data.
                                In this case, we will store it to the local file system. See Gnocchi
                                documenation for a list of more durable and performant drivers:</para>
            <screen language="ini">[storage]
coordination_url = redis://controller:6379
file_basepath = /var/lib/gnocchi
driver = file</screen>
          </listitem>
        </itemizedlist>
      </step>
      <step>
        <para>Initialize Gnocchi:</para>
        <screen language="console">gnocchi-upgrade</screen>
      </step>
    </procedure>
  </section>
  <section>
    <title>Finalize Gnocchi installation</title>
    <procedure>
      <step>
        <para>Start the Gnocchi services and configure them to start when the
                        system boots:</para>
        <screen language="console"># systemctl enable openstack-gnocchi-api.service \
  openstack-gnocchi-metricd.service
# systemctl start openstack-gnocchi-api.service \
  openstack-gnocchi-metricd.service</screen>
      </step>
    </procedure>
  </section>
  <section>
    <title>Install and configure components</title>
    <procedure>
      <step>
        <para>Install the Ceilometer packages:</para>
        <screen language="console"># yum install openstack-ceilometer-notification \
  openstack-ceilometer-central</screen>
      </step>
    </procedure>
    <procedure>
      <step>
        <para>Edit the <literal>/etc/ceilometer/ceilometer.conf</literal> file and complete
                        the following actions:</para>
        <itemizedlist>
          <listitem>
            <para>Configure Gnocchi connection:</para>
            <screen language="ini">[dispatcher_gnocchi]
# filter out Gnocchi-related activity meters (Swift driver)
filter_service_activity = False
# default metric storage archival policy
archive_policy = low</screen>
          </listitem>
          <listitem>
            <para>In the <literal>[DEFAULT]</literal> section,
                                configure <literal>RabbitMQ</literal> message queue access:</para>
            <screen language="ini">[DEFAULT]
...
transport_url = rabbit://openstack:RABBIT_PASS@controller</screen>
            <para>Replace <literal>RABBIT_PASS</literal> with the password you chose for the
                                <literal>openstack</literal> account in <literal>RabbitMQ</literal>.</para>
          </listitem>
          <listitem>
            <para>In the <literal>[service_credentials]</literal> section, configure service credentials:</para>
            <screen language="ini">[service_credentials]
...
auth_type = password
auth_url = http://controller:5000/v3
project_domain_id = default
user_domain_id = default
project_name = service
username = ceilometer
password = CEILOMETER_PASS
interface = internalURL
region_name = RegionOne</screen>
            <para>Replace <literal>CEILOMETER_PASS</literal> with the password you chose for
                                the <literal>ceilometer</literal> user in the Identity service.</para>
          </listitem>
        </itemizedlist>
      </step>
      <step>
        <para>Create Ceilometer resources in Gnocchi. Gnocchi should be running by this
                        stage:</para>
        <screen language="console"># ceilometer-upgrade --skip-metering-database</screen>
      </step>
    </procedure>
  </section>
  <section>
    <title>Finalize installation</title>
    <procedure>
      <step>
        <para>Start the Telemetry services and configure them to start when the
                        system boots:</para>
        <screen language="console"># systemctl enable openstack-ceilometer-notification.service \
  openstack-ceilometer-central.service
# systemctl start openstack-ceilometer-notification.service \
  openstack-ceilometer-central.service</screen>
      </step>
    </procedure>
  </section>
</section>
