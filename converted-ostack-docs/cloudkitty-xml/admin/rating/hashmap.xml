<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/run/media/dpopov/DATAPART1/Git/openstack-docs/cloudkitty/doc/source/admin/rating/hashmap.rst">
    <section ids="hashmap-rating-module" names="hashmap\ rating\ module">
        <title>Hashmap rating module</title>
        <paragraph>CloudKitty is shipped with core rating modules.</paragraph>
        <section ids="hashmap-composition" names="hashmap\ composition">
            <title>Hashmap composition</title>
            <paragraph>You can see hashmap as a simple tree:</paragraph>
            <graphviz code="digraph &quot;Hashmap's data structure&quot; {&#10;&#10;    label=&quot;HashMap module data structure&quot;;&#10;    compound=true;&#10;&#10;    compute;&#10;    network [label=&quot;network.floating_ip&quot;];&#10;    volume;&#10;&#10;    subgraph cluster_0 {&#10;        label=&quot;services&quot;;&#10;        style=dashed;&#10;        {rank=same; compute -&gt; network -&gt; volume [style=invis];}&#10;    }&#10;&#10;    compute -&gt; flavor;&#10;&#10;    subgraph cluster_1 {&#10;        label=&quot;fields:\nAssociate to metadata&quot;;&#10;        style=dashed;&#10;        flavor;&#10;    }&#10;&#10;    // Mappings&#10;    micro [label=&quot;value=m1.micro\ntype=flat\ncost=0.1&quot;];&#10;    tiny [label=&quot;value=m1.tiny\ntype=flat\ncost=0.2&quot;];&#10;    small [label=&quot;value=m1.small\ntype=flat\ncost=0.4&quot;];&#10;&#10;    floating [label=&quot;\ntype=flat\ncost=0.5&quot;];&#10;&#10;    // Thresholds&#10;    1024 [label=&quot;level=1024\ntype=flat\ncost=0.1&quot;];&#10;    10240 [label=&quot;level=10240\ntype=flat\ncost=0.2&quot;];&#10;&#10;    subgraph cluster_2 {&#10;        label=&quot;mappings&quot;;&#10;        style=dashed;&#10;        {rank=same; micro -&gt; tiny -&gt; small -&gt; floating [style=invis];}&#10;    }&#10;&#10;    subgraph cluster_3 {&#10;        label=&quot;thresholds&quot;;&#10;        style=dashed;&#10;        {rank=same; 1024 -&gt; 10240 [style=invis];}&#10;    }&#10;&#10;    flavor -&gt; micro;&#10;    flavor -&gt; tiny;&#10;    flavor -&gt; small;&#10;    network -&gt; floating;&#10;    volume -&gt; 1024;&#10;    volume -&gt; 10240;&#10;}&#10;&#10;" options="{}">
            </graphviz>
            <paragraph>HashMap is composed of different resources and groups.</paragraph>
            <section ids="group" names="group">
                <title>Group</title>
                <paragraph>A group is a way to group calculations of mappings. For example you might want
                    to apply a set of rules to charge instance_uptime and another set to block
                    storage volume. You don’t want the two to be linked so you’ll create one group
                    for each calculation.</paragraph>
            </section>
            <section ids="service" names="service">
                <title>Service</title>
                <paragraph>A service is a way to map the rule to the type of data collected. Currently,
                    the following services are available:</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>compute</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>image</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>volume</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>network.bw.in</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>network.bw.out</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>network.floating</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>Enabled services are defined in the configuration file. By default, only the
                    compute service is enabled.</paragraph>
            </section>
            <section ids="field" names="field">
                <title>Field</title>
                <paragraph>A field is referring to a metadata field of a resource. For example on an
                    instance object (<strong>compute</strong>), you can use the flavor to define specific rules.</paragraph>
                <paragraph>With Ceilometer as the collector, the following fields are available for each
                    service:</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>Compute: flavor, vcpus, memory (MB), image_id, availability_zone</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Volume: name, volume_type, availability_zone</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Image: disk_format, container_format, is_public, availability_zone</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>With Gnocchi as collector, the following fields are available for each service:</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>Compute: flavor_id, vcpus, image_id, memory (MB)</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Image: container_format, disk_format</paragraph>
                    </list_item>
                </bullet_list>
            </section>
            <section ids="mapping" names="mapping">
                <title>Mapping</title>
                <paragraph>A mapping is the final object, it’s what triggers calculation, for example a
                    specific value of flavor on an instance.
                    It maps cost to a value of metadata in case of field mapping. And directly a
                    cost in case of service mapping.</paragraph>
                <paragraph>A mapping can be project specific by providing a project id at creation and
                    supports overloading, i.e. you can specify multiple mappings for the same value
                    with different project ids and costs.</paragraph>
            </section>
            <section ids="threshold" names="threshold">
                <title>Threshold</title>
                <paragraph>A threshold entry is used to apply rating rules base on level. Its behaviour is
                    similar to a mapping except that it applies the cost base on the level.</paragraph>
                <paragraph>As for mapping, a threshold can be project specific by providing a project id
                    at creation.</paragraph>
            </section>
        </section>
        <section ids="hashmap-formula" names="hashmap\ formula">
            <title>HashMap formula</title>
            <paragraph>Based on all the previous objects here’s the calculation formula :
                <math latex="\sum_{n=1}^N G_n(qty.(T_{rate}\prod(M_{rate})(T_{flat}+M_{flat})))"></math></paragraph>
            <field_list>
                <field>
                    <field_name>G</field_name>
                    <field_body>
                        <paragraph>Group</paragraph>
                    </field_body>
                </field>
                <field>
                    <field_name>qty</field_name>
                    <field_body>
                        <paragraph>Quantity of resource</paragraph>
                    </field_body>
                </field>
                <field>
                    <field_name>T</field_name>
                    <field_body>
                        <paragraph>Threshold</paragraph>
                    </field_body>
                </field>
                <field>
                    <field_name>M</field_name>
                    <field_body>
                        <paragraph>Mapping</paragraph>
                    </field_body>
                </field>
            </field_list>
            <paragraph>For an active resource on a collection period, quantity is defined as follow:</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>compute: 1 (unit: instance)</paragraph>
                </list_item>
                <list_item>
                    <paragraph>image: upload image size (unit: MB)</paragraph>
                </list_item>
                <list_item>
                    <paragraph>volume: volume size (unit: GB)</paragraph>
                </list_item>
                <list_item>
                    <paragraph>network.bw.in: ingoing network usage (unit: MB)</paragraph>
                </list_item>
                <list_item>
                    <paragraph>network.bw.out: outgoing network usage (unit: MB)</paragraph>
                </list_item>
                <list_item>
                    <paragraph>network.floating: 1 (unit: ip)</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="example" names="example">
            <title>Example</title>
            <section ids="compute-uptime" names="compute\ uptime">
                <title>Compute uptime</title>
                <paragraph>Apply rating rule on the compute service to charge the instance based on it’s
                    flavor and uptime:</paragraph>
                <paragraph>Create a group <emphasis>instance_uptime_flavor</emphasis>:</paragraph>
                <literal_block classes="code raw" xml:space="preserve"><inline classes="error">$ cloudkitty hashmap-group-create -n instance_uptime_flavor
+----------+--------------------------------------+
| Property | Value                                |
+----------+--------------------------------------+
| group_id | 26d2d69a-4c42-47f1-9d44-2cdfad167f7d |
| name     | instance_uptime_flavor               |
+----------+--------------------------------------+

$ cloudkitty hashmap-group-list
+------------------------+--------------------------------------+
| Name                   | Group id                             |
+------------------------+--------------------------------------+
| instance_uptime_flavor | 26d2d69a-4c42-47f1-9d44-2cdfad167f7d |
+------------------------+--------------------------------------+</inline></literal_block>
                <paragraph>Create the service matching rule:</paragraph>
                <literal_block classes="code raw" xml:space="preserve"><inline classes="error">$ cloudkitty hashmap-service-create -n compute
+------------+--------------------------------------+
| Property   | Value                                |
+------------+--------------------------------------+
| name       | compute                              |
| service_id | 08ab2d27-fe95-400c-9602-e5ad5efdda8b |
+------------+--------------------------------------+</inline></literal_block>
                <paragraph>Create a field matching rule:</paragraph>
                <literal_block classes="code raw" xml:space="preserve"><inline classes="error">$ cloudkitty hashmap-field-create \
 -s 08ab2d27-fe95-400c-9602-e5ad5efdda8b -n flavor
+------------+--------------------------------------+
| Property   | Value                                |
+------------+--------------------------------------+
| field_id   | f37364af-6525-40fc-ae08-6d4087429862 |
| name       | flavor                               |
| service_id | 08ab2d27-fe95-400c-9602-e5ad5efdda8b |
+------------+--------------------------------------+</inline></literal_block>
                <paragraph>Create a mapping in the group <emphasis>instance_uptime_flavor</emphasis> that will map m1.tiny
                    instance to a cost of 0.01:</paragraph>
                <literal_block classes="code raw" xml:space="preserve"><inline classes="error">$ cloudkitty hashmap-mapping-create \
 -f f37364af-6525-40fc-ae08-6d4087429862 \
 -v m1.tiny -t flat -c 0.01 -g 26d2d69a-4c42-47f1-9d44-2cdfad167f7d
+------------+--------------------------------------+
| Property   | Value                                |
+------------+--------------------------------------+
| cost       | 0.01                                 |
| field_id   | f37364af-6525-40fc-ae08-6d4087429862 |
| group_id   | 26d2d69a-4c42-47f1-9d44-2cdfad167f7d |
| mapping_id | df592a91-a6a5-41fa-ba2e-2f763eaa36e5 |
| service_id | None                                 |
| tenant_id  | None                                 |
| type       | flat                                 |
| value      | m1.tiny                              |
+------------+--------------------------------------+</inline></literal_block>
                <paragraph>In this example every machine in any project with the flavor m1.tiny will be
                    charged 0.01 per collection period.</paragraph>
            </section>
            <section ids="volume-per-gb-with-discount" names="volume\ per\ gb\ with\ discount">
                <title>Volume per gb with discount</title>
                <paragraph>Now let’s do some threshold based rating.</paragraph>
                <paragraph>Create a group <emphasis>volume_thresholds</emphasis>:</paragraph>
                <literal_block classes="code raw" xml:space="preserve"><inline classes="error">$ cloudkitty hashmap-group-create -n volume_thresholds
+----------+--------------------------------------+
| Property | Value                                |
+----------+--------------------------------------+
| group_id | dd3dc30e-0e63-11e6-9f83-ab4208c1fe2d |
| name     | volume_thresholds                    |
+----------+--------------------------------------+

$ cloudkitty hashmap-group-list
+-------------------+--------------------------------------+
| Name              | Group id                             |
+-------------------+--------------------------------------+
| volume_thresholds | dd3dc30e-0e63-11e6-9f83-ab4208c1fe2d |
+-------------------+--------------------------------------+</inline></literal_block>
                <paragraph>Create the service matching rule:</paragraph>
                <literal_block classes="code raw" xml:space="preserve"><inline classes="error">$ cloudkitty hashmap-service-create -n volume
+------------+--------------------------------------+
| Property   | Value                                |
+------------+--------------------------------------+
| name       | volume                               |
| service_id | 16a48060-0e64-11e6-8e4e-1b285514a36e |
+------------+--------------------------------------+</inline></literal_block>
                <paragraph>Now let’s setup the price per gigabyte:</paragraph>
                <literal_block classes="code raw" xml:space="preserve"><inline classes="error">$ cloudkitty hashmap-mapping-create \
 -s 16a48060-0e64-11e6-8e4e-1b285514a36e \
 -t flat -c 0.001 -g dd3dc30e-0e63-11e6-9f83-ab4208c1fe2d
+------------+--------------------------------------+
| Property   | Value                                |
+------------+--------------------------------------+
| cost       | 0.001                                |
| field_id   | None                                 |
| group_id   | dd3dc30e-0e63-11e6-9f83-ab4208c1fe2d |
| mapping_id | 41669786-240b-11e6-872c-af96ddb6619c |
| service_id | 16a48060-0e64-11e6-8e4e-1b285514a36e |
| tenant_id  | None                                 |
| type       | flat                                 |
| value      |                                      |
+------------+--------------------------------------+</inline></literal_block>
                <paragraph>We have the basic price per gigabyte be we now want to apply a discount on huge
                    data volumes. Create the thresholds in the group <emphasis>volume_thresholds</emphasis> that will
                    map different volume quantity to costs:</paragraph>
                <paragraph>Here we set a threshold when going past 50GB, and apply a 2% discount (0.98):</paragraph>
                <literal_block classes="code raw" xml:space="preserve"><inline classes="error">$ cloudkitty hashmap-threshold-create \
 -s 16a48060-0e64-11e6-8e4e-1b285514a36e \
 -l 50 -t rate -c 0.98 -g dd3dc30e-0e63-11e6-9f83-ab4208c1fe2d
+--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| cost         | 0.98                                 |
| field_id     | None                                 |
| group_id     | dd3dc30e-0e63-11e6-9f83-ab4208c1fe2d |
| level        | 50                                   |
| threshold_id | 8eb45bfc-0e64-11e6-ad0e-07a62425f284 |
| service_id   | 16a48060-0e64-11e6-8e4e-1b285514a36e |
| tenant_id    | None                                 |
| type         | rate                                 |
+--------------+--------------------------------------+</inline></literal_block>
                <paragraph>Here we set the same threshold for project 8f1e8645a0e7496a95a4fdf4b2795b2c
                    but with a 3% discount (0.97):</paragraph>
                <literal_block classes="code raw" xml:space="preserve"><inline classes="error">$ cloudkitty hashmap-threshold-create \
 -s 16a48060-0e64-11e6-8e4e-1b285514a36e \
 -l 50 -t rate -c 0.98 -g dd3dc30e-0e63-11e6-9f83-ab4208c1fe2d \
 -p 8f1e8645a0e7496a95a4fdf4b2795b2c
+--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| cost         | 0.97                                 |
| field_id     | None                                 |
| group_id     | dd3dc30e-0e63-11e6-9f83-ab4208c1fe2d |
| level        | 50                                   |
| threshold_id | 8eb45bfc-0e64-11e6-ad0e-07a62425f284 |
| service_id   | 16a48060-0e64-11e6-8e4e-1b285514a36e |
| tenant_id    | 8f1e8645a0e7496a95a4fdf4b2795b2c     |
| type         | rate                                 |
+--------------+--------------------------------------+</inline></literal_block>
                <paragraph>Here we set a threshold when going past 200GB, and apply a 5% discount (0.95):</paragraph>
                <literal_block classes="code raw" xml:space="preserve"><inline classes="error">$ cloudkitty hashmap-threshold-create \
 -s 16a48060-0e64-11e6-8e4e-1b285514a36e \
 -l 200 -t rate -c 0.95 -g dd3dc30e-0e63-11e6-9f83-ab4208c1fe2d
+--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| cost         | 0.95                                 |
| field_id     | None                                 |
| group_id     | dd3dc30e-0e63-11e6-9f83-ab4208c1fe2d |
| level        | 200                                  |
| threshold_id | baf180c8-0e64-11e6-abb3-cbae153a6d44 |
| service_id   | 16a48060-0e64-11e6-8e4e-1b285514a36e |
| tenant_id    | None                                 |
| type         | rate                                 |
+--------------+--------------------------------------+</inline></literal_block>
                <paragraph>In this example every volume is charged 0.01 per GB but if the size goes past
                    50GB you’ll get a 2% discount, if you even go further you’ll get 5% discount
                    (only one level apply at a time).</paragraph>
                <paragraph>For project 8f1e8645a0e7496a95a4fdf4b2795b2c only, you’ll get a 3% discount
                    instead of 2% when the size goes past 50GB and the same %5 discount it it goes
                    further.</paragraph>
                <field_list>
                    <field>
                        <field_name>20GB</field_name>
                        <field_body>
                            <paragraph>0.02 per collection period.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>50GB</field_name>
                        <field_body>
                            <paragraph>0.049 per collection period
                                (0.0485 for project 8f1e8645a0e7496a95a4fdf4b2795b2c).</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>80GB</field_name>
                        <field_body>
                            <paragraph>0.0784 per collection period
                                (0.0776 for project 8f1e8645a0e7496a95a4fdf4b2795b2c).</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>250GB</field_name>
                        <field_body>
                            <paragraph>0.2375 per collection period.</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </section>
        </section>
    </section>
</document>
