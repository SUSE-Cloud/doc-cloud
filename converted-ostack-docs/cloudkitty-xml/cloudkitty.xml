<book xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:lang="en">
  <title>Welcome to CloudKitty’s documentation!</title>
  <info/>
  <para>CloudKitty is a Rating As A Service project aimed at translating metrics
            to prices.</para>
  <chapter xml:base="install/index">
    <title>Installation Guide</title>
    <info/>
    <section xml:base="install-source">
      <title>Install from source</title>
      <section>
        <title>Install the services</title>
        <para>Retrieve and install cloudkitty:</para>
        <screen><![CDATA[git clone https://git.openstack.org/openstack/cloudkitty.git
cd cloudkitty
python setup.py install]]></screen>
        <para>This procedure installs the <literal>cloudkitty</literal> python library and the
                following executables:</para>
        <itemizedlist>
          <listitem>
            <para><literal>cloudkitty-api</literal>: API service</para>
          </listitem>
          <listitem>
            <para><literal>cloudkitty-processor</literal>: Processing service (collecting and rating)</para>
          </listitem>
          <listitem>
            <para><literal>cloudkitty-dbsync</literal>: Tool to create and upgrade the database schema</para>
          </listitem>
          <listitem>
            <para><literal>cloudkitty-storage-init</literal>: Tool to initiate the storage backend</para>
          </listitem>
          <listitem>
            <para><literal>cloudkitty-writer</literal>: Reporting tool</para>
          </listitem>
        </itemizedlist>
        <para>Install sample configuration files:</para>
        <screen><![CDATA[mkdir /etc/cloudkitty
tox -e genconfig
cp etc/cloudkitty/cloudkitty.conf.sample /etc/cloudkitty/cloudkitty.conf
cp etc/cloudkitty/policy.json /etc/cloudkitty
cp etc/cloudkitty/api_paste.ini /etc/cloudkitty]]></screen>
        <para>Create the log directory:</para>
        <screen><![CDATA[mkdir /var/log/cloudkitty/]]></screen>
      </section>
      <section>
        <title>Install the client</title>
        <para>Retrieve and install cloudkitty client:</para>
        <screen><![CDATA[git clone https://git.openstack.org/openstack/python-cloudkittyclient.git
cd python-cloudkittyclient
python setup.py install]]></screen>
      </section>
      <section>
        <title>Install the dashboard module</title>
        <procedure>
          <step>
            <para>Retrieve and install cloudkitty’s dashboard:</para>
            <screen><![CDATA[git clone https://git.openstack.org/openstack/cloudkitty-dashboard.git
cd cloudkitty-dashboard
python setup.py install]]></screen>
          </step>
          <step>
            <para>Find where the python packages are installed:</para>
            <screen><![CDATA[PY_PACKAGES_PATH=`pip --version | cut -d' ' -f4`]]></screen>
          </step>
          <step>
            <para>Add the enabled file to the horizon settings or installation.
                        Depending on your setup, you might need to add it to <literal>/usr/share</literal> or
                        directly in the horizon python package:</para>
            <screen><![CDATA[# If horizon is installed by packages:
ln -sf $PY_PACKAGES_PATH/cloudkittydashboard/enabled/_[0-9]*.py \
/usr/share/openstack-dashboard/openstack_dashboard/enabled/

# Directly from sources:
ln -sf $PY_PACKAGES_PATH/cloudkittydashboard/enabled/_[0-9]*.py \
$PY_PACKAGES_PATH/openstack_dashboard/enabled/]]></screen>
          </step>
          <step>
            <para>Restart the web server hosting Horizon.</para>
          </step>
        </procedure>
      </section>
    </section>
    <section xml:base="install-ubuntu">
      <title>Install from packages for Ubuntu (16.04)</title>
      <para>Packages for Ubuntu 16.04 are available starting from the Newton release.</para>
      <procedure>
        <step>
          <para>Enable the OpenStack repository for the Newton or Ocata release:</para>
          <screen><![CDATA[apt install software-properties-common
add-apt-repository ppa:objectif-libre/cloudkitty # Newton
add-apt-repository ppa:objectif-libre/cloudkitty-ocata # Ocata]]></screen>
        </step>
        <step>
          <para>Upgrade the packages on your host:</para>
          <screen><![CDATA[apt update && apt dist-upgrade]]></screen>
        </step>
        <step>
          <para>Install the packages:</para>
          <screen><![CDATA[apt-get install cloudkitty-api cloudkitty-processor cloudkitty-dashboard]]></screen>
        </step>
      </procedure>
    </section>
    <section xml:base="install-rdo">
      <title>Install from package (RDO For RHEL/CentOS 7)</title>
      <para>Packages for RHEL/CentOS 7 are available starting from the Mitaka release.</para>
      <procedure>
        <step>
          <para>Install the RDO repositories for your release:</para>
          <screen><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[yum install centos-release-openstack-RELEASE # RELEASE can be mitaka, newton or ocata]]></screen>
        </step>
        <step>
          <para>Install the packages:</para>
          <screen><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[yum install openstack-cloudkitty-api openstack-cloudkitty-processor openstack-cloudkitty-ui]]></screen>
        </step>
      </procedure>
    </section>
    <section xml:id="mod-wsgi" xml:base="mod_wsgi">
      <title>Installing the API behind mod_wsgi</title>
      <para>Cloudkitty comes with a few example files for configuring the API
            service to run behind Apache with <literal>mod_wsgi</literal>.</para>
      <section>
        <title>app.wsgi</title>
        <para>The file <literal>cloudkitty/api/app.wsgi</literal> sets up the V1 API WSGI
                application. The file needs to be copied to <literal>/var/www/cloudkitty/</literal>,
                and should not need to be modified.</para>
      </section>
      <section>
        <title>etc/apache2/cloudkitty</title>
        <para>The <literal>etc/apache2/cloudkitty</literal> file contains example settings that
                work with a copy of cloudkitty installed via devstack.</para>
        <screen><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[# Copyright (c) 2013 New Dream Network, LLC (DreamHost)
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

# This is an example Apache2 configuration file for using the
# cloudkitty API through mod_wsgi.

# Note: If you are using a Debian-based system then the paths
# "/var/log/httpd" and "/var/run/httpd" will use "apache2" instead
# of "httpd".
#
# The number of processes and threads is an example only and should
# be adjusted according to local requirements.

Listen 8889

<VirtualHost *:8889>
    WSGIDaemonProcess cloudkitty-api processes=2 threads=10 user=SOMEUSER display-name=%{GROUP}
    WSGIProcessGroup cloudkitty-api
    WSGIScriptAlias / /var/www/cloudkitty/app.wsgi
    WSGIApplicationGroup %{GLOBAL}
    <IfVersion >= 2.4>
        ErrorLogFormat "%{cu}t %M"
    </IfVersion>
    ErrorLog /var/log/httpd/cloudkitty_error.log
    CustomLog /var/log/httpd/cloudkitty_access.log combined
</VirtualHost>

WSGISocketPrefix /var/run/httpd
]]></screen>
        <procedure>
          <step>
            <para>On deb-based systems copy or symlink the file to
                        <literal>/etc/apache2/sites-available</literal>. For rpm-based systems the file will go in
                        <literal>/etc/httpd/conf.d</literal>.</para>
          </step>
          <step>
            <para>Modify the <literal>WSGIDaemonProcess</literal> directive to set the <literal>user</literal> and
                        <literal>group</literal> values to an appropriate user on your server. In many
                        installations <literal>cloudkitty</literal> will be correct.</para>
          </step>
          <step>
            <para>Enable the cloudkitty site. On deb-based systems:</para>
            <screen><![CDATA[# a2ensite cloudkitty
# service apache2 reload]]></screen>
            <para>On rpm-based systems:</para>
            <screen><![CDATA[# service httpd reload]]></screen>
          </step>
        </procedure>
      </section>
    </section>
  </chapter>
  <chapter xml:base="configuration/index">
    <title>Configuration Guide</title>
    <info/>
    <section>
      <title>Configure Cloudkitty</title>
      <para>Edit <literal>/etc/cloudkitty/cloudkitty.conf</literal> to configure cloudkitty.</para>
      <para>Then you need to know which keystone API version you use (which can be
                determined using <literal>openstack endpoint list</literal>)</para>
      <section>
        <title>For keystone (identity) API v2 (deprecated)</title>
        <screen language="ini"><![CDATA[[DEFAULT]
verbose = True
log_dir = /var/log/cloudkitty
# oslo_messaging_rabbit is deprecated
transport_url = rabbit://openstack:RABBIT_PASSWORD@RABBIT_HOST/

[auth]
username = cloudkitty
password = CK_PASSWORD
tenant = service
region = RegionOne
url = http://KEYSTONE_HOST:5000/v2.0

[keystone_authtoken]
username = cloudkitty
password = CK_PASSWORD
project_name = service
region = RegionOne
auth_url = http://KEYSTONE_HOST:5000/v2.0
auth_plugin = password

[database]
connection = mysql://cloudkitty:CK_DBPASSWORD@DB_HOST/cloudkitty

[storage]
backend = sqlalchemy

[keystone_fetcher]
username = cloudkitty
password = CK_PASSWORD
tenant = service
region = RegionOne
url = http://KEYSTONE_HOST:5000/v2.0

[collect]
collector = ceilometer
period = 3600
services = compute, volume, network.bw.in, network.bw.out, network.floating, image

[ceilometer_collector]
username = cloudkitty
password = CK_PASSWORD
tenant = service
region = RegionOne
url = http://KEYSTONE_HOST:5000/v2.0]]></screen>
        <note>
          <itemizedlist>
            <listitem>
              <para><literal>http://KEYSTONE_HOST:5000/v2.0</literal> and <literal>http://KEYSTONE_HOST:35357/v2.0</literal> are your
                                identity endpoints.</para>
            </listitem>
            <listitem>
              <para>the tenant named <literal>service</literal> is also commonly called <literal>services</literal></para>
            </listitem>
          </itemizedlist>
        </note>
      </section>
      <section>
        <title>For keystone (identity) API v3</title>
        <para>The following shows the basic configuration items:</para>
        <screen language="ini"><![CDATA[[DEFAULT]
verbose = True
log_dir = /var/log/cloudkitty
# oslo_messaging_rabbit is deprecated
transport_url = rabbit://openstack:RABBIT_PASSWORD@RABBIT_HOST/

[ks_auth]
auth_type = v3password
auth_protocol = http
auth_url = http://KEYSTONE_HOST:5000/
identity_uri = http://KEYSTONE_HOST:35357/
username = cloudkitty
password = CK_PASSWORD
project_name = service
user_domain_name = default
project_domain_name = default
debug = True

[keystone_authtoken]
auth_section = ks_auth

[database]
connection = mysql://cloudkitty:CK_DBPASSWORD@DB_HOST/cloudkitty

[keystone_fetcher]
auth_section = ks_auth
keystone_version = 3

[tenant_fetcher]
backend = keystone]]></screen>
        <note>
          <para>The tenant named <literal>service</literal> is also commonly called <literal>services</literal></para>
        </note>
        <para>It is now time to configure the storage backend. Three storage backends are
                    available: <literal>sqlalchemy</literal>, <literal>gnocchihybrid</literal>, and <literal>gnocchi</literal>.</para>
        <screen language="ini"><![CDATA[[storage]
backend = gnocchihybrid]]></screen>
        <para>As you will see in the following example, collector and storage backends sometimes
                    need additional configuration sections. (The tenant fetcher works the same way,
                    but for now, only Keystone is supported). The section’s name has the following
                    format: <literal>{backend_name}_{backend_type}</literal> (<literal>gnocchi_collector</literal> for example),
                    except for <literal>storage_gnocchi</literal>.</para>
        <note>
          <para>The section name format should become <literal>{backend_type}_{backend_name}</literal> for all
                        sections in the future (<literal>storage_gnocchi</literal> style).</para>
        </note>
        <para>If you want to use the pure gnocchi storage, add the following entry:</para>
        <screen language="ini"><![CDATA[[storage_gnocchi]
auth_section = ks_auth]]></screen>
        <para>Two collectors are available: Ceilometer (deprecated, see the Telemetry
                    documentation), and Gnocchi.</para>
        <screen language="ini"><![CDATA[[collect]
collector = gnocchi
# Metrics are collected every 3600 seconds
period = 3600
# By default, only the compute service is enabled
services = compute, volume, network.bw.in, network.bw.out, network.floating, image

[gnocchi_collector]
auth_section = ks_auth]]></screen>
      </section>
      <section>
        <title>Setup the database and storage backend</title>
        <para>MySQL/MariaDB is the recommended database engine. To setup the database, use
                    the <literal>mysql</literal> client:</para>
        <screen><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[mysql -uroot -p << EOF
CREATE DATABASE cloudkitty;
GRANT ALL PRIVILEGES ON cloudkitty.* TO 'cloudkitty'@'localhost' IDENTIFIED BY 'CK_DBPASSWORD';
EOF]]></screen>
        <para>If you need to authorize the cloudkitty mysql user from another host you have
                    to change the line accordingly.</para>
        <para>Run the database synchronisation scripts:</para>
        <screen><![CDATA[cloudkitty-dbsync upgrade]]></screen>
        <para>Init the storage backend:</para>
        <screen><![CDATA[cloudkitty-storage-init]]></screen>
      </section>
      <section>
        <title>Integration with Keystone</title>
        <para>cloudkitty uses Keystone for authentication, and provides a <literal>rating</literal> service.</para>
        <para>To integrate cloudkitty to Keystone, run the following commands (as OpenStack
                    administrator):</para>
        <screen><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[openstack user create cloudkitty --password CK_PASSWORD --email cloudkitty@localhost
openstack role add --project service --user cloudkitty admin]]></screen>
        <para>Give the <literal>rating</literal> role to <literal>cloudkitty</literal> for each project that should be
                    handled by cloudkitty:</para>
        <screen><![CDATA[openstack role create rating
openstack role add --project XXX --user cloudkitty rating]]></screen>
        <para>Create the <literal>rating</literal> service and its endpoints:</para>
        <screen><![CDATA[openstack service create rating --name cloudkitty \
    --description "OpenStack Rating Service"
openstack endpoint create rating --region RegionOne \
    public http://localhost:8889
openstack endpoint create rating --region RegionOne \
    admin http://localhost:8889
openstack endpoint create rating --region RegionOne \
    internal http://localhost:8889]]></screen>
        <note>
          <para>The default port for the API service changed from 8888 to 8889
                        in the Newton release. If you installed Cloudkitty in an
                        earlier version, make sure to either explicitly define the
                        <literal>[api]/port</literal> setting to 8888 in <literal>cloudkitty.conf</literal>, or update
                        your keystone endpoints to use the 8889 port.</para>
        </note>
      </section>
    </section>
    <section>
      <title>Start cloudkitty</title>
      <section>
        <title>If you installed cloudkitty from packages</title>
        <para>Start the processing services:</para>
        <screen><![CDATA[systemctl start cloudkitty-processor.service]]></screen>
      </section>
      <section>
        <title>If you installed cloudkitty from sources</title>
        <para>Start the processing services:</para>
        <screen><![CDATA[cloudkitty-processor --config-file /etc/cloudkitty/cloudkitty.conf]]></screen>
      </section>
      <section>
        <title>Choose and start the API server</title>
        <para>Cloudkitty includes the <literal>cloudkitty-api</literal> command. It can be
                        used to run the API server. For smaller or proof-of-concept
                        installations this is a reasonable choice. For larger installations it
                        is strongly recommended to install the API server in a WSGI host
                        such as mod_wsgi (see <xref linkend="mod-wsgi"/>). Doing so will provide better
                        performance and more options for making adjustments specific to the
                        installation environment.</para>
        <para>If you are using the <literal>cloudkitty-api</literal> command it can be started
                        as:</para>
        <screen><![CDATA[$ cloudkitty-api -p 8889]]></screen>
      </section>
    </section>
  </chapter>
  <chapter xml:base="admin/index">
    <title>Administration Guide</title>
    <info/>
    <section xml:base="rating/introduction">
      <title>Rating module introduction</title>
      <para>There are three rating modules in Cloudkitty now, including the <literal>noop</literal>,
            <literal>hashmap</literal> and <literal>pyscripts</literal>. Only the noop rating module is just for
            testing. All modules can be enabled and disabled dynamically. Cloudkitty
            allows to run several rating modules simultaneously, and the user or
            operator can set the priority for a module. The order in which the modules
            process the data depends on their priority. The module with the highest
            priority comes first.</para>
      <section>
        <title>List current modules</title>
        <para>List current rating modules:</para>
        <screen><![CDATA[$ cloudkitty module-list
+-----------+---------+----------+
| Module    | Enabled | Priority |
+-----------+---------+----------+
| hashmap   | False   | 1        |
| noop      | True    | 1        |
| pyscripts | True    | 1        |
+-----------+---------+----------+]]></screen>
      </section>
      <section>
        <title>Enable or disable module</title>
        <para>Enable the hashmap rating module:</para>
        <screen><![CDATA[$ cloudkitty module-enable -n hashmap
+---------+---------+----------+
| Module  | Enabled | Priority |
+---------+---------+----------+
| hashmap | True    | 1        |
+---------+---------+----------+]]></screen>
        <para>Disable the pyscripts rating module:</para>
        <screen><![CDATA[$ cloudkitty module-disable -n pyscripts
+-----------+---------+----------+
| Module    | Enabled | Priority |
+-----------+---------+----------+
| pyscripts | False   | 1        |
+-----------+---------+----------+]]></screen>
      </section>
      <section>
        <title>Set priority</title>
        <para>Set the hashmap rating module priority to 100:</para>
        <screen><![CDATA[$ cloudkitty module-set-priority -n hashmap -p 100
+---------+---------+----------+
| Module  | Enabled | Priority |
+---------+---------+----------+
| hashmap | True    | 100      |
+---------+---------+----------+]]></screen>
      </section>
    </section>
    <section xml:base="rating/hashmap">
      <title>Hashmap rating module</title>
      <para>CloudKitty is shipped with core rating modules.</para>
      <section>
        <title>Hashmap composition</title>
        <para>You can see hashmap as a simple tree:</para>
        <para>HashMap is composed of different resources and groups.</para>
        <section>
          <title>Group</title>
          <para>A group is a way to group calculations of mappings. For example you might want
                    to apply a set of rules to charge instance_uptime and another set to block
                    storage volume. You don’t want the two to be linked so you’ll create one group
                    for each calculation.</para>
        </section>
        <section>
          <title>Service</title>
          <para>A service is a way to map the rule to the type of data collected. Currently,
                    the following services are available:</para>
          <itemizedlist>
            <listitem>
              <para>compute</para>
            </listitem>
            <listitem>
              <para>image</para>
            </listitem>
            <listitem>
              <para>volume</para>
            </listitem>
            <listitem>
              <para>network.bw.in</para>
            </listitem>
            <listitem>
              <para>network.bw.out</para>
            </listitem>
            <listitem>
              <para>network.floating</para>
            </listitem>
          </itemizedlist>
          <para>Enabled services are defined in the configuration file. By default, only the
                    compute service is enabled.</para>
        </section>
        <section>
          <title>Field</title>
          <para>A field is referring to a metadata field of a resource. For example on an
                    instance object (<emphasis role="bold">compute</emphasis>), you can use the flavor to define specific rules.</para>
          <para>With Ceilometer as the collector, the following fields are available for each
                    service:</para>
          <itemizedlist>
            <listitem>
              <para>Compute: flavor, vcpus, memory (MB), image_id, availability_zone</para>
            </listitem>
            <listitem>
              <para>Volume: name, volume_type, availability_zone</para>
            </listitem>
            <listitem>
              <para>Image: disk_format, container_format, is_public, availability_zone</para>
            </listitem>
          </itemizedlist>
          <para>With Gnocchi as collector, the following fields are available for each service:</para>
          <itemizedlist>
            <listitem>
              <para>Compute: flavor_id, vcpus, image_id, memory (MB)</para>
            </listitem>
            <listitem>
              <para>Image: container_format, disk_format</para>
            </listitem>
          </itemizedlist>
        </section>
        <section>
          <title>Mapping</title>
          <para>A mapping is the final object, it’s what triggers calculation, for example a
                    specific value of flavor on an instance.
                    It maps cost to a value of metadata in case of field mapping. And directly a
                    cost in case of service mapping.</para>
          <para>A mapping can be project specific by providing a project id at creation and
                    supports overloading, i.e. you can specify multiple mappings for the same value
                    with different project ids and costs.</para>
        </section>
        <section>
          <title>Threshold</title>
          <para>A threshold entry is used to apply rating rules base on level. Its behaviour is
                    similar to a mapping except that it applies the cost base on the level.</para>
          <para>As for mapping, a threshold can be project specific by providing a project id
                    at creation.</para>
        </section>
      </section>
      <section>
        <title>HashMap formula</title>
        <para>Based on all the previous objects here’s the calculation formula :
                </para>
        <para>For an active resource on a collection period, quantity is defined as follow:</para>
        <itemizedlist>
          <listitem>
            <para>compute: 1 (unit: instance)</para>
          </listitem>
          <listitem>
            <para>image: upload image size (unit: MB)</para>
          </listitem>
          <listitem>
            <para>volume: volume size (unit: GB)</para>
          </listitem>
          <listitem>
            <para>network.bw.in: ingoing network usage (unit: MB)</para>
          </listitem>
          <listitem>
            <para>network.bw.out: outgoing network usage (unit: MB)</para>
          </listitem>
          <listitem>
            <para>network.floating: 1 (unit: ip)</para>
          </listitem>
        </itemizedlist>
      </section>
      <section>
        <title>Example</title>
        <section>
          <title>Compute uptime</title>
          <para>Apply rating rule on the compute service to charge the instance based on it’s
                    flavor and uptime:</para>
          <para>Create a group <emphasis>instance_uptime_flavor</emphasis>:</para>
          <screen><![CDATA[$ cloudkitty hashmap-group-create -n instance_uptime_flavor
+----------+--------------------------------------+
| Property | Value                                |
+----------+--------------------------------------+
| group_id | 26d2d69a-4c42-47f1-9d44-2cdfad167f7d |
| name     | instance_uptime_flavor               |
+----------+--------------------------------------+

$ cloudkitty hashmap-group-list
+------------------------+--------------------------------------+
| Name                   | Group id                             |
+------------------------+--------------------------------------+
| instance_uptime_flavor | 26d2d69a-4c42-47f1-9d44-2cdfad167f7d |
+------------------------+--------------------------------------+]]></screen>
          <para>Create the service matching rule:</para>
          <screen><![CDATA[$ cloudkitty hashmap-service-create -n compute
+------------+--------------------------------------+
| Property   | Value                                |
+------------+--------------------------------------+
| name       | compute                              |
| service_id | 08ab2d27-fe95-400c-9602-e5ad5efdda8b |
+------------+--------------------------------------+]]></screen>
          <para>Create a field matching rule:</para>
          <screen><![CDATA[$ cloudkitty hashmap-field-create \
 -s 08ab2d27-fe95-400c-9602-e5ad5efdda8b -n flavor
+------------+--------------------------------------+
| Property   | Value                                |
+------------+--------------------------------------+
| field_id   | f37364af-6525-40fc-ae08-6d4087429862 |
| name       | flavor                               |
| service_id | 08ab2d27-fe95-400c-9602-e5ad5efdda8b |
+------------+--------------------------------------+]]></screen>
          <para>Create a mapping in the group <emphasis>instance_uptime_flavor</emphasis> that will map m1.tiny
                    instance to a cost of 0.01:</para>
          <screen><![CDATA[$ cloudkitty hashmap-mapping-create \
 -f f37364af-6525-40fc-ae08-6d4087429862 \
 -v m1.tiny -t flat -c 0.01 -g 26d2d69a-4c42-47f1-9d44-2cdfad167f7d
+------------+--------------------------------------+
| Property   | Value                                |
+------------+--------------------------------------+
| cost       | 0.01                                 |
| field_id   | f37364af-6525-40fc-ae08-6d4087429862 |
| group_id   | 26d2d69a-4c42-47f1-9d44-2cdfad167f7d |
| mapping_id | df592a91-a6a5-41fa-ba2e-2f763eaa36e5 |
| service_id | None                                 |
| tenant_id  | None                                 |
| type       | flat                                 |
| value      | m1.tiny                              |
+------------+--------------------------------------+]]></screen>
          <para>In this example every machine in any project with the flavor m1.tiny will be
                    charged 0.01 per collection period.</para>
        </section>
        <section>
          <title>Volume per gb with discount</title>
          <para>Now let’s do some threshold based rating.</para>
          <para>Create a group <emphasis>volume_thresholds</emphasis>:</para>
          <screen><![CDATA[$ cloudkitty hashmap-group-create -n volume_thresholds
+----------+--------------------------------------+
| Property | Value                                |
+----------+--------------------------------------+
| group_id | dd3dc30e-0e63-11e6-9f83-ab4208c1fe2d |
| name     | volume_thresholds                    |
+----------+--------------------------------------+

$ cloudkitty hashmap-group-list
+-------------------+--------------------------------------+
| Name              | Group id                             |
+-------------------+--------------------------------------+
| volume_thresholds | dd3dc30e-0e63-11e6-9f83-ab4208c1fe2d |
+-------------------+--------------------------------------+]]></screen>
          <para>Create the service matching rule:</para>
          <screen><![CDATA[$ cloudkitty hashmap-service-create -n volume
+------------+--------------------------------------+
| Property   | Value                                |
+------------+--------------------------------------+
| name       | volume                               |
| service_id | 16a48060-0e64-11e6-8e4e-1b285514a36e |
+------------+--------------------------------------+]]></screen>
          <para>Now let’s setup the price per gigabyte:</para>
          <screen><![CDATA[$ cloudkitty hashmap-mapping-create \
 -s 16a48060-0e64-11e6-8e4e-1b285514a36e \
 -t flat -c 0.001 -g dd3dc30e-0e63-11e6-9f83-ab4208c1fe2d
+------------+--------------------------------------+
| Property   | Value                                |
+------------+--------------------------------------+
| cost       | 0.001                                |
| field_id   | None                                 |
| group_id   | dd3dc30e-0e63-11e6-9f83-ab4208c1fe2d |
| mapping_id | 41669786-240b-11e6-872c-af96ddb6619c |
| service_id | 16a48060-0e64-11e6-8e4e-1b285514a36e |
| tenant_id  | None                                 |
| type       | flat                                 |
| value      |                                      |
+------------+--------------------------------------+]]></screen>
          <para>We have the basic price per gigabyte be we now want to apply a discount on huge
                    data volumes. Create the thresholds in the group <emphasis>volume_thresholds</emphasis> that will
                    map different volume quantity to costs:</para>
          <para>Here we set a threshold when going past 50GB, and apply a 2% discount (0.98):</para>
          <screen><![CDATA[$ cloudkitty hashmap-threshold-create \
 -s 16a48060-0e64-11e6-8e4e-1b285514a36e \
 -l 50 -t rate -c 0.98 -g dd3dc30e-0e63-11e6-9f83-ab4208c1fe2d
+--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| cost         | 0.98                                 |
| field_id     | None                                 |
| group_id     | dd3dc30e-0e63-11e6-9f83-ab4208c1fe2d |
| level        | 50                                   |
| threshold_id | 8eb45bfc-0e64-11e6-ad0e-07a62425f284 |
| service_id   | 16a48060-0e64-11e6-8e4e-1b285514a36e |
| tenant_id    | None                                 |
| type         | rate                                 |
+--------------+--------------------------------------+]]></screen>
          <para>Here we set the same threshold for project 8f1e8645a0e7496a95a4fdf4b2795b2c
                    but with a 3% discount (0.97):</para>
          <screen><![CDATA[$ cloudkitty hashmap-threshold-create \
 -s 16a48060-0e64-11e6-8e4e-1b285514a36e \
 -l 50 -t rate -c 0.98 -g dd3dc30e-0e63-11e6-9f83-ab4208c1fe2d \
 -p 8f1e8645a0e7496a95a4fdf4b2795b2c
+--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| cost         | 0.97                                 |
| field_id     | None                                 |
| group_id     | dd3dc30e-0e63-11e6-9f83-ab4208c1fe2d |
| level        | 50                                   |
| threshold_id | 8eb45bfc-0e64-11e6-ad0e-07a62425f284 |
| service_id   | 16a48060-0e64-11e6-8e4e-1b285514a36e |
| tenant_id    | 8f1e8645a0e7496a95a4fdf4b2795b2c     |
| type         | rate                                 |
+--------------+--------------------------------------+]]></screen>
          <para>Here we set a threshold when going past 200GB, and apply a 5% discount (0.95):</para>
          <screen><![CDATA[$ cloudkitty hashmap-threshold-create \
 -s 16a48060-0e64-11e6-8e4e-1b285514a36e \
 -l 200 -t rate -c 0.95 -g dd3dc30e-0e63-11e6-9f83-ab4208c1fe2d
+--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| cost         | 0.95                                 |
| field_id     | None                                 |
| group_id     | dd3dc30e-0e63-11e6-9f83-ab4208c1fe2d |
| level        | 200                                  |
| threshold_id | baf180c8-0e64-11e6-abb3-cbae153a6d44 |
| service_id   | 16a48060-0e64-11e6-8e4e-1b285514a36e |
| tenant_id    | None                                 |
| type         | rate                                 |
+--------------+--------------------------------------+]]></screen>
          <para>In this example every volume is charged 0.01 per GB but if the size goes past
                    50GB you’ll get a 2% discount, if you even go further you’ll get 5% discount
                    (only one level apply at a time).</para>
          <para>For project 8f1e8645a0e7496a95a4fdf4b2795b2c only, you’ll get a 3% discount
                    instead of 2% when the size goes past 50GB and the same %5 discount it it goes
                    further.</para>
        </section>
      </section>
    </section>
    <section xml:base="rating/pyscripts">
      <title>PyScripts rating module</title>
      <para>The PyScripts module allows you to create your own rating module.
            A script is supposed to process the given data and to set the
            different prices.</para>
      <para>CAUTION: If you add several PyScripts, the order in which they will be executed
            is not guaranteed.</para>
      <section>
        <title>Custom module example</title>
        <section>
          <title>Price definitions</title>
          <screen><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[importdecimal# Price for each flavor. These are equivalent to hashmap field mappings.flavors={'m1.micro':decimal.Decimal(0.65),'m1.nano':decimal.Decimal(0.35),'m1.large':decimal.Decimal(2.67)}# Price per MB / GB for images and volumes. These are equivalent to# hashmap service mappings.image_mb_price=decimal.Decimal(0.002)volume_gb_price=decimal.Decimal(0.35)]]></screen>
        </section>
        <section>
          <title>Price calculation functions</title>
          <screen><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[# These functions return the price of a service usage on a collect period.# The price is always equivalent to the price per unit multiplied by# the quantity.defget_compute_price(item):ifnotitem['desc']['flavor']inflavors:return0else:return(decimal.Decimal(item['vol']['qty'])*flavors[item['desc']['flavor']])defget_image_price(item):ifnotitem['vol']['qty']:return0else:returndecimal.Decimal(item['vol']['qty'])*image_mb_pricedefget_volume_price(item):ifnotitem['vol']['qty']:return0else:returndecimal.Decimal(item['vol']['qty'])*volume_gb_price# Mapping each service to its price calculation functionservices={'compute':get_compute_price,'volume':get_volume_price,'image':get_image_price}]]></screen>
        </section>
        <section>
          <title>Processing the data</title>
          <screen><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[defprocess(data):# The 'data' parameter is a list of dictionaries containing a# "usage" and a "period" fieldfordindata:usage=d['usage']forservice_name,service_datainusage.items():# Do not calculate the price if the service has no# price calculation functionifservice_nameinservices.keys():# A service can have several items. For example,# each running instance is an item of the compute serviceforiteminservice_data:item['rating']={'price':services[service_name](item)}returndata# 'data' is passed as a global variable. The script is supposed to set the# 'rating' element of each item in each servicedata=process(data)]]></screen>
        </section>
      </section>
      <section>
        <title>Using your Script for rating</title>
        <section>
          <title>Enabling the PyScripts module</title>
          <para>To use you script for rating, you will need to enable the pyscripts module</para>
          <screen><![CDATA[$ cloudkitty module-enable -n pyscripts
+-----------+---------+
| Module    | Enabled |
+-----------+---------+
| pyscripts | True    |
+-----------+---------+]]></screen>
        </section>
        <section>
          <title>Adding the script to CloudKitty</title>
          <para>Create the script and specify its name.</para>
          <screen><![CDATA[$ cloudkitty pyscripts-script-create -n my_awesome_script -f script.py
+-----------+----------------------------------------------+
| Property  | Value                                        |
+-----------+----------------------------------------------+
| checksum  | 7650349ba3a913cef526dfb953575042ec3332e1     |
| data      | from __future__ import print_function        |
|           | from cloudkitty import rating                |
|           |                                              |
|           | import decimal                               |
|           |                                              |
|           |       {...}                                  |
|           |                                              |
|           | data = process(data)                         |
|           |                                              |
| name      | my_awesome_script                            |
| script_id | 93de054f-9d6f-40b0-8e4f-9b8fee8cad04         |
+-----------+----------------------------------------------+]]></screen>
        </section>
      </section>
    </section>
  </chapter>
  <chapter xml:base="devstack">
    <title>DevStack installation</title>
    <info/>
    <para>Add the following lines in your <literal>local.conf</literal> file to enable CloudKitty with
            the ceilometer collector:</para>
    <screen><![CDATA[[[local|localrc]]
# ceilometer
enable_plugin ceilometer https://git.openstack.org/openstack/ceilometer.git master

# horizon
enable_service horizon

# cloudkitty
enable_plugin cloudkitty https://git.openstack.org/openstack/cloudkitty.git master
enable_service ck-api ck-proc
CLOUDKITTY_COLLECTOR=ceilometer]]></screen>
    <para>To enable the gnocchi collector, use the following instead:</para>
    <screen><![CDATA[[[local|localrc]]
# gnocchi
enable_plugin gnocchi https://github.com/openstack/gnocchi master
enable_service gnocchi-api,gnocchi-metricd

# ceilometer
enable_plugin ceilometer https://git.openstack.org/openstack/ceilometer.git master

# horizon
enable_service horizon

# cloudkitty
enable_plugin cloudkitty https://git.openstack.org/openstack/cloudkitty.git master
enable_service ck-api ck-proc
CLOUDKITTY_COLLECTOR=gnocchi]]></screen>
    <para>Then start devstack:</para>
    <screen><![CDATA[./stack.sh]]></screen>
  </chapter>
  <chapter xml:base="arch">
    <title>CloudKitty’s Architecture</title>
    <info/>
    <para>CloudKitty can be cut in five big parts:</para>
    <itemizedlist>
      <listitem>
        <para>API</para>
      </listitem>
      <listitem>
        <para>Data collection (collector)</para>
      </listitem>
      <listitem>
        <para>Rating processing</para>
      </listitem>
      <listitem>
        <para>Storage</para>
      </listitem>
      <listitem>
        <para>Report writer</para>
      </listitem>
    </itemizedlist>
    <section>
      <title>Module loading and extensions</title>
      <para>Nearly every part of CloudKitty makes use of stevedore to load extensions
                dynamically.</para>
      <para>Every rating module is loaded at runtime and can be enabled/disabled directly
                via CloudKitty’s API. The module is responsible of its own API to ease the
                management of its configuration.</para>
      <para>Collectors and storage backends are loaded with stevedore but configured in
                CloudKitty’s configuration file.</para>
    </section>
    <section>
      <title>Collector</title>
      <para>
        <emphasis role="bold">Loaded with stevedore</emphasis>
      </para>
      <para>The name of the collector to use is specified in the configuration, only one
                collector can be loaded at once.
                This part is responsible of information gathering. It consists of a python
                class that loads data from a backend and return it in a format that CloudKitty
                can handle.</para>
      <para>The data format of CloudKitty is the following:</para>
      <screen language="json"><![CDATA[{
    "myservice": [
        {
            "rating": {
                "price": 0.1
            },
            "desc": {
                "sugar": "25",
                "fiber": "10",
                "name": "apples",
            },
            "vol": {
                "qty": 1,
                "unit": "banana"
            }
        }
    ]
}]]></screen>
      <para>Example code of a basic collector:</para>
      <screen language="python"><![CDATA[class MyCollector(BaseCollector):
    def __init__(self, **kwargs):
        super(MyCollector, self).__init__(**kwargs)

    def get_mydata(self, start, end=None, project_id=None, q_filter=None):
        # Do stuff
        return ck_data]]></screen>
      <para>You’ll now be able to add the gathering of mydata in CloudKitty by modifying
                the configuration and specifying the new service in collect/services.</para>
      <para>If you need to load multiple collectors, you can use the <literal>meta</literal> collector and
                use its API to enable/disable collector loading, and set priority.</para>
    </section>
    <section>
      <title>Rating</title>
      <para>
        <emphasis role="bold">Loaded with stevedore</emphasis>
      </para>
      <para>This is where every rating calculations is done. The data gathered by the
                collector is pushed in a pipeline of rating processors. Every processor does
                its calculations and updates the data.</para>
      <para>Example of minimal rating module (taken from the Noop module):</para>
      <screen language="python"><![CDATA[class Noop(rating.RatingProcessorBase):

    controller = NoopController
    description = 'Dummy test module'

    @property
    def enabled(self):
        """Check if the module is enabled

        :returns: bool if module is enabled
        """
        return True

    @property
    def priority(self):
        return 1

    def reload_config(self):
        pass

    def process(self, data):
        for cur_data in data:
            cur_usage = cur_data['usage']
            for service in cur_usage:
                for entry in cur_usage[service]:
                    if 'rating' not in entry:
                        entry['rating'] = {'price': decimal.Decimal(0)}
        return data]]></screen>
    </section>
    <section>
      <title>Storage</title>
      <para>
        <emphasis role="bold">Loaded with stevedore</emphasis>
      </para>
      <para>The storage module is responsible of storing the data in a backend. It
                implements an API on top of the storage to be able to query the data without
                the need of knowing the type of backend used.</para>
      <para>You can use the API to create reports on the fly for example.</para>
    </section>
    <section>
      <title>Writer</title>
      <para>
        <emphasis role="bold">Loaded with stevedore</emphasis>
      </para>
      <para>In the same way as the rating pipeline, the writing is handled with a pipeline.
                The data is pushed to write orchestrator that will store the data in a
                transient DB (in case of output file invalidation). And then to every writer in
                the pipeline which is responsible of the writing.</para>
    </section>
  </chapter>
  <chapter xml:base="api">
    <title>API Reference</title>
    <info/>
    <section xml:base="webapi/root">
      <title>CloudKitty REST API (root)</title>
      <variablelist>
        <varlistentry xml:id="APILink">
          <term>
            <literal>APILink</literal>
          </term>
          <listitem>
            <para>API link description.</para>
            <para>Data samples:</para>
            <variablelist>
              <varlistentry>
                <term>Json</term>
                <listitem>
                  <screen language="javascript"><![CDATA[{
    "href": "http://127.0.0.1:8889/v1",
    "rel": "self",
    "type": "text/html"
}]]></screen>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>XML</term>
                <listitem>
                  <screen language="xml"><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[b'<value>\n  <type>text/html</type>\n  <rel>self</rel>\n  <href>http://127.0.0.1:8889/v1</href>\n</value>']]></screen>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.api.root.APILink.href">
                <term>
                  <property>cloudkitty.api.root.APILink.href</property>
                </term>
                <listitem>
                  <para>URL of the link.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.api.root.APILink.rel">
                <term>
                  <property>cloudkitty.api.root.APILink.rel</property>
                </term>
                <listitem>
                  <para>Relationship with this link.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.api.root.APILink.type">
                <term>
                  <property>cloudkitty.api.root.APILink.type</property>
                </term>
                <listitem>
                  <para>Type of link.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="APIMediaType">
          <term>
            <literal>APIMediaType</literal>
          </term>
          <listitem>
            <para>Media type description.</para>
            <para>Data samples:</para>
            <variablelist>
              <varlistentry>
                <term>Json</term>
                <listitem>
                  <screen language="javascript"><![CDATA[{
    "base": "application/json",
    "type": "application/vnd.openstack.cloudkitty-v1+json"
}]]></screen>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>XML</term>
                <listitem>
                  <screen language="xml"><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[b'<value>\n  <base>application/json</base>\n  <type>application/vnd.openstack.cloudkitty-v1+json</type>\n</value>']]></screen>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.api.root.APIMediaType.base">
                <term>
                  <property>cloudkitty.api.root.APIMediaType.base</property>
                </term>
                <listitem>
                  <para>Base type of this media type.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.api.root.APIMediaType.type">
                <term>
                  <property>cloudkitty.api.root.APIMediaType.type</property>
                </term>
                <listitem>
                  <para>Type of this media type.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="APIVersion">
          <term>
            <literal>APIVersion</literal>
          </term>
          <listitem>
            <para>API Version description.</para>
            <para>Data samples:</para>
            <variablelist>
              <varlistentry>
                <term>Json</term>
                <listitem>
                  <screen language="javascript"><![CDATA[{
    "id": "v1",
    "links": [
        {
            "href": "http://127.0.0.1:8889/v1",
            "rel": "self",
            "type": "text/html"
        }
    ],
    "media_types": [
        {
            "base": "application/json",
            "type": "application/vnd.openstack.cloudkitty-v1+json"
        }
    ],
    "status": "STABLE",
    "updated": "2014-08-11T16:00:00Z"
}]]></screen>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>XML</term>
                <listitem>
                  <screen language="xml"><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[b'<value>\n  <id>v1</id>\n  <status>STABLE</status>\n  <updated>2014-08-11T16:00:00Z</updated>\n  <links>\n    <item>\n      <type>text/html</type>\n      <rel>self</rel>\n      <href>http://127.0.0.1:8889/v1</href>\n    </item>\n  </links>\n  <media_types>\n    <item>\n      <base>application/json</base>\n      <type>application/vnd.openstack.cloudkitty-v1+json</type>\n    </item>\n  </media_types>\n</value>']]></screen>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.api.root.APIVersion.id">
                <term>
                  <property>cloudkitty.api.root.APIVersion.id</property>
                </term>
                <listitem>
                  <para>ID of the version.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.api.root.APIVersion.links">
                <term>
                  <property>cloudkitty.api.root.APIVersion.links</property>
                </term>
                <listitem>
                  <para>List of links to API resources.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.api.root.APIVersion.media_types">
                <term>
                  <property>cloudkitty.api.root.APIVersion.media_types</property>
                </term>
                <listitem>
                  <para>Types accepted by this API.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.api.root.APIVersion.status">
                <term>
                  <property>cloudkitty.api.root.APIVersion.status</property>
                </term>
                <listitem>
                  <para>Status of the version.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.api.root.APIVersion.updated">
                <term>
                  <property>cloudkitty.api.root.APIVersion.updated</property>
                </term>
                <listitem>
                  <para>Last update in iso8601 format.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section xml:base="webapi/v1">
      <title>CloudKitty REST API (v1)</title>
      <section>
        <title>Collector</title>
        <variablelist>
          <varlistentry xml:id="get--v1-collector">
            <term>
              <literal>get--v1-collector</literal>
            </term>
            <listitem>
              <para>Unused function, hack to let pecan route requests to subcontrollers.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="get--v1-collector-mappings">
            <term>
              <literal>get--v1-collector-mappings</literal>
            </term>
            <listitem>
              <para>Return the list of every services mapped to a collector.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="get--v1-collector-mappings-(service)">
            <term>
              <literal>get--v1-collector-mappings-(service)</literal>
            </term>
            <listitem>
              <para>Return a service to collector mapping.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="post--v1-collector-mappings">
            <term>
              <literal>post--v1-collector-mappings</literal>
            </term>
            <listitem>
              <para>Create a service to collector mapping.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="delete--v1-collector-mappings">
            <term>
              <literal>delete--v1-collector-mappings</literal>
            </term>
            <listitem>
              <para>Delete a service to collector mapping.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="get--v1-collector-states">
            <term>
              <literal>get--v1-collector-states</literal>
            </term>
            <listitem>
              <para>Query the enable state of a collector.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="put--v1-collector-states">
            <term>
              <literal>put--v1-collector-states</literal>
            </term>
            <listitem>
              <para>Set the enable state of a collector.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="CollectorInfos">
            <term>
              <literal>CollectorInfos</literal>
            </term>
            <listitem>
              <para>Type describing a collector module.</para>
              <para>Data samples:</para>
              <variablelist>
                <varlistentry>
                  <term>Json</term>
                  <listitem>
                    <screen language="javascript"><![CDATA[{
    "enabled": true,
    "name": "ceilometer"
}]]></screen>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term>XML</term>
                  <listitem>
                    <screen language="xml"><![CDATA[b'<value>\n  <name>ceilometer</name>\n  <enabled>true</enabled>\n</value>']]></screen>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="cloudkitty.api.v1.datamodels.collector.CollectorInfos.enabled">
                  <term>
                    <property>cloudkitty.api.v1.datamodels.collector.CollectorInfos.enabled</property>
                  </term>
                  <listitem>
                    <para>State of the collector.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="cloudkitty.api.v1.datamodels.collector.CollectorInfos.name">
                  <term>
                    <property>cloudkitty.api.v1.datamodels.collector.CollectorInfos.name</property>
                  </term>
                  <listitem>
                    <para>Name of the collector.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="ServiceToCollectorMapping">
            <term>
              <literal>ServiceToCollectorMapping</literal>
            </term>
            <listitem>
              <para>Type describing a service to collector mapping.</para>
              <para>Data samples:</para>
              <variablelist>
                <varlistentry>
                  <term>Json</term>
                  <listitem>
                    <screen language="javascript"><![CDATA[{
    "collector": "ceilometer",
    "service": "compute"
}]]></screen>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term>XML</term>
                  <listitem>
                    <screen language="xml"><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[b'<value>\n  <service>compute</service>\n  <collector>ceilometer</collector>\n</value>']]></screen>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="cloudkitty.api.v1.datamodels.collector.ServiceToCollectorMapping.collector">
                  <term>
                    <property>cloudkitty.api.v1.datamodels.collector.ServiceToCollectorMapping.collector</property>
                  </term>
                  <listitem>
                    <para>Name of the collector.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="cloudkitty.api.v1.datamodels.collector.ServiceToCollectorMapping.service">
                  <term>
                    <property>cloudkitty.api.v1.datamodels.collector.ServiceToCollectorMapping.service</property>
                  </term>
                  <listitem>
                    <para>Name of the service.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="ServiceToCollectorMappingCollection">
            <term>
              <literal>ServiceToCollectorMappingCollection</literal>
            </term>
            <listitem>
              <para>Type describing a service to collector mapping collection.</para>
              <para>Data samples:</para>
              <variablelist>
                <varlistentry>
                  <term>Json</term>
                  <listitem>
                    <screen language="javascript"><![CDATA[{
    "mappings": [
        {
            "collector": "ceilometer",
            "service": "compute"
        }
    ]
}]]></screen>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term>XML</term>
                  <listitem>
                    <screen language="xml"><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[b'<value>\n  <mappings>\n    <item>\n      <service>compute</service>\n      <collector>ceilometer</collector>\n    </item>\n  </mappings>\n</value>']]></screen>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="cloudkitty.api.v1.datamodels.collector.ServiceToCollectorMappingCollection.mappings">
                  <term>
                    <property>cloudkitty.api.v1.datamodels.collector.ServiceToCollectorMappingCollection.mappings</property>
                  </term>
                  <listitem>
                    <para>List of service to collector mappings.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section>
        <title>Info</title>
        <variablelist>
          <varlistentry xml:id="get--v1-info-config">
            <term>
              <literal>get--v1-info-config</literal>
            </term>
            <listitem>
              <para>Return current configuration.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="get--v1-info-services">
            <term>
              <literal>get--v1-info-services</literal>
            </term>
            <listitem>
              <para>Get the service list.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="get--v1-info-services-(service_name)">
            <term>
              <literal>get--v1-info-services-(service_name)</literal>
            </term>
            <listitem>
              <para>Return a service.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="CloudkittyServiceInfo">
            <term>
              <literal>CloudkittyServiceInfo</literal>
            </term>
            <listitem>
              <para>Type describing a service info in CloudKitty.</para>
              <para>Data samples:</para>
              <variablelist>
                <varlistentry>
                  <term>Json</term>
                  <listitem>
                    <screen language="javascript"><![CDATA[{
    "metadata": [
        "resource_id",
        "flavor",
        "availability_zone"
    ],
    "service_id": "compute",
    "unit": "instance"
}]]></screen>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term>XML</term>
                  <listitem>
                    <screen language="xml"><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[b'<value>\n  <service_id>compute</service_id>\n  <metadata>\n    <item>resource_id</item>\n    <item>flavor</item>\n    <item>availability_zone</item>\n  </metadata>\n  <unit>instance</unit>\n</value>']]></screen>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="cloudkitty.api.v1.datamodels.info.CloudkittyServiceInfo.metadata">
                  <term>
                    <property>cloudkitty.api.v1.datamodels.info.CloudkittyServiceInfo.metadata</property>
                  </term>
                  <listitem>
                    <para>List of service metadata</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="cloudkitty.api.v1.datamodels.info.CloudkittyServiceInfo.service_id">
                  <term>
                    <property>cloudkitty.api.v1.datamodels.info.CloudkittyServiceInfo.service_id</property>
                  </term>
                  <listitem>
                    <para>Name of the service.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="cloudkitty.api.v1.datamodels.info.CloudkittyServiceInfo.unit">
                  <term>
                    <property>cloudkitty.api.v1.datamodels.info.CloudkittyServiceInfo.unit</property>
                  </term>
                  <listitem>
                    <para>service unit</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="CloudkittyServiceInfoCollection">
            <term>
              <literal>CloudkittyServiceInfoCollection</literal>
            </term>
            <listitem>
              <para>A list of CloudKittyServiceInfo.</para>
              <para>Data samples:</para>
              <variablelist>
                <varlistentry>
                  <term>Json</term>
                  <listitem>
                    <screen language="javascript"><![CDATA[{
    "services": [
        {
            "metadata": [
                "resource_id",
                "flavor",
                "availability_zone"
            ],
            "service_id": "compute",
            "unit": "instance"
        }
    ]
}]]></screen>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term>XML</term>
                  <listitem>
                    <screen language="xml"><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[b'<value>\n  <services>\n    <item>\n      <service_id>compute</service_id>\n      <metadata>\n        <item>resource_id</item>\n        <item>flavor</item>\n        <item>availability_zone</item>\n      </metadata>\n      <unit>instance</unit>\n    </item>\n  </services>\n</value>']]></screen>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section>
        <title>Rating</title>
        <variablelist>
          <varlistentry xml:id="get--v1-rating-modules">
            <term>
              <literal>get--v1-rating-modules</literal>
            </term>
            <listitem>
              <para>return the list of loaded modules.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="get--v1-rating-modules-(module_id)">
            <term>
              <literal>get--v1-rating-modules-(module_id)</literal>
            </term>
            <listitem>
              <para>return a module</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="put--v1-rating-modules">
            <term>
              <literal>put--v1-rating-modules</literal>
            </term>
            <listitem>
              <para>Change the state and priority of a module.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="post--v1-rating-quote">
            <term>
              <literal>post--v1-rating-quote</literal>
            </term>
            <listitem>
              <para>Get an instant quote based on multiple resource descriptions.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="get--v1-rating-reload_modules">
            <term>
              <literal>get--v1-rating-reload_modules</literal>
            </term>
            <listitem>
              <para>Trigger a rating module list reload.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="CloudkittyModule">
            <term>
              <literal>CloudkittyModule</literal>
            </term>
            <listitem>
              <para>A rating extension summary</para>
              <para>Data samples:</para>
              <variablelist>
                <varlistentry>
                  <term>Json</term>
                  <listitem>
                    <screen language="javascript"><![CDATA[{
    "description": "Sample extension.",
    "enabled": true,
    "hot-config": false,
    "priority": 2
}]]></screen>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term>XML</term>
                  <listitem>
                    <screen language="xml"><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[b'<value>\n  <description>Sample extension.</description>\n  <enabled>true</enabled>\n  <hot-config>false</hot-config>\n  <priority>2</priority>\n</value>']]></screen>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="cloudkitty.api.v1.datamodels.rating.CloudkittyModule.description">
                  <term>
                    <property>cloudkitty.api.v1.datamodels.rating.CloudkittyModule.description</property>
                  </term>
                  <listitem>
                    <para>Short description of the extension.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="cloudkitty.api.v1.datamodels.rating.CloudkittyModule.enabled">
                  <term>
                    <property>cloudkitty.api.v1.datamodels.rating.CloudkittyModule.enabled</property>
                  </term>
                  <listitem>
                    <para>Extension status.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="cloudkitty.api.v1.datamodels.rating.CloudkittyModule.hot_config">
                  <term>
                    <property>cloudkitty.api.v1.datamodels.rating.CloudkittyModule.hot_config</property>
                  </term>
                  <listitem>
                    <para>On-the-fly configuration support.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="cloudkitty.api.v1.datamodels.rating.CloudkittyModule.module_id">
                  <term>
                    <property>cloudkitty.api.v1.datamodels.rating.CloudkittyModule.module_id</property>
                  </term>
                  <listitem>
                    <para>Name of the extension.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="cloudkitty.api.v1.datamodels.rating.CloudkittyModule.priority">
                  <term>
                    <property>cloudkitty.api.v1.datamodels.rating.CloudkittyModule.priority</property>
                  </term>
                  <listitem>
                    <para>Priority of the extension.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="CloudkittyModuleCollection">
            <term>
              <literal>CloudkittyModuleCollection</literal>
            </term>
            <listitem>
              <para>A list of rating extensions.</para>
              <para>Data samples:</para>
              <variablelist>
                <varlistentry>
                  <term>Json</term>
                  <listitem>
                    <screen language="javascript"><![CDATA[{}]]></screen>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term>XML</term>
                  <listitem>
                    <screen language="xml"><![CDATA[b'<value />']]></screen>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="CloudkittyResource">
            <term>
              <literal>CloudkittyResource</literal>
            </term>
            <listitem>
              <para>Type describing a resource in CloudKitty.</para>
              <para>Data samples:</para>
              <variablelist>
                <varlistentry>
                  <term>Json</term>
                  <listitem>
                    <screen language="javascript"><![CDATA[{
    "desc": {
        "image_id": "a41fba37-2429-4f15-aa00-b5bc4bf557bf"
    },
    "service": "compute",
    "volume": "1"
}]]></screen>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term>XML</term>
                  <listitem>
                    <screen language="xml"><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[b'<value>\n  <service>compute</service>\n  <desc>\n    <item>\n      <key>image_id</key>\n      <value>a41fba37-2429-4f15-aa00-b5bc4bf557bf</value>\n    </item>\n  </desc>\n  <volume>1</volume>\n</value>']]></screen>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="cloudkitty.api.v1.datamodels.rating.CloudkittyResource.desc">
                  <term>
                    <property>cloudkitty.api.v1.datamodels.rating.CloudkittyResource.desc</property>
                  </term>
                  <listitem>
                    <para>Description of the resources parameters.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="cloudkitty.api.v1.datamodels.rating.CloudkittyResource.service">
                  <term>
                    <property>cloudkitty.api.v1.datamodels.rating.CloudkittyResource.service</property>
                  </term>
                  <listitem>
                    <para>Name of the service.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="cloudkitty.api.v1.datamodels.rating.CloudkittyResource.volume">
                  <term>
                    <property>cloudkitty.api.v1.datamodels.rating.CloudkittyResource.volume</property>
                  </term>
                  <listitem>
                    <para>Volume of resources.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="CloudkittyResourceCollection">
            <term>
              <literal>CloudkittyResourceCollection</literal>
            </term>
            <listitem>
              <para>A list of CloudKittyResources.</para>
              <para>Data samples:</para>
              <variablelist>
                <varlistentry>
                  <term>Json</term>
                  <listitem>
                    <screen language="javascript"><![CDATA[{}]]></screen>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term>XML</term>
                  <listitem>
                    <screen language="xml"><![CDATA[b'<value />']]></screen>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section>
        <title>Report</title>
        <variablelist>
          <varlistentry xml:id="get--v1-report-summary">
            <term>
              <literal>get--v1-report-summary</literal>
            </term>
            <listitem>
              <para>Return the summary to pay for a given period.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="get--v1-report-tenants">
            <term>
              <literal>get--v1-report-tenants</literal>
            </term>
            <listitem>
              <para>Return the list of rated tenants.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="get--v1-report-total">
            <term>
              <literal>get--v1-report-total</literal>
            </term>
            <listitem>
              <para>Return the amount to pay for a given period.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section>
        <title>Storage</title>
        <variablelist>
          <varlistentry xml:id="get--v1-storage-dataframes">
            <term>
              <literal>get--v1-storage-dataframes</literal>
            </term>
            <listitem>
              <para>Return a list of rated resources for a time period and a tenant.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="RatedResource">
            <term>
              <literal>RatedResource</literal>
            </term>
            <listitem>
              <para>Represents a rated CloudKitty resource.</para>
              <para>Data samples:</para>
              <variablelist>
                <varlistentry>
                  <term>Json</term>
                  <listitem>
                    <screen language="javascript"><![CDATA[{
    "desc": {
        "flavor": "m1.tiny",
        "vcpus": "1"
    },
    "rating": "1.0",
    "service": "compute",
    "volume": "1.0"
}]]></screen>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term>XML</term>
                  <listitem>
                    <screen language="xml"><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[b'<value>\n  <rating>1.0</rating>\n  <service>compute</service>\n  <desc>\n    <item>\n      <key>flavor</key>\n      <value>m1.tiny</value>\n    </item>\n    <item>\n      <key>vcpus</key>\n      <value>1</value>\n    </item>\n  </desc>\n  <volume>1.0</volume>\n</value>']]></screen>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="DataFrame">
            <term>
              <literal>DataFrame</literal>
            </term>
            <listitem>
              <para>Type describing a stored data frame.</para>
              <para>Data samples:</para>
              <variablelist>
                <varlistentry>
                  <term>Json</term>
                  <listitem>
                    <screen language="javascript"><![CDATA[{
    "begin": "2015-04-22T07:00:00",
    "end": "2015-04-22T08:00:00",
    "resources": [
        {
            "desc": {
                "flavor": "m1.tiny",
                "vcpus": "1"
            },
            "rating": "1.0",
            "service": "compute",
            "volume": "1.0"
        }
    ],
    "tenant_id": "69d12143688f413cbf5c3cfe03ed0a12"
}]]></screen>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term>XML</term>
                  <listitem>
                    <screen language="xml"><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[b'<value>\n  <begin>2015-04-22T07:00:00</begin>\n  <end>2015-04-22T08:00:00</end>\n  <tenant_id>69d12143688f413cbf5c3cfe03ed0a12</tenant_id>\n  <resources>\n    <item>\n      <rating>1.0</rating>\n      <service>compute</service>\n      <desc>\n        <item>\n          <key>flavor</key>\n          <value>m1.tiny</value>\n        </item>\n        <item>\n          <key>vcpus</key>\n          <value>1</value>\n        </item>\n      </desc>\n      <volume>1.0</volume>\n    </item>\n  </resources>\n</value>']]></screen>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="cloudkitty.api.v1.datamodels.storage.DataFrame.begin">
                  <term>
                    <property>cloudkitty.api.v1.datamodels.storage.DataFrame.begin</property>
                  </term>
                  <listitem>
                    <para>Begin date for the sample.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="cloudkitty.api.v1.datamodels.storage.DataFrame.end">
                  <term>
                    <property>cloudkitty.api.v1.datamodels.storage.DataFrame.end</property>
                  </term>
                  <listitem>
                    <para>End date for the sample.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="cloudkitty.api.v1.datamodels.storage.DataFrame.resources">
                  <term>
                    <property>cloudkitty.api.v1.datamodels.storage.DataFrame.resources</property>
                  </term>
                  <listitem>
                    <para>A resource list.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="cloudkitty.api.v1.datamodels.storage.DataFrame.tenant_id">
                  <term>
                    <property>cloudkitty.api.v1.datamodels.storage.DataFrame.tenant_id</property>
                  </term>
                  <listitem>
                    <para>Tenant owner of the sample.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="DataFrameCollection">
            <term>
              <literal>DataFrameCollection</literal>
            </term>
            <listitem>
              <para>A list of stored data frames.</para>
              <para>Data samples:</para>
              <variablelist>
                <varlistentry>
                  <term>Json</term>
                  <listitem>
                    <screen language="javascript"><![CDATA[{
    "dataframes": [
        {
            "begin": "2015-04-22T07:00:00",
            "end": "2015-04-22T08:00:00",
            "resources": [
                {
                    "desc": {
                        "flavor": "m1.tiny",
                        "vcpus": "1"
                    },
                    "rating": "1.0",
                    "service": "compute",
                    "volume": "1.0"
                }
            ],
            "tenant_id": "69d12143688f413cbf5c3cfe03ed0a12"
        }
    ]
}]]></screen>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term>XML</term>
                  <listitem>
                    <screen language="xml"><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[b'<value>\n  <dataframes>\n    <item>\n      <begin>2015-04-22T07:00:00</begin>\n      <end>2015-04-22T08:00:00</end>\n      <tenant_id>69d12143688f413cbf5c3cfe03ed0a12</tenant_id>\n      <resources>\n        <item>\n          <rating>1.0</rating>\n          <service>compute</service>\n          <desc>\n            <item>\n              <key>flavor</key>\n              <value>m1.tiny</value>\n            </item>\n            <item>\n              <key>vcpus</key>\n              <value>1</value>\n            </item>\n          </desc>\n          <volume>1.0</volume>\n        </item>\n      </resources>\n    </item>\n  </dataframes>\n</value>']]></screen>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
    <section xml:base="webapi/rating/hashmap">
      <title>HashMap Module REST API</title>
      <variablelist>
        <varlistentry xml:id="get--v1-rating-module_config-hashmap-types">
          <term>
            <literal>get--v1-rating-module_config-hashmap-types</literal>
          </term>
          <listitem>
            <para>Return the list of every mapping type available.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="get--v1-rating-module_config-hashmap-services">
          <term>
            <literal>get--v1-rating-module_config-hashmap-services</literal>
          </term>
          <listitem>
            <para>Get the service list</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="get--v1-rating-module_config-hashmap-services-(service_id)">
          <term>
            <literal>get--v1-rating-module_config-hashmap-services-(service_id)</literal>
          </term>
          <listitem>
            <para>Return a service.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="post--v1-rating-module_config-hashmap-services">
          <term>
            <literal>post--v1-rating-module_config-hashmap-services</literal>
          </term>
          <listitem>
            <para>Create hashmap service.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="delete--v1-rating-module_config-hashmap-services">
          <term>
            <literal>delete--v1-rating-module_config-hashmap-services</literal>
          </term>
          <listitem>
            <para>Delete the service and all the sub keys recursively.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="Service">
          <term>
            <literal>Service</literal>
          </term>
          <listitem>
            <para>Type describing a service.</para>
            <para>A service is directly mapped to the usage key, the collected service.</para>
            <para>Data samples:</para>
            <variablelist>
              <varlistentry>
                <term>Json</term>
                <listitem>
                  <screen language="javascript"><![CDATA[{
    "name": "compute",
    "service_id": "a733d0e1-1ec9-4800-8df8-671e4affd017"
}]]></screen>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>XML</term>
                <listitem>
                  <screen language="xml"><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[b'<value>\n  <service_id>a733d0e1-1ec9-4800-8df8-671e4affd017</service_id>\n  <name>compute</name>\n</value>']]></screen>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.service.Service.name">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.service.Service.name</property>
                </term>
                <listitem>
                  <para>Name of the service.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.service.Service.service_id">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.service.Service.service_id</property>
                </term>
                <listitem>
                  <para>UUID of the service.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="ServiceCollection">
          <term>
            <literal>ServiceCollection</literal>
          </term>
          <listitem>
            <para>Type describing a list of services.</para>
            <para>Data samples:</para>
            <variablelist>
              <varlistentry>
                <term>Json</term>
                <listitem>
                  <screen language="javascript"><![CDATA[{
    "services": [
        {
            "name": "compute",
            "service_id": "a733d0e1-1ec9-4800-8df8-671e4affd017"
        }
    ]
}]]></screen>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>XML</term>
                <listitem>
                  <screen language="xml"><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[b'<value>\n  <services>\n    <item>\n      <service_id>a733d0e1-1ec9-4800-8df8-671e4affd017</service_id>\n      <name>compute</name>\n    </item>\n  </services>\n</value>']]></screen>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.service.ServiceCollection.services">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.service.ServiceCollection.services</property>
                </term>
                <listitem>
                  <para>List of services.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="get--v1-rating-module_config-hashmap-fields">
          <term>
            <literal>get--v1-rating-module_config-hashmap-fields</literal>
          </term>
          <listitem>
            <para>Get the field list.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="get--v1-rating-module_config-hashmap-fields-(field_id)">
          <term>
            <literal>get--v1-rating-module_config-hashmap-fields-(field_id)</literal>
          </term>
          <listitem>
            <para>Return a field.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="post--v1-rating-module_config-hashmap-fields">
          <term>
            <literal>post--v1-rating-module_config-hashmap-fields</literal>
          </term>
          <listitem>
            <para>Create a field.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="delete--v1-rating-module_config-hashmap-fields">
          <term>
            <literal>delete--v1-rating-module_config-hashmap-fields</literal>
          </term>
          <listitem>
            <para>Delete the field and all the sub keys recursively.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="Field">
          <term>
            <literal>Field</literal>
          </term>
          <listitem>
            <para>Type describing a field.</para>
            <para>A field is mapping a value of the ‘desc’ dict of the CloudKitty data. It’s
                    used to map the name of a metadata.</para>
            <para>Data samples:</para>
            <variablelist>
              <varlistentry>
                <term>Json</term>
                <listitem>
                  <screen language="javascript"><![CDATA[{
    "field_id": "ac55b000-a05b-4832-b2ff-265a034886ab",
    "name": "image_id",
    "service_id": "a733d0e1-1ec9-4800-8df8-671e4affd017"
}]]></screen>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>XML</term>
                <listitem>
                  <screen language="xml"><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[b'<value>\n  <field_id>ac55b000-a05b-4832-b2ff-265a034886ab</field_id>\n  <name>image_id</name>\n  <service_id>a733d0e1-1ec9-4800-8df8-671e4affd017</service_id>\n</value>']]></screen>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.field.Field.field_id">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.field.Field.field_id</property>
                </term>
                <listitem>
                  <para>UUID of the field.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.field.Field.name">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.field.Field.name</property>
                </term>
                <listitem>
                  <para>Name of the field.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.field.Field.service_id">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.field.Field.service_id</property>
                </term>
                <listitem>
                  <para>UUID of the parent service.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="FieldCollection">
          <term>
            <literal>FieldCollection</literal>
          </term>
          <listitem>
            <para>Type describing a list of fields.</para>
            <para>Data samples:</para>
            <variablelist>
              <varlistentry>
                <term>Json</term>
                <listitem>
                  <screen language="javascript"><![CDATA[{
    "fields": [
        {
            "field_id": "ac55b000-a05b-4832-b2ff-265a034886ab",
            "name": "image_id",
            "service_id": "a733d0e1-1ec9-4800-8df8-671e4affd017"
        }
    ]
}]]></screen>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>XML</term>
                <listitem>
                  <screen language="xml"><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[b'<value>\n  <fields>\n    <item>\n      <field_id>ac55b000-a05b-4832-b2ff-265a034886ab</field_id>\n      <name>image_id</name>\n      <service_id>a733d0e1-1ec9-4800-8df8-671e4affd017</service_id>\n    </item>\n  </fields>\n</value>']]></screen>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.field.FieldCollection.fields">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.field.FieldCollection.fields</property>
                </term>
                <listitem>
                  <para>List of fields.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="get--v1-rating-module_config-hashmap-mappings">
          <term>
            <literal>get--v1-rating-module_config-hashmap-mappings</literal>
          </term>
          <listitem>
            <para>Get the mapping list</para>
            <para>filter on tenant). Useful if you want to filter on tenant being None.
                    :return: List of every mappings.
                    :type service_id: <literal>uuid</literal>
                    :type field_id: <literal>uuid</literal>
                    :type group_id: <literal>uuid</literal>
                    :type no_group: <literal>bool</literal>
                    :type tenant_id: <literal>uuid</literal>
                    :type filter_tenant: <literal>bool</literal></para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="get--v1-rating-module_config-hashmap-mappings-(mapping_id)">
          <term>
            <literal>get--v1-rating-module_config-hashmap-mappings-(mapping_id)</literal>
          </term>
          <listitem>
            <para>Return a mapping.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="post--v1-rating-module_config-hashmap-mappings">
          <term>
            <literal>post--v1-rating-module_config-hashmap-mappings</literal>
          </term>
          <listitem>
            <para>Create a mapping.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="put--v1-rating-module_config-hashmap-mappings">
          <term>
            <literal>put--v1-rating-module_config-hashmap-mappings</literal>
          </term>
          <listitem>
            <para>Update a mapping.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="delete--v1-rating-module_config-hashmap-mappings">
          <term>
            <literal>delete--v1-rating-module_config-hashmap-mappings</literal>
          </term>
          <listitem>
            <para>Delete a mapping.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="get--v1-rating-module_config-hashmap-mappings-group">
          <term>
            <literal>get--v1-rating-module_config-hashmap-mappings-group</literal>
          </term>
          <listitem>
            <para>Get the group attached to the mapping.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="Mapping">
          <term>
            <literal>Mapping</literal>
          </term>
          <listitem>
            <para>Type describing a Mapping.</para>
            <para>A mapping is used to apply rating rules based on a value, if the parent is
                    a field then it’s check the value of a metadata. If it’s a service then it
                    directly apply the rate to the volume.</para>
            <para>Data samples:</para>
            <variablelist>
              <varlistentry>
                <term>Json</term>
                <listitem>
                  <screen language="javascript"><![CDATA[{
    "cost": "4.2",
    "field_id": "ac55b000-a05b-4832-b2ff-265a034886ab",
    "mapping_id": "39dbd39d-f663-4444-a795-fb19d81af136",
    "tenant_id": "7977999e-2e25-11e6-a8b2-df30b233ffcb",
    "type": "flat",
    "value": "m1.micro"
}]]></screen>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>XML</term>
                <listitem>
                  <screen language="xml"><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[b'<value>\n  <mapping_id>39dbd39d-f663-4444-a795-fb19d81af136</mapping_id>\n  <value>m1.micro</value>\n  <type>flat</type>\n  <cost>4.2</cost>\n  <field_id>ac55b000-a05b-4832-b2ff-265a034886ab</field_id>\n  <tenant_id>7977999e-2e25-11e6-a8b2-df30b233ffcb</tenant_id>\n</value>']]></screen>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.mapping.Mapping.cost">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.mapping.Mapping.cost</property>
                </term>
                <listitem>
                  <para>Value of the mapping.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.mapping.Mapping.field_id">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.mapping.Mapping.field_id</property>
                </term>
                <listitem>
                  <para>UUID of the field.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.mapping.Mapping.group_id">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.mapping.Mapping.group_id</property>
                </term>
                <listitem>
                  <para>UUID of the hashmap group.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.mapping.Mapping.map_type">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.mapping.Mapping.map_type</property>
                </term>
                <listitem>
                  <para>Type of the mapping.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.mapping.Mapping.mapping_id">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.mapping.Mapping.mapping_id</property>
                </term>
                <listitem>
                  <para>UUID of the mapping.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.mapping.Mapping.service_id">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.mapping.Mapping.service_id</property>
                </term>
                <listitem>
                  <para>UUID of the service.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.mapping.Mapping.tenant_id">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.mapping.Mapping.tenant_id</property>
                </term>
                <listitem>
                  <para>UUID of the hashmap tenant.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.mapping.Mapping.value">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.mapping.Mapping.value</property>
                </term>
                <listitem>
                  <para>Key of the mapping.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="MappingCollection">
          <term>
            <literal>MappingCollection</literal>
          </term>
          <listitem>
            <para>Type describing a list of mappings.</para>
            <para>Data samples:</para>
            <variablelist>
              <varlistentry>
                <term>Json</term>
                <listitem>
                  <screen language="javascript"><![CDATA[{
    "mappings": [
        {
            "cost": "4.2",
            "field_id": "ac55b000-a05b-4832-b2ff-265a034886ab",
            "mapping_id": "39dbd39d-f663-4444-a795-fb19d81af136",
            "tenant_id": "7977999e-2e25-11e6-a8b2-df30b233ffcb",
            "type": "flat",
            "value": "m1.micro"
        }
    ]
}]]></screen>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>XML</term>
                <listitem>
                  <screen language="xml"><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[b'<value>\n  <mappings>\n    <item>\n      <mapping_id>39dbd39d-f663-4444-a795-fb19d81af136</mapping_id>\n      <value>m1.micro</value>\n      <type>flat</type>\n      <cost>4.2</cost>\n      <field_id>ac55b000-a05b-4832-b2ff-265a034886ab</field_id>\n      <tenant_id>7977999e-2e25-11e6-a8b2-df30b233ffcb</tenant_id>\n    </item>\n  </mappings>\n</value>']]></screen>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.mapping.MappingCollection.mappings">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.mapping.MappingCollection.mappings</property>
                </term>
                <listitem>
                  <para>List of mappings.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="Threshold">
          <term>
            <literal>Threshold</literal>
          </term>
          <listitem>
            <para>Type describing a Threshold.</para>
            <para>A threshold is used to apply rating rules based on a level, if the parent
                    is a field then the level is checked against a metadata. If it’s a service
                    then it’s the quantity of the resource that is checked.</para>
            <para>Data samples:</para>
            <variablelist>
              <varlistentry>
                <term>Json</term>
                <listitem>
                  <screen language="javascript"><![CDATA[{
    "cost": "4.2",
    "field_id": "ac55b000-a05b-4832-b2ff-265a034886ab",
    "level": "1024",
    "tenant_id": "7977999e-2e25-11e6-a8b2-df30b233ffcb",
    "threshold_id": "39dbd39d-f663-4444-a795-fb19d81af136",
    "type": "flat"
}]]></screen>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>XML</term>
                <listitem>
                  <screen language="xml"><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[b'<value>\n  <threshold_id>39dbd39d-f663-4444-a795-fb19d81af136</threshold_id>\n  <level>1024</level>\n  <type>flat</type>\n  <cost>4.2</cost>\n  <field_id>ac55b000-a05b-4832-b2ff-265a034886ab</field_id>\n  <tenant_id>7977999e-2e25-11e6-a8b2-df30b233ffcb</tenant_id>\n</value>']]></screen>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.threshold.Threshold.cost">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.threshold.Threshold.cost</property>
                </term>
                <listitem>
                  <para>Value of the threshold.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.threshold.Threshold.field_id">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.threshold.Threshold.field_id</property>
                </term>
                <listitem>
                  <para>UUID of the field.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.threshold.Threshold.group_id">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.threshold.Threshold.group_id</property>
                </term>
                <listitem>
                  <para>UUID of the hashmap group.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.threshold.Threshold.level">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.threshold.Threshold.level</property>
                </term>
                <listitem>
                  <para>Level of the threshold.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.threshold.Threshold.map_type">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.threshold.Threshold.map_type</property>
                </term>
                <listitem>
                  <para>Type of the threshold.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.threshold.Threshold.service_id">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.threshold.Threshold.service_id</property>
                </term>
                <listitem>
                  <para>UUID of the service.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.threshold.Threshold.tenant_id">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.threshold.Threshold.tenant_id</property>
                </term>
                <listitem>
                  <para>UUID of the hashmap tenant.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.threshold.Threshold.threshold_id">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.threshold.Threshold.threshold_id</property>
                </term>
                <listitem>
                  <para>UUID of the threshold.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="ThresholdCollection">
          <term>
            <literal>ThresholdCollection</literal>
          </term>
          <listitem>
            <para>Type describing a list of mappings.</para>
            <para>Data samples:</para>
            <variablelist>
              <varlistentry>
                <term>Json</term>
                <listitem>
                  <screen language="javascript"><![CDATA[{
    "thresholds": [
        {
            "cost": "4.2",
            "field_id": "ac55b000-a05b-4832-b2ff-265a034886ab",
            "level": "1024",
            "tenant_id": "7977999e-2e25-11e6-a8b2-df30b233ffcb",
            "threshold_id": "39dbd39d-f663-4444-a795-fb19d81af136",
            "type": "flat"
        }
    ]
}]]></screen>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>XML</term>
                <listitem>
                  <screen language="xml"><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[b'<value>\n  <thresholds>\n    <item>\n      <threshold_id>39dbd39d-f663-4444-a795-fb19d81af136</threshold_id>\n      <level>1024</level>\n      <type>flat</type>\n      <cost>4.2</cost>\n      <field_id>ac55b000-a05b-4832-b2ff-265a034886ab</field_id>\n      <tenant_id>7977999e-2e25-11e6-a8b2-df30b233ffcb</tenant_id>\n    </item>\n  </thresholds>\n</value>']]></screen>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.threshold.ThresholdCollection.thresholds">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.threshold.ThresholdCollection.thresholds</property>
                </term>
                <listitem>
                  <para>List of thresholds.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="get--v1-rating-module_config-hashmap-groups">
          <term>
            <literal>get--v1-rating-module_config-hashmap-groups</literal>
          </term>
          <listitem>
            <para>Get the group list</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="get--v1-rating-module_config-hashmap-groups-(group_id)">
          <term>
            <literal>get--v1-rating-module_config-hashmap-groups-(group_id)</literal>
          </term>
          <listitem>
            <para>Return a group.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="post--v1-rating-module_config-hashmap-groups">
          <term>
            <literal>post--v1-rating-module_config-hashmap-groups</literal>
          </term>
          <listitem>
            <para>Create a group.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="delete--v1-rating-module_config-hashmap-groups">
          <term>
            <literal>delete--v1-rating-module_config-hashmap-groups</literal>
          </term>
          <listitem>
            <para>Delete a group.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="get--v1-rating-module_config-hashmap-groups-mappings">
          <term>
            <literal>get--v1-rating-module_config-hashmap-groups-mappings</literal>
          </term>
          <listitem>
            <para>Get the mappings attached to the group.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="get--v1-rating-module_config-hashmap-groups-thresholds">
          <term>
            <literal>get--v1-rating-module_config-hashmap-groups-thresholds</literal>
          </term>
          <listitem>
            <para>Get the thresholds attached to the group.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="Group">
          <term>
            <literal>Group</literal>
          </term>
          <listitem>
            <para>Type describing a group.</para>
            <para>A group is used to divide calculations. It can be used to create a group
                    for the instance rating (flavor) and one if we have premium images
                    (image_id). So you can take into account multiple parameters during the
                    rating.</para>
            <para>Data samples:</para>
            <variablelist>
              <varlistentry>
                <term>Json</term>
                <listitem>
                  <screen language="javascript"><![CDATA[{
    "group_id": "afe898cb-86d8-4557-ad67-f4f01891bbee",
    "name": "instance_rating"
}]]></screen>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>XML</term>
                <listitem>
                  <screen language="xml"><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[b'<value>\n  <group_id>afe898cb-86d8-4557-ad67-f4f01891bbee</group_id>\n  <name>instance_rating</name>\n</value>']]></screen>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.group.Group.group_id">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.group.Group.group_id</property>
                </term>
                <listitem>
                  <para>UUID of the group.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.group.Group.name">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.group.Group.name</property>
                </term>
                <listitem>
                  <para>Name of the group.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="GroupCollection">
          <term>
            <literal>GroupCollection</literal>
          </term>
          <listitem>
            <para>Type describing a list of groups.</para>
            <para>Data samples:</para>
            <variablelist>
              <varlistentry>
                <term>Json</term>
                <listitem>
                  <screen language="javascript"><![CDATA[{
    "groups": [
        {
            "group_id": "afe898cb-86d8-4557-ad67-f4f01891bbee",
            "name": "instance_rating"
        }
    ]
}]]></screen>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>XML</term>
                <listitem>
                  <screen language="xml"><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[b'<value>\n  <groups>\n    <item>\n      <group_id>afe898cb-86d8-4557-ad67-f4f01891bbee</group_id>\n      <name>instance_rating</name>\n    </item>\n  </groups>\n</value>']]></screen>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.hash.datamodels.group.GroupCollection.groups">
                <term>
                  <property>cloudkitty.rating.hash.datamodels.group.GroupCollection.groups</property>
                </term>
                <listitem>
                  <para>List of groups.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section xml:base="webapi/rating/pyscripts">
      <title>PyScripts Module REST API</title>
      <variablelist>
        <varlistentry xml:id="get--v1-rating-module_config-pyscripts-scripts">
          <term>
            <literal>get--v1-rating-module_config-pyscripts-scripts</literal>
          </term>
          <listitem>
            <para>Get the script list</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="get--v1-rating-module_config-pyscripts-scripts-(script_id)">
          <term>
            <literal>get--v1-rating-module_config-pyscripts-scripts-(script_id)</literal>
          </term>
          <listitem>
            <para>Return a script.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="post--v1-rating-module_config-pyscripts-scripts">
          <term>
            <literal>post--v1-rating-module_config-pyscripts-scripts</literal>
          </term>
          <listitem>
            <para>Create pyscripts script.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="put--v1-rating-module_config-pyscripts-scripts">
          <term>
            <literal>put--v1-rating-module_config-pyscripts-scripts</literal>
          </term>
          <listitem>
            <para>Update pyscripts script.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="delete--v1-rating-module_config-pyscripts-scripts">
          <term>
            <literal>delete--v1-rating-module_config-pyscripts-scripts</literal>
          </term>
          <listitem>
            <para>Delete the script.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="Script">
          <term>
            <literal>Script</literal>
          </term>
          <listitem>
            <para>Type describing a script.</para>
            <para>Data samples:</para>
            <variablelist>
              <varlistentry>
                <term>Json</term>
                <listitem>
                  <screen language="javascript"><![CDATA[{
    "checksum": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "data": "return 0",
    "name": "policy1",
    "script_id": "bc05108d-f515-4984-8077-de319cbf35aa"
}]]></screen>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>XML</term>
                <listitem>
                  <screen language="xml"><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[b'<value>\n  <script_id>bc05108d-f515-4984-8077-de319cbf35aa</script_id>\n  <name>policy1</name>\n  <data>return 0</data>\n  <checksum>da39a3ee5e6b4b0d3255bfef95601890afd80709</checksum>\n</value>']]></screen>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.pyscripts.datamodels.script.Script.checksum">
                <term>
                  <property>cloudkitty.rating.pyscripts.datamodels.script.Script.checksum</property>
                </term>
                <listitem>
                  <para>Checksum of the script data.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.pyscripts.datamodels.script.Script.data">
                <term>
                  <property>cloudkitty.rating.pyscripts.datamodels.script.Script.data</property>
                </term>
                <listitem>
                  <para>Data of the script.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.pyscripts.datamodels.script.Script.name">
                <term>
                  <property>cloudkitty.rating.pyscripts.datamodels.script.Script.name</property>
                </term>
                <listitem>
                  <para>Name of the script.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.pyscripts.datamodels.script.Script.script_id">
                <term>
                  <property>cloudkitty.rating.pyscripts.datamodels.script.Script.script_id</property>
                </term>
                <listitem>
                  <para>UUID of the script.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <varlistentry xml:id="ScriptCollection">
          <term>
            <literal>ScriptCollection</literal>
          </term>
          <listitem>
            <para>Type describing a list of scripts.</para>
            <para>Data samples:</para>
            <variablelist>
              <varlistentry>
                <term>Json</term>
                <listitem>
                  <screen language="javascript"><![CDATA[{
    "scripts": [
        {
            "checksum": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
            "data": "return 0",
            "name": "policy1",
            "script_id": "bc05108d-f515-4984-8077-de319cbf35aa"
        }
    ]
}]]></screen>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>XML</term>
                <listitem>
                  <screen language="xml"><![CDATA[]]><?dbsuse-fo font-size="8pt"?><![CDATA[b'<value>\n  <scripts>\n    <item>\n      <script_id>bc05108d-f515-4984-8077-de319cbf35aa</script_id>\n      <name>policy1</name>\n      <data>return 0</data>\n      <checksum>da39a3ee5e6b4b0d3255bfef95601890afd80709</checksum>\n    </item>\n  </scripts>\n</value>']]></screen>
                </listitem>
              </varlistentry>
            </variablelist>
            <variablelist>
              <varlistentry xml:id="cloudkitty.rating.pyscripts.datamodels.script.ScriptCollection.scripts">
                <term>
                  <property>cloudkitty.rating.pyscripts.datamodels.script.ScriptCollection.scripts</property>
                </term>
                <listitem>
                  <para>List of scripts.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </chapter>
</book>
