<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.1">
  <title>Install and configure for openSUSE and SUSE Linux Enterprise</title>
  <para>This section describes how to install and configure the Key Manager service
            for openSUSE Leap 42.2 and SUSE Linux Enterprise Server 12 SP2.</para>
  <section>
    <title>Prerequisites</title>
    <para>Before you install and configure the Key Manager service,
                you must create a database, service credentials, and API endpoints.</para>
    <procedure>
      <step>
        <para>To create the database, complete these steps:</para>
        <itemizedlist>
          <listitem>
            <para>Use the database access client to connect to the database
                                server as the <literal>root</literal> user:</para>
            <screen language="console">$ mysql -u root -p</screen>
          </listitem>
          <listitem>
            <para>Create the <literal>barbican</literal> database:</para>
            <screen language="console">CREATE DATABASE barbican;</screen>
          </listitem>
          <listitem>
            <para>Grant proper access to the <literal>barbican</literal> database:</para>
            <screen language="console">GRANT ALL PRIVILEGES ON barbican.* TO 'barbican'@'localhost' \
  IDENTIFIED BY 'BARBICAN_DBPASS';
GRANT ALL PRIVILEGES ON barbican.* TO 'barbican'@'%' \
  IDENTIFIED BY 'BARBICAN_DBPASS';</screen>
            <para>Replace <literal>BARBICAN_DBPASS</literal> with a suitable password.</para>
          </listitem>
          <listitem>
            <para>Exit the database access client.</para>
            <screen language="console">exit;</screen>
          </listitem>
        </itemizedlist>
      </step>
      <step>
        <para>Source the <literal>admin</literal> credentials to gain access to
                        admin-only CLI commands:</para>
        <screen language="console">$ source admin-openrc</screen>
      </step>
      <step>
        <para>To create the service credentials, complete these steps:</para>
        <itemizedlist>
          <listitem>
            <para>Create the <literal>barbican</literal> user:</para>
            <screen language="console">$ openstack user create --domain default --password-prompt barbican</screen>
          </listitem>
          <listitem>
            <para>Add the <literal>admin</literal> role to the <literal>barbican</literal> user:</para>
            <screen language="console">$ openstack role add --project service --user barbican admin</screen>
          </listitem>
          <listitem>
            <para>Create the <literal>creator</literal> role:</para>
            <screen language="console">$ openstack role create creator</screen>
          </listitem>
          <listitem>
            <para>Add the <literal>creator</literal> role to the <literal>barbican</literal> user:</para>
            <screen language="console">$ openstack role add --project service --user barbican creator</screen>
          </listitem>
          <listitem>
            <para>Create the barbican service entities:</para>
            <screen language="console">$ openstack service create --name barbican --description "Key Manager" key-manager</screen>
          </listitem>
        </itemizedlist>
      </step>
      <step>
        <para>Create the Key Manager service API endpoints:</para>
        <screen language="console">$ openstack endpoint create --region RegionOne \
  key-manager public http://controller:9311
$ openstack endpoint create --region RegionOne \
  key-manager internal http://controller:9311
$ openstack endpoint create --region RegionOne \
  key-manager admin http://controller:9311</screen>
      </step>
    </procedure>
  </section>
  <section>
    <title>Install and configure components</title>
    <procedure>
      <step>
        <para>Install the packages:</para>
        <screen language="console"><?dbsuse-fo font-size="8pt"?># zypper install openstack-barbican-api openstack-barbican-keystone-listener openstack-barbican-worker</screen>
      </step>
    </procedure>
    <procedure>
      <step>
        <para>Edit the <literal>/etc/barbican/barbican.conf</literal> file and complete the following
                        actions:</para>
        <itemizedlist>
          <listitem>
            <para>In the <literal>[DEFAULT]</literal> section, configure database access:</para>
            <screen language="none">[DEFAULT]
...
sql_connection = mysql+pymysql://barbican:BARBICAN_DBPASS@controller/barbican</screen>
            <para>Replace <literal>BARBICAN_DBPASS</literal> with the password you chose for the
                                Key Manager service database.</para>
          </listitem>
          <listitem>
            <para>In the <literal>[DEFAULT]</literal> section,
                                configure <literal>RabbitMQ</literal> message queue access:</para>
            <screen language="ini">[DEFAULT]
...
transport_url = rabbit://openstack:RABBIT_PASS@controller</screen>
            <para>Replace <literal>RABBIT_PASS</literal> with the password you chose for the
                                <literal>openstack</literal> account in <literal>RabbitMQ</literal>.</para>
          </listitem>
          <listitem>
            <para>In the <literal>[keystone_authtoken]</literal> section, configure Identity
                                service access:</para>
            <screen language="ini">[keystone_authtoken]
...
auth_uri = http://controller:5000
auth_url = http://controller:35357
memcached_servers = controller:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = barbican
password = BARBICAN_PASS</screen>
            <para>Replace <literal>BARBICAN_PASS</literal> with the password you chose for the
                                <literal>barbican</literal> user in the Identity service.</para>
            <note>
              <para>Comment out or remove any other options in the
                                    <literal>[keystone_authtoken]</literal> section.</para>
            </note>
          </listitem>
        </itemizedlist>
      </step>
      <step>
        <para>Populate the Key Manager service database:</para>
        <para>The Key Manager service database will be automatically populated
                        when the service is first started.  To prevent this, and run the
                        database sync manually, edit the <literal>/etc/barbican/barbican.conf</literal> file
                        and set db_auto_create in the <literal>[DEFAULT]</literal> section to False.</para>
        <para>Then populate the database as below:</para>
        <screen language="console">$ su -s /bin/sh -c "barbican-manage db upgrade" barbican</screen>
        <note>
          <para>Ignore any deprecation messages in this output.</para>
        </note>
      </step>
      <step>
        <para>Barbican has a plugin architecture which allows the deployer to store secrets in
                        a number of different back-end secret stores.  By default, Barbican is configured to
                        store secrets in a basic file-based keystore.  This key store is NOT safe for
                        production use.</para>
        <para>For a list of supported plugins and detailed instructions on how to configure them,
                        see <xref linkend="barbican-backend"/></para>
      </step>
    </procedure>
  </section>
  <section>
    <title>Finalize installation</title>
    <procedure>
      <step>
        <para>Copy the sample Apache vhost file into place:</para>
      </step>
    </procedure>
    <screen language="console"><?dbsuse-fo font-size="8pt"?># cp /etc/apache2/conf.d/barbican-api.conf.sample /etc/apache2/vhosts.d/barbican-api.conf</screen>
    <procedure>
      <step>
        <para>Start the Apache HTTP service and configure it to start when the system boots:</para>
        <screen language="console"># systemctl enable apache2.service
# systemctl start apache2.service</screen>
      </step>
    </procedure>
  </section>
</section>
