<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.1">
  <title>Bootstrapping Identity</title>
  <para>After keystone is deployed and configured, it must be pre-populated with some
            initial data before it can be used. This process is known as bootstrapping and
            it typically involves creating the system’s first user, project, domain,
            service, and endpoint, among other things. The goal of bootstrapping is to put
            enough information into the system such that it can function solely through the
            API using normal authentication flows. After the first user is created, which
            must be an administrator, you can use that account to interact with keystone
            via the API.</para>
  <para>Keystone provides two separate ways to bootstrap a deployment. The first is
            with the <literal>keystone-manage bootstrap</literal> command. This is the perferred and
            recommended way to boostrap new installations. The second, and original way of
            bootstrapping involves configuring a secret and deploying special middleware in
            front of the identity service. The secret is known as the <literal>ADMIN_TOKEN</literal>. Any
            requests made to the identity API with the <literal>ADMIN_TOKEN</literal> will completely
            bypass authentication allowing access to the entire API.</para>
  <section>
    <title>Using the CLI</title>
    <para>The process requires access to an environment with keystone binaries
                installed, typically on the service host.</para>
    <para>The <literal>keystone-manage bootstrap</literal> command will create a user, project and role,
                and will assign the newly created role to the newly created user on the newly
                created project. By default, the names of these new resources will be called
                <literal>admin</literal>.</para>
    <para>The defaults may be overridden by calling <literal>--bootstrap-username</literal>,
                <literal>--bootstrap-project-name</literal> and <literal>--bootstrap-role-name</literal>. Each of these have
                an environment variable equivalent: <literal>OS_BOOTSTRAP_USERNAME</literal>,
                <literal>OS_BOOTSTRAP_PROJECT_NAME</literal> and <literal>OS_BOOTSTRAP_ROLE_NAME</literal>.</para>
    <para>A user password must also be supplied. This can be passed in as either
                <literal>--bootstrap-password</literal>, or set as an environment variable using
                <literal>OS_BOOTSTRAP_PASSWORD</literal>.</para>
    <para>Optionally, if specified by <literal>--bootstrap-public-url</literal>,
                <literal>--bootstrap-admin-url</literal> and/or <literal>--bootstrap-internal-url</literal> or the equivalent
                environment variables, the command will create an identity service with the
                specified endpoint information. You may also configure the
                <literal>--bootstrap-region-id</literal> and <literal>--bootstrap-service-name</literal> for the endpoints to
                your deployment’s requirements.</para>
    <note>
      <para>We strongly recommend that you configure the identity service and its
                    endpoints while bootstrapping keystone.</para>
    </note>
    <para>Minimally, keystone can be bootstrapped with:</para>
    <screen language="bash">$ keystone-manage bootstrap --bootstrap-password s3cr3t</screen>
    <para>Verbosely, keystone can be bootstrapped with:</para>
    <screen language="bash">$ keystone-manage bootstrap \
    --bootstrap-password s3cr3t \
    --bootstrap-username admin \
    --bootstrap-project-name admin \
    --bootstrap-role-name admin \
    --bootstrap-service-name keystone \
    --bootstrap-region-id RegionOne \
    --bootstrap-admin-url http://localhost:35357 \
    --bootstrap-public-url http://localhost:5000 \
    --bootstrap-internal-url http://localhost:5000</screen>
    <para>This will create an <literal>admin</literal> user with the <literal>admin</literal> role on the <literal>admin</literal>
                project. The user will have the password specified in the command. Note that
                both the user and the project will be created in the <literal>default</literal> domain. By not
                creating an endpoint in the catalog users will need to provide endpoint
                overrides to perform additional identity operations.</para>
    <para>By creating an <literal>admin</literal> user and an identity endpoint you may
                authenticate to keystone and perform identity operations like creating
                additional services and endpoints using the <literal>admin</literal> user. This will preclude
                the need to ever use or configure the <literal>admin_token</literal> (described below). It is
                also, by design, more secure.</para>
    <para>To test a proper configuration, a user can use OpenStackClient CLI:</para>
    <screen language="bash">$ openstack project list --os-username admin --os-project-name admin \
    --os-user-domain-id default --os-project-domain-id default \
    --os-identity-api-version 3 --os-auth-url http://localhost:5000 \
    --os-password s3cr3t</screen>
  </section>
  <section>
    <title>Using a shared secret</title>
    <note>
      <para>We strongly recommended that you configure the identity service with the
                    <literal>keystone-manage bootstrap</literal> command and not the <literal>ADMIN_TOKEN</literal>. The
                    <literal>ADMIN_TOKEN</literal> can leave your deployment vulnerable by exposing
                    administrator functionality through the API based solely on a single
                    secret.</para>
    </note>
    <para>Before you can use the identity API, you need to configure keystone with a
                shared secret. Requests made with this secret will bypass authentication and
                grant administrative access to the identity API. The following configuration
                snippet shows the shared secret as being <literal>ADMIN</literal>:</para>
    <screen language="bash">[DEFAULT]
admin_token = ADMIN</screen>
    <para>You can use the shared secret, or <literal>admin_token</literal>, to make API request to
                keystone that bootstrap the rest of the deployment.  You must create a project,
                user, and role in order to use normal user authentication through the API.</para>
    <para>The <literal>admin_token</literal> does not represent a user or explicit authorization of any
                kind. It is imperative that you disable the <literal>AdminTokenAuthMiddleware</literal> from
                your paste application pipelines after bootstrapping, especially in production
                deployments. Failure to remove this functionality exposes an additional attack
                vector and security risk.</para>
  </section>
</section>
