<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<chapter xml:id="keystone-user-guide" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.1">
    <title>Keystone User Guide</title>
    <para>This section contains the documentation for end-users of keystone.</para>
    <section xml:id="user-documentation" xml:base="user/index">
      <title>User Documentation</title>
      <para>An end user can find the specific API documentation here, <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://developer.openstack.org/api-ref/identity/v3">OpenStack’s Identity API</link>.</para>
      <note>
        <para>Following are some API examples using curl. These examples are not
                automatically generated. They can be outdated as things change and are subject
                to regular updates and changes.</para>
      </note>
      <section xml:id="api-examples-using-curl" xml:base="../api_curl_examples">
        <title>API Examples using Curl</title>
        <section xml:id="v3-api-examples-using-curl">
          <title>v3 API Examples Using Curl</title>
          <section xml:id="tokens">
            <title>Tokens</title>
            <section xml:id="default-scope">
              <title>Default scope</title>
              <para>Get a token with default scope (may be unscoped):</para>
              <screen language="bash">curl -i \
  -H "Content-Type: application/json" \
  -d '
{ "auth": {
    "identity": {
      "methods": ["password"],
      "password": {
        "user": {
          "name": "admin",
          "domain": { "id": "default" },
          "password": "adminpwd"
        }
      }
    }
  }
}' \
  "http://localhost:5000/v3/auth/tokens" ; echo</screen>
              <para>Example response:</para>
              <screen language="bash">HTTP/1.1 201 Created
X-Subject-Token: MIIFvgY...
Vary: X-Auth-Token
Content-Type: application/json
Content-Length: 1025
Date: Tue, 10 Jun 2014 20:55:16 GMT

{
  "token": {
    "methods": ["password"],
    "roles": [{
      "id": "9fe2ff9ee4384b1894a90878d3e92bab",
      "name": "_member_"
    }, {
      "id": "c703057be878458588961ce9a0ce686b",
      "name": "admin"
    }],
    "expires_at": "2014-06-10T2:55:16.806001Z",
    "project": {
      "domain": {
        "id": "default",
        "name": "Default"
      },
      "id": "8538a3f13f9541b28c2620eb19065e45",
      "name": "admin"
    },
    "catalog": [{
      "endpoints": [{
        "url": "http://localhost:3537/v2.0",
        "region": "RegionOne",
        "interface": "admin",
        "id": "29beb2f1567642eb810b042b6719ea88"
      }, {
        "url": "http://localhost:5000/v2.0",
        "region": "RegionOne",
        "interface": "internal",
        "id": "8707e3735d4415c97ae231b4841eb1c"
      }, {
        "url": "http://localhost:5000/v2.0",
        "region": "RegionOne",
        "interface": "public",
        "id": "ef303187fc8d41668f25199c298396a5"
      }],
      "type": "identity",
      "id": "bd73972c0e14fb69bae8ff76e112a90",
      "name": "keystone"
    }],
    "extras": {},
    "user": {
      "domain": {
        "id": "default",
        "name": "Default"
      },
      "id": "3ec3164f750146be97f21559ee4d9c51",
      "name": "admin"
    },
    "audit_ids": ["yRt0UrxJSs6-WYJgwEMMmg"],
    "issued_at": "201406-10T20:55:16.806027Z"
  }
}</screen>
            </section>
            <section xml:id="project-scoped">
              <title>Project-scoped</title>
              <para>Get a project-scoped token:</para>
              <screen language="bash">curl -i \
  -H "Content-Type: application/json" \
  -d '
{ "auth": {
    "identity": {
      "methods": ["password"],
      "password": {
        "user": {
          "name": "admin",
          "domain": { "id": "default" },
          "password": "adminpwd"
        }
      }
    },
    "scope": {
      "project": {
        "name": "demo",
        "domain": { "id": "default" }
      }
    }
  }
}' \
  "http://localhost:5000/v3/auth/tokens" ; echo</screen>
              <para>Example response:</para>
              <screen language="bash">HTTP/1.1 201 Created
X-Subject-Token: MIIFfQ...
Vary: X-Auth-Token
Content-Type: application/json
Content-Length: 960
Date: Tue, 10 Jun 2014 20:40:14 GMT

{
  "token": {
    "audit_ids": ["ECwrVNWbSCqmEgPnu0YCRw"],
    "methods": ["password"],
    "roles": [{
      "id": "c703057be878458588961ce9a0ce686b",
      "name": "admin"
    }],
    "expires_at": "2014-06-10T21:40:14.360795Z",
    "project": {
      "domain": {
        "id": "default",
        "name": "Default"
      },
      "id": "3d4c2c82bd5948f0bcab0cf3a7c9b48c",
      "name": "demo"
    },
    "catalog": [{
      "endpoints": [{
        "url": "http://localhost:35357/v2.0",
        "region": "RegionOne",
        "interface": "admin",
        "id": "29beb2f1567642eb810b042b6719ea88"
      }, {
        "url": "http://localhost:5000/v2.0",
        "region": "RegionOne",
        "interface": "internal",
        "id": "87057e3735d4415c97ae231b4841eb1c"
      }, {
        "url": "http://localhost:5000/v2.0",
        "region": "RegionOne",
        "interface": "public",
        "id": "ef303187fc8d41668f25199c298396a5"
      }],
      "type": "identity",
      "id": "bd7397d2c0e14fb69bae8ff76e112a90",
      "name": "keystone"
    }],
    "extras": {},
    "user": {
      "domain": {
        "id": "default",
        "name": "Default"
      },
      "id": "3ec3164f750146be97f21559ee4d9c51",
      "name": "admin"
    },
    "issued_at": "2014-06-10T20:40:14.360822Z"
  }
}</screen>
            </section>
            <section xml:id="domain-scoped">
              <title>Domain-Scoped</title>
              <para>Get a domain-scoped token:</para>
                <note>
                  <para> Ensure you have a role-assignment on the domain first.</para>
                </note>
              <screen language="bash">curl -i \
  -H "Content-Type: application/json" \
  -d '
{ "auth": {
    "identity": {
      "methods": ["password"],
      "password": {
        "user": {
          "name": "admin",
          "domain": { "id": "default" },
          "password": "adminpwd"
        }
      }
    },
    "scope": {
      "domain": {
        "id": "default"
      }
    }
  }
}' \
  "http://localhost:5000/v3/auth/tokens" ; echo</screen>
              <para>Example response:</para>
              <screen language="bash">HTTP/1.1 201 Created
X-Subject-Token: MIIFNg...
Vary: X-Auth-Token
Content-Type: application/json
Content-Length: 889
Date: Tue, 10 Jun 2014 20:52:59 GMT

{
  "token": {
    "domain": {
      "id": "default",
      "name": "Default"
    },
    "methods": ["password"],
    "roles": [{
      "id": "c703057be878458588961ce9a0ce686b",
      "name": "admin"
    }],
    "expires_at": "2014-06-10T21:52:58.852167Z",
    "catalog": [{
      "endpoints": [{
        "url": "http://localhost:35357/v2.0",
        "region": "RegionOne",
        "interface": "admin",
        "id": "29beb2f1567642eb810b042b6719ea88"
      }, {
        "url": "http://localhost:5000/v2.0",
        "region": "RegionOne",
        "interface": "internal",
        "id": "87057e3735d4415c97ae231b4841eb1c"
      }, {
        "url": "http://localhost:5000/v2.0",
        "region": "RegionOne",
        "interface": "public",
        "id": "ef303187fc8d41668f25199c298396a5"
      }],
      "type": "identity",
      "id": "bd7397d2c0e14fb69bae8ff76e112a90",
      "name": "keystone"
    }],
    "extras": {},
    "user": {
      "domain": {
        "id": "default",
        "name": "Default"
      },
      "id": "3ec3164f750146be97f21559ee4d9c51",
      "name": "admin"
    },
    "audit_ids": ["Xpa6Uyn-T9S6mTREudUH3w"],
    "issued_at": "2014-06-10T20:52:58.852194Z"
  }
}</screen>
            </section>
            <section xml:id="getting-a-token-from-a-token">
              <title>Getting a token from a token</title>
              <para>Get a token from a token:</para>
              <screen language="bash">curl -i \
  -H "Content-Type: application/json" \
  -d '
{ "auth": {
    "identity": {
      "methods": ["token"],
      "token": {
        "id": "'$OS_TOKEN'"
      }
    }
  }
}' \
  "http://localhost:5000/v3/auth/tokens" ; echo</screen>
              <para>Example response:</para>
              <screen language="bash">HTTP/1.1 201 Created
X-Subject-Token: MIIFxw...
Vary: X-Auth-Token
Content-Type: application/json
Content-Length: 1034
Date: Tue, 10 Jun 2014 21:00:05 GMT

{
  "token": {
    "methods": ["token", "password"],
    "expires_at": "2015-05-28T07:43:44.808209Z",
    "extras": {},
    "user": {
      "domain": {
        "id": "default",
        "name": "Default"
      },
      "id": "753867c25c3340ffad1abc22d488c31a",
      "name": "admin"
    },
    "audit_ids": ["ZE0OPSuzTmCXHo0eIOYltw",
      "xxIQCkHOQOywL0oY6CTppQ"
    ],
    "issued_at": "2015-05-28T07:19:23.763532Z"
  }
}</screen>
              <note>
                <para>If a scope was included in the request body, then this would get a token
                      with the new scope.</para>
              </note>
            </section>
            <section xml:id="delete-v3-auth-tokens">
              <title>DELETE /v3/auth/tokens</title>
              <para>Revoke a token:</para>
              <screen language="bash">curl -i -X DELETE \
  -H "X-Auth-Token: $OS_TOKEN" \
  -H "X-Subject-Token: $OS_TOKEN" \
  "http://localhost:5000/v3/auth/tokens"</screen>
              <para>If there’s no error then the response is empty.</para>
            </section>
          </section>
          <section xml:id="domains">
            <title>Domains</title>
            <section xml:id="get-v3-domains">
              <title>GET /v3/domains</title>
              <para>List domains:</para>
              <screen language="bash">curl -s \
  -H "X-Auth-Token: $OS_TOKEN" \
  "http://localhost:5000/v3/domains" | python -mjson.tool</screen>
              <para>Example response:</para>
              <screen language="javascript">{
    "domains": [
        {
            "description": "Owns users and tenants (i.e. projects) available on Identity API v2.",
            "enabled": true,
            "id": "default",
            "links": {
                "self": "http://identity-server:5000/v3/domains/default"
            },
            "name": "Default"
        }
    ],
    "links": {
        "next": null,
        "previous": null,
        "self": "http://identity-server:5000/v3/domains"
    }
}</screen>
            </section>
            <section xml:id="post-v3-domains">
              <title>POST /v3/domains</title>
              <para>Create a domain:</para>
              <screen language="bash">curl -s \
  -H "X-Auth-Token: $OS_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{ "domain": { "name": "newdomain"}}' \
  "http://localhost:5000/v3/domains" | python -mjson.tool</screen>
              <para>Example response:</para>
              <screen language="javascript">{
    "domain": {
        "enabled": true,
        "id": "3a5140aecd974bf08041328b53a62458",
        "links": {
            "self": "http://identity-server:5000/v3/domains/3a5140aecd974bf08041328b53a62458"
        },
        "name": "newdomain"
    }
}</screen>
            </section>
          </section>
          <section xml:id="projects">
            <title>Projects</title>
            <section xml:id="get-v3-projects">
              <title>GET /v3/projects</title>
              <para>List projects:</para>
              <screen language="bash">curl -s \
 -H "X-Auth-Token: $OS_TOKEN" \
 "http://localhost:5000/v3/projects" | python -mjson.tool</screen>
              <para>Example response:</para>
              <screen language="javascript">{
    "links": {
        "next": null,
        "previous": null,
        "self": "http://localhost:5000/v3/projects"
    },
    "projects": [
        {
            "description": null,
            "domain_id": "default",
            "enabled": true,
            "id": "3d4c2c82bd5948f0bcab0cf3a7c9b48c",
            "links": {
                "self": "http://localhost:5000/v3/projects/3d4c2c82bd5948f0bcab0cf3a7c9b48c"
            },
            "name": "demo"
        }
    ]
}</screen>
            </section>
            <section xml:id="patch-v3-projects-id">
              <title>PATCH /v3/projects/{id}</title>
              <para>Disable a project:</para>
              <screen language="bash">curl -s -X PATCH \
  -H "X-Auth-Token: $OS_TOKEN" \
  -H "Content-Type: application/json" \
  -d '
{
  "project": {
      "enabled": false
    }
}'\
  "http://localhost:5000/v3/projects/$PROJECT_ID"  | python -mjson.tool</screen>
              <para>Example response:</para>
              <screen language="javascript">{
    "project": {
        "description": null,
        "domain_id": "default",
        "enabled": false,
        "extra": {},
        "id": "3d4c2c82bd5948f0bcab0cf3a7c9b48c",
        "links": {
            "self": "http://localhost:5000/v3/projects/3d4c2c82bd5948f0bcab0cf3a7c9b48c"
        },
        "name": "demo"
    }
}</screen>
            </section>
          </section>
          <section xml:id="get-v3-services">
            <title>GET /v3/services</title>
            <para>List the services:</para>
            <screen language="bash">curl -s \
  -H "X-Auth-Token: $OS_TOKEN" \
  "http://localhost:5000/v3/services" | python -mjson.tool</screen>
            <para>Example response:</para>
            <screen language="javascript">{
    "links": {
        "next": null,
        "previous": null,
        "self": "http://localhost:5000/v3/services"
    },
    "services": [
        {
            "description": "Keystone Identity Service",
            "enabled": true,
            "id": "bd7397d2c0e14fb69bae8ff76e112a90",
            "links": {
                "self": "http://localhost:5000/v3/services/bd7397d2c0e14fb69bae8ff76e112a90"
            },
            "name": "keystone",
            "type": "identity"
        }
    ]
}</screen>
          </section>
          <section xml:id="get-v3-endpoints">
            <title>GET /v3/endpoints</title>
            <para>List the endpoints:</para>
            <screen language="bash">curl -s \
 -H "X-Auth-Token: $OS_TOKEN" \
 "http://localhost:5000/v3/endpoints" | python -mjson.tool</screen>
            <para>Example response:</para>
            <screen language="javascript">{
    "endpoints": [
        {
            "enabled": true,
            "id": "29beb2f1567642eb810b042b6719ea88",
            "interface": "admin",
            "links": {
                "self": "http://localhost:5000/v3/endpoints/29beb2f1567642eb810b042b6719ea88"
            },
            "region": "RegionOne",
            "service_id": "bd7397d2c0e14fb69bae8ff76e112a90",
            "url": "http://localhost:35357/v2.0"
        }
    ],
    "links": {
        "next": null,
        "previous": null,
        "self": "http://localhost:5000/v3/endpoints"
    }
}</screen>
          </section>
          <section xml:id="users">
            <title>Users</title>
            <section xml:id="get-v3-users">
              <title>GET /v3/users</title>
              <para>List users:</para>
              <screen language="bash">curl -s \
 -H "X-Auth-Token: $OS_TOKEN" \
 "http://localhost:5000/v3/users" | python -mjson.tool</screen>
            </section>
            <section xml:id="post-v3-users">
              <title>POST /v3/users</title>
              <para>Create a user:</para>
              <screen language="bash">curl -s \
 -H "X-Auth-Token: $OS_TOKEN" \
 -H "Content-Type: application/json" \
 -d '{"user": {"name": "newuser", "password": "changeme"}}' \
 "http://localhost:5000/v3/users" | python -mjson.tool</screen>
              <para>Example response:</para>
              <screen language="javascript">{
    "user": {
        "domain_id": "default",
        "enabled": true,
        "id": "ec8fc20605354edd91873f2d66bf4fc4",
        "links": {
            "self": "http://identity-server:5000/v3/users/ec8fc20605354edd91873f2d66bf4fc4"
        },
        "name": "newuser"
    }
}</screen>
            </section>
            <section xml:id="get-v3-users-user-id">
              <title>GET /v3/users/{user_id}</title>
              <para>Show details for a user:</para>
              <screen language="bash">USER_ID=ec8fc20605354edd91873f2d66bf4fc4

curl -s \
 -H "X-Auth-Token: $OS_TOKEN" \
 "http://localhost:5000/v3/users/$USER_ID" | python -mjson.tool</screen>
              <para>Example response:</para>
              <screen language="javascript">{
    "user": {
        "domain_id": "default",
        "enabled": true,
        "id": "ec8fc20605354edd91873f2d66bf4fc4",
        "links": {
            "self": "http://localhost:5000/v3/users/ec8fc20605354edd91873f2d66bf4fc4"
        },
        "name": "newuser"
    }
}</screen>
            </section>
            <section xml:id="post-v3-users-user-id-password">
              <title>POST /v3/users/{user_id}/password</title>
              <para>Change password using the default policy; this can be done as the user:</para>
              <screen language="bash">USER_ID=b7793000f8d84c79af4e215e9da78654
ORIG_PASS=userpwd
NEW_PASS=newuserpwd

curl \
 -H "X-Auth-Token: $OS_TOKEN" \
 -H "Content-Type: application/json" \
 -d '{ "user": {"password": "'$NEW_PASS'", "original_password": "'$ORIG_PASS'"} }' \
 "http://localhost:5000/v3/users/$USER_ID/password"</screen>
              <note>
                <para>This command will not print anything if the request was successful.</para>
              </note>
            </section>
            <section xml:id="patch-v3-users-user-id">
              <title>PATCH /v3/users/{user_id}</title>
              <para>Reset password using the default policy; this requires admin:</para>
              <screen language="bash">USER_ID=b7793000f8d84c79af4e215e9da78654
NEW_PASS=newuserpwd

curl -s -X PATCH \
 -H "X-Auth-Token: $OS_TOKEN" \
 -H "Content-Type: application/json" \
 -d '{ "user": {"password": "'$NEW_PASS'"} }' \
 "http://localhost:5000/v3/users/$USER_ID" | python -mjson.tool</screen>
              <para>Example response:</para>
              <screen language="javascript">{
    "user": {
        "default_project_id": "3d4c2c82bd5948f0bcab0cf3a7c9b48c",
        "domain_id": "default",
        "email": "demo@example.com",
        "enabled": true,
        "extra": {
            "email": "demo@example.com"
        },
        "id": "269348fdd9374b8885da1418e0730af1",
        "links": {
            "self": "http://localhost:5000/v3/users/269348fdd9374b8885da1418e0730af1"
        },
        "name": "demo"
    }
}</screen>
            </section>
          </section>
          <section xml:id="put-v3-projects-project-id-groups-group-id-roles-role-id">
            <title>PUT /v3/projects/{project_id}/groups/{group_id}/roles/{role_id}</title>
            <para>Create group role assignment on project:</para>
            <screen language="bash">curl -s -X PUT \
 -H "X-Auth-Token: $OS_TOKEN" \
 "http://localhost:5000/v3/projects/$PROJECT_ID/groups/$GROUP_ID/roles/$ROLE_ID" |
   python -mjson.tool</screen>
            <para>There’s no data in the response if the operation is successful.</para>
          </section>
          <section xml:id="post-v3-os-trust-trusts">
            <title>POST /v3/OS-TRUST/trusts</title>
            <para>Create a trust:</para>
            <screen language="bash">curl -s \
 -H "X-Auth-Token: $OS_TOKEN" \
 -H "Content-Type: application/json" \
 -d '
{ "trust": {
    "expires_at": "2014-12-30T23:59:59.999999Z",
    "impersonation": false,
    "project_id": "'$PROJECT_ID'",
    "roles": [
        { "name": "admin" }
      ],
    "trustee_user_id": "'$DEMO_USER_ID'",
    "trustor_user_id": "'$ADMIN_USER_ID'"
}}'\
 "http://localhost:5000/v3/OS-TRUST/trusts" | python -mjson.tool</screen>
            <para>Example response:</para>
            <screen language="javascript">{
    "trust": {
        "expires_at": "2014-12-30T23:59:59.999999Z",
        "id": "394998fa61f14736b1f0c1f322882949",
        "impersonation": false,
        "links": {
            "self": "http://localhost:5000/v3/OS-TRUST/trusts/394998fa61f14736b1f0c1f322882949"
        },
        "project_id": "3d4c2c82bd5948f0bcab0cf3a7c9b48c",
        "remaining_uses": null,
        "roles": [
            {
                "id": "c703057be878458588961ce9a0ce686b",
                "links": {
                    "self": "http://localhost:5000/v3/roles/c703057be878458588961ce9a0ce686b"
                },
                "name": "admin"
            }
        ],
        "roles_links": {
            "next": null,
            "previous": null,
            "self": "http://localhost:5000/v3/OS-TRUST/trusts/394998fa61f14736b1f0c1f322882949/roles"
        },
        "trustee_user_id": "269348fdd9374b8885da1418e0730af1",
        "trustor_user_id": "3ec3164f750146be97f21559ee4d9c51"
    }
}</screen>
          </section>
        </section>
        <section xml:id="service-api-examples-using-curl">
          <title>Service API Examples Using Curl</title>
          <para>The service API is defined to be a subset of the Admin API and runs on port
                5000 by default.</para>
          <section xml:id="get">
            <title>GET /</title>
            <para>This call is identical to that documented for the Admin API, except
                    that it uses port 5000 by default instead of port 35357:</para>
            <screen language="bash">$ curl "http://0.0.0.0:5000"</screen>
            <para>or:</para>
            <screen language="bash">$ curl "http://0.0.0.0:5000/v2.0/"</screen>
            <para>See the <xref linkend="admin-api-examples-using-curl"/> for more info.</para>
          </section>
          <section xml:id="get-extensions">
            <title>GET /extensions</title>
            <para>This call is identical to that documented for the Admin API.</para>
          </section>
          <section xml:id="post-tokens">
            <title>POST /tokens</title>
            <para>This call is identical to that documented for the Admin API.</para>
          </section>
          <section xml:id="get-tenants">
            <title>GET /tenants</title>
            <para>List all of the tenants your token can access:</para>
            <screen language="bash">$ curl -H "X-Auth-Token:887665443383838" \
   "http://localhost:5000/v2.0/tenants"</screen>
            <para>Returns:</para>
            <screen language="javascript">{
    "tenants_links": [],
    "tenants": [
        {
            "enabled": true,
            "description": "None",
            "name": "customer-x",
            "id": "1"
        }
    ]
}</screen>
          </section>
        </section>
        <section xml:id="admin-api-examples-using-curl">
          <title>Admin API Examples Using Curl</title>
          <para>These examples assume a default port value of 35357, and depend on the
                <literal>sampledata</literal> bundled with keystone.</para>
          <section xml:id="id1">
            <title>GET /</title>
            <para>Discover API version information, links to documentation (PDF, HTML, WADL),
                    and supported media types:</para>
            <screen language="bash">$ curl "http://0.0.0.0:35357"</screen>
            <screen language="javascript">{
    "versions": {
        "values": [
            {
                "id": "v3.4",
                "links": [
                    {
                        "href": "http://127.0.0.1:35357/v3/",
                        "rel": "self"
                    }
                ],
                "media-types": [
                    {
                        "base": "application/json",
                        "type": "application/vnd.openstack.identity-v3+json"
                    }
                ],
                "status": "stable",
                "updated": "2015-03-30T00:00:00Z"
            },
            {
                "id": "v2.0",
                "links": [
                    {
                        "href": "http://127.0.0.1:35357/v2.0/",
                        "rel": "self"
                    },
                    {
                        "href": "https://docs.openstack.org/",
                        "rel": "describedby",
                        "type": "text/html"
                    }
                ],
                "media-types": [
                    {
                        "base": "application/json",
                        "type": "application/vnd.openstack.identity-v2.0+json"
                    }
                ],
                "status": "stable",
                "updated": "2014-04-17T00:00:00Z"
            }
        ]
    }
}</screen>
            <screen language="bash">$ curl "http://0.0.0.0:35357/v2.0/"</screen>
            <para>Returns:</para>
            <screen language="javascript">{
    "version": {
        "id": "v2.0",
        "links": [
            {
                "href": "http://127.0.0.1:35357/v2.0/",
                "rel": "self"
            },
            {
                "href": "https://docs.openstack.org/",
                "rel": "describedby",
                "type": "text/html"
            }
        ],
        "media-types": [
            {
                "base": "application/json",
                "type": "application/vnd.openstack.identity-v2.0+json"
            }
        ],
        "status": "stable",
        "updated": "2014-04-17T00:00:00Z"
    }
}</screen>
          </section>
          <section xml:id="id2">
            <title>GET /extensions</title>
            <para>Discover the API extensions enabled at the endpoint:</para>
            <screen language="bash">$ curl "http://localhost:35357/v2.0/extensions/"</screen>
            <para>Returns:</para>
            <screen language="javascript">{
    "extensions":{
        "values":[]
    }
}</screen>
          </section>
          <section xml:id="id3">
            <title>POST /tokens</title>
            <para>Authenticate by exchanging credentials for an access token:</para>
            <screen language="bash">$ curl -d '
   {"auth": {
      "tenantName": "customer-x",
      "passwordCredentials": {
        "username": "joeuser",
        "password": "secret"
       }
     }
   }' \
   -H "Content-type: application/json" \
   "http://localhost:35357/v2.0/tokens"</screen>
            <para>Returns:</para>
            <screen language="javascript">{
    "access":{
        "token":{
            "expires":"2012-02-05T00:00:00",
            "id":"887665443383838",
            "tenant":{
                "id":"1",
                "name":"customer-x"
            }
        },
        "serviceCatalog":[
            {
                "endpoints":[
                {
                    "adminURL":"http://swift.admin-nets.local:8080/",
                    "region":"RegionOne",
                    "internalURL":"http://127.0.0.1:8080/v1/AUTH_1",
                    "publicURL":"http://swift.publicinternets.com/v1/AUTH_1"
                }
                ],
                "type":"object-store",
                "name":"swift"
            },
            {
                "endpoints":[
                {
                    "adminURL":"http://cdn.admin-nets.local/v1.1/1",
                    "region":"RegionOne",
                    "internalURL":"http://127.0.0.1:7777/v1.1/1",
                    "publicURL":"http://cdn.publicinternets.com/v1.1/1"
                }
                ],
                "type":"object-store",
                "name":"cdn"
            }
        ],
        "user":{
            "id":"1",
            "roles":[
                {
                "tenantId":"1",
                "id":"3",
                "name":"Member"
                }
            ],
            "name":"joeuser"
        }
    }
}</screen>
            <note>
              <para>Take note of the value <literal>[‘access’][‘token’][‘id’]</literal> value produced here
                    (<literal>887665443383838</literal>, above), as you can use it in the calls below.</para>
            </note>
          </section>
          <section xml:id="get-tokens-token-id">
            <title>GET /tokens/{token_id}</title>
            <note>
              <para>This call refers to a token known to be valid, <literal>887665443383838</literal> in this case.</para>
            </note>
            <para>Validate a token:</para>
            <screen language="bash">$ curl -H "X-Auth-Token:999888777666" \
   "http://localhost:35357/v2.0/tokens/887665443383838"</screen>
            <para>If the token is valid, returns:</para>
            <screen language="javascript">{
    "access":{
        "token":{
            "expires":"2012-02-05T00:00:00",
            "id":"887665443383838",
            "tenant":{
                "id":"1",
                "name":"customer-x"
            }
        },
        "user":{
            "name":"joeuser",
            "tenantName":"customer-x",
            "id":"1",
            "roles":[
                {
                    "serviceId":"1",
                    "id":"3",
                    "name":"Member"
                }
            ],
            "tenantId":"1"
        }
    }
}</screen>
          </section>
          <section xml:id="head-tokens-token-id">
            <title>HEAD /tokens/{token_id}</title>
            <para>This is a high-performance variant of the GET call documented above, which
                    by definition, returns no response body:</para>
            <screen language="bash">$ curl -I -H "X-Auth-Token:999888777666" \
   "http://localhost:35357/v2.0/tokens/887665443383838"</screen>
            <para>This returns <literal>200</literal>, indicating the token is valid:</para>
            <screen>HTTP/1.1 200 OK
Content-Length: 0
Content-Type: None
Date: Tue, 08 Nov 2011 23:07:44 GMT</screen>
          </section>
          <section xml:id="get-tokens-token-id-endpoints">
            <title>GET /tokens/{token_id}/endpoints</title>
            <para>List all endpoints for a token:</para>
            <screen language="bash">$ curl -H "X-Auth-Token:999888777666" \
   "http://localhost:35357/v2.0/tokens/887665443383838/endpoints"</screen>
            <para>Returns:</para>
            <screen language="javascript">{
    "endpoints_links": [
        {
            "href": "http://127.0.0.1:35357/tokens/887665443383838/endpoints?'marker=5&amp;limit=10'",
            "rel": "next"
        }
    ],
    "endpoints": [
        {
            "internalURL": "http://127.0.0.1:8080/v1/AUTH_1",
            "name": "swift",
            "adminURL": "http://swift.admin-nets.local:8080/",
            "region": "RegionOne",
            "tenantId": 1,
            "type": "object-store",
            "id": 1,
            "publicURL": "http://swift.publicinternets.com/v1/AUTH_1"
        },
        {
            "internalURL": "http://localhost:8774/v1.0",
            "name": "nova_compat",
            "adminURL": "http://127.0.0.1:8774/v1.0",
            "region": "RegionOne",
            "tenantId": 1,
            "type": "compute",
            "id": 2,
            "publicURL": "http://nova.publicinternets.com/v1.0/"
        },
        {
            "internalURL": "http://localhost:8774/v1.1",
            "name": "nova",
            "adminURL": "http://127.0.0.1:8774/v1.1",
            "region": "RegionOne",
            "tenantId": 1,
            "type": "compute",
            "id": 3,
            "publicURL": "http://nova.publicinternets.com/v1.1/
        },
        {
            "internalURL": "http://127.0.0.1:9292/v1.1/",
            "name": "glance",
            "adminURL": "http://nova.admin-nets.local/v1.1/",
            "region": "RegionOne",
            "tenantId": 1,
            "type": "image",
            "id": 4,
            "publicURL": "http://glance.publicinternets.com/v1.1/"
        },
        {
            "internalURL": "http://127.0.0.1:7777/v1.1/1",
            "name": "cdn",
            "adminURL": "http://cdn.admin-nets.local/v1.1/1",
            "region": "RegionOne",
            "tenantId": 1,
            "type": "object-store",
            "id": 5,
            "publicURL": "http://cdn.publicinternets.com/v1.1/1"
        }
    ]
}</screen>
          </section>
          <section xml:id="id4">
            <title>GET /tenants</title>
            <para>List all of the tenants in the system (requires an Admin <literal>X-Auth-Token</literal>):</para>
            <screen language="bash">$ curl -H "X-Auth-Token:999888777666" \
   "http://localhost:35357/v2.0/tenants"</screen>
            <para>Returns:</para>
            <screen language="javascript">{
    "tenants_links": [],
    "tenants": [
        {
            "enabled": false,
            "description": "None",
            "name": "project-y",
            "id": "3"
        },
        {
            "enabled": true,
            "description": "None",
            "name": "ANOTHER:TENANT",
            "id": "2"
        },
        {
            "enabled": true,
            "description": "None",
            "name": "customer-x",
            "id": "1"
        }
    ]
}</screen>
          </section>
          <section xml:id="get-tenants-tenant-id">
            <title>GET /tenants/{tenant_id}</title>
            <para>Retrieve information about a tenant, by tenant ID:</para>
            <screen language="bash">$ curl -H "X-Auth-Token:999888777666" \
   "http://localhost:35357/v2.0/tenants/1"</screen>
            <para>Returns:</para>
            <screen language="javascript">{
    "tenant":{
        "enabled":true,
        "description":"None",
        "name":"customer-x",
        "id":"1"
    }
}</screen>
          </section>
          <section xml:id="get-tenants-tenant-id-users-user-id-roles">
            <title>GET /tenants/{tenant_id}/users/{user_id}/roles</title>
            <para>List the roles a user has been granted on a tenant:</para>
            <screen language="bash">$ curl -H "X-Auth-Token:999888777666" \
   "http://localhost:35357/v2.0/tenants/1/users/1/roles"</screen>
            <para>Returns:</para>
            <screen language="javascript">{
    "roles_links":[],
    "roles":[
        {
            "id":"3",
            "name":"Member"
        }
    ]
}</screen>
          </section>
          <section xml:id="get-users-user-id">
            <title>GET /users/{user_id}</title>
            <para>Retrieve information about a user, by user ID:</para>
            <screen language="bash">$ curl -H "X-Auth-Token:999888777666" \
   "http://localhost:35357/v2.0/users/1"</screen>
            <para>Returns:</para>
            <screen language="javascript">{
    "user":{
        "tenantId":"1",
        "enabled":true,
        "id":"1",
        "name":"joeuser"
    }
}</screen>
          </section>
          <section xml:id="get-tokens-revoked">
            <title>GET /tokens/revoked</title>
            <para>Get the revocation list:</para>
            <screen language="bash">curl -s -H "X-Auth-Token: $OS_TOKEN" \
  "http://localhost:35357/v2.0/tokens/revoked" |
 jq -r .signed |
 openssl cms -verify \
  -certfile /etc/keystone/ssl/certs/signing_cert.pem \
  -CAfile /etc/keystone/ssl/certs/ca.pem \
  -inform PEM \
  -nosmimecap -nodetach -nocerts -noattr 2&gt;/dev/null |
 python -m json.tool</screen>
            <para>Example response:</para>
            <screen language="javascript">{
    "revoked": [
        {
            "expires": "2014-06-10T21:40:14Z",
            "id": "e6e2b5c9092751f88d2bcd30b09777a9"
        },
        {
            "expires": "2014-06-10T21:47:29Z",
            "id": "883ef5d610bd1c68fbaa8ac528aa9f17"
        },
        {
            "expires": "2014-06-10T21:51:52Z",
            "id": "41775ff4838f8f406b7bad28bea0dde6"
        }
    ]
}</screen>
          </section>
        </section>
      </section>
    </section>
  </chapter>
