<?xml version="1.0"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE section [
 <!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="ipam">
 <title>Using IPAM Drivers in the Networking Service</title>
 <para>
  This topic describes how to choose and implement an IPAM driver.
 </para>
 <section>
  <title>Selecting and implementing an IPAM driver</title>
  <para>
   Beginning with the Liberty release, OpenStack networking includes a
   pluggable interface for the IP Address Management (IPAM) function. This
   interface creates a driver framework for the allocation and de-allocation of
   subnets and IP addresses, enabling the integration of alternate IPAM
   implementations or third-party IP Address Management systems.
  </para>
  <para>
   There are three possible IPAM driver options:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     Non-pluggable driver. This option is the default when the ipam_driver
     parameter is not specified in neutron.conf.
    </para>
   </listitem>
   <listitem>
    <para>
     Pluggable reference IPAM driver. The pluggable IPAM driver interface was
     introduced in &kw-hos-phrase; (OpenStack Liberty). It is a refactoring of
     the Kilo non-pluggable driver to use the new pluggable interface. The
     setting in neutron.conf to specify this driver is <literal>ipam_driver =
     internal</literal>.
    </para>
   </listitem>
   <listitem>
    <para>
     Pluggable Infoblox IPAM driver. The pluggable Infoblox IPAM driver is a
     third-party implementation of the pluggable IPAM interface. the
     corresponding setting in neutron.conf to specify this driver is
     <literal>ipam_driver =
     networking_infoblox.ipam.driver.InfobloxPool</literal>.
    </para>
    <note>
     <para>
      You can use either the non-pluggable IPAM driver or a pluggable one.
      However, you cannot use both.
     </para>
    </note>
   </listitem>
  </itemizedlist>
 </section>
 <section>
  <title>Using the Pluggable reference IPAM driver</title>
  <para>
   To indicate that you want to use the Pluggable reference IPAM driver, the
   only parameter needed is "ipam_driver." You can set it by looking for the
   following commented line in the
   <literal>neutron.conf.j2</literal> template (ipam_driver = internal)
   uncommenting it, and committing the file. After following the standard
   steps to deploy Neutron, Neutron will be configured to run using the
   Pluggable reference IPAM driver.
  </para>
  <para>
   As stated, the file you must edit is <literal>neutron.conf.j2</literal> on
   the &lcm; in the directory
   <literal>~/openstack/my_cloud/config/neutron</literal>. Here is the relevant
   section where you can see the <literal>ipam_driver</literal> parameter
   commented out:
  </para>
<screen>[DEFAULT]
  ...
  l3_ha_net_cidr = 169.254.192.0/18

  # Uncomment the line below if the Reference Pluggable IPAM driver is to be used
  # ipam_driver = internal
  ...</screen>
  <para>
   After uncommenting the line <literal>ipam_driver = internal</literal>,
   commit the file using git commit from the <literal>openstack/my_cloud</literal>
   directory:
  </para>
<screen>&prompt.ardana;git commit -a -m 'My config for enabling the internal IPAM Driver'</screen>
  <para>
   Then follow the steps to deploy &kw-hos; in the
   <xref linkend="install_overview"/> appropriate to your cloud configuration.
  </para>
<!-- Commented in DITA original: -->
<!--<codeblock>cd ~/openstack/ardana/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml
cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts site.yml
...</codeblock>-->
  <note>
   <para>
    Currently there is no migration path from the non-pluggable driver to a
    pluggable IPAM driver because changes are needed to database tables and
    Neutron currently cannot make those changes.
   </para>
  </note>
 </section>
 <section>
  <title>Using the Infoblox IPAM driver</title>
  <para>
   As suggested above, using the Infoblox IPAM driver requires changes to
   existing parameters in <literal>nova.conf</literal> and
   <literal>neutron.conf</literal>. If you want to use the infoblox appliance,
   you will need to add the "infoblox service-component" to the service-role
   containing the neutron API server. To use the infoblox appliance for IPAM,
   both the agent <emphasis>and</emphasis> the Infoblox IPAM driver are
   required. The <literal>infoblox-ipam-agent</literal> should be deployed on
   the same node where the neutron-server component is running. Usually this is
   a Controller node.
  </para>
  <orderedlist>
   <listitem>
    <para>
     Have the Infoblox appliance running on the management network (the
     Infoblox appliance admin or the datacenter administrator should know how
     to perform this step).
    </para>
   </listitem>
   <listitem>
    <para>
     Change the control plane definition to add
     i<literal>nfoblox-ipam-agent</literal> as a service in the controller node
     cluster (see change in bold). Make the changes in
     <literal>control_plane.yml</literal> found here:
     <literal>~openstack/my_cloud/definition/data/control_plane.yml</literal>
    </para>
<screen>---
  product:
    version: 2

  control-planes:
    - name: ccp
      control-plane-prefix: ccp
 ...
      clusters:
        - name: cluster0
          cluster-prefix: c0
          server-role: ARDANA-ROLE
          member-count: 1
          allocation-policy: strict
          service-components:
            - lifecycle-manager
        - name: cluster1
          cluster-prefix: c1
          server-role: CONTROLLER-ROLE
          member-count: 3
          allocation-policy: strict
          service-components:
            - ntp-server
...
            - neutron-server
            <emphasis role="bold">- infoblox-ipam-agent</emphasis>
...
            - designate-client
            - powerdns
      resources:
        - name: compute
          resource-prefix: comp
          server-role: COMPUTE-ROLE
          allocation-policy: any</screen>
   </listitem>
   <listitem>
    <para>
     Modify the
     <literal>~/openstack/my_cloud/config/neutron/neutron.conf.j2</literal> file
     on the controller node to comment and uncomment the lines noted below to
     enable use with the Infoblox appliance:
    </para>
<screen>[DEFAULT]
            ...
            l3_ha_net_cidr = 169.254.192.0/18


            # Uncomment the line below if the Reference Pluggable IPAM driver is to be used
            # ipam_driver = internal


            # Comment out the line below if the Infoblox IPAM Driver is to be used
            # notification_driver = messaging

            # Uncomment the lines below if the Infoblox IPAM driver is to be used
            ipam_driver = networking_infoblox.ipam.driver.InfobloxPool
            notification_driver = messagingv2


            # Modify the infoblox sections below to suit your cloud environment

            [infoblox]
            cloud_data_center_id = 1
            # This name of this section is formed by "infoblox-dc:&lt;infoblox.cloud_data_center_id&gt;"
            # If cloud_data_center_id is 1, then the section name is "infoblox-dc:1"

            [infoblox-dc:0]
            http_request_timeout = 120
            http_pool_maxsize = 100
            http_pool_connections = 100
            ssl_verify = False
            wapi_version = 2.2
            admin_user_name = admin
            admin_password = infoblox
            grid_master_name = infoblox.localdomain
            grid_master_host = 1.2.3.4


            [QUOTAS]
            ...</screen>
   </listitem>
   <listitem>
    <para>
     Change <literal>nova.conf.j2</literal> to replace the notification driver
     "messaging" to "messagingv2"
    </para>
<screen> ...

 # Oslo messaging
 notification_driver = log

 #  Note:
 #  If the infoblox-ipam-agent is to be deployed in the cloud, change the
 #  notification_driver setting from "messaging" to "messagingv2".
 notification_driver = messagingv2
 notification_topics = notifications

 # Policy
 ...</screen>
   </listitem>
<!-- Commented in DITA original: -->
<!--<li>Commit the changes</li>
</ol></section>

<section><title>Setting up Neutron to use the Infoblox IPAM driver</title>
<ol>
<li>Edit ~stack/openstack/my_cloud//definition/data/control_plane.yml as described above.
</li><li>Edit ~stack/openstack/my_cloud/config/neutron/neutron.conf.j2 as described above
</li><li>Edit ~stack/openstack/my_cloud/config/nova/nova.conf.j2 as described above</li>-->
   <listitem>
    <para>
     Commit the changes:
    </para>
<screen>&prompt.ardana;cd ~/openstack/my_cloud
&prompt.ardana;git commit –a –m 'My config for enabling the Infoblox IPAM driver'</screen>
   </listitem>
   <listitem>
    <para>
     Deploy the cloud with the changes. Due to changes to the
     control_plane.yml, you will need to rerun the config-processor-run.yml
     playbook if you have run it already during the install process.
    </para>
<screen>&prompt.ardana;cd ~/openstack/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/localhost config-processor-run.yml
&prompt.ardana;ansible-playbook -i hosts/localhost ready-deployment.yml
&prompt.ardana;cd ~/scratch/ansible/next/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/verb_hosts site.yml</screen>
   </listitem>
  </orderedlist>
 </section>
 <section>
  <title>Configuration parameters for using the Infoblox IPAM driver</title>
  <para>
   Changes required in the notification parameters in nova.conf:
  </para>
  <informaltable colsep="1" rowsep="1">
   <tgroup cols="5">
    <colspec colnum="1" colname="col1"/>
    <colspec colnum="2" colname="col2"/>
    <colspec colnum="3" colname="col3"/>
    <colspec colnum="4" colname="col4"/>
    <colspec colnum="5" colname="col5"/>
    <thead>
     <row>
      <entry>Parameter Name</entry>
      <entry>Section in nova.conf</entry>
      <entry>Default Value</entry>
      <entry>Current Value </entry>
      <entry>Description</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>notify_on_state_change</entry>
      <entry>DEFAULT</entry>
      <entry>None</entry>
      <entry>vm_and_task_state</entry>
      <entry>
       <para>
        Send compute.instance.update notifications on instance state changes.
       </para>
       <para>
        Vm_and_task_state means notify on vm and task state changes.
       </para>
       <para>
        Infoblox requires the value to be vm_state (notify on vm state change).
       </para>
       <para>
        <emphasis role="bold"> Thus NO CHANGE is needed for infoblox</emphasis>
       </para>
      </entry>
     </row>
     <row>
      <entry>notification_topics</entry>
      <entry>DEFAULT</entry>
      <entry>empty list</entry>
      <entry>notifications</entry>
      <entry>
       <para>
        <emphasis role="bold">NO CHANGE is needed for infoblox.</emphasis>
       </para>
       <para>
        The infoblox installation guide requires the notifications to be
        "notifications"
       </para>
      </entry>
     </row>
     <row>
      <entry>notification_driver</entry>
      <entry>DEFAULT</entry>
      <entry>None</entry>
      <entry>messaging</entry>
      <entry>
       <para>
        <emphasis role="bold">Change needed.</emphasis>
       </para>
       <para>
        The infoblox installation guide requires the notification driver to be
        "messagingv2".
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
  <para>
   Changes to existing parameters in neutron.conf
  </para>
  <informaltable colsep="1" rowsep="1">
   <tgroup cols="5">
    <colspec colnum="1" colname="col1"/>
    <colspec colnum="2" colname="col2"/>
    <colspec colnum="3" colname="col3"/>
    <colspec colnum="4" colname="col4"/>
    <colspec colnum="5" colname="col5"/>
    <thead>
     <row>
      <entry>Parameter Name</entry>
      <entry>Section in neutron.conf</entry>
      <entry>Default Value</entry>
      <entry>Current Value </entry>
      <entry>Description</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>ipam_driver</entry>
      <entry>DEFAULT</entry>
      <entry>None</entry>
      <entry>
       <para>
        None
       </para>
       <para>
        (param is undeclared in neutron.conf)
       </para>
      </entry>
      <entry>
       <para>
        Pluggable IPAM driver to be used by Neutron API server.
       </para>
       <para>
        For infoblox, the value is
        "networking_infoblox.ipam.driver.InfobloxPool"
       </para>
      </entry>
     </row>
     <row>
      <entry>notification_driver</entry>
      <entry>DEFAULT</entry>
      <entry>empty list</entry>
      <entry>messaging</entry>
      <entry>
       <para>
        The driver used to send notifications from the Neutron API server to
        the Neutron agents.
       </para>
       <para>
        The installation guide for networking-infoblox calls for the
        notification_driver to be "messagingv2"
       </para>
      </entry>
     </row>
     <row>
      <entry>notification_topics</entry>
      <entry>DEFAULT</entry>
      <entry>None</entry>
      <entry>notifications</entry>
      <entry>
       <para>
        <emphasis role="bold">No change needed</emphasis>.
       </para>
       <para>
        The row is here show the changes in the Neutron parameters described in
        the installation guide for networking-infoblox
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
  <para>
   Parameters specific to the Networking Infoblox Driver. All the parameters
   for the Infoblox IPAM driver must be defined in neutron.conf.
  </para>
  <informaltable colsep="1" rowsep="1">
   <tgroup cols="4">
    <colspec colnum="1" colname="col1"/>
    <colspec colnum="2" colname="col2"/>
    <colspec colnum="3" colname="col3"/>
    <colspec colnum="4" colname="col4"/>
    <thead>
     <row>
      <entry>Parameter Name</entry>
      <entry>Section in neutron.conf</entry>
      <entry>Default Value</entry>
      <entry>Description</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>cloud_data_center_id</entry>
      <entry>infoblox</entry>
      <entry>0</entry>
      <entry>ID for selecting a particular grid from one or more grids to serve networks in
                the Infoblox back end</entry>
     </row>
     <row>
      <entry>ipam_agent_workers</entry>
      <entry>infoblox</entry>
      <entry>1</entry>
      <entry>Number of Infoblox IPAM agent works to run</entry>
     </row>
     <row>
      <entry>grid_master_host</entry>
      <entry>infoblox-dc.&lt;cloud_data_center_id&gt;</entry>
      <entry>empty string</entry>
      <entry>IP address of the grid master. WAPI requests are sent to the
                grid_master_host</entry>
     </row>
     <row>
      <entry>ssl_verify</entry>
      <entry>infoblox-dc.&lt;cloud_data_center_id&gt;</entry>
      <entry>False</entry>
      <entry>Ensure whether WAPI requests sent over HTTPS require SSL verification</entry>
     </row>
     <row>
      <entry>WAPI Version</entry>
      <entry>infoblox-dc.&lt;cloud_data_center_id&gt;</entry>
      <entry>1.4</entry>
      <entry>The WAPI version. Value should be 2.2.</entry>
     </row>
     <row>
      <entry>admin_user_name</entry>
      <entry>infoblox-dc.&lt;cloud_data_center_id&gt;</entry>
      <entry>empty string</entry>
      <entry>Admin user name to access the grid master or cloud platform appliance</entry>
     </row>
     <row>
      <entry>admin_password</entry>
      <entry>infoblox-dc.&lt;cloud_data_center_id&gt;</entry>
      <entry>empty string</entry>
      <entry>Admin user password</entry>
     </row>
     <row>
      <entry>http_pool_connections</entry>
      <entry>infoblox-dc.&lt;cloud_data_center_id&gt;</entry>
      <entry>100</entry>
      <entry></entry>
     </row>
     <row>
      <entry>http_pool_maxsize</entry>
      <entry>infoblox-dc.&lt;cloud_data_center_id&gt;</entry>
      <entry>100</entry>
      <entry></entry>
     </row>
     <row>
      <entry>http_request_timeout</entry>
      <entry>infoblox-dc.&lt;cloud_data_center_id&gt;</entry>
      <entry>120</entry>
      <entry></entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 <para>
  The diagram below shows Nova compute sending notification to the
  infoblox-ipam-agent
 </para>
 <informalfigure>
  <mediaobject>
   <imageobject role="fo">
    <imagedata fileref="media-networking-ipam.png" width="75%"/>
   </imageobject>
   <imageobject role="html">
    <imagedata fileref="media-networking-ipam.png"/>
   </imageobject>
  </mediaobject>
 </informalfigure>
 </section>
 <section>
  <title>Limitations</title>
  <itemizedlist>
   <listitem>
    <para>
     There is no IPAM migration path from non-pluggable to pluggable IPAM
     driver
     (<link xlink:href="https://bugs.launchpad.net/neutron/+bug/1516156"/>).
     This means there is no way to reconfigure the Neutron database if you
     wanted to change Neutron to use a pluggable IPAM driver. Unless you change
     the default of non-pluggable IPAM configuration to a pluggable driver at
     install time, you will have no other opportunity to make that change
     because reconfiguration of &kw-hos-phrase;from using the default
     non-pluggable IPAM configuration to &kw-hos-phrase; using a pluggable IPAM
     driver is not supported.
    </para>
   </listitem>
   <listitem>
    <para>
     Upgrade from previous versions of &kw-hos; to &kw-hos-phrase; to use a
     pluggable IPAM driver is not supported.
    </para>
   </listitem>
   <listitem>
    <para>
     The Infoblox appliance does not allow for overlapping IPs. For example,
     only one tenant can have a CIDR of 10.0.0.0/24.
    </para>
   </listitem>
   <listitem>
    <para>
     The infoblox IPAM driver fails the creation of a subnet when a there is no
     gateway-ip supplied. For example, the command "neutron subnet-create ...
     --no-gateway ..." will fail.
    </para>
   </listitem>
  </itemizedlist>
 </section>
</section>
