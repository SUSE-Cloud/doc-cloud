<?xml version="1.0"?>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:lang="en">
  <title>OpenStack End User Guide</title>
  <info>
    <abstract>
      <title>Abstract</title>
      <para>OpenStack is an open-source cloud computing platform for public and
private clouds. A series of interrelated projects deliver a cloud
infrastructure solution. This guide shows OpenStack end users how to
create and manage resources in an OpenStack cloud with the OpenStack
dashboard and OpenStack client commands.</para>
      <para>This guide documents OpenStack Ocata, Newton and Mitaka releases.</para>
    </abstract>
    <productname>SUSE OpenStack Cloud</productname>
    <productnumber>7</productnumber>
    <legalnotice role="cc-by">
 <para>Except where otherwise noted, this document is licensed under 
  <emphasis role="bold">Creative Commons Attribution 3.0 License </emphasis>: 
  <link xlink:href="http://creativecommons.org/licenses/by/3.0/legalcode"/>
 </para>
</legalnotice>
  </info>
  <chapter version="5.0">
<!-- No ID here! -->

 <title>Documentation Conventions</title>

 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:maintainer>taroth</dm:maintainer>
   <dm:status/>
   <dm:deadline/>
   <dm:priority/>
   <dm:translation>no</dm:translation>
   <dm:languages/>
  </dm:docmanager>
 </info>

 <para>
  The following notices and typographical conventions are used
  in this documentation:
 </para>

   <warning>
   <para>
    Vital information you must be aware of before proceeding. Warns you about
    security issues, potential loss of data, damage to hardware, or physical
    hazards.
   </para>
  </warning>
  <important>
   <para>
    Important information you should be aware of before proceeding.
   </para>
  </important>
  <note>
   <para>
    Additional information, for example about differences in software
    versions.
   </para>
  </note>
  <tip>
   <para>
    Helpful information, like a guideline or a piece of practical advice.
   </para>
  </tip>
<screen><prompt>tux &gt; </prompt><command>command</command></screen>
   <para>
    Commands than can be run by any user, including the <systemitem class="username">root</systemitem> user.
   </para>
<screen><prompt>root # </prompt><command>command</command></screen>
   <para>
    Commands that must be run with <systemitem class="username">root</systemitem> privileges. Often you
    can also prefix these commands with the <command>sudo</command> command to
    run them.
   </para>
</chapter>
  <chapter>
    <title>How can I use an OpenStack cloud?</title>
    <info/>
    <para>As an OpenStack cloud end user, you can provision your own resources
within the limits set by cloud administrators.</para>
    <para>The examples in this guide show you how to perform tasks by using the
following methods:</para>
    <itemizedlist>
      <listitem>
        <para>OpenStack dashboard: Use this web-based graphical interface, code named
<link xlink:href="https://git.openstack.org/cgit/openstack/horizon">horizon</link>, to view,
create, and manage resources.</para>
      </listitem>
      <listitem>
        <para>OpenStack command-line clients: Each core OpenStack project has a
command-line client that you can use to run simple commands to view,
create, and manage resources in a cloud and automate tasks by using
scripts.</para>
      </listitem>
    </itemizedlist>
    <para>You can modify these examples for your specific use cases.</para>
    <para>In addition to these ways of interacting with a cloud, you can access
the OpenStack APIs directly or indirectly through <link xlink:href="http://curl.haxx.se">cURL</link>
commands or open SDKs. You can automate access or build tools to manage
resources and services by using the native OpenStack APIs or the EC2
compatibility API.</para>
    <para>To use the OpenStack APIs, it helps to be familiar with HTTP/1.1,
RESTful web services, the OpenStack services, and JSON or XML data
serialization formats.</para>
    <sect1>
      <title>Who should read this book?</title>
      <para>This book is written for anyone who uses virtual machines and cloud
resources to develop software or perform research. You should have
years of experience with Linux-based tool sets and be comfortable
using both GUI and CLI based tools. While this book includes some
information about using Python to create and manage cloud resources,
Python knowledge is not a pre-requisite for reading this book.</para>
    </sect1>
  </chapter>
  <chapter>
    <title>OpenStack dashboard</title>
    <info/>
    <para>As a cloud end user, you can use the OpenStack dashboard to provision
your own resources within the limits set by administrators. You can
modify the examples provided in this section to create other types and
sizes of server instances.</para>
    <sect1>
      <title>Log in to the dashboard</title>
      <para>The dashboard is generally installed on the controller node.</para>
      <procedure>
        <step>
          <para>Ask the cloud operator for the host name or public IP address from
which you can access the dashboard, and for your user name and
password. If the cloud supports multi-domain model, you also need to
ask for your domain name.</para>
        </step>
        <step>
          <para>Open a web browser that has JavaScript and cookies enabled.</para>
          <note>
            <para>To use the Virtual Network Computing (VNC) client for the dashboard,
your browser must support HTML5 Canvas and HTML5 WebSockets. The VNC
client is based on noVNC. For details, see <link xlink:href="https://github.com/kanaka/noVNC/blob/master/README.md">noVNC: HTML5 VNC
Client</link>.
For a list of supported browsers, see <link xlink:href="https://github.com/kanaka/noVNC/wiki/Browser-support">Browser
support</link>.</para>
          </note>
        </step>
        <step>
          <para>In the address bar, enter the host name or IP address for the
dashboard, for example, <literal>https://ipAddressOrHostName/</literal>.</para>
          <note>
            <para>If a certificate warning appears when you try to access the URL for
the first time, a self-signed certificate is in use, which is not
considered trustworthy by default. Verify the certificate or add an
exception in the browser to bypass the warning.</para>
          </note>
        </step>
        <step>
          <para>On the <guimenu>Log In</guimenu> page, enter your user name and password, and
click <guimenu>Sign In</guimenu>. If the cloud supports multi-domain model, you
also need to enter your domain name.</para>
          <para>The top of the window displays your user name. You can also access the
<guimenu>Settings</guimenu> tab (<xref linkend="dashboard-settings-tab"/>) or sign out
of the dashboard.</para>
          <para>The visible tabs and functions in the dashboard depend on the access
permissions, or roles, of the user you are logged in as.</para>
          <itemizedlist>
            <listitem>
              <para>If you are logged in as an end user, the <guimenu>Project</guimenu> tab
(<xref linkend="dashboard-project-tab"/>) and <guimenu>Identity</guimenu> tab
(<xref linkend="dashboard-identity-tab"/>) are displayed.</para>
            </listitem>
            <listitem>
              <para>If you are logged in as an administrator, the <guimenu>Project</guimenu> tab
(<xref linkend="dashboard-project-tab"/>) and <guimenu>Admin</guimenu> tab
(<xref linkend="dashboard-admin-tab"/>) and <guimenu>Identity</guimenu> tab
(<xref linkend="dashboard-identity-tab"/>) are displayed.</para>
            </listitem>
          </itemizedlist>
        </step>
      </procedure>
      <note>
        <para>Some tabs, such as <guimenu>Orchestration</guimenu> and <guimenu>Firewalls</guimenu>,
only appear on the dashboard if they are properly configured.</para>
      </note>
      <sect2 xml:id="dashboard-project-tab">
        <title>OpenStack dashboard — <guimenu>Project</guimenu> tab</title>
        <para>Projects are organizational units in the cloud and are also known as
tenants or accounts. Each user is a member of one or more projects.
Within a project, a user creates and manages instances.</para>
        <para>From the <guimenu>Project</guimenu> tab, you can view and manage the resources in a
selected project, including instances and images. You can select the project
from the drop-down menu at the top left. If the cloud supports multi-domain
model, you can also select the domain from this menu.</para>
        <figure>
          <title>Figure: Project tab</title>
             <mediaobject>
              <imageobject role="fo">
                <imagedata fileref="dashboard_project_tab.png" width="99%"/>
              </imageobject>
              <imageobject role="html">
                <imagedata fileref="dashboard_project_tab.png" width="99%"/>
              </imageobject>
            </mediaobject>
           </figure>
        <para>From the <guimenu>Project</guimenu> tab, you can access the following categories:</para>
        <sect3>
          <title><guimenu>Compute</guimenu> tab</title>
          <itemizedlist>
            <listitem>
              <para><guimenu>Overview</guimenu>: View reports for the project.</para>
            </listitem>
            <listitem>
              <para><guimenu>Instances</guimenu>: View, launch, create a snapshot from, stop, pause,
or reboot instances, or connect to them through VNC.</para>
            </listitem>
            <listitem>
              <para><guimenu>Volumes</guimenu>: Use the following tabs to complete these tasks:</para>
              <itemizedlist>
                <listitem>
                  <para><guimenu>Volumes</guimenu>: View, create, edit, and delete volumes.</para>
                </listitem>
                <listitem>
                  <para><guimenu>Volume Snapshots</guimenu>: View, create, edit, and delete volume
snapshots.</para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para><guimenu>Images</guimenu>: View images and instance snapshots created by project
users, plus any images that are publicly available. Create, edit, and
delete images, and launch instances from images and snapshots.</para>
            </listitem>
            <listitem>
              <para><guimenu>Access &amp; Security</guimenu>: Use the following tabs to complete these
tasks:</para>
              <itemizedlist>
                <listitem>
                  <para><guimenu>Security Groups</guimenu>: View, create, edit, and delete security
groups and security group rules.</para>
                </listitem>
                <listitem>
                  <para><guimenu>Key Pairs</guimenu>: View, create, edit, import, and delete key pairs.</para>
                </listitem>
                <listitem>
                  <para><guimenu>Floating IPs</guimenu>: Allocate an IP address to or release it from a
project.</para>
                </listitem>
                <listitem>
                  <para><guimenu>API Access</guimenu>: View API endpoints.</para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para><guimenu>Shares</guimenu>: Use the following tabs to complete these tasks:</para>
              <itemizedlist>
                <listitem>
                  <para><guimenu>Shares</guimenu>: View, create, manage, and delete shares.</para>
                </listitem>
                <listitem>
                  <para><guimenu>Snapshots</guimenu>: View, manage, and delete volume snapshots.</para>
                </listitem>
                <listitem>
                  <para><guimenu>Share Networks</guimenu>: View, manage, and delete share networks.</para>
                </listitem>
                <listitem>
                  <para><guimenu>Security Services</guimenu>: View, manage, and delete security services.</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </itemizedlist>
        </sect3>
        <sect3>
          <title><guimenu>Network</guimenu> tab</title>
          <itemizedlist>
            <listitem>
              <para><guimenu>Network Topology</guimenu>: View the network topology.</para>
            </listitem>
            <listitem>
              <para><guimenu>Networks</guimenu>: Create and manage public and private networks.</para>
            </listitem>
            <listitem>
              <para><guimenu>Routers</guimenu>: Create and manage routers.</para>
            </listitem>
            <listitem>
              <para><guimenu>Load Balancers</guimenu>: Create and manage load balancers.</para>
              <itemizedlist>
                <listitem>
                  <para><guimenu>Pools</guimenu>: Add and manage pools.</para>
                </listitem>
                <listitem>
                  <para><guimenu>Members</guimenu>: Add and manage members.</para>
                </listitem>
                <listitem>
                  <para><guimenu>Monitors</guimenu>: Add and manage monitors.</para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para><guimenu>Firewalls</guimenu>: Create and manage firewalls.</para>
              <itemizedlist>
                <listitem>
                  <para><guimenu>Firewalls</guimenu>: Create and manage firewalls.</para>
                </listitem>
                <listitem>
                  <para><guimenu>Firewall Policies</guimenu>: Add and manage firewall policies.</para>
                </listitem>
                <listitem>
                  <para><guimenu>Firewall Rules</guimenu>: Add and manage firewall rules.</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </itemizedlist>
        </sect3>
        <sect3>
          <title><guimenu>Orchestration</guimenu> tab</title>
          <itemizedlist>
            <listitem>
              <para><guimenu>Stacks</guimenu>: Use the REST API to orchestrate multiple composite
cloud applications.</para>
            </listitem>
            <listitem>
              <para><guimenu>Resource Types</guimenu>: Show a list of all the supported resource
types for HOT templates.</para>
            </listitem>
          </itemizedlist>
        </sect3>
        <sect3>
          <title><guimenu>Object Store</guimenu> tab</title>
          <itemizedlist>
            <listitem>
              <para><guimenu>Containers</guimenu>: Create and manage containers and objects.</para>
            </listitem>
          </itemizedlist>
        </sect3>
      </sect2>
      <sect2 xml:id="dashboard-admin-tab">
        <title>OpenStack dashboard — <guimenu>Admin</guimenu> tab</title>
        <para>Administrative users can use the <guimenu>Admin</guimenu> tab to view usage and to
manage instances, volumes, flavors, images, networks, and so on.</para>
        <figure>
          <title>Figure: Admin tab</title>
            <mediaobject>
              <imageobject role="fo">
                <imagedata fileref="dashboard_admin_tab.png" width="99%"/>
              </imageobject>
              <imageobject role="html">
                <imagedata fileref="dashboard_admin_tab.png" width="99%"/>
              </imageobject>
            </mediaobject>
           </figure>
        <para>From the <guimenu>Admin</guimenu> tab, you can access the following category
to complete these tasks:</para>
        <sect3>
          <title><guimenu>System</guimenu> tab</title>
          <itemizedlist>
            <listitem>
              <para><guimenu>Overview</guimenu>: View basic reports.</para>
            </listitem>
            <listitem>
              <para><guimenu>Resource Usage</guimenu>: Use the following tabs to view the following
usages:</para>
              <itemizedlist>
                <listitem>
                  <para><guimenu>Usage Report</guimenu>: View the usage report.</para>
                </listitem>
                <listitem>
                  <para><guimenu>Stats</guimenu>: View the statistics of all resources.</para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para><guimenu>Hypervisors</guimenu>: View the hypervisor summary.</para>
            </listitem>
            <listitem>
              <para><guimenu>Host Aggregates</guimenu>: View, create, and edit host aggregates.
View the list of availability zones.</para>
            </listitem>
            <listitem>
              <para><guimenu>Instances</guimenu>: View, pause, resume, suspend, migrate, soft or hard
reboot, and delete running instances that belong to users of some, but not
all, projects. Also, view the log for an instance or access an instance
through VNC.</para>
            </listitem>
            <listitem>
              <para><guimenu>Volumes</guimenu>: Use the following tabs to complete these tasks:</para>
              <itemizedlist>
                <listitem>
                  <para><guimenu>Volumes</guimenu>: View, create, manage, and delete volumes.</para>
                </listitem>
                <listitem>
                  <para><guimenu>Volume Types</guimenu>: View, create, manage, and delete volume types.</para>
                </listitem>
                <listitem>
                  <para><guimenu>Volume Snapshots</guimenu>: View, manage, and delete volume snapshots.</para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para><guimenu>Flavors</guimenu>: View, create, edit, view extra specifications for,
and delete flavors. A flavor is the size of an instance.</para>
            </listitem>
            <listitem>
              <para><guimenu>Images</guimenu>: View, create, edit properties for, and delete custom
images.</para>
            </listitem>
            <listitem>
              <para><guimenu>Networks</guimenu>: View, create, edit properties for, and delete
networks.</para>
            </listitem>
            <listitem>
              <para><guimenu>Routers</guimenu>: View, create, edit properties for, and delete routers.</para>
            </listitem>
            <listitem>
              <para><guimenu>Defaults</guimenu>: View default quota values. Quotas are hard-coded in
OpenStack Compute and define the maximum allowable size and number of
resources.</para>
            </listitem>
            <listitem>
              <para><guimenu>Metadata Definitions</guimenu>: Import namespace and view the metadata
information.</para>
            </listitem>
            <listitem>
              <para><guimenu>System Information</guimenu>: Use the following tabs to view the service
information:</para>
              <itemizedlist>
                <listitem>
                  <para><guimenu>Services</guimenu>: View a list of the services.</para>
                </listitem>
                <listitem>
                  <para><guimenu>Compute Services</guimenu>: View a list of all Compute services.</para>
                </listitem>
                <listitem>
                  <para><guimenu>Block Storage Services</guimenu>: View a list of all Block Storage
services.</para>
                </listitem>
                <listitem>
                  <para><guimenu>Network Agents</guimenu>: View the network agents.</para>
                </listitem>
                <listitem>
                  <para><guimenu>Orchestration Services</guimenu>: View a list of all Orchestration
services.</para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para><guimenu>Shares</guimenu>: Use the following tabs to complete these tasks:</para>
              <itemizedlist>
                <listitem>
                  <para><guimenu>Shares</guimenu>: View, create, manage, and delete shares.</para>
                </listitem>
                <listitem>
                  <para><guimenu>Snapshots</guimenu>: View, manage, and delete volume snapshots.</para>
                </listitem>
                <listitem>
                  <para><guimenu>Share Networks</guimenu>: View, manage, and delete share networks.</para>
                </listitem>
                <listitem>
                  <para><guimenu>Security Services</guimenu>: View, manage, and delete security services.</para>
                </listitem>
                <listitem>
                  <para><guimenu>Share Types</guimenu>: View, create, manage, and delete share types.</para>
                </listitem>
                <listitem>
                  <para><guimenu>Share Servers</guimenu>: View, manage, and delete share servers.</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </itemizedlist>
        </sect3>
      </sect2>
      <sect2 xml:id="dashboard-identity-tab">
        <title>OpenStack dashboard — <guimenu>Identity</guimenu> tab</title>
        <figure>
          <title>Figure:Identity tab</title>
            <mediaobject>
              <imageobject role="fo">
                <imagedata fileref="dashboard_identity_tab.png" width="99%"/>
              </imageobject>
              <imageobject role="html">
                <imagedata fileref="dashboard_identity_tab.png" width="99%"/>
              </imageobject>
            </mediaobject>
        </figure>
        <itemizedlist>
          <listitem>
            <para><guimenu>Projects</guimenu>: View, create, assign users to, remove users from,
and delete projects.</para>
          </listitem>
          <listitem>
            <para><guimenu>Users</guimenu>: View, create, enable, disable, and delete users.</para>
          </listitem>
        </itemizedlist>
      </sect2>
      <sect2 xml:id="dashboard-settings-tab">
        <title>OpenStack dashboard — <guimenu>Settings</guimenu> tab</title>
        <figure>
          <title>Figure:Settings tab</title>
            <mediaobject>
              <imageobject role="fo">
                <imagedata fileref="dashboard_settings_tab.png" width="99%"/>
              </imageobject>
              <imageobject role="html">
                <imagedata fileref="dashboard_settings_tab.png" width="99%"/>
              </imageobject>
            </mediaobject>
        </figure>
        <para>Click the <guimenu>Settings</guimenu> button from the user drop down menu at the
top right of any page, you will see the <guimenu>Settings</guimenu> tab.</para>
        <itemizedlist>
          <listitem>
            <para><guimenu>User Settings</guimenu>: View and manage dashboard settings.</para>
          </listitem>
          <listitem>
            <para><guimenu>Change Password</guimenu>: Change the password of the user.</para>
          </listitem>
        </itemizedlist>
      </sect2>
    </sect1>
    <sect1>
      <title>Upload and manage images</title>
      <para>A virtual machine image, referred to in this document simply
as an image, is a single file that contains a virtual disk that
has a bootable operating system installed on it. Images are used
to create virtual machine instances within the cloud. For information
about creating image files, see the <link xlink:href="https://docs.openstack.org/image-guide/">OpenStack Virtual Machine
Image Guide</link>.</para>
      <para>Depending on your role, you may have permission to upload and manage
virtual machine images. Operators might restrict the upload and
management of images to cloud administrators or operators only. If you
have the appropriate privileges, you can use the dashboard to upload and
manage images in the admin project.</para>
      <note>
        <para>You can also use the <command>openstack</command> and <command>glance</command>
command-line clients or the Image service to manage images.
For more information see .</para>
      </note>
      <sect2>
        <title>Upload an image</title>
        <para>Follow this procedure to upload an image to a project:</para>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Compute</guimenu> tab and
click <guimenu>Images</guimenu> category.</para>
          </step>
          <step>
            <para>Click <guimenu>Create Image</guimenu>.</para>
            <para>The <guimenu>Create An Image</guimenu> dialog box appears.</para>
            <figure>
              <title>Dashboard — Create Image</title>
                <mediaobject>
                  <imageobject role="fo">
                    <imagedata fileref="create_image.png"/>
                  </imageobject>
                  <imageobject role="html">
                    <imagedata fileref="create_image.png"/>
                  </imageobject>
                </mediaobject>
            </figure>
          </step>
          <step>
            <para>Enter the following values:</para>
            <informaltable>
              <tgroup cols="2">
                <colspec colname="c1" colwidth="48.4*"/>
                <colspec colname="c2" colwidth="51.6*"/>
                <tbody>
                  <row>
                    <entry>
                      <para>
                        <guimenu>Image Name</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>Enter a name for the image.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <guimenu>Image Description</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>Enter a brief description of
the image.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <guimenu>Image Source</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>Choose the image source from
the dropdown list. Your choices
are <guimenu>Image Location</guimenu>
and <guimenu>Image File</guimenu>.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para><guimenu>Image File</guimenu> or
<guimenu>Image Location</guimenu></para>
                    </entry>
                    <entry>
                      <para>Based on your selection for
<guimenu>Image Source</guimenu>, you
either enter the location URL
of the image in the
<guimenu>Image Location</guimenu>
field, or browse for the image
file on your file  system and
add it.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <guimenu>Format</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>Select the image format (for
example, QCOW2) for the image.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <guimenu>Architecture</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>Specify the architecture. For
example, <literal>i386</literal> for a 32-bit
architecture or <literal>x86_64</literal> for
a 64-bit architecture.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <guimenu>Minimum Disk (GB)</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>Leave this field empty.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <guimenu>Minimum RAM (MB)</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>Leave this field empty.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <guimenu>Copy Data</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>Specify this option to copy
image data to the Image service.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <guimenu>Visibility</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>The access permission for the
image.
<literal>Public</literal> or <literal>Private</literal>.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <guimenu>Protected</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>Select this check box to ensure
that only users with
permissions can delete the
image. <literal>Yes</literal> or <literal>No</literal>.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <guimenu>Image Metadata</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>Specify this option to add
resource metadata. The glance
Metadata Catalog provides a list
of metadata image definitions.
(Note: Not all cloud providers
enable this feature.)</para>
                    </entry>
                  </row>
                </tbody>
              </tgroup>
            </informaltable>
          </step>
          <step>
            <para>Click <guimenu>Create Image</guimenu>.</para>
            <para>The image is queued to be uploaded. It might take some time before
the status changes from Queued to Active.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Update an image</title>
        <para>Follow this procedure to update an existing image.</para>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>Select the image that you want to edit.</para>
          </step>
          <step>
            <para>In the <guimenu>Actions</guimenu> column, click the menu button and then
select <guimenu>Edit Image</guimenu> from the list.</para>
          </step>
          <step>
            <para>In the <guimenu>Edit Image</guimenu> dialog box, you can perform various
actions. For example:</para>
            <itemizedlist>
              <listitem>
                <para>Change the name of the image.</para>
              </listitem>
              <listitem>
                <para>Select the <guimenu>Public</guimenu> check box to make the image public.</para>
              </listitem>
              <listitem>
                <para>Clear the <guimenu>Public</guimenu> check box to make the image private.</para>
              </listitem>
            </itemizedlist>
          </step>
          <step>
            <para>Click <guimenu>Edit Image</guimenu>.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Delete an image</title>
        <para>Deletion of images is permanent and <emphasis role="bold">cannot</emphasis> be reversed. Only users
with the appropriate permissions can delete images.</para>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Compute</guimenu> tab and
click <guimenu>Images</guimenu> category.</para>
          </step>
          <step>
            <para>Select the images that you want to delete.</para>
          </step>
          <step>
            <para>Click <guimenu>Delete Images</guimenu>.</para>
          </step>
          <step>
            <para>In the <guimenu>Confirm Delete Images</guimenu> dialog box, click
<guimenu>Delete Images</guimenu> to confirm the deletion.</para>
          </step>
        </procedure>
      </sect2>
    </sect1>
    <sect1>
      <title>Configure access and security for instances</title>
      <para>Before you launch an instance, you should add security group rules to
enable users to ping and use SSH to connect to the instance. Security
groups are sets of IP filter rules that define networking access and are
applied to all instances within a project. To do so, you either add
rules to the default security group <xref linkend="security-groups-add-rule"/>
or add a new security group with rules.</para>
      <para>Key pairs are SSH credentials that are injected into an instance when it
is launched. To use key pair injection, the image that the instance is
based on must contain the <literal>cloud-init</literal> package. Each project should
have at least one key pair. For more information, see the section
<xref linkend="keypair-add"/>.</para>
      <para>If you have generated a key pair with an external tool, you can import
it into OpenStack. The key pair can be used for multiple instances that
belong to a project. For more information, see the section
<xref linkend="dashboard-import-keypair"/>.</para>
      <note>
        <para>A key pair belongs to an individual user, not to a project.
To share a key pair across multiple users, each user
needs to import that key pair.</para>
      </note>
      <para>When an instance is created in OpenStack, it is automatically assigned a
fixed IP address in the network to which the instance is assigned. This
IP address is permanently associated with the instance until the
instance is terminated. However, in addition to the fixed IP address, a
floating IP address can also be attached to an instance. Unlike fixed IP
addresses, floating IP addresses are able to have their associations
modified at any time, regardless of the state of the instances involved.</para>
      <sect2 xml:id="security-groups-add-rule">
        <title>Add a rule to the default security group</title>
        <para>This procedure enables SSH and ICMP (ping) access to instances. The
rules apply to all instances within a given project, and should be set
for every project unless there is a reason to prohibit SSH or ICMP
access to the instances.</para>
        <para>This procedure can be adjusted as necessary to add additional security
group rules to a project, if your cloud requires them.</para>
        <note>
          <para>When adding a rule, you must specify the protocol used with the
destination port or source port.</para>
        </note>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Compute</guimenu> tab and
click <guimenu>Access &amp; Security</guimenu> category. The
<guimenu>Security Groups</guimenu> tab shows the security groups that are
available for this project.</para>
          </step>
          <step>
            <para>Select the default security group and click <guimenu>Manage Rules</guimenu>.</para>
          </step>
          <step>
            <para>To allow SSH access, click <guimenu>Add Rule</guimenu>.</para>
          </step>
          <step>
            <para>In the <guimenu>Add Rule</guimenu> dialog box, enter the following values:</para>
            <itemizedlist>
              <listitem>
                <para><emphasis role="bold">Rule</emphasis>: <literal>SSH</literal></para>
              </listitem>
              <listitem>
                <para><emphasis role="bold">Remote</emphasis>: <literal>CIDR</literal></para>
              </listitem>
              <listitem>
                <para><emphasis role="bold">CIDR</emphasis>: <literal>0.0.0.0/0</literal></para>
              </listitem>
            </itemizedlist>
            <note>
              <para>To accept requests from a particular range of IP
addresses, specify the IP address block in the
<guimenu>CIDR</guimenu> box.</para>
            </note>
          </step>
          <step>
            <para>Click <guimenu>Add</guimenu>.</para>
            <para>Instances will now have SSH port 22 open for requests from any IP
address.</para>
          </step>
          <step>
            <para>To add an ICMP rule, click <guimenu>Add Rule</guimenu>.</para>
          </step>
          <step>
            <para>In the <guimenu>Add Rule</guimenu> dialog box, enter the following values:</para>
            <itemizedlist>
              <listitem>
                <para><emphasis role="bold">Rule</emphasis>: <literal>All ICMP</literal></para>
              </listitem>
              <listitem>
                <para><emphasis role="bold">Direction</emphasis>: <literal>Ingress</literal></para>
              </listitem>
              <listitem>
                <para><emphasis role="bold">Remote</emphasis>: <literal>CIDR</literal></para>
              </listitem>
              <listitem>
                <para><emphasis role="bold">CIDR</emphasis>: <literal>0.0.0.0/0</literal></para>
              </listitem>
            </itemizedlist>
          </step>
          <step>
            <para>Click <guimenu>Add</guimenu>.</para>
            <para>Instances will now accept all incoming ICMP packets.</para>
          </step>
        </procedure>
      </sect2>
      <sect2 xml:id="keypair-add">
        <title>Add a key pair</title>
        <para>Create at least one key pair for each project.</para>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Compute</guimenu> tab and
click <guimenu>Access &amp; Security</guimenu> category.</para>
          </step>
          <step>
            <para>Click the <guimenu>Key Pairs</guimenu> tab, which shows the key pairs that
are available for this project.</para>
          </step>
          <step>
            <para>Click <guimenu>Create Key Pair</guimenu>.</para>
          </step>
          <step>
            <para>In the <guimenu>Create Key Pair</guimenu> dialog box, enter a name for your
key pair, and click <guimenu>Create Key Pair</guimenu>.</para>
          </step>
          <step>
            <para>Respond to the prompt to download the key pair.</para>
          </step>
        </procedure>
      </sect2>
      <sect2 xml:id="dashboard-import-keypair">
        <title>Import a key pair</title>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Compute</guimenu> tab and
click <guimenu>Access &amp; Security</guimenu> category.</para>
          </step>
          <step>
            <para>Click the <guimenu>Key Pairs</guimenu> tab, which shows the key pairs that
are available for this project.</para>
          </step>
          <step>
            <para>Click <guimenu>Import Key Pair</guimenu>.</para>
          </step>
          <step>
            <para>In the <guimenu>Import Key Pair</guimenu> dialog box, enter the name of your
key pair, copy the public key into the <guimenu>Public Key</guimenu> box,
and then click <guimenu>Import Key Pair</guimenu>.</para>
          </step>
          <step>
            <para>Save the <literal>*.pem</literal> file locally.</para>
          </step>
          <step>
            <para>To change its permissions so that only you can read and write to the
file, run the following command:</para>
            <screen language="console">$ chmod 0600 yourPrivateKey.pem</screen>
            <note>
              <para>If you are using the Dashboard from a Windows computer, use PuTTYgen
to load the <literal>*.pem</literal> file and convert and save it as <literal>*.ppk</literal>. For
more information see the <link xlink:href="http://winscp.net/eng/docs/ui_puttygen">WinSCP web page for
PuTTYgen</link>.</para>
            </note>
          </step>
          <step>
            <para>To make the key pair known to SSH, run the <command>ssh-add</command> command.</para>
            <screen language="console">$ ssh-add yourPrivateKey.pem</screen>
          </step>
        </procedure>
        <para>The Compute database registers the public key of the key pair.</para>
        <para>The Dashboard lists the key pair on the <guimenu>Access &amp; Security</guimenu> tab.</para>
      </sect2>
      <sect2>
        <title>Allocate a floating IP address to an instance</title>
        <para>When an instance is created in OpenStack, it is automatically assigned a
fixed IP address in the network to which the instance is assigned. This
IP address is permanently associated with the instance until the
instance is terminated.</para>
        <para>However, in addition to the fixed IP address, a floating IP address can
also be attached to an instance. Unlike fixed IP addresses, floating IP
addresses can have their associations modified at any time, regardless
of the state of the instances involved. This procedure details the
reservation of a floating IP address from an existing pool of addresses
and the association of that address with a specific instance.</para>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Compute</guimenu> tab and
click <guimenu>Access &amp; Security</guimenu> category.</para>
          </step>
          <step>
            <para>Click the <guimenu>Floating IPs</guimenu> tab, which shows the floating IP
addresses allocated to instances.</para>
          </step>
          <step>
            <para>Click <guimenu>Allocate IP To Project</guimenu>.</para>
          </step>
          <step>
            <para>Choose the pool from which to pick the IP address.</para>
          </step>
          <step>
            <para>Click <guimenu>Allocate IP</guimenu>.</para>
          </step>
          <step>
            <para>In the <guimenu>Floating IPs</guimenu> list, click <guimenu>Associate</guimenu>.</para>
          </step>
          <step>
            <para>In the <guimenu>Manage Floating IP Associations</guimenu> dialog box,
choose the following options:</para>
            <itemizedlist>
              <listitem>
                <para>The <guimenu>IP Address</guimenu> field is filled automatically,
but you can add a new IP address by clicking the
<guimenu>+</guimenu> button.</para>
              </listitem>
              <listitem>
                <para>In the <guimenu>Port to be associated</guimenu> field, select a port
from the list.</para>
                <para>The list shows all the instances with their fixed IP addresses.</para>
              </listitem>
            </itemizedlist>
          </step>
          <step>
            <para>Click <guimenu>Associate</guimenu>.</para>
          </step>
        </procedure>
        <note>
          <para>To disassociate an IP address from an instance, click the
<guimenu>Disassociate</guimenu> button.</para>
        </note>
        <para>To release the floating IP address back into the floating IP pool, click
the <guimenu>Release Floating IP</guimenu> option in the <guimenu>Actions</guimenu> column.</para>
      </sect2>
    </sect1>
    <sect1>
      <title>Launch and manage instances</title>
      <para>Instances are virtual machines that run inside the cloud.
You can launch an instance from the following sources:</para>
      <itemizedlist>
        <listitem>
          <para>Images uploaded to the Image service.</para>
        </listitem>
        <listitem>
          <para>Image that you have copied to a persistent volume. The instance
launches from the volume, which is provided by the <literal>cinder-volume</literal>
API through iSCSI.</para>
        </listitem>
        <listitem>
          <para>Instance snapshot that you took.</para>
        </listitem>
      </itemizedlist>
      <sect2>
        <title>Launch an instance</title>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Compute</guimenu> tab and
click <guimenu>Instances</guimenu> category.</para>
            <para>The dashboard shows the instances with its name, its private and
floating IP addresses, size, status, task, power state, and so on.</para>
          </step>
          <step>
            <para>Click <guimenu>Launch Instance</guimenu>.</para>
          </step>
          <step>
            <para>In the <guimenu>Launch Instance</guimenu> dialog box, specify the following values:</para>
            <para><guimenu>Details</guimenu> tab</para>
            <variablelist>
              <varlistentry>
                <term>Instance Name</term>
                <listitem>
                  <para>Assign a name to the virtual machine.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>Availability Zone</term>
                <listitem>
                  <para>By default, this value is set to the availability zone given by the
cloud provider (for example, <literal>us-west</literal> or <literal>apac-south</literal>). For some
cases, it could be <literal>nova</literal>.</para>
                  <note>
                    <para>The name you assign here becomes the initial host name of the server.
If the name is longer than 63 characters, the Compute service
truncates it automatically to ensure dnsmasq works correctly.</para>
                    <para>After the server is built, if you change the server name in the API
or change the host name directly, the names are not updated in the
dashboard.</para>
                    <para>Server names are not guaranteed to be unique when created so you
could have two instances with the same host name.</para>
                  </note>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>Count</term>
                <listitem>
                  <para>To launch multiple instances, enter a value greater than <literal>1</literal>. The
default is <literal>1</literal>.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <para><guimenu>Source</guimenu> tab</para>
            <variablelist>
              <varlistentry>
                <term>Instance Boot Source</term>
                <listitem>
                  <para>Your options are:</para>
                  <variablelist>
                    <varlistentry>
                      <term>Boot from image</term>
                      <listitem>
                        <para>If you choose this option, a new field for <guimenu>Image Name</guimenu>
displays. You can select the image from the list.</para>
                      </listitem>
                    </varlistentry>
                    <varlistentry>
                      <term>Boot from snapshot</term>
                      <listitem>
                        <para>If you choose this option, a new field for <guimenu>Instance
Snapshot</guimenu> displays. You can select the snapshot from the list.</para>
                      </listitem>
                    </varlistentry>
                    <varlistentry>
                      <term>Boot from volume</term>
                      <listitem>
                        <para>If you choose this option, a new field for <guimenu>Volume</guimenu>
displays. You can select the volume from the list.</para>
                      </listitem>
                    </varlistentry>
                    <varlistentry>
                      <term>Boot from image (creates a new volume)</term>
                      <listitem>
                        <para>With this option, you can boot from an image and create a volume
by entering the <guimenu>Device Size</guimenu> and <guimenu>Device
Name</guimenu> for your volume. Click the <guimenu>Delete Volume on
Instance Delete</guimenu> option to delete the volume on deleting the
instance.</para>
                      </listitem>
                    </varlistentry>
                    <varlistentry>
                      <term>Boot from volume snapshot (creates a new volume)</term>
                      <listitem>
                        <para>Using this option, you can boot from a volume snapshot and create
a new volume by choosing <guimenu>Volume Snapshot</guimenu> from a list
and adding a <guimenu>Device Name</guimenu> for your volume. Click the
<guimenu>Delete Volume on Instance Delete</guimenu> option to delete the
volume on deleting the instance.</para>
                      </listitem>
                    </varlistentry>
                  </variablelist>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>Image Name</term>
                <listitem>
                  <para>This field changes based on your previous selection. If you have
chosen to launch an instance using an image, the <guimenu>Image Name</guimenu>
field displays. Select the image name from the dropdown list.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>Instance Snapshot</term>
                <listitem>
                  <para>This field changes based on your previous selection. If you have
chosen to launch an instance using a snapshot, the
<guimenu>Instance Snapshot</guimenu> field displays.
Select the snapshot name from the dropdown list.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>Volume</term>
                <listitem>
                  <para>This field changes based on your previous selection. If you have
chosen to launch an instance using a volume, the <guimenu>Volume</guimenu>
field displays. Select the volume name from the dropdown list.
If you want to delete the volume on instance delete,
check the <guimenu>Delete Volume on Instance Delete</guimenu> option.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <para><guimenu>Flavor</guimenu> tab</para>
            <variablelist>
              <varlistentry>
                <term>Flavor</term>
                <listitem>
                  <para>Specify the size of the instance to launch.</para>
                  <note>
                    <para>The flavor is selected based on the size of the image selected
for launching an instance. For example, while creating an image, if
you have entered the value in the <guimenu>Minimum RAM (MB)</guimenu> field
as 2048, then on selecting the image, the default flavor is
<literal>m1.small</literal>.</para>
                  </note>
                </listitem>
              </varlistentry>
            </variablelist>
            <para><guimenu>Networks</guimenu> tab</para>
            <variablelist>
              <varlistentry>
                <term>Selected Networks</term>
                <listitem>
                  <para>To add a network to the instance, click the <guimenu>+</guimenu> in the
<guimenu>Available</guimenu> field.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <para><guimenu>Network Ports</guimenu> tab</para>
            <variablelist>
              <varlistentry>
                <term>Ports</term>
                <listitem>
                  <para>Activate the ports that you want to assign to the instance.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <para><guimenu>Security Groups</guimenu> tab</para>
            <variablelist>
              <varlistentry>
                <term>Security Groups</term>
                <listitem>
                  <para>Activate the security groups that you want to assign to the instance.</para>
                  <para>Security groups are a kind of cloud firewall that define which
incoming network traffic is forwarded to instances.</para>
                  <para>If you have not created any security groups, you can assign
only the default security group to the instance.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <para><guimenu>Key Pair</guimenu> tab</para>
            <variablelist>
              <varlistentry>
                <term>Key Pair</term>
                <listitem>
                  <para>Specify a key pair.</para>
                  <para>If the image uses a static root password or a static key set
(neither is recommended), you do not need to provide a key pair
to launch the instance.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <para><guimenu>Configuration</guimenu> tab</para>
            <variablelist>
              <varlistentry>
                <term>Customization Script Source</term>
                <listitem>
                  <para>Specify a customization script that runs after your instance
launches.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <para><guimenu>Metadata</guimenu> tab</para>
            <variablelist>
              <varlistentry>
                <term>Available Metadata</term>
                <listitem>
                  <para>Add Metadata items to your instance.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </step>
          <step>
            <para>Click <guimenu>Launch Instance</guimenu>.</para>
            <para>The instance starts on a compute node in the cloud.</para>
          </step>
        </procedure>
        <note>
          <para>If you did not provide a key pair, security groups, or rules, users
can access the instance only from inside the cloud through VNC. Even
pinging the instance is not possible without an ICMP rule configured.</para>
        </note>
        <para>You can also launch an instance from the <guimenu>Images</guimenu> or
<guimenu>Volumes</guimenu> category when you launch an instance from
an image or a volume respectively.</para>
        <para>When you launch an instance from an image, OpenStack creates a local
copy of the image on the compute node where the instance starts.</para>
        <para>For details on creating images, see <link xlink:href="https://docs.openstack.org/image-guide/create-images-manually.html">Creating images
manually</link>
in the <emphasis>OpenStack Virtual Machine Image Guide</emphasis>.</para>
        <para>When you launch an instance from a volume, note the following steps:</para>
        <itemizedlist>
          <listitem>
            <para>To select the volume from which to launch, launch an instance from
an arbitrary image on the volume. The arbitrary image that you select
does not boot. Instead, it is replaced by the image on the volume that
you choose in the next steps.</para>
            <para>To boot a Xen image from a volume, the image you launch in must be
the same type, fully virtualized or paravirtualized, as the one on
the volume.</para>
          </listitem>
          <listitem>
            <para>Select the volume or volume snapshot from which to boot. Enter a
device name. Enter <literal>vda</literal> for KVM images or <literal>xvda</literal> for Xen images.</para>
          </listitem>
        </itemizedlist>
      </sect2>
      <sect2>
        <title>Connect to your instance by using SSH</title>
        <para>To use SSH to connect to your instance, use the downloaded keypair
file.</para>
        <note>
          <para>The user name is <literal>ubuntu</literal> for the Ubuntu cloud images on TryStack.</para>
        </note>
        <procedure>
          <step>
            <para>Copy the IP address for your instance.</para>
          </step>
          <step>
            <para>Use the <command>ssh</command> command to make a secure connection to the instance.
For example:</para>
            <screen language="console">$ ssh -i MyKey.pem ubuntu@10.0.0.2</screen>
          </step>
          <step>
            <para>At the prompt, type <literal>yes</literal>.</para>
          </step>
        </procedure>
        <para>It is also possible to SSH into an instance without an SSH keypair, if the
administrator has enabled root password injection.  For more information
about root password injection, see <link xlink:href="https://docs.openstack.org/admin-guide/compute-admin-password-injection.html">Injecting the administrator password</link>
in the <emphasis>OpenStack Administrator Guide</emphasis>.</para>
      </sect2>
      <sect2>
        <title>Track usage for instances</title>
        <para>You can track usage for instances for each project. You can track costs
per month by showing meters like number of vCPUs, disks, RAM, and
uptime for all your instances.</para>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Compute</guimenu> tab and
click <guimenu>Overview</guimenu> category.</para>
          </step>
          <step>
            <para>To query the instance usage for a month, select a month and click
<guimenu>Submit</guimenu>.</para>
          </step>
          <step>
            <para>To download a summary, click <guimenu>Download CSV Summary</guimenu>.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Create an instance snapshot</title>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Compute</guimenu> tab and
click the <guimenu>Instances</guimenu> category.</para>
          </step>
          <step>
            <para>Select the instance from which to create a snapshot.</para>
          </step>
          <step>
            <para>In the actions column, click <guimenu>Create Snapshot</guimenu>.</para>
          </step>
          <step>
            <para>In the <guimenu>Create Snapshot</guimenu> dialog box, enter a name for the
snapshot, and click <guimenu>Create Snapshot</guimenu>.</para>
            <para>The <guimenu>Images</guimenu> category shows the instance snapshot.</para>
          </step>
        </procedure>
        <para>To launch an instance from the snapshot, select the snapshot and click
<guimenu>Launch</guimenu>. Proceed with launching an instance.</para>
      </sect2>
      <sect2>
        <title>Manage an instance</title>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Compute</guimenu> tab and
click <guimenu>Instances</guimenu> category.</para>
          </step>
          <step>
            <para>Select an instance.</para>
          </step>
          <step>
            <para>In the menu list in the actions column, select the state.</para>
            <para>You can resize or rebuild an instance. You can also choose to view
the instance console log, edit instance or the security groups.
Depending on the current state of the instance, you can pause,
resume, suspend, soft or hard reboot, or terminate it.</para>
          </step>
        </procedure>
      </sect2>
    </sect1>
    <sect1>
      <title>Create and manage networks</title>
      <para>The OpenStack Networking service provides a scalable system for managing
the network connectivity within an OpenStack cloud deployment. It can
easily and quickly react to changing network needs (for example,
creating and assigning new IP addresses).</para>
      <para>Networking in OpenStack is complex. This section provides the basic
instructions for creating a network and a router. For detailed
information about managing networks, refer to the <link xlink:href="https://docs.openstack.org/admin-guide/networking.html">OpenStack
Administrator
Guide</link>.</para>
      <sect2>
        <title>Create a network</title>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Network</guimenu> tab and
click <guimenu>Networks</guimenu> category.</para>
          </step>
          <step>
            <para>Click <guimenu>Create Network</guimenu>.</para>
          </step>
          <step>
            <para>In the <guimenu>Create Network</guimenu> dialog box, specify the following values.</para>
            <para><guimenu>Network</guimenu> tab</para>
            <para><guimenu>Network Name</guimenu>: Specify a name to identify the network.</para>
            <para><guimenu>Shared</guimenu>: Share the network with other projects. Non admin users
are not allowed to set shared option.</para>
            <para><guimenu>Admin State</guimenu>: The state to start the network in.</para>
            <para><guimenu>Create Subnet</guimenu>: Select this check box to create a subnet</para>
            <para>You do not have to specify a subnet when you create a network, but if
you do not specify a subnet, the network can not be attached to an instance.</para>
            <para><guimenu>Subnet</guimenu> tab</para>
            <para><guimenu>Subnet Name</guimenu>: Specify a name for the subnet.</para>
            <para><guimenu>Network Address</guimenu>: Specify the IP address for the subnet.</para>
            <para><guimenu>IP Version</guimenu>: Select IPv4 or IPv6.</para>
            <para><guimenu>Gateway IP</guimenu>: Specify an IP address for a specific gateway. This
parameter is optional.</para>
            <para><guimenu>Disable Gateway</guimenu>: Select this check box to disable a gateway IP
address.</para>
            <para><guimenu>Subnet Details</guimenu> tab</para>
            <para><guimenu>Enable DHCP</guimenu>: Select this check box to enable DHCP.</para>
            <para><guimenu>Allocation Pools</guimenu>: Specify IP address pools.</para>
            <para><guimenu>DNS Name Servers</guimenu>: Specify a name for the DNS server.</para>
            <para><guimenu>Host Routes</guimenu>: Specify the IP address of host routes.</para>
          </step>
          <step>
            <para>Click <guimenu>Create</guimenu>.</para>
            <para>The dashboard shows the network on the <guimenu>Networks</guimenu> tab.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Create a router</title>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Network</guimenu> tab and
click <guimenu>Routers</guimenu> category.</para>
          </step>
          <step>
            <para>Click <guimenu>Create Router</guimenu>.</para>
          </step>
          <step>
            <para>In the <guimenu>Create Router</guimenu> dialog box, specify a name for the router
and <guimenu>External Network</guimenu>, and click <guimenu>Create Router</guimenu>.</para>
            <para>The new router is now displayed in the <guimenu>Routers</guimenu> tab.</para>
          </step>
          <step>
            <para>To connect a private network to the newly created router, perform the
following steps:</para>
            <substeps>
              <step>
                <para>On the <guimenu>Routers</guimenu> tab, click the name of the router.</para>
              </step>
              <step>
                <para>On the <guimenu>Router Details</guimenu> page, click the <guimenu>Interfaces</guimenu>
tab, then click <guimenu>Add Interface</guimenu>.</para>
              </step>
              <step>
                <para>In the <guimenu>Add Interface</guimenu> dialog box, select a <guimenu>Subnet</guimenu>.</para>
                <para>Optionally, in the <guimenu>Add Interface</guimenu> dialog box, set an
<guimenu>IP Address</guimenu> for the router interface for the selected subnet.</para>
                <para>If you choose not to set the <guimenu>IP Address</guimenu> value, then by
default OpenStack Networking uses the first host IP address in the
subnet.</para>
                <para>The <guimenu>Router Name</guimenu> and <guimenu>Router ID</guimenu> fields are
automatically updated.</para>
              </step>
            </substeps>
          </step>
          <step>
            <para>Click <guimenu>Add Interface</guimenu>.</para>
          </step>
        </procedure>
        <para>You have successfully created the router. You can view the new topology
from the <guimenu>Network Topology</guimenu> tab.</para>
      </sect2>
      <sect2>
        <title>Create a port</title>
        <warning>
          <para>Creating and managing ports requires administrator privileges.
Contact an administrator before adding or changing ports.</para>
        </warning>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop-down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Admin</guimenu> tab, click <guimenu>Networks</guimenu> category.</para>
          </step>
          <step>
            <para>Click on the <guimenu>Network Name</guimenu> of the network in which the port
has to be created.</para>
          </step>
          <step>
            <para>In the <guimenu>Create Port</guimenu> dialog box, specify the following values.</para>
            <para><guimenu>Name</guimenu>: Specify name to identify the port.</para>
            <para><guimenu>Device ID</guimenu>: Device ID attached to the port.</para>
            <para><guimenu>Device Owner</guimenu>: Device owner attached to the port.</para>
            <para><guimenu>Binding Host</guimenu>: The ID of the host where the port is allocated.</para>
            <para><guimenu>Binding VNIC Type</guimenu>: Select the VNIC type that is bound to the
neutron port.</para>
          </step>
          <step>
            <para>Click <guimenu>Create Port</guimenu>.</para>
            <para>The new port is now displayed in the <guimenu>Ports</guimenu> list.</para>
          </step>
        </procedure>
      </sect2>
    </sect1>
    <sect1>
      <title>Create and manage object containers</title>
      <para>OpenStack Object Storage (swift) is used for redundant, scalable data storage
using clusters of standardized servers to store petabytes of accessible data.
It is a long-term storage system for large amounts of static data which can be
retrieved and updated.</para>
      <para>OpenStack Object Storage provides a distributed, API-accessible storage
platform that can be integrated directly into an application or used to
store any type of file, including VM images, backups, archives, or media
files. In the OpenStack dashboard, you can only manage containers and
objects.</para>
      <para>In OpenStack Object Storage, containers provide storage for objects in a
manner similar to a Windows folder or Linux file directory, though they
cannot be nested. An object in OpenStack consists of the file to be
stored in the container and any accompanying metadata.</para>
      <sect2>
        <title>Create a container</title>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Object Store</guimenu> tab and
click <guimenu>Containers</guimenu> category.</para>
          </step>
          <step>
            <para>Click <guimenu>Container</guimenu>.</para>
          </step>
          <step>
            <para>In the <guimenu>Create Container</guimenu> dialog box, enter a name for the
container, and then click <guimenu>Create</guimenu>.</para>
          </step>
        </procedure>
        <para>You have successfully created a container.</para>
        <note>
          <para>To delete a container, click the <guimenu>More</guimenu> button and select
<guimenu>Delete Container</guimenu>.</para>
        </note>
      </sect2>
      <sect2>
        <title>Upload an object</title>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Object Store</guimenu> tab and
click <guimenu>Containers</guimenu> category.</para>
          </step>
          <step>
            <para>Select the container in which you want to store your object.</para>
          </step>
          <step>
            <para>Click the <guimenu>Upload File</guimenu> icon.</para>
            <para>The <guimenu>Upload File To Container: &lt;name&gt;</guimenu> dialog box
appears.
<literal>&lt;name&gt;</literal> is the name of the container to which you are uploading
the object.</para>
          </step>
          <step>
            <para>Enter a name for the object.</para>
          </step>
          <step>
            <para>Browse to and select the file that you want to upload.</para>
          </step>
          <step>
            <para>Click <guimenu>Upload File</guimenu>.</para>
          </step>
        </procedure>
        <para>You have successfully uploaded an object to the container.</para>
        <note>
          <para>To delete an object, click the <guimenu>More button</guimenu> and select
<guimenu>Delete Object</guimenu>.</para>
        </note>
      </sect2>
      <sect2>
        <title>Manage an object</title>
        <para>
          <emphasis role="bold">To edit an object</emphasis>
        </para>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Object Store</guimenu> tab and
click <guimenu>Containers</guimenu> category.</para>
          </step>
          <step>
            <para>Select the container in which you want to store your object.</para>
          </step>
          <step>
            <para>Click the menu button and choose <guimenu>Edit</guimenu> from the dropdown list.</para>
            <para>The <guimenu>Edit Object</guimenu> dialog box is displayed.</para>
          </step>
          <step>
            <para>Browse to and select the file that you want to upload.</para>
          </step>
          <step>
            <para>Click <guimenu>Update Object</guimenu>.</para>
          </step>
        </procedure>
        <note>
          <para>To delete an object, click the menu button and select
<guimenu>Delete Object</guimenu>.</para>
        </note>
        <para>
          <emphasis role="bold">To copy an object from one container to another</emphasis>
        </para>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Object Store</guimenu> tab and
click <guimenu>Containers</guimenu> category.</para>
          </step>
          <step>
            <para>Select the container in which you want to store your object.</para>
          </step>
          <step>
            <para>Click the menu button and choose <guimenu>Copy</guimenu> from the dropdown list.</para>
          </step>
          <step>
            <para>In the <guimenu>Copy Object</guimenu> launch dialog box, enter the following
values:</para>
            <itemizedlist>
              <listitem>
                <para><guimenu>Destination Container</guimenu>: Choose the destination container from
the list.</para>
              </listitem>
              <listitem>
                <para><guimenu>Path</guimenu>: Specify a path in which the new copy should be stored
inside of the selected container.</para>
              </listitem>
              <listitem>
                <para><guimenu>Destination object name</guimenu>: Enter a name for the object in the
new container.</para>
              </listitem>
            </itemizedlist>
          </step>
          <step>
            <para>Click <guimenu>Copy Object</guimenu>.</para>
          </step>
        </procedure>
        <para>
          <emphasis role="bold">To create a metadata-only object without a file</emphasis>
        </para>
        <para>You can create a new object in container without a file available and
can upload the file later when it is ready. This temporary object acts a
place-holder for a new object, and enables the user to share object
metadata and URL info in advance.</para>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Object Store</guimenu> tab and
click <guimenu>Containers</guimenu> category.</para>
          </step>
          <step>
            <para>Select the container in which you want to store your object.</para>
          </step>
          <step>
            <para>Click <guimenu>Upload Object</guimenu>.</para>
            <para>The <guimenu>Upload Object To Container</guimenu>: <literal>&lt;name&gt;</literal> dialog box is
displayed.</para>
            <para><literal>&lt;name&gt;</literal> is the name of the container to which you are uploading
the object.</para>
          </step>
          <step>
            <para>Enter a name for the object.</para>
          </step>
          <step>
            <para>Click <guimenu>Update Object</guimenu>.</para>
          </step>
        </procedure>
        <para>
          <emphasis role="bold">To create a pseudo-folder</emphasis>
        </para>
        <para>Pseudo-folders are similar to folders in your desktop operating system.
They are virtual collections defined by a common prefix on the object's
name.</para>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Object Store</guimenu> tab and
click <guimenu>Containers</guimenu> category.</para>
          </step>
          <step>
            <para>Select the container in which you want to store your object.</para>
          </step>
          <step>
            <para>Click <guimenu>Create Pseudo-folder</guimenu>.</para>
            <para>The <guimenu>Create Pseudo-Folder in Container</guimenu><literal>&lt;name&gt;</literal> dialog box
is displayed. <literal>&lt;name&gt;</literal> is the name of the container to which you
are uploading the object.</para>
          </step>
          <step>
            <para>Enter a name for the pseudo-folder.</para>
            <para>A slash (/) character is used as the delimiter for pseudo-folders in
Object Storage.</para>
          </step>
          <step>
            <para>Click <guimenu>Create</guimenu>.</para>
          </step>
        </procedure>
      </sect2>
    </sect1>
    <sect1>
      <title>Create and manage volumes</title>
      <para>Volumes are block storage devices that you attach to instances to enable
persistent storage. You can attach a volume to a running instance or
detach a volume and attach it to another instance at any time. You can
also create a snapshot from or delete a volume. Only administrative
users can create volume types.</para>
      <sect2>
        <title>Create a volume</title>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Compute</guimenu> tab and
click <guimenu>Volumes</guimenu> category.</para>
          </step>
          <step>
            <para>Click <guimenu>Create Volume</guimenu>.</para>
            <para>In the dialog box that opens, enter or select the following values.</para>
            <para><guimenu>Volume Name</guimenu>: Specify a name for the volume.</para>
            <para><guimenu>Description</guimenu>: Optionally, provide a brief description for the
volume.</para>
            <para><guimenu>Volume Source</guimenu>: Select one of the following options:</para>
            <itemizedlist>
              <listitem>
                <para>No source, empty volume: Creates an empty volume. An empty volume does
not contain a file system or a partition table.</para>
              </listitem>
              <listitem>
                <para>Snapshot: If you choose this option, a new field for
<guimenu>Use snapshot as a source</guimenu> displays. You can select the
snapshot from the list.</para>
              </listitem>
              <listitem>
                <para>Image: If you choose this option, a new field for <guimenu>Use image
as a source</guimenu> displays. You can select the image from the list.</para>
              </listitem>
              <listitem>
                <para>Volume: If you choose this option, a new field for
<guimenu>Use volume as a source</guimenu> displays. You can select the volume
from the list. Options to use a snapshot or a volume as the source for a
volume are displayed only if there are existing snapshots or volumes.</para>
              </listitem>
            </itemizedlist>
            <para><guimenu>Type</guimenu>: Leave this field blank.</para>
            <para><guimenu>Size (GB)</guimenu>: The size of the volume in gibibytes (GiB).</para>
            <para><guimenu>Availability Zone</guimenu>: Select the Availability Zone from the list.
By default, this value is set to the availability zone given by the cloud
provider (for example, <literal>us-west</literal> or <literal>apac-south</literal>). For some cases,
it could be <literal>nova</literal>.</para>
          </step>
          <step>
            <para>Click <guimenu>Create Volume</guimenu>.</para>
          </step>
        </procedure>
        <para>The dashboard shows the volume on the <guimenu>Volumes</guimenu> tab.</para>
      </sect2>
      <sect2>
        <title>Attach a volume to an instance</title>
        <para>After you create one or more volumes, you can attach them to instances.
You can attach a volume to one instance at a time.</para>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Compute</guimenu> tab and
click <guimenu>Volumes</guimenu> category.</para>
          </step>
          <step>
            <para>Select the volume to add to an instance and click
<guimenu>Manage Attachments</guimenu>.</para>
          </step>
          <step>
            <para>In the <guimenu>Manage Volume Attachments</guimenu> dialog box, select an instance.</para>
          </step>
          <step>
            <para>Enter the name of the device from which the volume is accessible by
the instance.</para>
            <note>
              <para>The actual device name might differ from the volume name because
of hypervisor settings.</para>
            </note>
          </step>
          <step>
            <para>Click <guimenu>Attach Volume</guimenu>.</para>
            <para>The dashboard shows the instance to which the volume is now attached
and the device name.</para>
          </step>
        </procedure>
        <para>You can view the status of a volume in the Volumes tab of the dashboard.
The volume is either Available or In-Use.</para>
        <para>Now you can log in to the instance and mount, format, and use the disk.</para>
      </sect2>
      <sect2>
        <title>Detach a volume from an instance</title>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Compute</guimenu> tab and
click the <guimenu>Volumes</guimenu> category.</para>
          </step>
          <step>
            <para>Select the volume and click <guimenu>Manage Attachments</guimenu>.</para>
          </step>
          <step>
            <para>Click <guimenu>Detach Volume</guimenu> and confirm your changes.</para>
          </step>
        </procedure>
        <para>A message indicates whether the action was successful.</para>
      </sect2>
      <sect2>
        <title>Create a snapshot from a volume</title>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Compute</guimenu> tab and
click <guimenu>Volumes</guimenu> category.</para>
          </step>
          <step>
            <para>Select a volume from which to create a snapshot.</para>
          </step>
          <step>
            <para>In the <guimenu>Actions</guimenu> column, click <guimenu>Create Snapshot</guimenu>.</para>
          </step>
          <step>
            <para>In the dialog box that opens, enter a snapshot name and a brief
description.</para>
          </step>
          <step>
            <para>Confirm your changes.</para>
            <para>The dashboard shows the new volume snapshot in Volume Snapshots tab.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Edit a volume</title>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Compute</guimenu> tab and
click <guimenu>Volumes</guimenu> category.</para>
          </step>
          <step>
            <para>Select the volume that you want to edit.</para>
          </step>
          <step>
            <para>In the <guimenu>Actions</guimenu> column, click <guimenu>Edit Volume</guimenu>.</para>
          </step>
          <step>
            <para>In the <guimenu>Edit Volume</guimenu> dialog box, update the name and description
of the volume.</para>
          </step>
          <step>
            <para>Click <guimenu>Edit Volume</guimenu>.</para>
            <note>
              <para>You can extend a volume by using the <guimenu>Extend Volume</guimenu>
option available in the <guimenu>More</guimenu> dropdown list and entering the
new value for volume size.</para>
            </note>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Delete a volume</title>
        <para>When you delete an instance, the data in its attached volumes is not
deleted.</para>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Compute</guimenu> tab and
click <guimenu>Volumes</guimenu> category.</para>
          </step>
          <step>
            <para>Select the check boxes for the volumes that you want to delete.</para>
          </step>
          <step>
            <para>Click <guimenu>Delete Volumes</guimenu> and confirm your choice.</para>
            <para>A message indicates whether the action was successful.</para>
          </step>
        </procedure>
      </sect2>
    </sect1>
    <sect1>
      <title>Create and manage shares</title>
      <para>Shares are file storage that you provide access to instances. You can allow
access to a share to a running instance or deny access to a share and allow
access to it to another instance at any time. You can also delete a share.
You can create snapshot from a share if the driver supports it. Only
administrative users can create share types.</para>
      <sect2>
        <title>Create a share</title>
        <procedure>
          <step>
            <para>Log in to the dashboard, choose a project, and click <guimenu>Shares</guimenu>.</para>
          </step>
          <step>
            <para>Click <guimenu>Create Share</guimenu>.</para>
            <para>In the dialog box that opens, enter or select the following values.</para>
            <para><guimenu>Share Name</guimenu>: Specify a name for the share.</para>
            <para><guimenu>Description</guimenu>: Optionally, provide a brief description for the
share.</para>
            <para><guimenu>Share Type</guimenu>: Choose a share type.</para>
            <para><guimenu>Size (GB)</guimenu>: The size of the share in gibibytes (GiB).</para>
            <para><guimenu>Share Protocol</guimenu>: Select NFS, CIFS, GlusterFS, or HDFS.</para>
            <para><guimenu>Share Network</guimenu>: Choose a share network.</para>
            <para><guimenu>Metadata</guimenu>: Enter metadata for the share creation if needed.</para>
          </step>
          <step>
            <para>Click <guimenu>Create Share</guimenu>.</para>
          </step>
        </procedure>
        <para>The dashboard shows the share on the <guimenu>Shares</guimenu> tab.</para>
      </sect2>
      <sect2>
        <title>Delete a share</title>
        <procedure>
          <step>
            <para>Log in to the dashboard, choose a project, and click <guimenu>Shares</guimenu>.</para>
          </step>
          <step>
            <para>Select the check boxes for the shares that you want to delete.</para>
          </step>
          <step>
            <para>Click <guimenu>Delete Shares</guimenu> and confirm your choice.</para>
            <para>A message indicates whether the action was successful.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Allow access</title>
        <procedure>
          <step>
            <para>Log in to the dashboard, choose a project, and click <guimenu>Shares</guimenu>.</para>
          </step>
          <step>
            <para>Go to the share that you want to allow access and choose
<guimenu>Manage Rules</guimenu> from Actions.</para>
          </step>
          <step>
            <para>Click <guimenu>Add rule</guimenu>.</para>
            <para><guimenu>Access Type</guimenu>: Choose ip, user, or cert.</para>
            <para><guimenu>Access Level</guimenu>: Choose read-write or read-only.</para>
            <para><guimenu>Access To</guimenu>: Fill in Access To field.</para>
          </step>
          <step>
            <para>Click <guimenu>Add Rule</guimenu>.</para>
            <para>A message indicates whether the action was successful.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Deny access</title>
        <procedure>
          <step>
            <para>Log in to the dashboard, choose a project, and click <guimenu>Shares</guimenu>.</para>
          </step>
          <step>
            <para>Go to the share that you want to deny access and choose
<guimenu>Manage Rules</guimenu> from Actions.</para>
          </step>
          <step>
            <para>Choose the rule you want to delete.</para>
          </step>
          <step>
            <para>Click <guimenu>Delete rule</guimenu> and confirm your choice.</para>
            <para>A message indicates whether the action was successful.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Edit share metadata</title>
        <procedure>
          <step>
            <para>Log in to the dashboard, choose a project, and click <guimenu>Shares</guimenu>.</para>
          </step>
          <step>
            <para>Go to the share that you want to edit and choose
<guimenu>Edit Share Metadata</guimenu> from Actions.</para>
          </step>
          <step>
            <para><guimenu>Metadata</guimenu>: To add share metadata, use key=value. To unset
metadata, use key.</para>
          </step>
          <step>
            <para>Click <guimenu>Edit Share Metadata</guimenu>.</para>
            <para>A message indicates whether the action was successful.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Edit share</title>
        <procedure>
          <step>
            <para>Log in to the dashboard, choose a project, and click <guimenu>Shares</guimenu>.</para>
          </step>
          <step>
            <para>Go to the share that you want to edit and choose <guimenu>Edit Share</guimenu> from
Actions.</para>
          </step>
          <step>
            <para><guimenu>Share Name</guimenu>: Enter a new share name.</para>
          </step>
          <step>
            <para><guimenu>Description</guimenu>: Enter a new description.</para>
          </step>
          <step>
            <para>Click <guimenu>Edit Share</guimenu>.</para>
            <para>A message indicates whether the action was successful.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Extend share</title>
        <procedure>
          <step>
            <para>Log in to the dashboard, choose a project, and click <guimenu>Shares</guimenu>.</para>
          </step>
          <step>
            <para>Go to the share that you want to edit and choose <guimenu>Extend Share</guimenu>
from Actions.</para>
          </step>
          <step>
            <para><guimenu>New Size (GB)</guimenu>: Enter new size.</para>
          </step>
          <step>
            <para>Click <guimenu>Extend Share</guimenu>.</para>
            <para>A message indicates whether the action was successful.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Create share network</title>
        <procedure>
          <step>
            <para>Log in to the dashboard, choose a project, click <guimenu>Shares</guimenu>,
and click <guimenu>Share Networks</guimenu>.</para>
          </step>
          <step>
            <para>Click <guimenu>Create Share Network</guimenu>.</para>
            <para>In the dialog box that opens, enter or select the following values.</para>
            <para><guimenu>Name</guimenu>: Specify a name for the share network.</para>
            <para><guimenu>Description</guimenu>: Optionally, provide a brief description for the
share network.</para>
            <para><guimenu>Neutron Net</guimenu>: Choose a neutron network.</para>
            <para><guimenu>Neutron Subnet</guimenu>: Choose a neutron subnet.</para>
          </step>
          <step>
            <para>Click <guimenu>Create Share Network</guimenu>.</para>
          </step>
        </procedure>
        <para>The dashboard shows the share network on the <guimenu>Share Networks</guimenu> tab.</para>
      </sect2>
      <sect2>
        <title>Delete a share network</title>
        <procedure>
          <step>
            <para>Log in to the dashboard, choose a project, click <guimenu>Shares</guimenu>, and
click <guimenu>Share Networks</guimenu>.</para>
          </step>
          <step>
            <para>Select the check boxes for the share networks that you want to delete.</para>
          </step>
          <step>
            <para>Click <guimenu>Delete Share Networks</guimenu> and confirm your choice.</para>
            <para>A message indicates whether the action was successful.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Edit share network</title>
        <procedure>
          <step>
            <para>Log in to the dashboard, choose a project, click <guimenu>Shares</guimenu>, and
click <guimenu>Share Networks</guimenu>.</para>
          </step>
          <step>
            <para>Go to the share network that you want to edit and choose
<guimenu>Edit Share Network</guimenu> from Actions.</para>
          </step>
          <step>
            <para><guimenu>Name</guimenu>: Enter a new share network name.</para>
          </step>
          <step>
            <para><guimenu>Description</guimenu>: Enter a new description.</para>
          </step>
          <step>
            <para>Click <guimenu>Edit Share Network</guimenu>.</para>
            <para>A message indicates whether the action was successful.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Create security service</title>
        <procedure>
          <step>
            <para>Log in to the dashboard, choose a project, click <guimenu>Shares</guimenu>,
and click <guimenu>Security Services</guimenu>.</para>
          </step>
          <step>
            <para>Click <guimenu>Create Security Service</guimenu>.</para>
            <para>In the dialog box that opens, enter or select the following values.</para>
            <para><guimenu>Name</guimenu>: Specify a name for the security service.</para>
            <para><guimenu>DNS IP</guimenu>: Enter the DNS IP address.</para>
            <para><guimenu>Server</guimenu>: Enter the server name.</para>
            <para><guimenu>Domain</guimenu>: Enter the domain name.</para>
            <para><guimenu>User</guimenu>: Enter the user name.</para>
            <para><guimenu>Password</guimenu>: Enter the password.</para>
            <para><guimenu>Confirm Password</guimenu>: Enter the password again to confirm.</para>
            <para><guimenu>Type</guimenu>: Choose the type from Active Directory, LDAP, or Kerberos.</para>
            <para><guimenu>Description</guimenu>: Optionally, provide a brief description for the
security service.</para>
          </step>
          <step>
            <para>Click <guimenu>Create Security Service</guimenu>.</para>
          </step>
        </procedure>
        <para>The dashboard shows the security service on the <guimenu>Security Services</guimenu>
tab.</para>
      </sect2>
      <sect2>
        <title>Delete a security service</title>
        <procedure>
          <step>
            <para>Log in to the dashboard, choose a project, click <guimenu>Shares</guimenu>, and
click <guimenu>Security Services</guimenu>.</para>
          </step>
          <step>
            <para>Select the check boxes for the security services that you want to delete.</para>
          </step>
          <step>
            <para>Click <guimenu>Delete Security Services</guimenu> and confirm your choice.</para>
            <para>A message indicates whether the action was successful.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Edit security service</title>
        <procedure>
          <step>
            <para>Log in to the dashboard, choose a project, click <guimenu>Shares</guimenu>,
and click <guimenu>Security Services</guimenu>.</para>
          </step>
          <step>
            <para>Go to the security service that you want to edit and choose
<guimenu>Edit Security Service</guimenu> from Actions.</para>
          </step>
          <step>
            <para><guimenu>Name</guimenu>: Enter a new security service name.</para>
          </step>
          <step>
            <para><guimenu>Description</guimenu>: Enter a new description.</para>
          </step>
          <step>
            <para>Click <guimenu>Edit Security Service</guimenu>.</para>
            <para>A message indicates whether the action was successful.</para>
          </step>
        </procedure>
      </sect2>
    </sect1>
    <sect1>
      <title>Launch and manage stacks</title>
      <para>OpenStack Orchestration is a service that you can use to
orchestrate multiple composite cloud applications. This
service supports the use of both the Amazon Web Services (AWS)
CloudFormation template format through both a Query API that
is compatible with CloudFormation and the native OpenStack
<xref linkend="term-heat-orchestration-template-hot"/> format through a REST API.</para>
      <para>These flexible template languages enable application
developers to describe and automate the deployment of
infrastructure, services, and applications. The templates
enable creation of most OpenStack resource types, such as
instances, floating IP addresses, volumes, security groups,
and users. Once created, the resources are referred to as
stacks.</para>
      <para>The template languages are described in the <link xlink:href="https://docs.openstack.org/developer/heat/template_guide/index.html">Template Guide</link> in the <link xlink:href="http://docs.openstack.org/developer/heat/">Heat developer documentation</link>.</para>
      <sect2>
        <title>Launch a stack</title>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Orchestration</guimenu> tab and
click <guimenu>Stacks</guimenu> category.</para>
          </step>
          <step>
            <para>Click <guimenu>Launch Stack</guimenu>.</para>
          </step>
          <step>
            <para>In the <guimenu>Select Template</guimenu> dialog box, specify the
following values:</para>
            <informaltable>
              <tgroup cols="2">
                <colspec colname="c1" colwidth="55.7*"/>
                <colspec colname="c2" colwidth="44.3*"/>
                <tbody>
                  <row>
                    <entry>
                      <para>
                        <guimenu>Template Source</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>Choose the source of the
template from the list.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <guimenu>Template URL/File/Data</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>Depending on the source that
you select, enter the URL,
browse to the file location,
or directly include the
template.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <guimenu>Environment Source</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>Choose the source of the
environment from the list.
The environment files contain
additional settings for the
stack.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <guimenu>Environment File/Data</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>Depending on the source that
you select, browse to the
file location, directly
include the environment</para>
                    </entry>
                  </row>
                </tbody>
              </tgroup>
            </informaltable>
          </step>
          <step>
            <para>Click <guimenu>Next</guimenu>.</para>
          </step>
          <step>
            <para>In the <guimenu>Launch Stack</guimenu> dialog box, specify the
following values:</para>
            <informaltable>
              <tgroup cols="2">
                <colspec colname="c1" colwidth="50.0*"/>
                <colspec colname="c2" colwidth="50.0*"/>
                <tbody>
                  <row>
                    <entry>
                      <para>
                        <guimenu>Stack Name</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>Enter a name to identify
the stack.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <guimenu>Creation Timeout</guimenu>
                        <guimenu>(minutes)</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>Specify the number of minutes
that can elapse before the
launch of the stack times out.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <guimenu>Rollback On Failure</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>Select this check box if you
want the service to roll back
changes if the stack fails to
launch.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <guimenu>Password for user</guimenu>
                        <guimenu>"demo"</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>Specify the password that
the default user uses when the
stack is created.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <guimenu>DBUsername</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>Specify the name of the
database user.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <guimenu>LinuxDistribution</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>Specify the Linux distribution
that is used in the stack.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <guimenu>DBRootPassword</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>Specify the root password for
the database.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <guimenu>KeyName</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>Specify the name of the key pair
to use to log in to the stack.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <guimenu>DBName</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>Specify the name of the
database.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <guimenu>DBPassword</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>Specify the password of the
database.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <guimenu>InstanceType</guimenu>
                      </para>
                    </entry>
                    <entry>
                      <para>Specify the flavor for the
instance.</para>
                    </entry>
                  </row>
                </tbody>
              </tgroup>
            </informaltable>
          </step>
          <step>
            <para>Click <guimenu>Launch</guimenu> to create a stack. The <guimenu>Stacks</guimenu>
tab shows the stack.</para>
          </step>
        </procedure>
        <para>After the stack is created, click on the stack name to see the
following details:</para>
        <variablelist>
          <varlistentry>
            <term>Topology</term>
            <listitem>
              <para>The topology of the stack.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Overview</term>
            <listitem>
              <para>The parameters and details of the stack.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Resources</term>
            <listitem>
              <para>The resources used by the stack.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Events</term>
            <listitem>
              <para>The events related to the stack.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Template</term>
            <listitem>
              <para>The template for the stack.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </sect2>
      <sect2>
        <title>Manage a stack</title>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Orchestration</guimenu> tab and
click <guimenu>Stacks</guimenu> category.</para>
          </step>
          <step>
            <para>Select the stack that you want to update.</para>
          </step>
          <step>
            <para>Click <guimenu>Change Stack Template</guimenu>.</para>
          </step>
          <step>
            <para>In the <guimenu>Select Template</guimenu> dialog box, select the
new template source or environment source.</para>
          </step>
          <step>
            <para>Click <guimenu>Next</guimenu>.</para>
            <para>The <guimenu>Update Stack Parameters</guimenu> window appears.</para>
          </step>
          <step>
            <para>Enter new values for any parameters that you want to update.</para>
          </step>
          <step>
            <para>Click <guimenu>Update</guimenu>.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Delete a stack</title>
        <para>When you delete a stack, you cannot undo this action.</para>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>Select the appropriate project from the drop down menu at the top left.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Orchestration</guimenu> tab and
click <guimenu>Stacks</guimenu> category.</para>
          </step>
          <step>
            <para>Select the stack that you want to delete.</para>
          </step>
          <step>
            <para>Click <guimenu>Delete Stack</guimenu>.</para>
          </step>
          <step>
            <para>In the confirmation dialog box, click <guimenu>Delete Stack</guimenu>
to confirm the deletion.</para>
          </step>
        </procedure>
      </sect2>
    </sect1>
    <sect1>
      <title>Create and manage databases</title>
      <para>The Database service provides scalable and reliable cloud provisioning
functionality for both relational and non-relational database engines.
Users can quickly and easily use database features without the burden of
handling complex administrative tasks.</para>
      <sect2>
        <title>Create a database instance</title>
        <para><emphasis role="bold">Prerequisites.</emphasis> Before you create a database instance, you need to
configure a default datastore and make sure you have an appropriate
flavor for the type of database instance you want.</para>
        <procedure>
          <step>
            <para>
              <emphasis role="bold">Configure a default datastore.</emphasis>
            </para>
            <para>Because the dashboard does not let you choose a specific datastore to
use with an instance, you need to configure a default datastore. The
dashboard then uses the default datastore to create the instance.</para>
            <substeps>
              <step>
                <para>Add the following line to <literal>/etc/trove/trove.conf</literal>:</para>
                <screen language="console">default_datastore = DATASTORE_NAME</screen>
                <para>Replace <literal>DATASTORE_NAME</literal> with the name that the administrative
user set when issuing the <command>trove-manage</command> command to create the
datastore. You can use the trove <command>datastore-list</command> command to
display the datastores that are available in your environment.</para>
                <para>For example, if your MySQL data store name is set to <literal>mysql</literal>,
your entry would look like this:</para>
                <screen language="console">default_datastore = mysql</screen>
              </step>
              <step>
                <para>Restart Database services on the controller node:</para>
                <screen language="console"># service trove-api restart
# service trove-taskmanager restart
# service trove-conductor restart</screen>
              </step>
            </substeps>
          </step>
          <step>
            <para>
              <emphasis role="bold">Verify flavor.</emphasis>
            </para>
            <para>Make sure an appropriate flavor exists for the type of
database instance you want.</para>
          </step>
        </procedure>
        <para><emphasis role="bold">Create database instance.</emphasis> Once you have configured a default
datastore and verified that you have an appropriate flavor, you can
create a database instance.</para>
        <procedure>
          <step>
            <para>Log in to the dashboard.</para>
          </step>
          <step>
            <para>From the CURRENT PROJECT on the <guimenu>Project</guimenu> tab, select the
appropriate project.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Database</guimenu> tab and
click <guimenu>Instances</guimenu> category.  This lists the instances that
already exist in your environment.</para>
          </step>
          <step>
            <para>Click <guimenu>Launch Instance</guimenu>.</para>
          </step>
          <step>
            <para>In the <guimenu>Launch Database</guimenu> dialog box, specify the following values.</para>
            <para>Details</para>
            <para><guimenu>Database Name</guimenu>: Specify a name for the database instance.</para>
            <para><guimenu>Flavor</guimenu>: Select an appropriate flavor for the instance.</para>
            <para><guimenu>Volume Size</guimenu>: Select a volume size. Volume size is expressed in
GB.</para>
            <para><guimenu>Initialize Databases</guimenu>: Initial Database</para>
            <para>Optionally provide a comma separated list of databases to create, for
example:</para>
            <para><literal>database1</literal>, <literal>database2</literal>, <literal>database3</literal></para>
            <para><guimenu>Initial Admin User</guimenu>: Create an initial admin user. This user will
have access to all the databases you create.</para>
            <para><guimenu>Password</guimenu>: Specify a password associated with the initial admin
user you just named.</para>
            <para><guimenu>Host</guimenu>: Optionally, allow the user to connect only from this host.
If you do not specify a host, this user will be allowed to connect from
anywhere.</para>
          </step>
          <step>
            <para>Click the <guimenu>Launch</guimenu> button. The new database instance appears in
the databases list.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Backup and restore a database</title>
        <para>You can use Database services to backup a database and store the backup
artifact in the Object Storage service. Later on, if the original
database is damaged, you can use the backup artifact to restore the
database. The restore process creates a database instance.</para>
        <para>This example shows you how to back up and restore a MySQL database.</para>
        <sect3>
          <title>To backup the database instance</title>
          <procedure>
            <step>
              <para>Log in to the dashboard.</para>
            </step>
            <step>
              <para>From the CURRENT PROJECT on the <guimenu>Project</guimenu> tab, select the
appropriate project.</para>
            </step>
            <step>
              <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Database</guimenu> tab and
click <guimenu>Instances</guimenu> category. This displays the existing
instances in your system.</para>
            </step>
            <step>
              <para>Click <guimenu>Create Backup</guimenu>.</para>
            </step>
            <step>
              <para>In the <guimenu>Backup Database</guimenu> dialog box, specify the following
values:</para>
              <para>Name</para>
              <para>Specify a name for the backup.</para>
              <para>Database Instance</para>
              <para>Select the instance you want to back up.</para>
            </step>
            <step>
              <para>Click <guimenu>Backup</guimenu>. The new backup appears in the backup list.</para>
            </step>
          </procedure>
        </sect3>
        <sect3>
          <title>To restore a database instance</title>
          <para>Now assume that your original database instance is damaged and you
need to restore it. You do the restore by using your backup to create
a new database instance.</para>
          <procedure>
            <step>
              <para>Log in to the dashboard.</para>
            </step>
            <step>
              <para>From the CURRENT PROJECT on the <guimenu>Project</guimenu> tab, select the
appropriate project.</para>
            </step>
            <step>
              <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Database</guimenu> tab and
click <guimenu>Backups</guimenu> category. This lists the available backups.</para>
            </step>
            <step>
              <para>Check the backup you want to use and click <guimenu>Restore Backup</guimenu>.</para>
            </step>
            <step>
              <para>In the <guimenu>Launch Database</guimenu> dialog box, specify the values you
want for the new database instance.</para>
            </step>
            <step>
              <para>Click the <guimenu>Restore From Database</guimenu> tab and make sure that this
new instance is based on the correct backup.</para>
            </step>
            <step>
              <para>Click <guimenu>Launch</guimenu>.</para>
              <para>The new instance appears in the database instances list.</para>
            </step>
          </procedure>
        </sect3>
      </sect2>
      <sect2>
        <title>Update a database instance</title>
        <para>You can change various characteristics of a database instance,
such as its volume size and flavor.</para>
        <sect3>
          <title>To change the volume size of an instance</title>
          <procedure>
            <step>
              <para>Log in to the dashboard.</para>
            </step>
            <step>
              <para>From the CURRENT PROJECT on the <guimenu>Project</guimenu> tab, select the
appropriate project.</para>
            </step>
            <step>
              <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Database</guimenu> tab and
click <guimenu>Instances</guimenu> category. This displays the existing
instances in your system.</para>
            </step>
            <step>
              <para>Check the instance you want to work with.
In the <guimenu>Actions</guimenu> column, expand the drop down menu
and select <guimenu>Resize Volume</guimenu>.</para>
            </step>
            <step>
              <para>In the <guimenu>Resize Database Volume</guimenu> dialog box,
fill in the <guimenu>New Size</guimenu> field with an integer indicating
the new size you want for the instance. Express the size in GB, and
note that the new size must be larger than the current size.</para>
            </step>
            <step>
              <para>Click <guimenu>Resize Database Volume</guimenu>.</para>
            </step>
          </procedure>
        </sect3>
        <sect3>
          <title>To change the flavor of an instance</title>
          <procedure>
            <step>
              <para>Log in to the dashboard.</para>
            </step>
            <step>
              <para>From the CURRENT PROJECT on the <guimenu>Project</guimenu> tab, select the
appropriate project.</para>
            </step>
            <step>
              <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Database</guimenu> tab and
click <guimenu>Instances</guimenu> category. This displays the existing
instances in your system.</para>
            </step>
            <step>
              <para>Check the instance you want to work with. In the
<guimenu>Actions</guimenu> column, expand the drop down menu and
select <guimenu>Resize Instance</guimenu>.</para>
            </step>
            <step>
              <para>In the <guimenu>Resize Database Instance</guimenu> dialog box,
expand the drop down menu in the <guimenu>New Flavor</guimenu> field.
Select the new flavor you want for the instance.</para>
            </step>
            <step>
              <para>Click <guimenu>Resize Database Instance</guimenu>.</para>
            </step>
          </procedure>
        </sect3>
      </sect2>
    </sect1>
    <sect1>
      <title>View and manage load balancers v2</title>
      <para>Load-Balancer-as-a-Service (LBaaS) enables networking to distribute incoming
requests evenly among designated instances. This distribution ensures that
the workload is shared predictably among instances and enables more effective
use of system resources. Use one of these load-balancing methods to distribute
incoming requests:</para>
      <itemizedlist>
        <listitem>
          <para>Round robin: Rotates requests evenly between multiple instances.</para>
        </listitem>
        <listitem>
          <para>Source IP: Requests from a unique source IP address are consistently
directed to the same instance.</para>
        </listitem>
        <listitem>
          <para>Least connections: Allocates requests to the instance with the
least number of active connections.</para>
        </listitem>
      </itemizedlist>
      <para>As an end user, you can create and manage load balancers and related
objects for users in various projects. You can also delete load balancers
and related objects.</para>
      <para>LBaaS v2 has several new concepts to understand:</para>
      <variablelist>
        <varlistentry>
          <term>Load balancer</term>
          <listitem>
            <para>The load balancer occupies a neutron network port and
has an IP address assigned from a subnet.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Listener</term>
          <listitem>
            <para>Each port that listens for traffic on a particular load balancer is
configured separately and tied to the load balancer. Multiple listeners can
be associated with the same load balancer.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Pool</term>
          <listitem>
            <para>A pool is a group of hosts that sits behind the load balancer and
serves traffic through the load balancer.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Member</term>
          <listitem>
            <para>Members are the actual IP addresses that receive traffic from
the load balancer. Members are associated with pools.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Health monitor</term>
          <listitem>
            <para>Members may go offline from time to time and health monitors
diverts traffic away from members that are not responding properly.
Health monitors are associated with pools.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <sect2>
        <title>View existing load balancers</title>
        <procedure>
          <step>
            <para>Log in to the OpenStack dashboard.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the
<guimenu>Network</guimenu> tab, and click the
<guimenu>Load Balancers</guimenu> category.</para>
            <para>This view shows the list of existing load balancers. To view details
of any of the load balancers, click on the specific load balancer.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Create a load balancer</title>
        <procedure>
          <step>
            <para>Log in to the OpenStack dashboard.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the
<guimenu>Network</guimenu> tab, and click the
<guimenu>Load Balancers</guimenu> category.</para>
          </step>
          <step>
            <para>Click the <guimenu>Create Load Balancer</guimenu> button.</para>
            <para>Use the concepts described in the overview section to fill in
the necessary information about the load balancer you want to create.</para>
            <para>Keep in mind, the health checks routinely run against each instance
within a target load balancer and the result of the health check is
used to determine if the instance receives new connections.</para>
          </step>
        </procedure>
        <note>
          <para>A message indicates whether the action succeeded.</para>
        </note>
      </sect2>
      <sect2>
        <title>Delete a load balancer</title>
        <procedure>
          <step>
            <para>Select the load balancer you want to delete
and click the <guimenu>Delete Load Balancer</guimenu> button.</para>
            <para>To be deleted successfully, a load balancer must not
have any listeners or pools associated with
it. The delete action is also available in the
<guimenu>Actions</guimenu> column for the individual load balancers.</para>
          </step>
        </procedure>
      </sect2>
    </sect1>
  </chapter>
  <chapter>
    <title>OpenStack command-line clients</title>
    <info/>
    <sect1>
      <title>Command-line client overview</title>
      <para>OpenStackClient project provides a unified command-line client, which
enables you to access the project API through easy-to-use commands.
Also, most OpenStack project provides a command-line client for each service.
For example, the Compute service provides a <literal>nova</literal> command-line client.</para>
      <para>You can run the commands from the command line, or include the
commands within scripts to automate tasks. If you provide OpenStack
credentials, such as your user name and password, you can run these
commands on any computer.</para>
      <para>Internally, each command uses cURL command-line tools, which embed API
requests. OpenStack APIs are RESTful APIs, and use the HTTP
protocol. They include methods, URIs, media types, and response codes.</para>
      <para>OpenStack APIs are open-source Python clients, and can run on Linux or
Mac OS X systems. On some client commands, you can specify a debug
parameter to show the underlying API request for the command. This is
a good way to become familiar with the OpenStack API calls.</para>
      <para>As a cloud end user, you can use the OpenStack Dashboard to provision
your own resources within the limits set by administrators. You can
modify the examples provided in this section to create other types and
sizes of server instances.</para>
      <sect2>
        <title>Unified command-line client</title>
        <para>You can use the unified <literal>openstack</literal> command (<emphasis role="bold">python-openstackclient</emphasis>)
for the most of OpenStack services.
For more information, see <link xlink:href="https://docs.openstack.org/developer/python-openstackclient/">OpenStackClient document</link>.</para>
      </sect2>
      <sect2>
        <title>Individual command-line clients</title>
        <para>Unless the unified OpenStack Client (<emphasis role="bold">python-openstackclient</emphasis>) is used,
the following table lists the command-line client for each OpenStack
service with its package name and description.</para>
        <table>
          <title>OpenStack services and clients</title>
          <tgroup cols="4">
            <colspec colname="c1" colwidth="20.0*"/>
            <colspec colname="c2" colwidth="20.0*"/>
            <colspec colname="c3" colwidth="20.0*"/>
            <colspec colname="c4" colwidth="40.0*"/>
            <thead>
              <row>
                <entry>
                  <para>Service</para>
                </entry>
                <entry>
                  <para>Client</para>
                </entry>
                <entry>
                  <para>Package</para>
                </entry>
                <entry>
                  <para>Description</para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>Application Catalog service</para>
                </entry>
                <entry>
                  <para>murano</para>
                </entry>
                <entry>
                  <para>python-muranoclient</para>
                </entry>
                <entry>
                  <para>Creates and manages applications.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>Bare Metal service</para>
                </entry>
                <entry>
                  <para>ironic</para>
                </entry>
                <entry>
                  <para>python-ironicclient</para>
                </entry>
                <entry>
                  <para>manages and provisions physical machines.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>Block Storage service</para>
                </entry>
                <entry>
                  <para>cinder</para>
                </entry>
                <entry>
                  <para>python-cinderclient</para>
                </entry>
                <entry>
                  <para>Creates and manages volumes.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>Clustering service</para>
                </entry>
                <entry>
                  <para>senlin</para>
                </entry>
                <entry>
                  <para>python-senlinclient</para>
                </entry>
                <entry>
                  <para>Creates and manages clustering services.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>Compute service</para>
                </entry>
                <entry>
                  <para>nova</para>
                </entry>
                <entry>
                  <para>python-novaclient</para>
                </entry>
                <entry>
                  <para>Creates and manages images, instances, and flavors.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>Container Infrastructure Management service</para>
                </entry>
                <entry>
                  <para>magnum</para>
                </entry>
                <entry>
                  <para>python-magnumclient</para>
                </entry>
                <entry>
                  <para>Creates and manages containers.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>Data Processing service</para>
                </entry>
                <entry>
                  <para>sahara</para>
                </entry>
                <entry>
                  <para>python-saharaclient</para>
                </entry>
                <entry>
                  <para>Creates and manages Hadoop clusters on OpenStack.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>Database service</para>
                </entry>
                <entry>
                  <para>trove</para>
                </entry>
                <entry>
                  <para>python-troveclient</para>
                </entry>
                <entry>
                  <para>Creates and manages databases.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>Deployment service</para>
                </entry>
                <entry>
                  <para>fuel</para>
                </entry>
                <entry>
                  <para>python-fuelclient</para>
                </entry>
                <entry>
                  <para>Plans deployments.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>DNS service</para>
                </entry>
                <entry>
                  <para>designate</para>
                </entry>
                <entry>
                  <para>python-designateclient</para>
                </entry>
                <entry>
                  <para>Creates and manages self service authoritative DNS.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>Image service</para>
                </entry>
                <entry>
                  <para>glance</para>
                </entry>
                <entry>
                  <para>python-glanceclient</para>
                </entry>
                <entry>
                  <para>Creates and manages images.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>Key Manager service</para>
                </entry>
                <entry>
                  <para>barbican</para>
                </entry>
                <entry>
                  <para>python-barbicanclient</para>
                </entry>
                <entry>
                  <para>Creates and manages keys.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>Monitoring</para>
                </entry>
                <entry>
                  <para>monasca</para>
                </entry>
                <entry>
                  <para>python-monascaclient</para>
                </entry>
                <entry>
                  <para>Monitoring solution.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>Networking service</para>
                </entry>
                <entry>
                  <para>neutron</para>
                </entry>
                <entry>
                  <para>python-neutronclient</para>
                </entry>
                <entry>
                  <para>Configures networks for guest servers.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>Object Storage service</para>
                </entry>
                <entry>
                  <para>swift</para>
                </entry>
                <entry>
                  <para>python-swiftclient</para>
                </entry>
                <entry>
                  <para>Gathers statistics, lists items, updates metadata, and uploads,
downloads, and deletes files stored by the Object Storage service.
Gains access to an Object Storage installation for ad hoc processing.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>Orchestration service</para>
                </entry>
                <entry>
                  <para>heat</para>
                </entry>
                <entry>
                  <para>python-heatclient</para>
                </entry>
                <entry>
                  <para>Launches stacks from templates, views details of running stacks
including events and resources, and updates and deletes stacks.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>Rating service</para>
                </entry>
                <entry>
                  <para>cloudkitty</para>
                </entry>
                <entry>
                  <para>python-cloudkittyclient</para>
                </entry>
                <entry>
                  <para>Rating service.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>Shared File Systems service</para>
                </entry>
                <entry>
                  <para>manila</para>
                </entry>
                <entry>
                  <para>python-manilaclient</para>
                </entry>
                <entry>
                  <para>Creates and manages shared file systems.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>Telemetry service</para>
                </entry>
                <entry>
                  <para>ceilometer</para>
                </entry>
                <entry>
                  <para>python-ceilometerclient</para>
                </entry>
                <entry>
                  <para>Creates and collects measurements across OpenStack.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>Telemetry v3</para>
                </entry>
                <entry>
                  <para>gnocchi</para>
                </entry>
                <entry>
                  <para>python-gnocchiclient</para>
                </entry>
                <entry>
                  <para>Creates and collects measurements across OpenStack.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>Workflow service</para>
                </entry>
                <entry>
                  <para>mistral</para>
                </entry>
                <entry>
                  <para>python-mistralclient</para>
                </entry>
                <entry>
                  <para>Workflow service for OpenStack cloud.</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </sect2>
    </sect1>
    <sect1>
      <title>Install the OpenStack command-line clients</title>
      <para>Install the prerequisite software and the Python package for each
OpenStack client.</para>
      <sect2>
        <title>Install the prerequisite software</title>
        <para>Most Linux distributions include packaged versions of the command-line
clients that you can install directly, see <xref linkend="installing-from-packages"/>.</para>
        <para>If you need to install the source package for the command-line package,
the following table lists the software needed to run the
command-line clients, and provides installation instructions as needed.</para>
        <table>
          <title>OpenStack command-line clients prerequisites</title>
          <tgroup cols="2">
            <colspec colname="c1" colwidth="20.0*"/>
            <colspec colname="c2" colwidth="80.0*"/>
            <thead>
              <row>
                <entry>
                  <para>Prerequisite</para>
                </entry>
                <entry>
                  <para>Description</para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>Python 2.7 or later</para>
                </entry>
                <entry>
                  <para>Supports Python 2.7, 3.4, and 3.5.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>setuptools package</para>
                </entry>
                <entry>
                  <para>Installed by default on Mac OS X.</para>
                  <para>Many Linux distributions provide packages to make setuptools
easy to install. Search your package manager for setuptools to
find an installation package.
If you cannot find one, download the setuptools package
directly from <link xlink:href="https://pypi.python.org/pypi/setuptools">Python Setuptools</link>.</para>
                  <para>The recommended way to install setuptools on Microsoft Windows
is to follow the documentation provided on the <link xlink:href="https://pypi.python.org/pypi/setuptools">Python Setuptools</link> website.</para>
                  <para>Another option is to use the <link xlink:href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#setuptools">unofficial binary installer
maintained by Christoph Gohlke</link>.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>pip package</para>
                </entry>
                <entry>
                  <para>To install the clients on a Linux, Mac OS X, or Microsoft Windows
system, use pip. It is easy to use, ensures that you get the latest
version of the clients from the <link xlink:href="https://pypi.python.org/">Python Package Index</link>, and lets you update or remove
the packages later on.</para>
                  <para>Since the installation process compiles source files, this requires
the related Python development package for your operating system
and distribution.</para>
                  <para>Install pip through the package manager for your system:</para>
                  <para>
                    <emphasis role="bold">MacOS</emphasis>
                  </para>
                  <screen language="console"># easy_install pip</screen>
                  <para>
                    <emphasis role="bold">Microsoft Windows</emphasis>
                  </para>
                  <para>Ensure that the <literal>C:\Python27\Scripts</literal> directory is defined in the
<literal>PATH</literal> environment variable, and use the <literal>easy_install</literal> command
from the setuptools package:</para>
                  <screen language="console">C:\&gt;easy_install pip</screen>
                  <para>Another option is to use the <link xlink:href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pip">unofficial binary installer provided by
Christoph Gohlke</link>.</para>
                  <para>
                    <emphasis role="bold">Ubuntu or Debian</emphasis>
                  </para>
                  <screen language="console"># apt install python-dev python-pip</screen>
                  <para>Note that extra dependencies may be required, per operating system,
depending on the package being installed, such as is the case with
Tempest.</para>
                  <para>
                    <emphasis role="bold">Red Hat Enterprise Linux, CentOS, or Fedora</emphasis>
                  </para>
                  <para>A packaged version enables you to use yum to install the package:</para>
                  <screen language="console"># yum install python-devel python-pip</screen>
                  <para>There are also packaged versions of the clients available in
<link xlink:href="https://www.rdoproject.org/">RDO</link> that enable yum to install
the clients as described in <xref linkend="installing-from-packages"/>.</para>
                  <para>
                    <emphasis role="bold">SUSE Linux Enterprise Server</emphasis>
                  </para>
                  <para>A packaged version available in <link xlink:href="https://build.opensuse.org/package/show?package=python-pip&amp;project=Cloud:OpenStack:Master">the Open Build Service</link>
enables you to use YaST or zypper to install the package.</para>
                  <para>First, add the Open Build Service repository:</para>
                  <screen language="console"># zypper addrepo -f obs://Cloud:OpenStack:Mitaka/SLE_12_SP1 Mitaka</screen>
                  <para>Then install pip and use it to manage client installation:</para>
                  <screen language="console"># zypper install python-devel python-pip</screen>
                  <para>There are also packaged versions of the clients available that enable
zypper to install the clients as described in <xref linkend="installing-from-packages"/>.</para>
                  <para>
                    <emphasis role="bold">openSUSE</emphasis>
                  </para>
                  <para>You can install pip and use it to manage client installation:</para>
                  <screen language="console"># zypper install python-devel python-pip</screen>
                  <para>There are also packaged versions of the clients available that enable
zypper to install the clients as described in <xref linkend="installing-from-packages"/>.</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </sect2>
      <sect2>
        <title>Install the OpenStack client</title>
        <para>The following example shows the command for installing the OpenStack client
with <literal>pip</literal>, which supports multiple services.</para>
        <screen language="console"># pip install python-openstackclient</screen>
        <para>The following individual clients are deprecated in favor of a common client.
Instead of installing and learning all these clients, we recommend
installing and using the OpenStack client. You may need to install an
individual project's client because coverage is not yet sufficient in the
OpenStack client. If you need to install an individual client's project,
replace the <literal>PROJECT</literal> name in this <literal>pip install</literal> command using the
list below.</para>
        <screen language="console"># pip install python-PROJECTclient</screen>
        <itemizedlist>
          <listitem>
            <para><literal>barbican</literal> - Key Manager Service API</para>
          </listitem>
          <listitem>
            <para><literal>ceilometer</literal> - Telemetry API</para>
          </listitem>
          <listitem>
            <para><literal>cinder</literal> - Block Storage API and extensions</para>
          </listitem>
          <listitem>
            <para><literal>cloudkitty</literal> - Rating service API</para>
          </listitem>
          <listitem>
            <para><literal>designate</literal> - DNS service API</para>
          </listitem>
          <listitem>
            <para><literal>fuel</literal> - Deployment service API</para>
          </listitem>
          <listitem>
            <para><literal>glance</literal> - Image service API</para>
          </listitem>
          <listitem>
            <para><literal>gnocchi</literal> - Telemetry API v3</para>
          </listitem>
          <listitem>
            <para><literal>heat</literal> - Orchestration API</para>
          </listitem>
          <listitem>
            <para><literal>magnum</literal> - Container Infrastructure Management service API</para>
          </listitem>
          <listitem>
            <para><literal>manila</literal> - Shared file systems API</para>
          </listitem>
          <listitem>
            <para><literal>mistral</literal> - Workflow service API</para>
          </listitem>
          <listitem>
            <para><literal>monasca</literal> - Monitoring API</para>
          </listitem>
          <listitem>
            <para><literal>murano</literal> - Application catalog API</para>
          </listitem>
          <listitem>
            <para><literal>neutron</literal> - Networking API</para>
          </listitem>
          <listitem>
            <para><literal>nova</literal> - Compute API and extensions</para>
          </listitem>
          <listitem>
            <para><literal>sahara</literal> - Data Processing API</para>
          </listitem>
          <listitem>
            <para><literal>senlin</literal> - Clustering service API</para>
          </listitem>
          <listitem>
            <para><literal>swift</literal> - Object Storage API</para>
          </listitem>
          <listitem>
            <para><literal>trove</literal> - Database service API</para>
          </listitem>
        </itemizedlist>
        <sect3>
          <title>Installing with pip</title>
          <para>Use pip to install the OpenStack clients on a Linux, Mac OS X, or
Microsoft Windows system. It is easy to use and ensures that you get the
latest version of the client from the <link xlink:href="https://pypi.python.org/pypi">Python Package
Index</link>. Also, pip enables you to update
or remove a package.</para>
          <para>Install each client separately by using the following command:</para>
          <itemizedlist>
            <listitem>
              <para>For Mac OS X or Linux:</para>
              <screen language="console"># pip install python-PROJECTclient</screen>
            </listitem>
            <listitem>
              <para>For Microsoft Windows:</para>
              <screen language="console">C:\&gt;pip install python-PROJECTclient</screen>
            </listitem>
          </itemizedlist>
        </sect3>
        <sect3 xml:id="installing-from-packages">
          <title>Installing from packages</title>
          <para>RDO, openSUSE, SUSE Linux Enterprise, Debian, and Ubuntu have client packages
that can be installed without <literal>pip</literal>.</para>
          <itemizedlist>
            <listitem>
              <para>On Red Hat Enterprise Linux, CentOS, or Fedora, use <literal>yum</literal> to install
the clients from the packaged versions available in
<link xlink:href="https://www.rdoproject.org/">RDO</link>:</para>
              <screen language="console"># yum install python-PROJECTclient</screen>
            </listitem>
            <listitem>
              <para>For Ubuntu or Debian, use <literal>apt-get</literal> to install the clients from the
packaged versions:</para>
              <screen language="console"># apt-get install python-PROJECTclient</screen>
            </listitem>
            <listitem>
              <para>For openSUSE, use <literal>zypper</literal> to install the clients from the distribution
packages service:</para>
              <screen language="console"># zypper install python-PROJECTclient</screen>
            </listitem>
            <listitem>
              <para>For SUSE Linux Enterprise Server, use <literal>zypper</literal> to install the clients from
the distribution packages in the Open Build Service. First, add the Open
Build Service repository:</para>
              <screen language="console"># zypper addrepo -f obs://Cloud:OpenStack:Mitaka/SLE_12_SP1 Mitaka</screen>
              <para>Then you can install the packages:</para>
              <screen language="console"># zypper install python-PROJECTclient</screen>
            </listitem>
          </itemizedlist>
        </sect3>
      </sect2>
      <sect2>
        <title>Upgrade or remove clients</title>
        <para>To upgrade a client, add the <literal>--upgrade</literal> option to the
<command>pip install</command> command:</para>
        <screen language="console"># pip install --upgrade python-PROJECTclient</screen>
        <para>To remove the client, run the <command>pip uninstall</command> command:</para>
        <screen language="console"># pip uninstall python-PROJECTclient</screen>
      </sect2>
      <sect2>
        <title>What's next</title>
        <para>Before you can run client commands, you must create and source the
<literal>PROJECT-openrc.sh</literal> file to set environment variables. See
.</para>
      </sect2>
    </sect1>
    <sect1>
      <title>Discover the version number for a client</title>
      <para>Run the following command to discover the version number for a client:</para>
      <screen language="console">$ PROJECT --version</screen>
      <para>For example, to see the version number for the <literal>openstack</literal> client,
run the following command:</para>
      <screen language="console">$ openstack --version
openstack 3.2.0</screen>
    </sect1>
    <sect1>
      <title>Set environment variables using the OpenStack RC file</title>
      <para>To set the required environment variables for the OpenStack command-line
clients, you must create an environment file called an OpenStack rc
file, or <literal>openrc.sh</literal> file. If your OpenStack installation provides
it, you can download the file from the OpenStack Dashboard as an
administrative user or any other user. This project-specific environment
file contains the credentials that all OpenStack services use.</para>
      <para>When you source the file, environment variables are set for your current
shell. The variables enable the OpenStack client commands to communicate
with the OpenStack services that run in the cloud.</para>
      <note>
        <para>Defining environment variables using an environment file is not a
common practice on Microsoft Windows. Environment variables are
usually defined in the <menuchoice><guimenu>Advanced</guimenu><guimenu>System Properties</guimenu></menuchoice>
dialog box. One method for using these scripts as-is on Windows is
to install <link xlink:href="https://git-for-windows.github.io/">Git for Windows</link> and using Git Bash to source the environment
variables and to run all CLI commands.</para>
      </note>
      <sect2>
        <title>Download and source the OpenStack RC file</title>
        <procedure>
          <step>
            <para>Log in to the dashboard and from the drop-down list select the project
for which you want to download the OpenStack RC file.</para>
          </step>
          <step>
            <para>On the <guimenu>Project</guimenu> tab, open the <guimenu>Compute</guimenu> tab and
click <guimenu>Access &amp; Security</guimenu>.</para>
          </step>
          <step>
            <para>On the <guimenu>API Access</guimenu> tab, click <guimenu>Download OpenStack
RC File</guimenu> and save the file. The filename will be of the form
<literal>PROJECT-openrc.sh</literal> where <literal>PROJECT</literal> is the name of the project for
which you downloaded the file.</para>
          </step>
          <step>
            <para>Copy the <literal>PROJECT-openrc.sh</literal> file to the computer from which you
want to run OpenStack commands.</para>
            <para>For example, copy the file to the computer from which you want to upload
an image with a <literal>glance</literal> client command.</para>
          </step>
          <step>
            <para>On any shell from which you want to run OpenStack commands, source the
<literal>PROJECT-openrc.sh</literal> file for the respective project.</para>
            <para>In the following example, the <literal>demo-openrc.sh</literal> file is sourced for
the demo project:</para>
            <screen language="console">$ . demo-openrc.sh</screen>
          </step>
          <step>
            <para>When you are prompted for an OpenStack password, enter the password for
the user who downloaded the <literal>PROJECT-openrc.sh</literal> file.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Create and source the OpenStack RC file</title>
        <para>Alternatively, you can create the <literal>PROJECT-openrc.sh</literal> file from
scratch, if you cannot download the file from the dashboard.</para>
        <procedure>
          <step>
            <para>In a text editor, create a file named <literal>PROJECT-openrc.sh</literal> and add
the following authentication information:</para>
            <screen language="shell">export OS_USERNAME=username
export OS_PASSWORD=password
export OS_TENANT_NAME=projectName
export OS_AUTH_URL=https://identityHost:portNumber/v2.0
# The following lines can be omitted
export OS_TENANT_ID=tenantIDString
export OS_REGION_NAME=regionName
export OS_CACERT=/path/to/cacertFile</screen>
            <warning>
              <para>Saving <literal>OS_PASSWORD</literal> in plain text may bring a security risk.
You should protect the file or not save <literal>OS_PASSWORD</literal> into
the file in the production environment.</para>
            </warning>
          </step>
          <step>
            <para>On any shell from which you want to run OpenStack commands, source the
<literal>PROJECT-openrc.sh</literal> file for the respective project. In this
example, you source the <literal>admin-openrc.sh</literal> file for the admin
project:</para>
            <screen language="console">$ . admin-openrc.sh</screen>
          </step>
        </procedure>
        <note>
          <para>You are not prompted for the password with this method. The password
lives in clear text format in the <literal>PROJECT-openrc.sh</literal> file.
Restrict the permissions on this file to avoid security problems.
You can also remove the <literal>OS_PASSWORD</literal> variable from the file, and
use the <literal>--password</literal> parameter with OpenStack client commands
instead.</para>
        </note>
        <note>
          <para>You must set the <literal>OS_CACERT</literal> environment variable when using the
https protocol in the <literal>OS_AUTH_URL</literal> environment setting because
the verification process for the TLS (HTTPS) server certificate uses
the one indicated in the environment. This certificate will be used
when verifying the TLS (HTTPS) server certificate.</para>
        </note>
      </sect2>
      <sect2>
        <title>Override environment variable values</title>
        <para>When you run OpenStack client commands, you can override some
environment variable settings by using the options that are listed at
the end of the <literal>help</literal> output of the various client commands. For
example, you can override the <literal>OS_PASSWORD</literal> setting in the
<literal>PROJECT-openrc.sh</literal> file by specifying a password on a
<command>openstack</command> command, as follows:</para>
        <screen language="console">$ openstack --os-password PASSWORD server list</screen>
        <para>Where <literal>PASSWORD</literal> is your password.</para>
        <para>A user specifies their username and password credentials to interact
with OpenStack, using any client command. These credentials can be
specified using various mechanisms, namely, the environment variable
or command-line argument. It is not safe to specify the password using
either of these methods.</para>
        <para>For example, when you specify your password using the command-line
client with the <literal>--os-password</literal> argument, anyone with access to your
computer can view it in plain text with the <literal>ps</literal> field.</para>
        <para>To avoid storing the password in plain text, you can prompt for the
OpenStack password interactively.</para>
      </sect2>
    </sect1>
    <sect1>
      <title>Manage images</title>
      <para>The cloud operator assigns roles to users. Roles determine who can
upload and manage images. The operator might restrict image upload and
management to only cloud administrators or operators.</para>
      <para>You can upload images through the <literal>glance</literal> client or the Image service
API. You can use the <literal>nova</literal> client for the image management.
The latter provides mechanisms to list and delete images, set and delete
image metadata, and create images of a running instance or snapshot and
backup types.</para>
      <para>After you upload an image, you cannot change it.</para>
      <para>For details about image creation, see the <link xlink:href="https://docs.openstack.org/image-guide/">Virtual Machine Image
Guide</link>.</para>
      <sect2>
        <title>List or get details for images (glance)</title>
        <para>To get a list of images and to get further details about a single
image, use <command>openstack image list</command> and <command>openstack image show</command>
commands.</para>
        <screen language="console">$ openstack image list
+--------------------------------------+---------------------------------+--------+
| ID                                   | Name                            | Status |
+--------------------------------------+---------------------------------+--------+
| dfc1dfb0-d7bf-4fff-8994-319dd6f703d7 | cirros-0.3.2-x86_64-uec         | active |
| a3867e29-c7a1-44b0-9e7f-10db587cad20 | cirros-0.3.2-x86_64-uec-kernel  | active |
| 4b916fba-6775-4092-92df-f41df7246a6b | cirros-0.3.2-x86_64-uec-ramdisk | active |
| d07831df-edc3-4817-9881-89141f9134c3 | myCirrosImage                   | active |
+--------------------------------------+---------------------------------+--------+</screen>
        <screen language="console">$ openstack image show myCirrosImage
+------------------+------------------------------------------------------+
| Field            | Value                                                |
+------------------+------------------------------------------------------+
| checksum         | ee1eca47dc88f4879d8a229cc70a07c6                     |
| container_format | ami                                                  |
| created_at       | 2016-08-11T15:07:26Z                                 |
| disk_format      | ami                                                  |
| file             | /v2/images/d07831df-edc3-4817-9881-89141f9134c3/file |
| id               | d07831df-edc3-4817-9881-89141f9134c3                 |
| min_disk         | 0                                                    |
| min_ram          | 0                                                    |
| name             | myCirrosImage                                        |
| owner            | d88310717a8e4ebcae84ed075f82c51e                     |
| protected        | False                                                |
| schema           | /v2/schemas/image                                    |
| size             | 13287936                                             |
| status           | active                                               |
| tags             |                                                      |
| updated_at       | 2016-08-11T15:20:02Z                                 |
| virtual_size     | None                                                 |
| visibility       | private                                              |
+------------------+------------------------------------------------------+</screen>
        <para>When viewing a list of images, you can also use <literal>grep</literal> to filter the
list, as follows:</para>
        <screen language="console">$ openstack image list | grep 'cirros'
| dfc1dfb0-d7bf-4fff-8994-319dd6f703d7 | cirros-0.3.2-x86_64-uec         | active |
| a3867e29-c7a1-44b0-9e7f-10db587cad20 | cirros-0.3.2-x86_64-uec-kernel  | active |
| 4b916fba-6775-4092-92df-f41df7246a6b | cirros-0.3.2-x86_64-uec-ramdisk | active |</screen>
        <note>
          <para>To store location metadata for images, which enables direct file access for a client,
update the <literal>/etc/glance/glance-api.conf</literal> file with the following statements:</para>
          <itemizedlist>
            <listitem>
              <para>
                <literal>show_multiple_locations = True</literal>
              </para>
            </listitem>
            <listitem>
              <para>
                <literal>filesystem_store_metadata_file = filePath</literal>
              </para>
              <para>where filePath points to a JSON file that defines the mount point for OpenStack
images on your system and a unique ID. For example:</para>
            </listitem>
          </itemizedlist>
          <screen language="json">[{
    "id": "2d9bb53f-70ea-4066-a68b-67960eaae673",
    "mountpoint": "/var/lib/glance/images/"
}]</screen>
          <para>After you restart the Image service, you can use the following syntax to view
the image's location information:</para>
          <screen language="console">$ openstack --os-image-api-version 2 image show imageID</screen>
          <para>For example, using the image ID shown above, you would issue the command as follows:</para>
          <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack --os-image-api-version 2 image show 2d9bb53f-70ea-4066-a68b-67960eaae673</screen>
        </note>
      </sect2>
      <sect2>
        <title>Create or update an image (glance)</title>
        <para>To create an image, use <command>openstack image create</command>:</para>
        <screen language="console">$ openstack image create imageName</screen>
        <para>To update an image by name or ID, use <command>openstack image set</command>:</para>
        <screen language="console">$ openstack image set imageName</screen>
        <para>The following list explains the optional arguments that you can use with
the <literal>create</literal> and <literal>set</literal> commands to modify image properties. For
more information, refer to the <link xlink:href="https://docs.openstack.org/developer/python-openstackclient/command-objects/image.html">OpenStack Image command reference</link>.</para>
        <para>The following example shows the command that you would use to upload a
CentOS 6.3 image in qcow2 format and configure it for public access:</para>
        <screen language="console">$ openstack image create --disk-format qcow2 --container-format bare \
  --public --file ./centos63.qcow2 centos63-image</screen>
        <para>The following example shows how to update an existing image with a
properties that describe the disk bus, the CD-ROM bus, and the VIF
model:</para>
        <note>
          <para>When you use OpenStack with VMware vCenter Server, you need to specify
the <literal>vmware_disktype</literal> and <literal>vmware_adaptertype</literal> properties with
<command>openstack image create</command>.
Also, we recommend that you set the <literal>hypervisor_type="vmware"</literal> property.
For more information, see <link xlink:href="https://docs.openstack.org/newton/config-reference/compute/hypervisor-vmware.html#images-with-vmware-vsphere">Images with VMware vSphere</link>
in the OpenStack Configuration Reference.</para>
        </note>
        <screen language="console">$ openstack image set \
    --property hw_disk_bus=scsi \
    --property hw_cdrom_bus=ide \
    --property hw_vif_model=e1000 \
    f16-x86_64-openstack-sda</screen>
        <para>Currently the libvirt virtualization tool determines the disk, CD-ROM,
and VIF device models based on the configured hypervisor type
(<literal>libvirt_type</literal> in <literal>/etc/nova/nova.conf</literal> file). For the sake of optimal
performance, libvirt defaults to using virtio for both disk and VIF
(NIC) models. The disadvantage of this approach is that it is not
possible to run operating systems that lack virtio drivers, for example,
BSD, Solaris, and older versions of Linux and Windows.</para>
        <para>If you specify a disk or CD-ROM bus model that is not supported, see
the <xref linkend="disk-and-cd-rom-bus-model-values-table"/>.
If you specify a VIF model that is not supported, the instance fails to
launch. See the <xref linkend="vif-model-values-table"/>.</para>
        <para>The valid model values depend on the <literal>libvirt_type</literal> setting, as shown
in the following tables.</para>
        <para>
          <emphasis role="bold">Disk and CD-ROM bus model values</emphasis>
        </para>
        <informaltable xml:id="disk-and-cd-rom-bus-model-values-table">
          <tgroup cols="2">
            <colspec colname="c1" colwidth="49.0*"/>
            <colspec colname="c2" colwidth="51.0*"/>
            <thead>
              <row>
                <entry>
                  <para>libvirt_type setting</para>
                </entry>
                <entry>
                  <para>Supported model values</para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>qemu or kvm</para>
                </entry>
                <entry>
                  <itemizedlist>
                    <listitem>
                      <para>ide</para>
                    </listitem>
                    <listitem>
                      <para>scsi</para>
                    </listitem>
                    <listitem>
                      <para>virtio</para>
                    </listitem>
                  </itemizedlist>
                </entry>
              </row>
              <row>
                <entry>
                  <para>xen</para>
                </entry>
                <entry>
                  <itemizedlist>
                    <listitem>
                      <para>ide</para>
                    </listitem>
                    <listitem>
                      <para>xen</para>
                    </listitem>
                  </itemizedlist>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
        <para>
          <emphasis role="bold">VIF model values</emphasis>
        </para>
        <informaltable xml:id="vif-model-values-table">
          <tgroup cols="2">
            <colspec colname="c1" colwidth="49.0*"/>
            <colspec colname="c2" colwidth="51.0*"/>
            <thead>
              <row>
                <entry>
                  <para>libvirt_type setting</para>
                </entry>
                <entry>
                  <para>Supported model values</para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>qemu or kvm</para>
                </entry>
                <entry>
                  <itemizedlist>
                    <listitem>
                      <para>e1000</para>
                    </listitem>
                    <listitem>
                      <para>ne2k_pci</para>
                    </listitem>
                    <listitem>
                      <para>pcnet</para>
                    </listitem>
                    <listitem>
                      <para>rtl8139</para>
                    </listitem>
                    <listitem>
                      <para>virtio</para>
                    </listitem>
                  </itemizedlist>
                </entry>
              </row>
              <row>
                <entry>
                  <para>xen</para>
                </entry>
                <entry>
                  <itemizedlist>
                    <listitem>
                      <para>e1000</para>
                    </listitem>
                    <listitem>
                      <para>netfront</para>
                    </listitem>
                    <listitem>
                      <para>ne2k_pci</para>
                    </listitem>
                    <listitem>
                      <para>pcnet</para>
                    </listitem>
                    <listitem>
                      <para>rtl8139</para>
                    </listitem>
                  </itemizedlist>
                </entry>
              </row>
              <row>
                <entry>
                  <para>vmware</para>
                </entry>
                <entry>
                  <itemizedlist>
                    <listitem>
                      <para>VirtualE1000</para>
                    </listitem>
                    <listitem>
                      <para>VirtualPCNet32</para>
                    </listitem>
                    <listitem>
                      <para>VirtualVmxnet</para>
                    </listitem>
                  </itemizedlist>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
        <note>
          <para>By default, hardware properties are retrieved from the image
properties. However, if this information is not available, the
<literal>libosinfo</literal> database provides an alternative source for these
values.</para>
          <para>If the guest operating system is not in the database, or if the use
of <literal>libosinfo</literal> is disabled, the default system values are used.</para>
          <para>Users can set the operating system ID or a <literal>short-id</literal> in image
properties. For example:</para>
          <screen language="console">$ openstack image set --property short-id=fedora23 \
  name-of-my-fedora-image</screen>
          <para>Alternatively, users can set <literal>id</literal> to a URL:</para>
          <screen language="console">$ openstack image set \
  --property id=http://fedoraproject.org/fedora/23 \
  ID-of-my-fedora-image</screen>
        </note>
        <sect3>
          <title>Create an image from ISO image</title>
          <para>You can upload ISO images to the Image service (glance).
You can subsequently boot an ISO image using Compute.</para>
          <para>In the Image service, run the following command:</para>
          <screen language="console">$ openstack image create ISO_IMAGE --file IMAGE.iso \
  --disk-format iso --container-format bare</screen>
          <para>Optionally, to confirm the upload in Image service, run:</para>
          <screen language="console">$ openstack image list</screen>
        </sect3>
      </sect2>
      <sect2>
        <title>Troubleshoot image creation</title>
        <para>If you encounter problems in creating an image in the Image service or
Compute, the following information may help you troubleshoot the
creation process.</para>
        <itemizedlist>
          <listitem>
            <para>Ensure that the version of qemu you are using is version 0.14 or
later. Earlier versions of qemu result in an <literal>unknown option -s</literal>
error message in the <literal>/var/log/nova/nova-compute.log</literal> file.</para>
          </listitem>
          <listitem>
            <para>Examine the <literal>/var/log/nova/nova-api.log</literal> and
<literal>/var/log/nova/nova-compute.log</literal> log files for error messages.</para>
          </listitem>
        </itemizedlist>
      </sect2>
    </sect1>
    <sect1>
      <title>Manage images using cURL</title>
      <para>This section is intended to provide a series of commands a typical
client of the API might use to create and modify an image.</para>
      <para>These commands assume the implementation of the v2 Image API using
the Identity Service for authentication and authorization. The
X-Auth-Token header is used to provide the authentication token issued by
the Identity Service.</para>
      <para>The strings <literal>$OS_IMAGE_URL</literal> and <literal>$OS_AUTH_TOKEN</literal> represent variables
defined in the client's environment. <literal>$OS_IMAGE_URL</literal> is the full path
to your image service endpoint, for example, <literal>http://example.com</literal>.
<literal>$OS_AUTH_TOKEN</literal> represents an auth token generated by the
Identity Service, for example, <literal>6583fb17c27b48b4b4a6033fe9cc0fe0</literal>.</para>
      <sect2>
        <title>Create an image</title>
        <screen language="console">$ curl -i -X POST -H "X-Auth-Token: $OS_AUTH_TOKEN" \
       -H "Content-Type: application/json" \
       -d '{"name": "Ubuntu 14.04", \
       "tags": ["ubuntu", "14.04", "trusty"]}' \
       $OS_IMAGE_URL/v2/images

HTTP/1.1 201 Created
Content-Length: 451
Content-Type: application/json; charset=UTF-8
Location: http://example.com:9292/v2/images
          /7b97f37c-899d-44e8-aaa0-543edbc4eaad
Date: Fri, 11 Mar 2016 12:25:32 GMT

{
    "id": "7b97f37c-899d-44e8-aaa0-543edbc4eaad",
    "name": "Ubuntu 14.04",
    "status": "queued",
    "visibility": "private",
    "protected": false,
    "tags": ["ubuntu", "14.04", "trusty"],
    "created_at": "2016-03-11T12:25:32Z",
    "updated_at": "2016-03-11T12:25:32Z",
    "file": "/v2/images/7b97f37c-899d-44e8-aaa0-543edbc4eaad/file",
    "self": "/v2/images/7b97f37c-899d-44e8-aaa0-543edbc4eaad",
    "schema": "/v2/schemas/image"
}</screen>
      </sect2>
      <sect2>
        <title>Update the image</title>
        <screen language="console">$ curl -i -X PATCH -H "X-Auth-Token: $OS_AUTH_TOKEN" \
       -H "Content-Type: application/json" \
       -d '[{"op": "add", "path": "/login-user", "value": "root"}]' \
       $OS_IMAGE_URL/v2/images/7b97f37c-899d-44e8-aaa0-543edbc4eaad

HTTP/1.1 200 OK
Content-Length: 477
Content-Type: application/json; charset=UTF-8
Date: Fri, 11 Mar 2016 12:44:56 GMT

{
    "id": "7b97f37c-899d-44e8-aaa0-543edbc4eaad",
    "name": "Ubuntu 14.04",
    "status": "queued",
    "visibility": "private",
    "protected": false,
    "tags": ["ubuntu", "14.04", "trusty"],
    "login_user": "root",
    "created_at": "2016-03-11T12:25:32Z",
    "updated_at": "2016-03-11T12:44:56Z",
    "file": "/v2/images/7b97f37c-899d-44e8-aaa0-543edbc4eaad/file",
    "self": "/v2/images/7b97f37c-899d-44e8-aaa0-543edbc4eaad",
    "schema": "/v2/schemas/image"
}</screen>
      </sect2>
      <sect2>
        <title>Upload binary image data</title>
        <screen language="console">$ curl -i -X PUT -H "X-Auth-Token: $OS_AUTH_TOKEN" \
       -H "Content-Type: application/octet-stream" \
       --data-binary @/home/glance/ubuntu-14.04.qcow2 \
       $OS_IMAGE_URL/v2/images/7b97f37c-899d-44e8-aaa0-543edbc4eaad/file

HTTP/1.1 100 Continue
HTTP/1.1 201 Created
Content-Length: 0
Date: Fri, 11 Mar 2016 12:51:02 GMT</screen>
      </sect2>
      <sect2>
        <title>Download binary image data</title>
        <screen language="console">$ curl -i -X GET -H "X-Auth-Token: $OS_AUTH_TOKEN" \
       $OS_IMAGE_URL/v2/images/7b97f37c-899d-44e8-aaa0-543edbc4eaad/file

HTTP/1.1 200 OK
Content-Type: application/octet-stream
Content-Md5: 912ec803b2ce49e4a541068d495ab570
Transfer-Encoding: chunked
Date: Fri, 11 Mar 2016 12:57:41 GMT</screen>
      </sect2>
      <sect2>
        <title>Delete an image</title>
        <screen language="console">$ curl -i -X DELETE -H "X-Auth-Token: $OS_AUTH_TOKEN" \
       $OS_IMAGE_URL/v2/images/7b97f37c-899d-44e8-aaa0-543edbc4eaad

HTTP/1.1 204 No Content
Content-Length: 0
Date: Fri, 11 Mar 2016 12:59:11 GMT</screen>
      </sect2>
    </sect1>
    <sect1>
      <title>Manage volumes</title>
      <para>A volume is a detachable block storage device, similar to a USB hard
drive. You can attach a volume to only one instance. Use  the <literal>openstack</literal>
client commands to create and manage volumes.</para>
      <sect2>
        <title>Migrate a volume</title>
        <para>As an administrator, you can migrate a volume with its data from one
location to another in a manner that is transparent to users and
workloads. You can migrate only detached volumes with no snapshots.</para>
        <para>Possible use cases for data migration include:</para>
        <itemizedlist>
          <listitem>
            <para>Bring down a physical storage device for maintenance without
disrupting workloads.</para>
          </listitem>
          <listitem>
            <para>Modify the properties of a volume.</para>
          </listitem>
          <listitem>
            <para>Free up space in a thinly-provisioned back end.</para>
          </listitem>
        </itemizedlist>
        <para>Migrate a volume with the <command>cinder migrate</command> command, as shown in the
following example:</para>
        <screen language="console">$ cinder migrate --force-host-copy &lt;True|False&gt;
                 --lock-volume &lt;True|False&gt;
                 &lt;volume&gt; &lt;host&gt;</screen>
        <para>In this example, <literal>--force-host-copy True</literal> forces the generic
host-based migration mechanism and bypasses any driver optimizations.
<literal>--lock-volume &lt;True|False&gt;</literal> applies to the available volume.
To determine whether the termination of volume migration caused by other
commands. <literal>True</literal>  locks the volume state and does not allow the
migration to be aborted.</para>
        <note>
          <para>If the volume has snapshots, the specified host destination cannot accept
the volume. If the user is not an administrator, the migration fails.</para>
        </note>
      </sect2>
      <sect2>
        <title>Create a volume</title>
        <para>This example creates a <literal>my-new-volume</literal> volume based on an image.</para>
        <procedure>
          <step>
            <para>List images, and note the ID of the image that you want to use for your
volume:</para>
            <screen language="console">$ openstack image list
+--------------------------------------+---------------------------------+
| ID                                   | Name                            |
+--------------------------------------+---------------------------------+
| 8bf4dc2a-bf78-4dd1-aefa-f3347cf638c8 | cirros-0.3.4-x86_64-uec         |
| 9ff9bb2e-3a1d-4d98-acb5-b1d3225aca6c | cirros-0.3.4-x86_64-uec-kernel  |
| 4b227119-68a1-4b28-8505-f94c6ea4c6dc | cirros-0.3.4-x86_64-uec-ramdisk |
+--------------------------------------+---------------------------------+</screen>
          </step>
          <step>
            <para>List the availability zones, and note the ID of the availability zone in
which you want to create your volume:</para>
            <screen language="console">$ openstack availability zone list
+------+-----------+
| Name |   Status  |
+------+-----------+
| nova | available |
+------+-----------+</screen>
          </step>
          <step>
            <para>Create a volume with 8 gibibytes (GiB) of space, and specify the
availability zone and image:</para>
            <screen language="console">$ openstack volume create --image 8bf4dc2a-bf78-4dd1-aefa-f3347cf638c8 \
  --size 8 --availability-zone nova my-new-volume

+------------------------------+--------------------------------------+
| Property                     | Value                                |
+------------------------------+--------------------------------------+
| attachments                  | []                                   |
| availability_zone            | nova                                 |
| bootable                     | false                                |
| consistencygroup_id          | None                                 |
| created_at                   | 2016-09-23T07:52:42.000000           |
| description                  | None                                 |
| encrypted                    | False                                |
| id                           | bab4b0e0-ce3d-4d57-bf57-3c51319f5202 |
| metadata                     | {}                                   |
| multiattach                  | False                                |
| name                         | my-new-volume                        |
| os-vol-tenant-attr:tenant_id | 3f670abbe9b34ca5b81db6e7b540b8d8     |
| replication_status           | disabled                             |
| size                         | 8                                    |
| snapshot_id                  | None                                 |
| source_volid                 | None                                 |
| status                       | creating                             |
| updated_at                   | None                                 |
| user_id                      | fe19e3a9f63f4a14bd4697789247bbc5     |
| volume_type                  | lvmdriver-1                          |
+------------------------------+--------------------------------------+</screen>
          </step>
          <step>
            <para>To verify that your volume was created successfully, list the available
volumes:</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack volume list
+--------------------------------------+---------------+-----------+------+-------------+
| ID                                   | DisplayName   |  Status   | Size | Attached to |
+--------------------------------------+---------------+-----------+------+-------------+
| bab4b0e0-ce3d-4d57-bf57-3c51319f5202 | my-new-volume | available | 8    |             |
+--------------------------------------+---------------+-----------+------+-------------+</screen>
            <para>If your volume was created successfully, its status is <literal>available</literal>. If
its status is <literal>error</literal>, you might have exceeded your quota.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Create a volume from specified volume type</title>
        <para>Cinder supports these three ways to specify <literal>volume type</literal> during
volume creation.</para>
        <procedure>
          <step>
            <para>volume_type</para>
          </step>
          <step>
            <para>cinder_img_volume_type (via glance image metadata)</para>
          </step>
          <step>
            <para>default_volume_type (via cinder.conf)</para>
          </step>
        </procedure>
        <sect3>
          <title>volume_type</title>
          <para>User can specify <literal>volume type</literal> when creating a volume.</para>
          <screen language="console">$ openstack volume create -h -f {json,shell,table,value,yaml}
                         -c COLUMN --max-width &lt;integer&gt;
                         --noindent --prefix PREFIX --size &lt;size&gt;
                         --type &lt;volume-type&gt; --image &lt;image&gt;
                         --snapshot &lt;snapshot&gt; --source &lt;volume&gt;
                         --description &lt;description&gt; --user &lt;user&gt;
                         --project &lt;project&gt;
                         --availability-zone &lt;availability-zone&gt;
                         --property &lt;key=value&gt;
                         &lt;name&gt;</screen>
        </sect3>
        <sect3>
          <title>cinder_img_volume_type</title>
          <para>If glance image has <literal>cinder_img_volume_type</literal> property, Cinder uses this
parameter to specify <literal>volume type</literal> when creating a volume.</para>
          <para>Choose glance image which has <literal>cinder_img_volume_type</literal> property and create
a volume from the image.</para>
          <screen language="console">$ openstack image list
+----------------------------------+---------------------------------+--------+
| ID                               | Name                            | Status |
+----------------------------------+---------------------------------+--------+
| 376bd633-c9c9-4c5d-a588-342f4f66 | cirros-0.3.4-x86_64-uec         | active |
| d086                             |                                 |        |
| 2c20fce7-2e68-45ee-ba8d-         | cirros-0.3.4-x86_64-uec-ramdisk | active |
| beba27a91ab5                     |                                 |        |
| a5752de4-9faf-4c47-acbc-         | cirros-0.3.4-x86_64-uec-kernel  | active |
| 78a5efa7cc6e                     |                                 |        |
+----------------------------------+---------------------------------+--------+


$ openstack image show 376bd633-c9c9-4c5d-a588-342f4f66d086
+------------------+-----------------------------------------------------------+
| Field            | Value                                                     |
+------------------+-----------------------------------------------------------+
| checksum         | eb9139e4942121f22bbc2afc0400b2a4                          |
| container_format | ami                                                       |
| created_at       | 2016-10-13T03:28:55Z                                      |
| disk_format      | ami                                                       |
| file             | /v2/images/376bd633-c9c9-4c5d-a588-342f4f66d086/file      |
| id               | 376bd633-c9c9-4c5d-a588-342f4f66d086                      |
| min_disk         | 0                                                         |
| min_ram          | 0                                                         |
| name             | cirros-0.3.4-x86_64-uec                                   |
| owner            | 88ba456e3a884c318394737765e0ef4d                          |
| properties       | kernel_id='a5752de4-9faf-4c47-acbc-78a5efa7cc6e',         |
|                  | ramdisk_id='2c20fce7-2e68-45ee-ba8d-beba27a91ab5'         |
| protected        | False                                                     |
| schema           | /v2/schemas/image                                         |
| size             | 25165824                                                  |
| status           | active                                                    |
| tags             |                                                           |
| updated_at       | 2016-10-13T03:28:55Z                                      |
| virtual_size     | None                                                      |
| visibility       | public                                                    |
+------------------+-----------------------------------------------------------+

$ openstack volume create --image 376bd633-c9c9-4c5d-a588-342f4f66d086 \
  --size 1 --availability-zone nova test
+---------------------+--------------------------------------+
| Field               | Value                                |
+---------------------+--------------------------------------+
| attachments         | []                                   |
| availability_zone   | nova                                 |
| bootable            | false                                |
| consistencygroup_id | None                                 |
| created_at          | 2016-10-13T06:29:53.688599           |
| description         | None                                 |
| encrypted           | False                                |
| id                  | e6e6a72d-cda7-442c-830f-f306ea6a03d5 |
| multiattach         | False                                |
| name                | test                                 |
| properties          |                                      |
| replication_status  | disabled                             |
| size                | 1                                    |
| snapshot_id         | None                                 |
| source_volid        | None                                 |
| status              | creating                             |
| type                | lvmdriver-1                          |
| updated_at          | None                                 |
| user_id             | 33fdc37314914796883706b33e587d51     |
+---------------------+--------------------------------------+</screen>
        </sect3>
        <sect3>
          <title>default_volume_type</title>
          <para>If above parameters are not set, Cinder uses default_volume_type which is
defined in cinder.conf during volume creation.</para>
          <para>Example cinder.conf file configuration.</para>
          <screen language="console">[default]
default_volume_type = lvmdriver-1</screen>
        </sect3>
      </sect2>
      <sect2 xml:id="attach-a-volume-to-an-instance">
        <title>Attach a volume to an instance</title>
        <procedure>
          <step>
            <para>Attach your volume to a server, specifying the server ID and the volume
ID:</para>
            <screen language="console">$ openstack server add volume 84c6e57d-a6b1-44b6-81eb-fcb36afd31b5 \
  573e024d-5235-49ce-8332-be1576d323f8 --device /dev/vdb</screen>
          </step>
          <step>
            <para>Show information for your volume:</para>
            <screen language="console">$ openstack volume show 573e024d-5235-49ce-8332-be1576d323f8</screen>
            <para>The output shows that the volume is attached to the server with ID
<literal>84c6e57d-a6b1-44b6-81eb-fcb36afd31b5</literal>, is in the nova availability
zone, and is bootable.</para>
            <screen language="console">+------------------------------+-----------------------------------------------+
| Field                        | Value                                         |
+------------------------------+-----------------------------------------------+
| attachments                  | [{u'device': u'/dev/vdb',                     |
|                              |        u'server_id': u'84c6e57d-a             |
|                              |           u'id': u'573e024d-...               |
|                              |        u'volume_id': u'573e024d...            |
| availability_zone            | nova                                          |
| bootable                     | true                                          |
| consistencygroup_id          | None                                          |
| created_at                   | 2016-10-13T06:08:07.000000                    |
| description                  | None                                          |
| encrypted                    | False                                         |
| id                           | 573e024d-5235-49ce-8332-be1576d323f8          |
| multiattach                  | False                                         |
| name                         | my-new-volume                                 |
| os-vol-tenant-attr:tenant_id | 7ef070d3fee24bdfae054c17ad742e28              |
| properties                   |                                               |
| replication_status           | disabled                                      |
| size                         | 8                                             |
| snapshot_id                  | None                                          |
| source_volid                 | None                                          |
| status                       | in-use                                        |
| type                         | lvmdriver-1                                   |
| updated_at                   | 2016-10-13T06:08:11.000000                    |
| user_id                      | 33fdc37314914796883706b33e587d51              |
| volume_image_metadata        |{u'kernel_id': u'df430cc2...,                  |
|                              |        u'image_id': u'397e713c...,            |
|                              |        u'ramdisk_id': u'3cf852bd...,          |
|                              |u'image_name': u'cirros-0.3.2-x86_64-uec'}     |
+------------------------------+-----------------------------------------------+</screen>
          </step>
        </procedure>
      </sect2>
      <sect2 xml:id="resize-a-volume">
        <title>Resize a volume</title>
        <procedure>
          <step>
            <para>To resize your volume, you must first detach it from the server.
To detach the volume from your server, pass the server ID and volume ID
to the following command:</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack server remove volume 84c6e57d-a6b1-44b6-81eb-fcb36afd31b5 573e024d-5235-49ce-8332-be1576d323f8</screen>
            <para>This command does not provide any output.</para>
          </step>
          <step>
            <para>List volumes:</para>
            <screen language="console">$ openstack volume list
+----------------+-----------------+-----------+------+-------------+
|       ID       |   Display Name  |  Status   | Size | Attached to |
+----------------+-----------------+-----------+------+-------------+
| 573e024d-52... |  my-new-volume  | available |  8   |             |
| bd7cf584-45... | my-bootable-vol | available |  8   |             |
+----------------+-----------------+-----------+------+-------------+</screen>
            <para>Note that the volume is now available.</para>
          </step>
          <step>
            <para>Resize the volume by passing the volume ID and the new size (a value
greater than the old one) as parameters:</para>
            <screen language="console">$ openstack volume set 573e024d-5235-49ce-8332-be1576d323f8 --size 10</screen>
            <para>This command does not provide any output.</para>
            <note>
              <para>When extending an LVM volume with a snapshot, the volume will be
deactivated. The reactivation is automatic unless
<literal>auto_activation_volume_list</literal> is defined in <literal>lvm.conf</literal>. See
<literal>lvm.conf</literal> for more information.</para>
            </note>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Delete a volume</title>
        <procedure>
          <step>
            <para>To delete your volume, you must first detach it from the server.
To detach the volume from your server and check for the list of existing
volumes, see steps 1 and 2 in <xref linkend="resize-a-volume"/>.</para>
            <para>Delete the volume using either the volume name or ID:</para>
            <screen language="console">$ openstack volume delete my-new-volume</screen>
            <para>This command does not provide any output.</para>
          </step>
          <step>
            <para>List the volumes again, and note that the status of your volume is
<literal>deleting</literal>:</para>
            <screen language="console">$ openstack volume list
+----------------+-----------------+-----------+------+-------------+
|       ID       |   Display Name  |  Status   | Size | Attached to |
+----------------+-----------------+-----------+------+-------------+
| 573e024d-52... |  my-new-volume  |  deleting |  8   |             |
| bd7cf584-45... | my-bootable-vol | available |  8   |             |
+----------------+-----------------+-----------+------+-------------+</screen>
            <para>When the volume is fully deleted, it disappears from the list of
volumes:</para>
            <screen language="console">$ openstack volume list
+----------------+-----------------+-----------+------+-------------+
|       ID       |   Display Name  |  Status   | Size | Attached to |
+----------------+-----------------+-----------+------+-------------+
| bd7cf584-45... | my-bootable-vol | available |  8   |             |
+----------------+-----------------+-----------+------+-------------+</screen>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Transfer a volume</title>
        <para>You can transfer a volume from one owner to another by using the
<command>openstack volume transfer request create</command> command. The volume
donor, or original owner, creates a transfer request and sends the created
transfer ID and authorization key to the volume recipient. The volume
recipient, or new owner, accepts the transfer by using the ID and key.</para>
        <note>
          <para>The procedure for volume transfer is intended for tenants (both the
volume donor and recipient) within the same cloud.</para>
        </note>
        <para>Use cases include:</para>
        <itemizedlist>
          <listitem>
            <para>Create a custom bootable volume or a volume with a large data set and
transfer it to a customer.</para>
          </listitem>
          <listitem>
            <para>For bulk import of data to the cloud, the data ingress system creates
a new Block Storage volume, copies data from the physical device, and
transfers device ownership to the end user.</para>
          </listitem>
        </itemizedlist>
        <sect3>
          <title>Create a volume transfer request</title>
          <procedure>
            <step>
              <para>While logged in as the volume donor, list the available volumes:</para>
              <screen language="console">$ openstack volume list
+-----------------+-----------------+-----------+------+-------------+
|       ID        |   Display Name  |  Status   | Size | Attached to |
+-----------------+-----------------+-----------+------+-------------+
| 72bfce9f-cac... |       None      |   error   |  1   |             |
| a1cdace0-08e... |       None      | available |  1   |             |
+-----------------+-----------------+-----------+------+-------------+</screen>
            </step>
            <step>
              <para>As the volume donor, request a volume transfer authorization code for a
specific volume:</para>
              <screen language="console">  $ openstack volume transfer request create &lt;volume&gt;

&lt;volume&gt;
   Name or ID of volume to transfer.</screen>
              <para>The volume must be in an <literal>available</literal> state or the request will be
denied. If the transfer request is valid in the database (that is, it
has not expired or been deleted), the volume is placed in an
<literal>awaiting-transfer</literal> state. For example:</para>
              <screen language="console">$ openstack volume transfer request create a1cdace0-08e4-4dc7-b9dc-457e9bcfe25f</screen>
              <para>The output shows the volume transfer ID in the <literal>id</literal> row and the
authorization key.</para>
              <screen language="console">+------------+--------------------------------------+
| Field      | Value                                |
+------------+--------------------------------------+
| auth_key   | 0a59e53630f051e2                     |
| created_at | 2016-11-03T11:49:40.346181           |
| id         | 34e29364-142b-4c7b-8d98-88f765bf176f |
| name       | None                                 |
| volume_id  | a1cdace0-08e4-4dc7-b9dc-457e9bcfe25f |
+------------+--------------------------------------+</screen>
              <note>
                <para>Optionally, you can specify a name for the transfer by using the
<literal>--name transferName</literal> parameter.</para>
              </note>
              <note>
                <para>While the <literal>auth_key</literal> property is visible in the output of
<literal>openstack volume transfer request create VOLUME_ID</literal>, it will not be
available in subsequent <literal>openstack volume transfer request show TRANSFER_ID</literal>
command.</para>
              </note>
            </step>
            <step>
              <para>Send the volume transfer ID and authorization key to the new owner (for
example, by email).</para>
            </step>
            <step>
              <para>View pending transfers:</para>
              <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack volume transfer request list
+--------------------------------------+--------------------------------------+------+
|               ID                     |             Volume                   | Name |
+--------------------------------------+--------------------------------------+------+
| 6e4e9aa4-bed5-4f94-8f76-df43232f44dc | a1cdace0-08e4-4dc7-b9dc-457e9bcfe25f | None |
+--------------------------------------+--------------------------------------+------+</screen>
            </step>
            <step>
              <para>After the volume recipient, or new owner, accepts the transfer, you can
see that the transfer is no longer available:</para>
              <screen language="console">$ openstack volume transfer request list
+----+-----------+------+
| ID | Volume ID | Name |
+----+-----------+------+
+----+-----------+------+</screen>
            </step>
          </procedure>
        </sect3>
        <sect3>
          <title>Accept a volume transfer request</title>
          <procedure>
            <step>
              <para>As the volume recipient, you must first obtain the transfer ID and
authorization key from the original owner.</para>
            </step>
            <step>
              <para>Accept the request:</para>
              <screen language="console">$ openstack volume transfer request accept transferID authKey</screen>
              <para>For example:</para>
              <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack volume transfer request accept 6e4e9aa4-bed5-4f94-8f76-df43232f44dc b2c8e585cbc68a80
+-----------+--------------------------------------+
|  Property |                Value                 |
+-----------+--------------------------------------+
|     id    | 6e4e9aa4-bed5-4f94-8f76-df43232f44dc |
|    name   |                 None                 |
| volume_id | a1cdace0-08e4-4dc7-b9dc-457e9bcfe25f |
+-----------+--------------------------------------+</screen>
              <note>
                <para>If you do not have a sufficient quota for the transfer, the transfer
is refused.</para>
              </note>
            </step>
          </procedure>
        </sect3>
        <sect3>
          <title>Delete a volume transfer</title>
          <procedure>
            <step>
              <para>List available volumes and their statuses:</para>
              <screen language="console">$ openstack volume list
+-----------------+-----------------+-----------------+------+-------------+
|       ID        |   Display Name  |      Status     | Size | Attached to |
+-----------------+-----------------+-----------------+------+-------------+
| 72bfce9f-cac... |       None      |      error      |  1   |             |
| a1cdace0-08e... |       None      |awaiting-transfer|  1   |             |
+-----------------+-----------------+-----------------+------+-------------+</screen>
            </step>
            <step>
              <para>Find the matching transfer ID:</para>
              <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack volume transfer request list
+--------------------------------------+--------------------------------------+------+
|               ID                     |             VolumeID                 | Name |
+--------------------------------------+--------------------------------------+------+
| a6da6888-7cdf-4291-9c08-8c1f22426b8a | a1cdace0-08e4-4dc7-b9dc-457e9bcfe25f | None |
+--------------------------------------+--------------------------------------+------+</screen>
            </step>
            <step>
              <para>Delete the volume:</para>
              <screen language="console">$ openstack volume transfer request delete &lt;transfer&gt;</screen>
              <variablelist>
                <varlistentry>
                  <term>&lt;transfer&gt;</term>
                  <listitem>
                    <para>Name or ID of transfer to delete.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <para>For example:</para>
              <screen language="console">$ openstack volume transfer request delete a6da6888-7cdf-4291-9c08-8c1f22426b8a</screen>
            </step>
            <step>
              <para>Verify that transfer list is now empty and that the volume is again
available for transfer:</para>
              <screen language="console">$ openstack volume transfer request list
+----+-----------+------+
| ID | Volume ID | Name |
+----+-----------+------+
+----+-----------+------+</screen>
              <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack volume list
+-----------------+-----------+--------------+------+-------------+----------+-------------+
|       ID        |   Status  | Display Name | Size | Volume Type | Bootable | Attached to |
+-----------------+-----------+--------------+------+-------------+----------+-------------+
| 72bfce9f-ca...  |   error   |     None     |  1   |     None    |  false   |             |
| a1cdace0-08...  | available |     None     |  1   |     None    |  false   |             |
+-----------------+-----------+--------------+------+-------------+----------+-------------+</screen>
            </step>
          </procedure>
        </sect3>
      </sect2>
      <sect2>
        <title>Manage and unmanage a snapshot</title>
        <para>A snapshot is a point in time version of a volume. As an administrator,
you can manage and unmanage snapshots.</para>
        <sect3>
          <title>Manage a snapshot</title>
          <para>Manage a snapshot with the <command>openstack snapshot set</command> command:</para>
          <screen language="console">$ openstack snapshot set \
  [--name &lt;name&gt;] \
  [--description &lt;description&gt;] \
  [--property &lt;key=value&gt; [...] ] \
  [--state &lt;state&gt;] \
  &lt;snapshot&gt;</screen>
          <para>The arguments to be passed are:</para>
          <variablelist>
            <varlistentry>
              <term>
                <literal>--name &lt;name&gt;</literal>
              </term>
              <listitem>
                <para>New snapshot name</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>--description &lt;description&gt;</literal>
              </term>
              <listitem>
                <para>New snapshot description</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>--property &lt;key=value&gt;</literal>
              </term>
              <listitem>
                <para>Property to add or modify for this snapshot (repeat option to set
multiple properties)</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>--state &lt;state&gt;</literal>
              </term>
              <listitem>
                <para>New snapshot state. (“available”, “error”, “creating”, “deleting”,
or “error_deleting”)
(admin only) (This option simply changes the state of the snapshot in the
database with no regard to actual status, exercise caution when using)</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>&lt;snapshot&gt;</literal>
              </term>
              <listitem>
                <para>Snapshot to modify (name or ID)</para>
              </listitem>
            </varlistentry>
          </variablelist>
          <screen language="console">$ openstack snapshot set my-snapshot-id</screen>
        </sect3>
        <sect3>
          <title>Unmanage a snapshot</title>
          <para>Unmanage a snapshot with the <command>cinder snapshot-unmanage</command> command:</para>
          <screen language="console">$ cinder snapshot-unmanage SNAPSHOT</screen>
          <para>The arguments to be passed are:</para>
          <variablelist>
            <varlistentry>
              <term>SNAPSHOT</term>
              <listitem>
                <para>Name or ID of the snapshot to unmanage.</para>
              </listitem>
            </varlistentry>
          </variablelist>
          <para>The following example unmanages the <literal>my-snapshot-id</literal> image:</para>
          <screen language="console">$ cinder snapshot-unmanage my-snapshot-id</screen>
        </sect3>
      </sect2>
    </sect1>
    <sect1>
      <title>Manage shares</title>
      <para>A share is provided by file storage. You can give access to a share to
instances. To create and manage shares, you use <literal>manila</literal> client commands.</para>
      <sect2>
        <title>Create a share network</title>
        <procedure>
          <step>
            <para>Create a share network.</para>
            <screen language="console">$ manila share-network-create \
    --name mysharenetwork \
    --description "My Manila network" \
    --neutron-net-id dca0efc7-523d-43ef-9ded-af404a02b055 \
    --neutron-subnet-id 29ecfbd5-a9be-467e-8b4a-3415d1f82888
+-------------------+--------------------------------------+
| Property          | Value                                |
+-------------------+--------------------------------------+
| name              | mysharenetwork                       |
| segmentation_id   | None                                 |
| created_at        | 2016-03-24T14:13:02.888816           |
| neutron_subnet_id | 29ecfbd5-a9be-467e-8b4a-3415d1f82888 |
| updated_at        | None                                 |
| network_type      | None                                 |
| neutron_net_id    | dca0efc7-523d-43ef-9ded-af404a02b055 |
| ip_version        | None                                 |
| nova_net_id       | None                                 |
| cidr              | None                                 |
| project_id        | 907004508ef4447397ce6741a8f037c1     |
| id                | c895fe26-92be-4152-9e6c-f2ad230efb13 |
| description       | My Manila network                    |
+-------------------+--------------------------------------+</screen>
          </step>
          <step>
            <para>List share networks.</para>
            <screen language="console">$ manila share-network-list
+--------------------------------------+----------------+
| id                                   | name           |
+--------------------------------------+----------------+
| c895fe26-92be-4152-9e6c-f2ad230efb13 | mysharenetwork |
+--------------------------------------+----------------+</screen>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Create a share</title>
        <procedure>
          <step>
            <para>Create a share.</para>
            <screen language="console">$ manila create NFS 1 \
    --name myshare \
    --description "My Manila share" \
    --share-network mysharenetwork \
    --share-type default
+-----------------------------+--------------------------------------+
| Property                    | Value                                |
+-----------------------------+--------------------------------------+
| status                      | creating                             |
| share_type_name             | default                              |
| description                 | My Manila share                      |
| availability_zone           | None                                 |
| share_network_id            | c895fe26-92be-4152-9e6c-f2ad230efb13 |
| share_server_id             | None                                 |
| host                        |                                      |
| access_rules_status         | active                               |
| snapshot_id                 | None                                 |
| is_public                   | False                                |
| task_state                  | None                                 |
| snapshot_support            | True                                 |
| id                          | 8d8b854b-ec32-43f1-acc0-1b2efa7c3400 |
| size                        | 1                                    |
| name                        | myshare                              |
| share_type                  | bf6ada49-990a-47c3-88bc-c0cb31d5c9bf |
| has_replicas                | False                                |
| replication_type            | None                                 |
| created_at                  | 2016-03-24T14:15:34.000000           |
| share_proto                 | NFS                                  |
| consistency_group_id        | None                                 |
| source_cgsnapshot_member_id | None                                 |
| project_id                  | 907004508ef4447397ce6741a8f037c1     |
| metadata                    | {}                                   |
+-----------------------------+--------------------------------------+</screen>
          </step>
          <step>
            <para>Show a share.</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ manila show myshare
+-----------------------------+---------------------------------------------------------------+
| Property                    | Value                                                         |
+-----------------------------+---------------------------------------------------------------+
| status                      | available                                                     |
| share_type_name             | default                                                       |
| description                 | My Manila share                                               |
| availability_zone           | nova                                                          |
| share_network_id            | c895fe26-92be-4152-9e6c-f2ad230efb13                          |
| export_locations            |                                                               |
|                             | path = 10.254.0.3:/share-e1c2d35e-fe67-4028-ad7a-45f668732b1d |
|                             | preferred = False                                             |
|                             | is_admin_only = False                                         |
|                             | id = b6bd76ce-12a2-42a9-a30a-8a43b503867d                     |
|                             | share_instance_id = e1c2d35e-fe67-4028-ad7a-45f668732b1d      |
|                             | path = 10.0.0.3:/share-e1c2d35e-fe67-4028-ad7a-45f668732b1d   |
|                             | preferred = False                                             |
|                             | is_admin_only = True                                          |
|                             | id = 6921e862-88bc-49a5-a2df-efeed9acd583                     |
|                             | share_instance_id = e1c2d35e-fe67-4028-ad7a-45f668732b1d      |
| share_server_id             | 2e9d2d02-883f-47b5-bb98-e053b8d1e683                          |
| host                        | nosb-devstack@london#LONDON                                   |
| access_rules_status         | active                                                        |
| snapshot_id                 | None                                                          |
| is_public                   | False                                                         |
| task_state                  | None                                                          |
| snapshot_support            | True                                                          |
| id                          | 8d8b854b-ec32-43f1-acc0-1b2efa7c3400                          |
| size                        | 1                                                             |
| name                        | myshare                                                       |
| share_type                  | bf6ada49-990a-47c3-88bc-c0cb31d5c9bf                          |
| has_replicas                | False                                                         |
| replication_type            | None                                                          |
| created_at                  | 2016-03-24T14:15:34.000000                                    |
| share_proto                 | NFS                                                           |
| consistency_group_id        | None                                                          |
| source_cgsnapshot_member_id | None                                                          |
| project_id                  | 907004508ef4447397ce6741a8f037c1                              |
| metadata                    | {}                                                            |
+-----------------------------+---------------------------------------------------------------+</screen>
          </step>
          <step>
            <para>List shares.</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ manila list
+--------------------------------------+---------+------+-------------+-----------+-----------+-----------------+-----------------------------+-------------------+
| ID                                   | Name    | Size | Share Proto | Status    | Is Public | Share Type Name | Host                        | Availability Zone |
+--------------------------------------+---------+------+-------------+-----------+-----------+-----------------+-----------------------------+-------------------+
| 8d8b854b-ec32-43f1-acc0-1b2efa7c3400 | myshare | 1    | NFS         | available | False     | default         | nosb-devstack@london#LONDON | nova              |
+--------------------------------------+---------+------+-------------+-----------+-----------+-----------------+-----------------------------+-------------------+</screen>
          </step>
          <step>
            <para>List share export locations.</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ manila share-export-location-list myshare
+--------------------------------------+--------------------------------------------------------+-----------+
| ID                                   | Path                                                   | Preferred |
+--------------------------------------+--------------------------------------------------------+-----------+
| 6921e862-88bc-49a5-a2df-efeed9acd583 | 10.0.0.3:/share-e1c2d35e-fe67-4028-ad7a-45f668732b1d   | False     |
| b6bd76ce-12a2-42a9-a30a-8a43b503867d | 10.254.0.3:/share-e1c2d35e-fe67-4028-ad7a-45f668732b1d | False     |
+--------------------------------------+--------------------------------------------------------+-----------+</screen>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Allow read-write access</title>
        <procedure>
          <step>
            <para>Allow access.</para>
            <screen language="console">$ manila access-allow myshare ip 10.0.0.0/24
+--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| share_id     | 8d8b854b-ec32-43f1-acc0-1b2efa7c3400 |
| access_type  | ip                                   |
| access_to    | 10.0.0.0/24                          |
| access_level | rw                                   |
| state        | new                                  |
| id           | 0c8470ca-0d77-490c-9e71-29e1f453bf97 |
+--------------+--------------------------------------+</screen>
          </step>
          <step>
            <para>List access.</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ manila access-list myshare
+--------------------------------------+-------------+-------------+--------------+--------+
| id                                   | access_type | access_to   | access_level | state  |
+--------------------------------------+-------------+-------------+--------------+--------+
| 0c8470ca-0d77-490c-9e71-29e1f453bf97 | ip          | 10.0.0.0/24 | rw           | active |
+--------------------------------------+-------------+-------------+--------------+--------+</screen>
            <para>The access is created.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Allow read-only access</title>
        <procedure>
          <step>
            <para>Allow access.</para>
            <screen language="console">$ manila access-allow myshare ip 20.0.0.0/24 --access-level ro
+--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| share_id     | 8d8b854b-ec32-43f1-acc0-1b2efa7c3400 |
| access_type  | ip                                   |
| access_to    | 20.0.0.0/24                          |
| access_level | ro                                   |
| state        | new                                  |
| id           | f151ad17-654d-40ce-ba5d-98a5df67aadc |
+--------------+--------------------------------------+</screen>
          </step>
          <step>
            <para>List access.</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ manila access-list myshare
+--------------------------------------+-------------+-------------+--------------+--------+
| id                                   | access_type | access_to   | access_level | state  |
+--------------------------------------+-------------+-------------+--------------+--------+
| 0c8470ca-0d77-490c-9e71-29e1f453bf97 | ip          | 10.0.0.0/24 | rw           | active |
| f151ad17-654d-40ce-ba5d-98a5df67aadc | ip          | 20.0.0.0/24 | ro           | active |
+--------------------------------------+-------------+-------------+--------------+--------+</screen>
            <para>The access is created.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Deny access</title>
        <procedure>
          <step>
            <para>Deny access.</para>
            <screen language="console">$ manila access-deny myshare 0c8470ca-0d77-490c-9e71-29e1f453bf97
$ manila access-deny myshare f151ad17-654d-40ce-ba5d-98a5df67aadc</screen>
          </step>
          <step>
            <para>List access.</para>
            <screen language="console">$ manila access-list myshare
+----+-------------+-----------+--------------+-------+
| id | access type | access to | access level | state |
+----+-------------+-----------+--------------+-------+
+----+-------------+-----------+--------------+-------+</screen>
            <para>The access is removed.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Create snapshot</title>
        <procedure>
          <step>
            <para>Create a snapshot.</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ manila snapshot-create --name mysnapshot --description "My Manila snapshot" myshare
+-------------------+--------------------------------------+
| Property          | Value                                |
+-------------------+--------------------------------------+
| status            | creating                             |
| share_id          | 8d8b854b-ec32-43f1-acc0-1b2efa7c3400 |
| description       | My Manila snapshot                   |
| created_at        | 2016-03-24T14:39:58.232844           |
| share_proto       | NFS                                  |
| provider_location | None                                 |
| id                | e744ca47-0931-4e81-9d9f-2ead7d7c1640 |
| size              | 1                                    |
| share_size        | 1                                    |
| name              | mysnapshot                           |
+-------------------+--------------------------------------+</screen>
          </step>
          <step>
            <para>List snapshots.</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ manila snapshot-list
+--------------------------------------+--------------------------------------+-----------+------------+------------+
| ID                                   | Share ID                             | Status    | Name       | Share Size |
+--------------------------------------+--------------------------------------+-----------+------------+------------+
| e744ca47-0931-4e81-9d9f-2ead7d7c1640 | 8d8b854b-ec32-43f1-acc0-1b2efa7c3400 | available | mysnapshot | 1          |
+--------------------------------------+--------------------------------------+-----------+------------+------------+</screen>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Create share from snapshot</title>
        <procedure>
          <step>
            <para>Create a share from a snapshot.</para>
            <screen language="console">$ manila create NFS 1 \
    --snapshot-id e744ca47-0931-4e81-9d9f-2ead7d7c1640 \
    --share-network mysharenetwork \
    --name mysharefromsnap
+-----------------------------+--------------------------------------+
| Property                    | Value                                |
+-----------------------------+--------------------------------------+
| status                      | creating                             |
| share_type_name             | default                              |
| description                 | None                                 |
| availability_zone           | nova                                 |
| share_network_id            | c895fe26-92be-4152-9e6c-f2ad230efb13 |
| share_server_id             | None                                 |
| host                        | nosb-devstack@london#LONDON          |
| access_rules_status         | active                               |
| snapshot_id                 | e744ca47-0931-4e81-9d9f-2ead7d7c1640 |
| is_public                   | False                                |
| task_state                  | None                                 |
| snapshot_support            | True                                 |
| id                          | e73ebcd3-4764-44f0-9b42-fab5cf34a58b |
| size                        | 1                                    |
| name                        | mysharefromsnap                      |
| share_type                  | bf6ada49-990a-47c3-88bc-c0cb31d5c9bf |
| has_replicas                | False                                |
| replication_type            | None                                 |
| created_at                  | 2016-03-24T14:41:36.000000           |
| share_proto                 | NFS                                  |
| consistency_group_id        | None                                 |
| source_cgsnapshot_member_id | None                                 |
| project_id                  | 907004508ef4447397ce6741a8f037c1     |
| metadata                    | {}                                   |
+-----------------------------+--------------------------------------+</screen>
          </step>
          <step>
            <para>List shares.</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ manila list
+--------------------------------------+-----------------+------+-------------+-----------+-----------+-----------------+-----------------------------+-------------------+
| ID                                   | Name            | Size | Share Proto | Status    | Is Public | Share Type Name | Host                        | Availability Zone |
+--------------------------------------+-----------------+------+-------------+-----------+-----------+-----------------+-----------------------------+-------------------+
| 8d8b854b-ec32-43f1-acc0-1b2efa7c3400 | myshare         | 1    | NFS         | available | False     | default         | nosb-devstack@london#LONDON | nova              |
| e73ebcd3-4764-44f0-9b42-fab5cf34a58b | mysharefromsnap | 1    | NFS         | available | False     | default         | nosb-devstack@london#LONDON | nova              |
+--------------------------------------+-----------------+------+-------------+-----------+-----------+-----------------+-----------------------------+-------------------+</screen>
          </step>
          <step>
            <para>Show the share created from snapshot.</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ manila show mysharefromsnap
+-----------------------------+---------------------------------------------------------------+
| Property                    | Value                                                         |
+-----------------------------+---------------------------------------------------------------+
| status                      | available                                                     |
| share_type_name             | default                                                       |
| description                 | None                                                          |
| availability_zone           | nova                                                          |
| share_network_id            | c895fe26-92be-4152-9e6c-f2ad230efb13                          |
| export_locations            |                                                               |
|                             | path = 10.254.0.3:/share-4c00cb49-51d9-478e-abc1-d1853efaf6d3 |
|                             | preferred = False                                             |
|                             | is_admin_only = False                                         |
|                             | id = 5419fb40-04b9-4a52-b08e-19aa1ce13a5c                     |
|                             | share_instance_id = 4c00cb49-51d9-478e-abc1-d1853efaf6d3      |
|                             | path = 10.0.0.3:/share-4c00cb49-51d9-478e-abc1-d1853efaf6d3   |
|                             | preferred = False                                             |
|                             | is_admin_only = True                                          |
|                             | id = 26f55e4c-6edc-4e55-8c55-c62b7db1aa9f                     |
|                             | share_instance_id = 4c00cb49-51d9-478e-abc1-d1853efaf6d3      |
| share_server_id             | 2e9d2d02-883f-47b5-bb98-e053b8d1e683                          |
| host                        | nosb-devstack@london#LONDON                                   |
| access_rules_status         | active                                                        |
| snapshot_id                 | e744ca47-0931-4e81-9d9f-2ead7d7c1640                          |
| is_public                   | False                                                         |
| task_state                  | None                                                          |
| snapshot_support            | True                                                          |
| id                          | e73ebcd3-4764-44f0-9b42-fab5cf34a58b                          |
| size                        | 1                                                             |
| name                        | mysharefromsnap                                               |
| share_type                  | bf6ada49-990a-47c3-88bc-c0cb31d5c9bf                          |
| has_replicas                | False                                                         |
| replication_type            | None                                                          |
| created_at                  | 2016-03-24T14:41:36.000000                                    |
| share_proto                 | NFS                                                           |
| consistency_group_id        | None                                                          |
| source_cgsnapshot_member_id | None                                                          |
| project_id                  | 907004508ef4447397ce6741a8f037c1                              |
| metadata                    | {}                                                            |
+-----------------------------+---------------------------------------------------------------+</screen>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Delete share</title>
        <procedure>
          <step>
            <para>Delete a share.</para>
            <screen language="console">$ manila delete mysharefromsnap</screen>
          </step>
          <step>
            <para>List shares.</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ manila list
+--------------------------------------+-----------------+------+-------------+-----------+-----------+-----------------+-----------------------------+-------------------+
| ID                                   | Name            | Size | Share Proto | Status    | Is Public | Share Type Name | Host                        | Availability Zone |
+--------------------------------------+-----------------+------+-------------+-----------+-----------+-----------------+-----------------------------+-------------------+
| 8d8b854b-ec32-43f1-acc0-1b2efa7c3400 | myshare         | 1    | NFS         | available | False     | default         | nosb-devstack@london#LONDON | nova              |
| e73ebcd3-4764-44f0-9b42-fab5cf34a58b | mysharefromsnap | 1    | NFS         | deleting  | False     | default         | nosb-devstack@london#LONDON | nova              |
+--------------------------------------+-----------------+------+-------------+-----------+-----------+-----------------+-----------------------------+-------------------+</screen>
            <para>The share is being deleted.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Delete snapshot</title>
        <procedure>
          <step>
            <para>List snapshots before deleting.</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ manila snapshot-list
+--------------------------------------+--------------------------------------+-----------+------------+------------+
| ID                                   | Share ID                             | Status    | Name       | Share Size |
+--------------------------------------+--------------------------------------+-----------+------------+------------+
| e744ca47-0931-4e81-9d9f-2ead7d7c1640 | 8d8b854b-ec32-43f1-acc0-1b2efa7c3400 | available | mysnapshot | 1          |
+--------------------------------------+--------------------------------------+-----------+------------+------------+</screen>
          </step>
          <step>
            <para>Delete a snapshot.</para>
            <screen language="console">$ manila snapshot-delete mysnapshot</screen>
          </step>
          <step>
            <para>List snapshots after deleting.</para>
            <screen language="console">$ manila snapshot-list

+----+----------+--------+------+------------+
| ID | Share ID | Status | Name | Share Size |
+----+----------+--------+------+------------+
+----+----------+--------+------+------------+</screen>
            <para>The snapshot is deleted.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Extend share</title>
        <procedure>
          <step>
            <para>Extend share.</para>
            <screen language="console">$ manila extend myshare 2</screen>
          </step>
          <step>
            <para>Show the share while it is being extended.</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ manila show myshare
+-----------------------------+---------------------------------------------------------------+
| Property                    | Value                                                         |
+-----------------------------+---------------------------------------------------------------+
| status                      | extending                                                     |
| share_type_name             | default                                                       |
| description                 | My Manila share                                               |
| availability_zone           | nova                                                          |
| share_network_id            | c895fe26-92be-4152-9e6c-f2ad230efb13                          |
| export_locations            |                                                               |
|                             | path = 10.254.0.3:/share-e1c2d35e-fe67-4028-ad7a-45f668732b1d |
|                             | preferred = False                                             |
|                             | is_admin_only = False                                         |
|                             | id = b6bd76ce-12a2-42a9-a30a-8a43b503867d                     |
|                             | share_instance_id = e1c2d35e-fe67-4028-ad7a-45f668732b1d      |
|                             | path = 10.0.0.3:/share-e1c2d35e-fe67-4028-ad7a-45f668732b1d   |
|                             | preferred = False                                             |
|                             | is_admin_only = True                                          |
|                             | id = 6921e862-88bc-49a5-a2df-efeed9acd583                     |
|                             | share_instance_id = e1c2d35e-fe67-4028-ad7a-45f668732b1d      |
| share_server_id             | 2e9d2d02-883f-47b5-bb98-e053b8d1e683                          |
| host                        | nosb-devstack@london#LONDON                                   |
| access_rules_status         | active                                                        |
| snapshot_id                 | None                                                          |
| is_public                   | False                                                         |
| task_state                  | None                                                          |
| snapshot_support            | True                                                          |
| id                          | 8d8b854b-ec32-43f1-acc0-1b2efa7c3400                          |
| size                        | 1                                                             |
| name                        | myshare                                                       |
| share_type                  | bf6ada49-990a-47c3-88bc-c0cb31d5c9bf                          |
| has_replicas                | False                                                         |
| replication_type            | None                                                          |
| created_at                  | 2016-03-24T14:15:34.000000                                    |
| share_proto                 | NFS                                                           |
| consistency_group_id        | None                                                          |
| source_cgsnapshot_member_id | None                                                          |
| project_id                  | 907004508ef4447397ce6741a8f037c1                              |
| metadata                    | {}                                                            |
+-----------------------------+---------------------------------------------------------------+</screen>
          </step>
          <step>
            <para>Show the share after it is extended.</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ manila show myshare
+-----------------------------+---------------------------------------------------------------+
| Property                    | Value                                                         |
+-----------------------------+---------------------------------------------------------------+
| status                      | available                                                     |
| share_type_name             | default                                                       |
| description                 | My Manila share                                               |
| availability_zone           | nova                                                          |
| share_network_id            | c895fe26-92be-4152-9e6c-f2ad230efb13                          |
| export_locations            |                                                               |
|                             | path = 10.254.0.3:/share-e1c2d35e-fe67-4028-ad7a-45f668732b1d |
|                             | preferred = False                                             |
|                             | is_admin_only = False                                         |
|                             | id = b6bd76ce-12a2-42a9-a30a-8a43b503867d                     |
|                             | share_instance_id = e1c2d35e-fe67-4028-ad7a-45f668732b1d      |
|                             | path = 10.0.0.3:/share-e1c2d35e-fe67-4028-ad7a-45f668732b1d   |
|                             | preferred = False                                             |
|                             | is_admin_only = True                                          |
|                             | id = 6921e862-88bc-49a5-a2df-efeed9acd583                     |
|                             | share_instance_id = e1c2d35e-fe67-4028-ad7a-45f668732b1d      |
| share_server_id             | 2e9d2d02-883f-47b5-bb98-e053b8d1e683                          |
| host                        | nosb-devstack@london#LONDON                                   |
| access_rules_status         | active                                                        |
| snapshot_id                 | None                                                          |
| is_public                   | False                                                         |
| task_state                  | None                                                          |
| snapshot_support            | True                                                          |
| id                          | 8d8b854b-ec32-43f1-acc0-1b2efa7c3400                          |
| size                        | 2                                                             |
| name                        | myshare                                                       |
| share_type                  | bf6ada49-990a-47c3-88bc-c0cb31d5c9bf                          |
| has_replicas                | False                                                         |
| replication_type            | None                                                          |
| created_at                  | 2016-03-24T14:15:34.000000                                    |
| share_proto                 | NFS                                                           |
| consistency_group_id        | None                                                          |
| source_cgsnapshot_member_id | None                                                          |
| project_id                  | 907004508ef4447397ce6741a8f037c1                              |
| metadata                    | {}                                                            |
+-----------------------------+---------------------------------------------------------------+</screen>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Shrink share</title>
        <procedure>
          <step>
            <para>Shrink a share.</para>
            <screen language="console">$ manila shrink myshare 1</screen>
          </step>
          <step>
            <para>Show the share while it is being shrunk.</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ manila show myshare
+-----------------------------+---------------------------------------------------------------+
| Property                    | Value                                                         |
+-----------------------------+---------------------------------------------------------------+
| status                      | shrinking                                                     |
| share_type_name             | default                                                       |
| description                 | My Manila share                                               |
| availability_zone           | nova                                                          |
| share_network_id            | c895fe26-92be-4152-9e6c-f2ad230efb13                          |
| export_locations            |                                                               |
|                             | path = 10.254.0.3:/share-e1c2d35e-fe67-4028-ad7a-45f668732b1d |
|                             | preferred = False                                             |
|                             | is_admin_only = False                                         |
|                             | id = b6bd76ce-12a2-42a9-a30a-8a43b503867d                     |
|                             | share_instance_id = e1c2d35e-fe67-4028-ad7a-45f668732b1d      |
|                             | path = 10.0.0.3:/share-e1c2d35e-fe67-4028-ad7a-45f668732b1d   |
|                             | preferred = False                                             |
|                             | is_admin_only = True                                          |
|                             | id = 6921e862-88bc-49a5-a2df-efeed9acd583                     |
|                             | share_instance_id = e1c2d35e-fe67-4028-ad7a-45f668732b1d      |
| share_server_id             | 2e9d2d02-883f-47b5-bb98-e053b8d1e683                          |
| host                        | nosb-devstack@london#LONDON                                   |
| access_rules_status         | active                                                        |
| snapshot_id                 | None                                                          |
| is_public                   | False                                                         |
| task_state                  | None                                                          |
| snapshot_support            | True                                                          |
| id                          | 8d8b854b-ec32-43f1-acc0-1b2efa7c3400                          |
| size                        | 2                                                             |
| name                        | myshare                                                       |
| share_type                  | bf6ada49-990a-47c3-88bc-c0cb31d5c9bf                          |
| has_replicas                | False                                                         |
| replication_type            | None                                                          |
| created_at                  | 2016-03-24T14:15:34.000000                                    |
| share_proto                 | NFS                                                           |
| consistency_group_id        | None                                                          |
| source_cgsnapshot_member_id | None                                                          |
| project_id                  | 907004508ef4447397ce6741a8f037c1                              |
| metadata                    | {}                                                            |
+-----------------------------+---------------------------------------------------------------+</screen>
          </step>
          <step>
            <para>Show the share after it is being shrunk.</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ manila show myshare
+-----------------------------+---------------------------------------------------------------+
| Property                    | Value                                                         |
+-----------------------------+---------------------------------------------------------------+
| status                      | available                                                     |
| share_type_name             | default                                                       |
| description                 | My Manila share                                               |
| availability_zone           | nova                                                          |
| share_network_id            | c895fe26-92be-4152-9e6c-f2ad230efb13                          |
| export_locations            |                                                               |
|                             | path = 10.254.0.3:/share-e1c2d35e-fe67-4028-ad7a-45f668732b1d |
|                             | preferred = False                                             |
|                             | is_admin_only = False                                         |
|                             | id = b6bd76ce-12a2-42a9-a30a-8a43b503867d                     |
|                             | share_instance_id = e1c2d35e-fe67-4028-ad7a-45f668732b1d      |
|                             | path = 10.0.0.3:/share-e1c2d35e-fe67-4028-ad7a-45f668732b1d   |
|                             | preferred = False                                             |
|                             | is_admin_only = True                                          |
|                             | id = 6921e862-88bc-49a5-a2df-efeed9acd583                     |
|                             | share_instance_id = e1c2d35e-fe67-4028-ad7a-45f668732b1d      |
| share_server_id             | 2e9d2d02-883f-47b5-bb98-e053b8d1e683                          |
| host                        | nosb-devstack@london#LONDON                                   |
| access_rules_status         | active                                                        |
| snapshot_id                 | None                                                          |
| is_public                   | False                                                         |
| task_state                  | None                                                          |
| snapshot_support            | True                                                          |
| id                          | 8d8b854b-ec32-43f1-acc0-1b2efa7c3400                          |
| size                        | 1                                                             |
| name                        | myshare                                                       |
| share_type                  | bf6ada49-990a-47c3-88bc-c0cb31d5c9bf                          |
| has_replicas                | False                                                         |
| replication_type            | None                                                          |
| created_at                  | 2016-03-24T14:15:34.000000                                    |
| share_proto                 | NFS                                                           |
| consistency_group_id        | None                                                          |
| source_cgsnapshot_member_id | None                                                          |
| project_id                  | 907004508ef4447397ce6741a8f037c1                              |
| metadata                    | {}                                                            |
+-----------------------------+---------------------------------------------------------------+</screen>
          </step>
        </procedure>
      </sect2>
    </sect1>
    <sect1>
      <title>Configure access and security for instances</title>
      <para>When you launch a virtual machine, you can inject a <emphasis>key pair</emphasis>, which
provides SSH access to your instance. For this to work, the image must
contain the <literal>cloud-init</literal> package.</para>
      <para>You can create at least one key pair for each project. You can use the key
pair for multiple instances that belong to that project. If you generate
a key pair with an external tool, you can import it into OpenStack.</para>
      <note>
        <para>A key pair belongs to an individual user, not to a project.
To share a key pair across multiple users, each user
needs to import that key pair.</para>
      </note>
      <para>If an image uses a static root password or a static key set (neither is
recommended), you must not provide a key pair when you launch the
instance.</para>
      <para>A <emphasis>security group</emphasis> is a named collection of network access rules that
are use to limit the types of traffic that have access to instances.
When you launch an instance, you can assign one or more security groups
to it. If you do not create security groups, new instances are
automatically assigned to the default security group, unless you
explicitly specify a different security group.</para>
      <para>The associated <emphasis>rules</emphasis> in each security group control the traffic to
instances in the group. Any incoming traffic that is not matched by a
rule is denied access by default. You can add rules to or remove rules
from a security group, and you can modify rules for the default and any
other security group.</para>
      <para>You can modify the rules in a security group to allow access to
instances through different ports and protocols. For example, you can
modify rules to allow access to instances through SSH, to ping
instances, or to allow UDP traffic; for example, for a DNS server
running on an instance. You specify the following parameters for rules:</para>
      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">Source of traffic</emphasis>. Enable traffic to instances from either IP
addresses inside the cloud from other group members or from all IP
addresses.</para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Protocol</emphasis>. Choose TCP for SSH, ICMP for pings, or UDP.</para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Destination port on virtual machine</emphasis>. Define a port range. To open
a single port only, enter the same value twice. ICMP does not support
ports; instead, you enter values to define the codes and types of
ICMP traffic to be allowed.</para>
        </listitem>
      </itemizedlist>
      <para>Rules are automatically enforced as soon as you create or modify them.</para>
      <note>
        <para>Instances that use the default security group cannot, by default, be
accessed from any IP address outside of the cloud. If you want those
IP addresses to access the instances, you must modify the rules for
the default security group. Additionally, security groups will
automatically drop DHCP responses coming from instances.</para>
        <para>You can also assign a floating IP address to a running instance to
make it accessible from outside the cloud. See
.</para>
      </note>
      <sect2>
        <title>Add a key pair</title>
        <para>You can generate a key pair or upload an existing public key.</para>
        <procedure>
          <step>
            <para>To generate a key pair, run the following command.</para>
            <screen language="console">$ openstack keypair create KEY_NAME &gt; MY_KEY.pem</screen>
            <para>This command generates a key pair with the name that you specify for
KEY_NAME, writes the private key to the <literal>.pem</literal> file that you specify,
and registers the public key to the Nova database.</para>
          </step>
          <step>
            <para>To set the permissions of the <literal>.pem</literal> file so that only you can read
and write to it, run the following command.</para>
            <screen language="console">$ chmod 600 MY_KEY.pem</screen>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Import a key pair</title>
        <procedure>
          <step>
            <para>If you have already generated a key pair and the public key is located
at <literal>~/.ssh/id_rsa.pub</literal>, run the following command to upload the public
key.</para>
            <screen language="console">$ openstack keypair create --public-key ~/.ssh/id_rsa.pub KEY_NAME</screen>
            <para>This command registers the public key at the Nova database and names the
key pair the name that you specify for <literal>KEY_NAME</literal>.</para>
          </step>
          <step>
            <para>To ensure that the key pair has been successfully imported, list key
pairs as follows:</para>
            <screen language="console">$ openstack keypair list</screen>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Create and manage security groups</title>
        <procedure>
          <step>
            <para>To list the security groups for the current project, including
descriptions, enter the following command:</para>
            <screen language="console">$ openstack security group list</screen>
          </step>
          <step>
            <para>To create a security group with a specified name and description, enter
the following command:</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack security group create SECURITY_GROUP_NAME --description GROUP_DESCRIPTION</screen>
          </step>
          <step>
            <para>To delete a specified group, enter the following command:</para>
            <screen language="console">$ openstack security group delete SECURITY_GROUP_NAME</screen>
          </step>
        </procedure>
        <note>
          <para>You cannot delete the default security group for a project. Also,
you cannot delete a security group that is assigned to a running
instance.</para>
        </note>
      </sect2>
      <sect2>
        <title>Create and manage security group rules</title>
        <para>Modify security group rules with the <command>openstack security group rule</command>
commands. Before you begin, source the OpenStack RC file. For details,
see .</para>
        <procedure>
          <step>
            <para>To list the rules for a security group, run the following command:</para>
            <screen language="console">$ openstack security group rule list SECURITY_GROUP_NAME</screen>
          </step>
          <step>
            <para>To allow SSH access to the instances, choose one of the following
options:</para>
            <itemizedlist>
              <listitem>
                <para>Allow access from all IP addresses, specified as IP subnet <literal>0.0.0.0/0</literal>
in CIDR notation:</para>
                <screen language="console">$ openstack security group rule create SECURITY_GROUP_NAME \
      --protocol tcp --dst-port 22:22 --remote-ip 0.0.0.0/0</screen>
              </listitem>
              <listitem>
                <para>Allow access only from IP addresses from other security groups
(source groups) to access the specified port:</para>
                <screen language="console">$ openstack security group rule create SECURITY_GROUP_NAME \
      --protocol tcp --dst-port 22:22 --remote-group SOURCE_GROUP_NAME</screen>
              </listitem>
            </itemizedlist>
          </step>
          <step>
            <para>To allow pinging of the instances, choose one of the following options:</para>
            <itemizedlist>
              <listitem>
                <para>Allow pinging from all IP addresses, specified as IP subnet
<literal>0.0.0.0/0</literal> in CIDR notation.</para>
                <screen language="console">$ openstack security group rule create --protocol icmp \
  SECURITY_GROUP_NAME</screen>
                <para>This allows access to all codes and all types of ICMP traffic.</para>
              </listitem>
              <listitem>
                <para>Allow only members of other security groups (source groups) to ping
instances.</para>
                <screen language="console">$ openstack security group rule create --protocol icmp \
  --remote-group SOURCE_GROUP_NAME SECURITY_GROUP</screen>
              </listitem>
            </itemizedlist>
          </step>
          <step>
            <para>To allow access through a UDP port, such as allowing access to a DNS
server that runs on a VM, choose one of the following options:</para>
            <itemizedlist>
              <listitem>
                <para>Allow UDP access from IP addresses, specified as IP subnet
<literal>0.0.0.0/0</literal> in CIDR notation.</para>
                <screen language="console">$ openstack security group rule create --protocol udp \
  --dst-port 53:53 SECURITY_GROUP</screen>
              </listitem>
              <listitem>
                <para>Allow only IP addresses from other security groups (source groups) to
access the specified port.</para>
                <screen language="console">$ openstack security group rule create --protocol udp \
  --dst-port 53:53 --remote-group SOURCE_GROUP_NAME SECURITY_GROUP</screen>
              </listitem>
            </itemizedlist>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Delete a security group rule</title>
        <para>To delete a security group rule, specify the ID of the rule.</para>
        <screen language="console">$ openstack security group rule delete RULE_ID</screen>
      </sect2>
    </sect1>
    <sect1>
      <title>Launch instances</title>
      <para>Instances are virtual machines that run inside the cloud.</para>
      <para>Before you can launch an instance, gather the following parameters:</para>
      <itemizedlist>
        <listitem>
          <para>The <emphasis role="bold">instance source</emphasis> can be an image, snapshot, or block storage
volume that contains an image or snapshot.</para>
        </listitem>
        <listitem>
          <para>A <emphasis role="bold">name</emphasis> for your instance.</para>
        </listitem>
        <listitem>
          <para>The <emphasis role="bold">flavor</emphasis> for your instance, which defines the compute, memory,
and storage capacity of nova computing instances. A flavor is an
available hardware configuration for a server. It defines the size of
a virtual server that can be launched.</para>
        </listitem>
        <listitem>
          <para>Any <emphasis role="bold">user data</emphasis> files. A user data file is a special key in the
metadata service that holds a file that cloud-aware applications in
the guest instance can access. For example, one application that uses
user data is the
<link xlink:href="https://help.ubuntu.com/community/CloudInit">cloud-init</link> system,
which is an open-source package from Ubuntu that is available on
various Linux distributions and that handles early initialization of
a cloud instance.</para>
        </listitem>
        <listitem>
          <para>Access and security credentials, which include one or both of the
following credentials:</para>
          <itemizedlist>
            <listitem>
              <para>A <emphasis role="bold">key pair</emphasis> for your instance, which are SSH credentials that
are injected into images when they are launched. For the key pair
to be successfully injected, the image must contain the
<literal>cloud-init</literal> package. Create at least one key pair for each
project. If you already have generated a key pair with an external
tool, you can import it into OpenStack. You can use the key pair
for multiple instances that belong to that project.</para>
            </listitem>
            <listitem>
              <para>A <emphasis role="bold">security group</emphasis> that defines which incoming network traffic
is forwarded to instances. Security groups hold a set of firewall
policies, known as <emphasis>security group rules</emphasis>.</para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>If needed, you can assign a <emphasis role="bold">floating (public) IP address</emphasis> to a
running instance.</para>
        </listitem>
        <listitem>
          <para>You can also attach a block storage device, or <emphasis role="bold">volume</emphasis>, for
persistent storage.</para>
        </listitem>
      </itemizedlist>
      <note>
        <para>Instances that use the default security group cannot, by default, be
accessed from any IP address outside of the cloud. If you want those
IP addresses to access the instances, you must modify the rules for
the default security group.</para>
        <para>You can also assign a floating IP address to a running instance to
make it accessible from outside the cloud. See
.</para>
      </note>
      <para>After you gather the parameters that you need to launch an instance,
you can launch it from an 
or a . You can launch an
instance directly from one of the available OpenStack images or from
an image that you have copied to a persistent volume. The OpenStack
Image service provides a pool of images that are accessible to members
of different projects.</para>
      <sect2>
        <title>Gather parameters to launch an instance</title>
        <para>Before you begin, source the OpenStack RC file.</para>
        <procedure>
          <step>
            <para>Create a flavor.</para>
            <screen language="console">$  openstack flavor create --ram 512 --disk 1 --vcpus 1 m1.tiny</screen>
          </step>
          <step>
            <para>List the available flavors.</para>
            <screen language="console">$ openstack flavor list</screen>
            <para>Note the ID of the flavor that you want to use for your instance:</para>
            <screen>+-----+-----------+-------+------+-----------+-------+-----------+
| ID  | Name      |   RAM | Disk | Ephemeral | VCPUs | Is_Public |
+-----+-----------+-------+------+-----------+-------+-----------+
| 1   | m1.tiny   |   512 |    1 |         0 |     1 | True      |
| 2   | m1.small  |  2048 |   20 |         0 |     1 | True      |
| 3   | m1.medium |  4096 |   40 |         0 |     2 | True      |
| 4   | m1.large  |  8192 |   80 |         0 |     4 | True      |
| 5   | m1.xlarge | 16384 |  160 |         0 |     8 | True      |
+-----+-----------+-------+------+-----------+-------+-----------+</screen>
          </step>
          <step>
            <para>List the available images.</para>
            <screen language="console">$ openstack image list</screen>
            <para>Note the ID of the image from which you want to boot your instance:</para>
            <screen>+--------------------------------------+---------------------------------+--------+
| ID                                   | Name                            | Status |
+--------------------------------------+---------------------------------+--------+
| 397e713c-b95b-4186-ad46-6126863ea0a9 | cirros-0.3.2-x86_64-uec         | active |
| df430cc2-3406-4061-b635-a51c16e488ac | cirros-0.3.2-x86_64-uec-kernel  | active |
| 3cf852bd-2332-48f4-9ae4-7d926d50945e | cirros-0.3.2-x86_64-uec-ramdisk | active |
+--------------------------------------+---------------------------------+--------+</screen>
            <para>You can also filter the image list by using <command>grep</command> to find a specific
image, as follows:</para>
            <screen language="console">$ openstack image list | grep 'kernel'

| df430cc2-3406-4061-b635-a51c16e488ac | cirros-0.3.2-x86_64-uec-kernel  | active |</screen>
          </step>
          <step>
            <para>List the available security groups.</para>
            <screen language="console">$ openstack security group list</screen>
            <note>
              <para>If you are an admin user, this command will list groups for all tenants.</para>
            </note>
            <para>Note the ID of the security group that you want to use for your instance:</para>
            <screen><?dbsuse-fo font-size="8pt"?>+--------------------------------------+---------+------------------------+----------------------------------+
| ID                                   | Name    | Description            | Project                          |
+--------------------------------------+---------+------------------------+----------------------------------+
| b0d78827-0981-45ef-8561-93aee39bbd9f | default | Default security group | 5669caad86a04256994cdf755df4d3c1 |
| ec02e79e-83e1-48a5-86ad-14ab9a8c375f | default | Default security group | 1eaaf6ede7a24e78859591444abf314a |
+--------------------------------------+---------+------------------------+----------------------------------+</screen>
            <para>If you have not created any security groups, you can assign the instance
to only the default security group.</para>
            <para>You can view rules for a specified security group:</para>
            <screen language="console">$ openstack security group rule list default</screen>
          </step>
          <step>
            <para>List the available key pairs, and note the key pair name that you use for
SSH access.</para>
            <screen language="console">$ openstack keypair list</screen>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Launch an instance</title>
        <para>You can launch an instance from various sources.</para>
        <sect3>
          <title>Launch an instance from an image</title>
          <para>Follow the steps below to launch an instance from an image.</para>
          <procedure>
            <step>
              <para>After you gather required parameters, run the following command to
launch an instance. Specify the server name, flavor ID, and image ID.</para>
              <screen language="console">$ openstack server create --flavor FLAVOR_ID --image IMAGE_ID --key-name KEY_NAME \
  --user-data USER_DATA_FILE --security-group SEC_GROUP_NAME --property KEY=VALUE \
  INSTANCE_NAME</screen>
              <para>Optionally, you can provide a key name for access control and a security
group for security. You can also include metadata key and value pairs.
For example, you can add a description for your server by providing the
<literal>--property description="My Server"</literal> parameter.</para>
              <para>You can pass user data in a local file at instance launch by using the
<literal>--user-data USER-DATA-FILE</literal> parameter.</para>
              <important>
                <para>If you boot an instance with an INSTANCE_NAME greater than 63 characters,
Compute truncates it automatically when turning it into a host name to
ensure the correct work of dnsmasq. The corresponding warning is written
into the <literal>neutron-dnsmasq.log</literal> file.</para>
              </important>
              <para>The following command launches the <literal>MyCirrosServer</literal> instance with the
<literal>m1.small</literal> flavor (ID of <literal>1</literal>), <literal>cirros-0.3.2-x86_64-uec</literal> image (ID
of <literal>397e713c-b95b-4186-ad46-6126863ea0a9</literal>), <literal>default</literal> security
group, <literal>KeyPair01</literal> key, and a user data file called
<literal>cloudinit.file</literal>:</para>
              <screen language="console">$ openstack server create --flavor 1 --image 397e713c-b95b-4186-ad46-6126863ea0a9 \
  --security-group default --key-name KeyPair01 --user-data cloudinit.file \
  myCirrosServer</screen>
              <para>Depending on the parameters that you provide, the command returns a list
of server properties.</para>
              <screen language="console"><?dbsuse-fo font-size="8pt"?>+--------------------------------------+-----------------------------------------------+
| Field                                | Value                                         |
+--------------------------------------+-----------------------------------------------+
| OS-DCF:diskConfig                    | MANUAL                                        |
| OS-EXT-AZ:availability_zone          |                                               |
| OS-EXT-SRV-ATTR:host                 | None                                          |
| OS-EXT-SRV-ATTR:hypervisor_hostname  | None                                          |
| OS-EXT-SRV-ATTR:instance_name        |                                               |
| OS-EXT-STS:power_state               | NOSTATE                                       |
| OS-EXT-STS:task_state                | scheduling                                    |
| OS-EXT-STS:vm_state                  | building                                      |
| OS-SRV-USG:launched_at               | None                                          |
| OS-SRV-USG:terminated_at             | None                                          |
| accessIPv4                           |                                               |
| accessIPv6                           |                                               |
| addresses                            |                                               |
| adminPass                            | E4Ksozt4Efi8                                  |
| config_drive                         |                                               |
| created                              | 2016-11-30T14:48:05Z                          |
| flavor                               | m1.tiny                                       |
| hostId                               |                                               |
| id                                   | 89015cc9-bdf1-458a-8518-fdca2b4a5785          |
| image                                | cirros (9fef3b2d-c35d-4b61-bea8-09cc6dc41829) |
| key_name                             | KeyPair01                                     |
| name                                 | myCirrosServer                                |
| os-extended-volumes:volumes_attached | []                                            |
| progress                             | 0                                             |
| project_id                           | 5669caad86a04256994cdf755df4d3c1              |
| properties                           |                                               |
| security_groups                      | [{u'name': u'default'}]                       |
| status                               | BUILD                                         |
| updated                              | 2016-11-30T14:48:05Z                          |
| user_id                              | c36cec73b0e44876a4478b1e6cd749bb              |
| metadata                             | {u'KEY': u'VALUE'}                            |
+--------------------------------------+-----------------------------------------------+</screen>
              <para>A status of <literal>BUILD</literal> indicates that the instance has started, but is
not yet online.</para>
              <para>A status of <literal>ACTIVE</literal> indicates that the instance is active.</para>
            </step>
            <step>
              <para>Copy the server ID value from the <literal>id</literal> field in the output. Use the
ID to get server details or to delete your server.</para>
            </step>
            <step>
              <para>Copy the administrative password value from the <literal>adminPass</literal> field. Use the
password to log in to your server.</para>
              <note>
                <para>You can also place arbitrary local files into the instance file
system at creation time by using the <literal>--file &lt;dst-path=src-path&gt;</literal>
option. You can store up to five files. For example, if you have a
special authorized keys file named <literal>special_authorized_keysfile</literal> that
you want to put on the instance rather than using the regular SSH key
injection, you can use the <literal>--file</literal> option as shown in the following
example.</para>
              </note>
              <screen language="console">$ openstack server create --image ubuntu-cloudimage --flavor 1 vm-name \
  --file /root/.ssh/authorized_keys=special_authorized_keysfile</screen>
            </step>
            <step>
              <para>Check if the instance is online.</para>
              <screen language="console">$ openstack server list</screen>
              <para>The list shows the ID, name, status, and private (and if assigned,
public) IP addresses for all instances in the project to which you
belong:</para>
              <screen language="console"><?dbsuse-fo font-size="8pt"?>+-------------+----------------------+--------+------------+-------------+------------------+------------+
| ID          | Name                 | Status | Task State | Power State | Networks         | Image Name |
+-------------+----------------------+--------+------------+-------------+------------------+------------+
| 84c6e57d... | myCirrosServer       | ACTIVE | None       | Running     | private=10.0.0.3 | cirros     |
| 8a99547e... | myInstanceFromVolume | ACTIVE | None       | Running     | private=10.0.0.4 | centos     |
+-------------+----------------------+--------+------------+-------------+------------------+------------+</screen>
              <para>If the status for the instance is ACTIVE, the instance is online.</para>
            </step>
            <step>
              <para>To view the available options for the <command>openstack server list</command>
command, run the following command:</para>
              <screen language="console">$ openstack help server list</screen>
              <note>
                <para>If you did not provide a key pair, security groups, or rules, you
can access the instance only from inside the cloud through VNC. Even
pinging the instance is not possible.</para>
              </note>
            </step>
          </procedure>
        </sect3>
        <sect3>
          <title>Launch an instance from a volume</title>
          <para>You can boot instances from a volume instead of an image.</para>
          <para>To complete these tasks, use these parameters on the
<command>openstack server create</command> command:</para>
          <informaltable>
            <tgroup cols="3">
              <colspec colname="c1" colwidth="42.9*"/>
              <colspec colname="c2" colwidth="14.3*"/>
              <colspec colname="c3" colwidth="42.9*"/>
              <thead>
                <row>
                  <entry>
                    <para>Task</para>
                  </entry>
                  <entry>
                    <para>nova boot parameter</para>
                  </entry>
                  <entry>
                    <para>Information</para>
                  </entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry>
                    <para>Boot an instance from an image and attach a non-bootable
volume.</para>
                  </entry>
                  <entry>
                    <para>
                      <literal>--block-device</literal>
                    </para>
                  </entry>
                  <entry>
                    <para>
                      <xref linkend="boot-instance-from-image-and-attach-non-bootable-volume"/>
                    </para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>Create a volume from an image and boot an instance from that
volume.</para>
                  </entry>
                  <entry>
                    <para>
                      <literal>--block-device</literal>
                    </para>
                  </entry>
                  <entry>
                    <para>
                      <xref linkend="create-volume-from-image-and-boot-instance"/>
                    </para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>Boot from an existing source image, volume, or snapshot.</para>
                  </entry>
                  <entry>
                    <para>
                      <literal>--block-device</literal>
                    </para>
                  </entry>
                  <entry>
                    <para>
                      <xref linkend="create-volume-from-image-and-boot-instance"/>
                    </para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>Attach a swap disk to an instance.</para>
                  </entry>
                  <entry>
                    <para>
                      <literal>--swap</literal>
                    </para>
                  </entry>
                  <entry>
                    <para>
                      <xref linkend="attach-swap-or-ephemeral-disk-to-an-instance"/>
                    </para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>Attach an ephemeral disk to an instance.</para>
                  </entry>
                  <entry>
                    <para>
                      <literal>--ephemeral</literal>
                    </para>
                  </entry>
                  <entry>
                    <para>
                      <xref linkend="attach-swap-or-ephemeral-disk-to-an-instance"/>
                    </para>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
          <note>
            <para>To attach a volume to a running instance, see
<xref linkend="attach-a-volume-to-an-instance"/>.</para>
          </note>
          <sect4 xml:id="boot-instance-from-image-and-attach-non-bootable-volume">
            <title>Boot instance from image and attach non-bootable volume</title>
            <para>Create a non-bootable volume and attach that volume to an instance that
you boot from an image.</para>
            <para>To create a non-bootable volume, do not create it from an image. The
volume must be entirely empty with no partition table and no file
system.</para>
            <procedure>
              <step>
                <para>Create a non-bootable volume.</para>
                <screen language="console">$ openstack volume create --size 8 my-volume
+---------------------+--------------------------------------+
| Field               | Value                                |
+---------------------+--------------------------------------+
| attachments         | []                                   |
| availability_zone   | nova                                 |
| bootable            | false                                |
| consistencygroup_id | None                                 |
| created_at          | 2016-11-25T10:37:08.850997           |
| description         | None                                 |
| encrypted           | False                                |
| id                  | b8f7bbec-6274-4cd7-90e7-60916a5e75d4 |
| migration_status    | None                                 |
| multiattach         | False                                |
| name                | my-volume                            |
| properties          |                                      |
| replication_status  | disabled                             |
| size                | 8                                    |
| snapshot_id         | None                                 |
| source_volid        | None                                 |
| status              | creating                             |
| type                | None                                 |
| updated_at          | None                                 |
| user_id             | 0678735e449149b0a42076e12dd54e28     |
+---------------------+--------------------------------------+</screen>
              </step>
              <step>
                <para>List volumes.</para>
                <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack volume list
+--------------------------------------+--------------+-----------+------+-------------+
| ID                                   | Display Name | Status    | Size | Attached to |
+--------------------------------------+--------------+-----------+------+-------------+
| b8f7bbec-6274-4cd7-90e7-60916a5e75d4 | my-volume    | available |    8 |             |
+--------------------------------------+--------------+-----------+------+-------------+</screen>
              </step>
              <step>
                <para>Boot an instance from an image and attach the empty volume to the
instance.</para>
                <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack server create --flavor 2 --image 98901246-af91-43d8-b5e6-a4506aa8f369 \
  --block-device source=volume,id=d620d971-b160-4c4e-8652-2513d74e2080,dest=volume,shutdown=preserve \
  myInstanceWithVolume
+--------------------------------------+--------------------------------------------+
| Field                                | Value                                      |
+--------------------------------------+--------------------------------------------+
| OS-DCF:diskConfig                    | MANUAL                                     |
| OS-EXT-AZ:availability_zone          | nova                                       |
| OS-EXT-SRV-ATTR:host                 | -                                          |
| OS-EXT-SRV-ATTR:hypervisor_hostname  | -                                          |
| OS-EXT-SRV-ATTR:instance_name        | instance-00000004                          |
| OS-EXT-STS:power_state               | 0                                          |
| OS-EXT-STS:task_state                | scheduling                                 |
| OS-EXT-STS:vm_state                  | building                                   |
| OS-SRV-USG:launched_at               | -                                          |
| OS-SRV-USG:terminated_at             | -                                          |
| accessIPv4                           |                                            |
| accessIPv6                           |                                            |
| adminPass                            | ZaiYeC8iucgU                               |
| config_drive                         |                                            |
| created                              | 2014-05-09T16:34:50Z                       |
| flavor                               | m1.small (2)                               |
| hostId                               |                                            |
| id                                   | 1e1797f3-1662-49ff-ae8c-a77e82ee1571       |
| image                                | cirros-0.3.1-x86_64-uec (98901246-af91-... |
| key_name                             | -                                          |
| metadata                             | {}                                         |
| name                                 | myInstanceWithVolume                       |
| os-extended-volumes:volumes_attached | [{"id": "d620d971-b160-4c4e-8652-2513d7... |
| progress                             | 0                                          |
| security_groups                      | default                                    |
| status                               | BUILD                                      |
| tenant_id                            | ccef9e62b1e645df98728fb2b3076f27           |
| updated                              | 2014-05-09T16:34:51Z                       |
| user_id                              | fef060ae7bfd4024b3edb97dff59017a           |
+--------------------------------------+--------------------------------------------+</screen>
              </step>
            </procedure>
          </sect4>
          <sect4 xml:id="create-volume-from-image-and-boot-instance">
            <title>Create volume from image and boot instance</title>
            <para>You can create a volume from an existing image, volume, or snapshot.
This procedure shows you how to create a volume from an image, and use
the volume to boot an instance.</para>
            <procedure>
              <step>
                <para>List the available images.</para>
                <screen language="console">$ openstack image list
+-----------------+---------------------------------+--------+
| ID              | Name                            | Status |
+-----------------+---------------------------------+--------+
| 484e05af-a14... | Fedora-x86_64-20-20131211.1-sda | active |
| 98901246-af9... | cirros-0.3.1-x86_64-uec         | active |
| b6e95589-7eb... | cirros-0.3.1-x86_64-uec-kernel  | active |
| c90893ea-e73... | cirros-0.3.1-x86_64-uec-ramdisk | active |
+-----------------+---------------------------------+--------+</screen>
                <para>Note the ID of the image that you want to use to create a volume.</para>
                <para>If you want to create a volume to a specific storage backend, you need
to use an image which has <emphasis>cinder_img_volume_type</emphasis> property.
In this case, a new volume will be created as <emphasis>storage_backend1</emphasis> volume
type.</para>
                <screen language="console">$ openstack image show 98901246-af9...
+------------------+------------------------------------------------------+
| Field            | Value                                                |
+------------------+------------------------------------------------------+
| checksum         | ee1eca47dc88f4879d8a229cc70a07c6                     |
| container_format | bare                                                 |
| created_at       | 2016-10-08T14:59:05Z                                 |
| disk_format      | qcow2                                                |
| file             | /v2/images/9fef3b2d-c35d-4b61-bea8-09cc6dc41829/file |
| id               | 98901246-af9d-4b61-bea8-09cc6dc41829                 |
| min_disk         | 0                                                    |
| min_ram          | 0                                                    |
| name             | cirros-0.3.4-x86_64-uec                              |
| owner            | 8d8ef3cdf2b54c25831cbb409ad9ae86                     |
| protected        | False                                                |
| schema           | /v2/schemas/image                                    |
| size             | 13287936                                             |
| status           | active                                               |
| tags             |                                                      |
| updated_at       | 2016-10-19T09:12:52Z                                 |
| virtual_size     | None                                                 |
| visibility       | public                                               |
+------------------+------------------------------------------------------+</screen>
              </step>
              <step>
                <para>List the available flavors.</para>
                <screen language="console">$ openstack flavor list
+-----+-----------+-------+------+-----------+-------+-----------+
| ID  | Name      |   RAM | Disk | Ephemeral | VCPUs | Is_Public |
+-----+-----------+-------+------+-----------+-------+-----------+
| 1   | m1.tiny   |   512 |    1 |         0 |     1 | True      |
| 2   | m1.small  |  2048 |   20 |         0 |     1 | True      |
| 3   | m1.medium |  4096 |   40 |         0 |     2 | True      |
| 4   | m1.large  |  8192 |   80 |         0 |     4 | True      |
| 5   | m1.xlarge | 16384 |  160 |         0 |     8 | True      |
+-----+-----------+-------+------+-----------+-------+-----------+</screen>
                <para>Note the ID of the flavor that you want to use to create a volume.</para>
              </step>
              <step>
                <para>To create a bootable volume from an image and launch an instance from
this volume, use the <literal>--block-device</literal> parameter.</para>
                <para>For example:</para>
                <screen language="console">$ openstack server create --flavor FLAVOR --block-device \
  source=SOURCE,id=ID,dest=DEST,size=SIZE,shutdown=PRESERVE,bootindex=INDEX \
  NAME</screen>
                <para>The parameters are:</para>
                <itemizedlist>
                  <listitem>
                    <para><literal>--flavor</literal> FLAVOR. The flavor ID or name.</para>
                  </listitem>
                  <listitem>
                    <para><literal>--block-device</literal>
source=SOURCE,id=ID,dest=DEST,size=SIZE,shutdown=PRESERVE,bootindex=INDEX</para>
                    <variablelist>
                      <varlistentry>
                        <term>
                          <emphasis role="bold">source=SOURCE</emphasis>
                        </term>
                        <listitem>
                          <para>The type of object used to create the block device. Valid values
are <literal>volume</literal>, <literal>snapshot</literal>, <literal>image</literal>, and <literal>blank</literal>.</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>
                          <emphasis role="bold">id=ID</emphasis>
                        </term>
                        <listitem>
                          <para>The ID of the source object.</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>
                          <emphasis role="bold">dest=DEST</emphasis>
                        </term>
                        <listitem>
                          <para>The type of the target virtual device. Valid values are <literal>volume</literal>
and <literal>local</literal>.</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>
                          <emphasis role="bold">size=SIZE</emphasis>
                        </term>
                        <listitem>
                          <para>The size of the volume that is created.</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>
                          <emphasis role="bold">shutdown={preserve|remove}</emphasis>
                        </term>
                        <listitem>
                          <para>What to do with the volume when the instance is deleted.
<literal>preserve</literal> does not delete the volume. <literal>remove</literal> deletes the
volume.</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>
                          <emphasis role="bold">bootindex=INDEX</emphasis>
                        </term>
                        <listitem>
                          <para>Orders the boot disks. Use <literal>0</literal> to boot from this volume.</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                  <listitem>
                    <para><literal>NAME</literal>. The name for the server.</para>
                  </listitem>
                </itemizedlist>
              </step>
              <step>
                <para>Create a bootable volume from an image. Cinder makes a volume bootable
when <literal>--image</literal> parameter is passed.</para>
                <screen language="console">$ openstack volume create --image IMAGE_ID --size SIZE_IN_GB bootable_volume</screen>
              </step>
              <step>
                <para>Create a VM from previously created bootable volume. The volume is not
deleted when the instance is terminated.</para>
                <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack server create --flavor 2 --volume VOLUME_ID \
  --block-device source=volume,id=$VOLUME_ID,dest=volume,size=10,shutdown=preserve,bootindex=0 \
  myInstanceFromVolume
+--------------------------------------+--------------------------------+
| Field                                | Value                          |
+--------------------------------------+--------------------------------+
| OS-EXT-STS:task_state                | scheduling                     |
| image                                | Attempt to boot from volume    |
|                                      | - no image supplied            |
| OS-EXT-STS:vm_state                  | building                       |
| OS-EXT-SRV-ATTR:instance_name        | instance-00000003              |
| OS-SRV-USG:launched_at               | None                           |
| flavor                               | m1.small                       |
| id                                   | 2e65c854-dba9-4f68-8f08-fe3... |
| security_groups                      | [{u'name': u'default'}]        |
| user_id                              | 352b37f5c89144d4ad053413926... |
| OS-DCF:diskConfig                    | MANUAL                         |
| accessIPv4                           |                                |
| accessIPv6                           |                                |
| progress                             | 0                              |
| OS-EXT-STS:power_state               | 0                              |
| OS-EXT-AZ:availability_zone          | nova                           |
| config_drive                         |                                |
| status                               | BUILD                          |
| updated                              | 2014-02-02T13:29:54Z           |
| hostId                               |                                |
| OS-EXT-SRV-ATTR:host                 | None                           |
| OS-SRV-USG:terminated_at             | None                           |
| key_name                             | None                           |
| OS-EXT-SRV-ATTR:hypervisor_hostname  | None                           |
| name                                 | myInstanceFromVolume           |
| adminPass                            | TzjqyGsRcJo9                   |
| tenant_id                            | f7ac731cc11f40efbc03a9f9e1d... |
| created                              | 2014-02-02T13:29:53Z           |
| os-extended-volumes:volumes_attached | [{"id": "2fff50ab..."}]        |
| metadata                             | {}                             |
+--------------------------------------+--------------------------------+</screen>
              </step>
              <step>
                <para>List volumes to see the bootable volume and its attached
<literal>myInstanceFromVolume</literal> instance.</para>
                <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack volume list
+---------------------+-----------------+--------+------+---------------------------------+
| ID                  | Display Name    | Status | Size | Attached to                     |
+---------------------+-----------------+--------+------+---------------------------------+
| c612f739-8592-44c4- | bootable_volume | in-use |  10  | Attached to myInstanceFromVolume|
| b7d4-0fee2fe1da0c   |                 |        |      | on /dev/vda                     |
+---------------------+-----------------+--------+------+---------------------------------+</screen>
              </step>
            </procedure>
          </sect4>
          <sect4 xml:id="attach-swap-or-ephemeral-disk-to-an-instance">
            <title>Attach swap or ephemeral disk to an instance</title>
            <para>Use the nova <literal>boot</literal><literal>--swap</literal> parameter to attach a swap disk on boot
or the nova <literal>boot</literal><literal>--ephemeral</literal> parameter to attach an ephemeral
disk on boot. When you terminate the instance, both disks are deleted.</para>
            <para>Boot an instance with a 512 MB swap disk and 2 GB ephemeral disk.</para>
            <screen language="console">$ openstack server create --flavor FLAVOR --image IMAGE_ID --swap 512 \
--ephemeral size=2 NAME</screen>
            <note>
              <para>The flavor defines the maximum swap and ephemeral disk size. You
cannot exceed these maximum values.</para>
            </note>
          </sect4>
        </sect3>
        <sect3>
          <title>Launch an instance using ISO image</title>
          <sect4>
            <title>Boot an instance from an ISO image</title>
            <para>OpenStack supports booting instances using ISO images. But before you
make such instances functional, use the <command>openstack server create</command>
command with the following parameters to boot an instance:</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack server create --image ubuntu-14.04.2-server-amd64.iso \
  --nic net-id = NETWORK_UUID \
  --flavor 2 INSTANCE_NAME
+--------------------------------------+--------------------------------------------+
| Field                                | Value                                      |
+--------------------------------------+--------------------------------------------+
| OS-DCF:diskConfig                    | MANUAL                                     |
| OS-EXT-AZ:availability_zone          | nova                                       |
| OS-EXT-SRV-ATTR:host                 | -                                          |
| OS-EXT-SRV-ATTR:hypervisor_hostname  | -                                          |
| OS-EXT-SRV-ATTR:instance_name        | instance-00000004                          |
| OS-EXT-STS:power_state               | 0                                          |
| OS-EXT-STS:task_state                | scheduling                                 |
| OS-EXT-STS:vm_state                  | building                                   |
| OS-SRV-USG:launched_at               | -                                          |
| OS-SRV-USG:terminated_at             | -                                          |
| accessIPv4                           |                                            |
| accessIPv6                           |                                            |
| adminPass                            | ZaiYeC8iucgU                               |
| config_drive                         |                                            |
| created                              | 2015-06-01T16:34:50Z                       |
| flavor                               | m1.small (2)                               |
| hostId                               |                                            |
| id                                   | 1e1797f3-1662-49ff-ae8c-a77e82ee1571       |
| image                                | ubuntu-14.04.2-server-amd64.iso            |
| key_name                             | -                                          |
| metadata                             | {}                                         |
| name                                 | INSTANCE_NAME                              |
| os-extended-volumes:volumes_attached | []                                         |
| progress                             | 0                                          |
| security_groups                      | default                                    |
| status                               | BUILD                                      |
| tenant_id                            | ccef9e62b1e645df98728fb2b3076f27           |
| updated                              | 2014-05-09T16:34:51Z                       |
| user_id                              | fef060ae7bfd4024b3edb97dff59017a           |
+--------------------------------------+--------------------------------------------+</screen>
            <para>In this command, <literal>ubuntu-14.04.2-server-amd64.iso</literal> is the ISO image,
and <literal>INSTANCE_NAME</literal> is the name of the new instance. <literal>NETWORK_UUID</literal>
is a valid network id in your system.</para>
            <para>Create a bootable volume for the instance to reside on after shutdown.</para>
            <procedure>
              <step>
                <para>Create the volume:</para>
                <screen language="console">$ openstack volume create \
  --size &lt;SIZE_IN_GB&gt; \
  --bootable VOLUME_NAME</screen>
              </step>
              <step>
                <para>Attach the instance to the volume:</para>
                <screen language="console">$ openstack server add volume
  INSTANCE_NAME \
  VOLUME_NAME \
  --device /dev/vda</screen>
              </step>
            </procedure>
            <note>
              <para>You need the Block Storage service to preserve the instance after
shutdown. The <literal>--block-device</literal> argument, used with the
legacy <command>nova-boot</command>, will not work with the OpenStack
<command>openstack server create</command> command. Instead, the
<command>openstack volume create</command> and
<command>openstack server add volume</command> commands create persistent storage.</para>
            </note>
            <para>After the instance is successfully launched, connect to the instance
using a remote console and follow the instructions to install the
system as using ISO images on regular computers. When the installation
is finished and system is rebooted, the instance asks you again to
install the operating system, which means your instance is not usable.
If you have problems with image creation, please check the
<link xlink:href="https://docs.openstack.org/image-guide/create-images-manually.html">Virtual Machine Image Guide</link>
for reference.</para>
          </sect4>
          <sect4>
            <title>Make the instances booted from ISO image functional</title>
            <para>Now complete the following steps to make your instances created
using ISO image actually functional.</para>
            <procedure>
              <step>
                <para>Delete the instance using the following command.</para>
                <screen language="console">$ openstack server delete INSTANCE_NAME</screen>
              </step>
              <step>
                <para>After you delete the instance, the system you have just installed
using your ISO image remains, because the parameter
<literal>shutdown=preserve</literal> was set, so run the following command.</para>
                <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack volume list
+--------------------------+-------------------------+-----------+------+-------------+
| ID                       | Display Name            | Status    | Size | Attached to |
+--------------------------+-------------------------+-----------+------+-------------+
| 8edd7c97-1276-47a5-9563- |dc01d873-d0f1-40b6-bfcc- | available |   10 |             |
| 1025f4264e4f             | 26a8d955a1d9-blank-vol  |           |      |             |
+--------------------------+-------------------------+-----------+------+-------------+</screen>
                <para>You get a list with all the volumes in your system. In this list,
you can find the volume that is attached to your ISO created
instance, with the false bootable property.</para>
              </step>
              <step>
                <para>Upload the volume to glance.</para>
                <screen language="console">$ openstack image create --volume SOURCE_VOLUME IMAGE_NAME
$ openstack image list
+-------------------+------------+--------+
| ID                | Name       | Status |
+-------------------+------------+--------+
| 74303284-f802-... | IMAGE_NAME | active |
+-------------------+------------+--------+</screen>
                <para>The <literal>VOLUME_UUID</literal> is the uuid of the volume that is attached to
your ISO created instance, and the <literal>IMAGE_NAME</literal> is the name that
you give to your new image.</para>
              </step>
              <step>
                <para>After the image is successfully uploaded, you can use the new
image to boot instances.</para>
                <para>The instances launched using this image contain the system that
you have just installed using the ISO image.</para>
              </step>
            </procedure>
          </sect4>
        </sect3>
      </sect2>
    </sect1>
    <sect1>
      <title>Manage instances and hosts</title>
      <para>Instances are virtual machines that run inside the cloud on physical
compute nodes. The Compute service manages instances. A host is the node
on which a group of instances resides.</para>
      <para>This section describes how to perform the different tasks involved in
instance management, such as adding floating IP addresses, stopping and
starting instances, and terminating instances. This section also
discusses node management tasks.</para>
      <sect2>
        <title>Manage IP addresses</title>
        <para>Each instance has a private, fixed IP address and can also have a
public, or floating IP address. Private IP addresses are used for
communication between instances, and public addresses are used for
communication with networks outside the cloud, including the Internet.</para>
        <para>When you launch an instance, it is automatically assigned a private IP
address that stays the same until you explicitly terminate the instance.
Rebooting an instance has no effect on the private IP address.</para>
        <para>A pool of floating IP addresses, configured by the cloud administrator,
is available in OpenStack Compute. The project quota defines the maximum
number of floating IP addresses that you can allocate to the project.
After you allocate a floating IP address to a project, you can:</para>
        <itemizedlist>
          <listitem>
            <para>Associate the floating IP address with an instance of the project. Only one
floating IP address can be allocated to an instance at any given time.</para>
          </listitem>
          <listitem>
            <para>Disassociate a floating IP address from an instance in the project.</para>
          </listitem>
          <listitem>
            <para>Delete a floating IP from the project which automatically deletes that IP's
associations.</para>
          </listitem>
        </itemizedlist>
        <para>Use the <command>openstack</command> commands to manage floating IP addresses.</para>
        <sect3>
          <title>List floating IP address information</title>
          <para>To list all pools that provide floating IP addresses, run:</para>
          <screen language="console">$ openstack floating ip pool list
+--------+
| name   |
+--------+
| public |
| test   |
+--------+</screen>
          <note>
            <para>If this list is empty, the cloud administrator must configure a pool
of floating IP addresses.</para>
          </note>
          <para>To list all floating IP addresses that are allocated to the current project,
run:</para>
          <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack floating ip list
+--------------------------------------+---------------------+------------------+------+
| ID                                   | Floating IP Address | Fixed IP Address | Port |
+--------------------------------------+---------------------+------------------+------+
| 760963b2-779c-4a49-a50d-f073c1ca5b9e | 172.24.4.228        | None             | None |
| 89532684-13e1-4af3-bd79-f434c9920cc3 | 172.24.4.235        | None             | None |
| ea3ebc6d-a146-47cd-aaa8-35f06e1e8c3d | 172.24.4.229        | None             | None |
+--------------------------------------+---------------------+------------------+------+</screen>
          <para>For each floating IP address that is allocated to the current project,
the command outputs the floating IP address, the ID for the instance
to which the floating IP address is assigned, the associated fixed IP
address, and the pool from which the floating IP address was
allocated.</para>
        </sect3>
        <sect3>
          <title>Associate floating IP addresses</title>
          <para>You can assign a floating IP address to a project and to an instance.</para>
          <procedure>
            <step>
              <para>Run the following command to allocate a floating IP address to the
current project. By default, the floating IP address is allocated from
the public pool. The command outputs the allocated IP address:</para>
              <screen language="console">$ openstack floating ip create public
+---------------------+--------------------------------------+
| Field               | Value                                |
+---------------------+--------------------------------------+
| created_at          | 2016-11-30T15:02:05Z                 |
| description         |                                      |
| fixed_ip_address    | None                                 |
| floating_ip_address | 172.24.4.236                         |
| floating_network_id | 0bf90de6-fc0f-4dba-b80d-96670dfb331a |
| headers             |                                      |
| id                  | c70ad74b-2f64-4e60-965e-f24fc12b3194 |
| port_id             | None                                 |
| project_id          | 5669caad86a04256994cdf755df4d3c1     |
| project_id          | 5669caad86a04256994cdf755df4d3c1     |
| revision_number     | 1                                    |
| router_id           | None                                 |
| status              | DOWN                                 |
| updated_at          | 2016-11-30T15:02:05Z                 |
+---------------------+--------------------------------------+</screen>
            </step>
            <step>
              <para>List all project instances with which a floating IP address could be
associated.</para>
              <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack server list
+---------------------+------+---------+------------+-------------+------------------+------------+
| ID                  | Name | Status  | Task State | Power State | Networks         | Image Name |
+---------------------+------+---------+------------+-------------+------------------+------------+
| d5c854f9-d3e5-4f... | VM1  | ACTIVE  | -          | Running     | private=10.0.0.3 | cirros     |
| 42290b01-0968-43... | VM2  | SHUTOFF | -          | Shutdown    | private=10.0.0.4 | centos     |
+---------------------+------+---------+------------+-------------+------------------+------------+</screen>
            </step>
            <step>
              <para>Associate an IP address with an instance in the project, as follows:</para>
              <screen language="console">$ openstack server add floating ip INSTANCE_NAME_OR_ID FLOATING_IP_ADDRESS</screen>
              <para>For example:</para>
              <screen language="console">$ openstack server add floating ip VM1 172.24.4.225</screen>
              <para>The instance is now associated with two IP addresses:</para>
              <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack server list
+------------------+------+--------+------------+-------------+-------------------------------+------------+
| ID               | Name | Status | Task State | Power State | Networks                      | Image Name |
+------------------+------+--------+------------+-------------+-------------------------------+------------+
| d5c854f9-d3e5... | VM1  | ACTIVE | -          | Running     | private=10.0.0.3, 172.24.4.225| cirros     |
| 42290b01-0968... | VM2  | SHUTOFF| -          | Shutdown    | private=10.0.0.4              | centos     |
+------------------+------+--------+------------+-------------+-------------------------------+------------+</screen>
              <para>After you associate the IP address and configure security group rules
for the instance, the instance is publicly available at the floating IP
address.</para>
              <note>
                <para>The <command>openstack server</command> command does not allow users to associate a
floating IP address with a specific fixed IP address using the optional
<literal>--fixed-address</literal> parameter, which legacy commands required as an
argument.</para>
              </note>
            </step>
          </procedure>
        </sect3>
        <sect3>
          <title>Disassociate floating IP addresses</title>
          <para>To disassociate a floating IP address from an instance:</para>
          <screen language="console">$ openstack server remove floating ip INSTANCE_NAME_OR_ID FLOATING_IP_ADDRESS</screen>
          <para>To remove the floating IP address from a project:</para>
          <screen language="console">$ openstack floating ip delete FLOATING_IP_ADDRESS</screen>
          <para>The IP address is returned to the pool of IP addresses that is available
for all projects. If the IP address is still associated with a running
instance, it is automatically disassociated from that instance.</para>
        </sect3>
      </sect2>
      <sect2>
        <title>Change the size of your server</title>
        <para>Change the size of a server by changing its flavor.</para>
        <procedure>
          <step>
            <para>Show information about your server, including its size, which is shown
as the value of the flavor property:</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack server show myCirrosServer
+--------------------------------------+----------------------------------------------------------+
| Field                                | Value                                                    |
+--------------------------------------+----------------------------------------------------------+
| OS-DCF:diskConfig                    | AUTO                                                     |
| OS-EXT-AZ:availability_zone          | nova                                                     |
| OS-EXT-SRV-ATTR:host                 | node-7.domain.tld                                        |
| OS-EXT-SRV-ATTR:hypervisor_hostname  | node-7.domain.tld                                        |
| OS-EXT-SRV-ATTR:instance_name        | instance-000000f3                                        |
| OS-EXT-STS:power_state               | 1                                                        |
| OS-EXT-STS:task_state                | None                                                     |
| OS-EXT-STS:vm_state                  | active                                                   |
| OS-SRV-USG:launched_at               | 2016-10-26T01:13:15.000000                               |
| OS-SRV-USG:terminated_at             | None                                                     |
| accessIPv4                           |                                                          |
| accessIPv6                           |                                                          |
| addresses                            | admin_internal_net=192.168.111.139                       |
| config_drive                         | True                                                     |
| created                              | 2016-10-26T01:12:38Z                                     |
| flavor                               | m1.small (2)                                             |
| hostId                               | d815539ce1a8fad3d597c3438c13f1229d3a2ed66d1a75447845a2f3 |
| id                                   | 67bc9a9a-5928-47c4-852c-3631fef2a7e8                     |
| image                                | cirros-test (dc5ec4b8-5851-4be8-98aa-df7a9b8f538f)       |
| key_name                             | None                                                     |
| name                                 | myCirrosServer                                           |
| os-extended-volumes:volumes_attached | []                                                       |
| progress                             | 0                                                        |
| project_id                           | c08367f25666480f9860c6a0122dfcc4                         |
| properties                           |                                                          |
| security_groups                      | [{u'name': u'default'}]                                  |
| status                               | ACTIVE                                                   |
| updated                              | 2016-10-26T01:13:00Z                                     |
| user_id                              | 0209430e30924bf9b5d8869990234e44                         |
+--------------------------------------+----------------------------------------------------------+</screen>
            <para>The size (flavor) of the server is <literal>m1.small (2)</literal>.</para>
          </step>
          <step>
            <para>List the available flavors with the following command:</para>
            <screen language="console">$ openstack flavor list
+-----+-----------+-------+------+-----------+-------+-----------+
| ID  | Name      |   RAM | Disk | Ephemeral | VCPUs | Is_Public |
+-----+-----------+-------+------+-----------+-------+-----------+
| 1   | m1.tiny   |   512 |    1 |         0 |     1 | True      |
| 2   | m1.small  |  2048 |   20 |         0 |     1 | True      |
| 3   | m1.medium |  4096 |   40 |         0 |     2 | True      |
| 4   | m1.large  |  8192 |   80 |         0 |     4 | True      |
| 5   | m1.xlarge | 16384 |  160 |         0 |     8 | True      |
+-----+-----------+-------+------+-----------+-------+-----------+</screen>
          </step>
          <step>
            <para>To resize the server, use the <command>openstack server resize</command> command and
add the server ID or name and the new flavor. For example:</para>
            <screen language="console">$ openstack server resize --flavor 4 myCirrosServer</screen>
            <note>
              <para>By default, the <command>openstack server resize</command> command gives the guest operating
system a chance to perform a controlled shutdown before the instance
is powered off and the instance is resized.
The shutdown behavior is configured by the
<literal>shutdown_timeout</literal> parameter that can be set in the
<literal>nova.conf</literal> file. Its value stands for the overall
period (in seconds) a guest operation system is allowed
to complete the shutdown. The default timeout is 60 seconds.
See <link xlink:href="https://docs.openstack.org/newton/config-reference/compute/config-options.html">Description of Compute configuration options</link>
for details.</para>
              <para>The timeout value can be overridden on a per image basis
by means of <literal>os_shutdown_timeout</literal> that is an image metadata
setting allowing different types of operating systems to specify
how much time they need to shut down cleanly.</para>
            </note>
          </step>
          <step>
            <para>Show the status for your server.</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack server list
+----------------------+----------------+--------+-----------------------------------------+
| ID                   | Name           | Status | Networks                                |
+----------------------+----------------+--------+-----------------------------------------+
| 67bc9a9a-5928-47c... | myCirrosServer | RESIZE | admin_internal_net=192.168.111.139      |
+----------------------+----------------+--------+-----------------------------------------+</screen>
            <para>When the resize completes, the status becomes VERIFY_RESIZE.</para>
          </step>
          <step>
            <para>Confirm the resize,for example:</para>
            <screen language="console">$ openstack server resize --confirm 67bc9a9a-5928-47c4-852c-3631fef2a7e8</screen>
            <para>The server status becomes ACTIVE.</para>
          </step>
          <step>
            <para>If the resize fails or does not work as expected, you can revert the
resize. For example:</para>
            <screen language="console">$ openstack server resize --revert 67bc9a9a-5928-47c4-852c-3631fef2a7e8</screen>
            <para>The server status becomes ACTIVE.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Stop and start an instance</title>
        <para>Use one of the following methods to stop and start an instance.</para>
        <sect3>
          <title>Pause and unpause an instance</title>
          <para>To pause an instance, run the following command:</para>
          <screen language="console">$ openstack server pause INSTANCE_NAME</screen>
          <para>This command stores the state of the VM in RAM. A paused instance
continues to run in a frozen state.</para>
          <para>To unpause an instance, run the following command:</para>
          <screen language="console">$ openstack server unpause INSTANCE_NAME</screen>
        </sect3>
        <sect3>
          <title>Suspend and resume an instance</title>
          <para>To initiate a hypervisor-level suspend operation, run the following
command:</para>
          <screen language="console">$ openstack server suspend INSTANCE_NAME</screen>
          <para>To resume a suspended instance, run the following command:</para>
          <screen language="console">$ openstack server resume INSTANCE_NAME</screen>
        </sect3>
        <sect3>
          <title>Shelve and unshelve an instance</title>
          <para>Shelving is useful if you have an instance that you are not using, but
would like retain in your list of servers. For example, you can stop an
instance at the end of a work week, and resume work again at the start
of the next week. All associated data and resources are kept; however,
anything still in memory is not retained. If a shelved instance is no
longer needed, it can also be entirely removed.</para>
          <para>You can run the following shelving tasks:</para>
          <itemizedlist>
            <listitem>
              <para>Shelve an instance - Shuts down the instance, and stores it together
with associated data and resources (a snapshot is taken if not volume
backed). Anything in memory is lost.</para>
            </listitem>
          </itemizedlist>
          <screen language="console">$ openstack server shelve SERVERNAME</screen>
          <note>
            <para>By default, the <command>openstack server shelve</command> command gives the guest
operating system a chance to perform a controlled shutdown before the
instance is powered off. The shutdown behavior is configured by the
<literal>shutdown_timeout</literal> parameter that can be set in the
<literal>nova.conf</literal> file. Its value stands for the overall
period (in seconds) a guest operation system is allowed
to complete the shutdown. The default timeout is 60 seconds.
See <link xlink:href="https://docs.openstack.org/newton/config-reference/compute/config-options.html">Description of Compute configuration options</link>
for details.</para>
            <para>The timeout value can be overridden on a per image basis
by means of <literal>os_shutdown_timeout</literal> that is an image metadata
setting allowing different types of operating systems to specify
how much time they need to shut down cleanly.</para>
          </note>
          <itemizedlist>
            <listitem>
              <para>Unshelve an instance - Restores the instance.</para>
            </listitem>
          </itemizedlist>
          <screen language="console">$ openstack server unshelve SERVERNAME</screen>
          <itemizedlist>
            <listitem>
              <para>Remove a shelved instance - Removes the instance from the server;
data and resource associations are deleted. If an instance is no longer
needed, you can move the instance off the hypervisor in order to minimize
resource usage.</para>
            </listitem>
          </itemizedlist>
          <screen language="console">$ nova shelve-offload SERVERNAME</screen>
        </sect3>
      </sect2>
      <sect2>
        <title>Search for an instance using IP address</title>
        <para>You can search for an instance using the IP address parameter, <literal>--ip</literal>,
with the <command>openstack server list</command> command.</para>
        <screen language="console">$ openstack server list --ip IP_ADDRESS</screen>
        <para>The following example shows the results of a search on <literal>10.0.0.4</literal>.</para>
        <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack server list --ip 10.0.0.4
+------------------+----------------------+--------+------------+-------------+------------------+------------+
| ID               | Name                 | Status | Task State | Power State | Networks         | Image Name |
+------------------+----------------------+--------+------------+-------------+------------------+------------+
| 8a99547e-7385... | myInstanceFromVolume | ACTIVE | None       | Running     | private=10.0.0.4 | cirros     |
+------------------+----------------------+--------+------------+-------------+------------------+------------+</screen>
      </sect2>
      <sect2>
        <title>Reboot an instance</title>
        <para>You can soft or hard reboot a running instance. A soft reboot attempts a
graceful shut down and restart of the instance. A hard reboot power
cycles the instance.</para>
        <para>By default, when you reboot an instance, it is a soft reboot.</para>
        <screen language="console">$ openstack server reboot SERVER</screen>
        <para>To perform a hard reboot, pass the <literal>--hard</literal> parameter, as follows:</para>
        <screen language="console">$ openstack server reboot --hard SERVER</screen>
        <para>It is also possible to reboot a running instance into rescue mode. For example,
this operation may be required, if a filesystem of an instance becomes
corrupted with prolonged use.</para>
        <note>
          <para>Pause, suspend, and stop operations are not allowed when an instance
is running in rescue mode, as triggering these actions causes the
loss of the original instance state, and makes it impossible to
unrescue the instance.</para>
        </note>
        <para>Rescue mode provides a mechanism for access, even if an image renders
the instance inaccessible. By default, it starts an instance from the
initial image attaching the current boot disk as a secondary one.</para>
        <para>To perform an instance reboot into rescue mode, run the following
command:</para>
        <screen language="console">$ openstack server rescue SERVER</screen>
        <note>
          <para>On running the <command>nova rescue</command> command,
an instance performs a soft shutdown first. This means that
the guest operating system has a chance to perform
a controlled shutdown before the instance is powered off.
The shutdown behavior is configured by the <literal>shutdown_timeout</literal>
parameter that can be set in the <literal>nova.conf</literal> file.
Its value stands for the overall period (in seconds)
a guest operation system is allowed to complete the shutdown.
The default timeout is 60 seconds. See <link xlink:href="https://docs.openstack.org/newton/config-reference/compute/config-options.html">Description of
Compute configuration options</link>
for details.</para>
          <para>The timeout value can be overridden on a per image basis
by means of <literal>os_shutdown_timeout</literal> that is an image metadata
setting allowing different types of operating systems to specify
how much time they need to shut down cleanly.</para>
        </note>
        <para>To restart the instance from the normal boot disk, run the following
command:</para>
        <screen language="console">$ openstack server unrescue SERVER</screen>
        <para>If you want to rescue an instance with a specific image, rather than the
default one, use the <literal>--rescue_image_ref</literal> parameter:</para>
        <screen language="console">$ nova rescue --rescue_image_ref IMAGE_ID SERVER</screen>
      </sect2>
      <sect2>
        <title>Delete an instance</title>
        <para>When you no longer need an instance, you can delete it.</para>
        <procedure>
          <step>
            <para>List all instances:</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack server list
+-------------+----------------------+--------+------------+-------------+------------------+------------+
| ID          | Name                 | Status | Task State | Power State | Networks         | Image Name |
+-------------+----------------------+--------+------------+-------------+------------------+------------+
| 84c6e57d... | myCirrosServer       | ACTIVE | None       | Running     | private=10.0.0.3 | cirros     |
| 8a99547e... | myInstanceFromVolume | ACTIVE | None       | Running     | private=10.0.0.4 | ubuntu     |
| d7efd3e4... | newServer            | ERROR  | None       | NOSTATE     |                  | centos     |
+-------------+----------------------+--------+------------+-------------+------------------+------------+</screen>
          </step>
          <step>
            <para>Run the <command>openstack server delete</command> command to delete the instance.
The following example shows deletion of the <literal>newServer</literal> instance, which
is in <literal>ERROR</literal> state:</para>
            <screen language="console">$ openstack server delete newServer</screen>
            <para>The command does not notify that your server was deleted.</para>
          </step>
          <step>
            <para>To verify that the server was deleted, run the
<command>openstack server list</command> command:</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack server list
+-------------+----------------------+--------+------------+-------------+------------------+------------+
| ID          | Name                 | Status | Task State | Power State | Networks         | Image Name |
+-------------+----------------------+--------+------------+-------------+------------------+------------+
| 84c6e57d... | myCirrosServer       | ACTIVE | None       | Running     | private=10.0.0.3 | cirros     |
| 8a99547e... | myInstanceFromVolume | ACTIVE | None       | Running     | private=10.0.0.4 | ubuntu     |
+-------------+----------------------+--------+------------+-------------+------------------+------------+</screen>
            <para>The deleted instance does not appear in the list.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Access an instance through a console</title>
        <para>VNC or SPICE is used to view the console output of an instance, regardless of
whether or not the console log has output. This allows relaying keyboard and
mouse activity to and from an instance.</para>
        <para>There are three remote console access methods commonly used with
OpenStack:</para>
        <variablelist>
          <varlistentry>
            <term>novnc</term>
            <listitem>
              <para>An in-browser VNC client implemented using HTML5 Canvas and
WebSockets</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>spice</term>
            <listitem>
              <para>A complete in-browser client solution for interaction with
virtualized instances</para>
            </listitem>
          </varlistentry>
         </variablelist>
        <para>Example:</para>
        <para>To access an instance through a remote console, run the following
command:</para>
        <screen language="console">$ openstack console url show INSTANCE_NAME --novnc</screen>
        <para>The command returns a URL from which you can access your instance:</para>
        <screen language="console"><?dbsuse-fo font-size="8pt"?>+--------+------------------------------------------------------------------------------+
| Type   | Url                                                                          |
+--------+------------------------------------------------------------------------------+
| nopvnc | http://192.168.5.96:6081/console?token=c83ae3a3-15c4-4890-8d45-aefb494a8d6c  |
+--------+------------------------------------------------------------------------------+</screen>
        
        <para>When using SPICE to view the console of an instance, a browser plugin
can be used directly on the instance page, or the
<command>openstack console url show</command> command can be used with it, as well, by
returning a token-authenticated address, as in the example above.</para>
        <para>For further information and comparisons (including security
considerations), see the <link xlink:href="https://docs.openstack.org/security-guide/compute.html">Security
Guide</link>.</para>
      </sect2>
      <sect2>
        <title>Manage bare-metal nodes</title>
        <para>The bare-metal driver for OpenStack Compute manages provisioning of
physical hardware by using common cloud APIs and tools such as
Orchestration (Heat). The use case for this driver is for single project
clouds such as a high-performance computing cluster, or for deploying
OpenStack itself.</para>
        <para>If you use the bare-metal driver, you must create a network interface
and add it to a bare-metal node. Then, you can launch an instance from a
bare-metal image.</para>
        <para>You can list and delete bare-metal nodes. When you delete a node, any
associated network interfaces are removed. You can list and remove
network interfaces that are associated with a bare-metal node.</para>
        <sect3>
          <title>Commands</title>
          <para>The following commands can be used to manage bare-metal nodes.</para>
          <variablelist>
            <varlistentry>
              <term>
                <literal>baremetal-interface-add</literal>
              </term>
              <listitem>
                <para>Adds a network interface to a bare-metal node.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>baremetal-interface-list</literal>
              </term>
              <listitem>
                <para>Lists network interfaces associated with a bare-metal node.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>baremetal-interface-remove</literal>
              </term>
              <listitem>
                <para>Removes a network interface from a bare-metal node.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>baremetal-node-create</literal>
              </term>
              <listitem>
                <para>Creates a bare-metal node.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>baremetal-node-delete</literal>
              </term>
              <listitem>
                <para>Removes a bare-metal node and any associated interfaces.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>baremetal-node-list</literal>
              </term>
              <listitem>
                <para>Lists available bare-metal nodes.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>baremetal-node-show</literal>
              </term>
              <listitem>
                <para>Shows information about a bare-metal node.</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </sect3>
        <sect3>
          <title>Create a bare-metal node</title>
          <para>When you create a bare-metal node, your PM address, user name, and
password should match the information in your hardware's BIOS/IPMI
configuration.</para>
          <screen language="console">$ nova baremetal-node-create --pm_address PM_ADDRESS --pm_user PM_USERNAME \
  --pm_password PM_PASSWORD $(hostname -f) 1 512 10 aa:bb:cc:dd:ee:ff</screen>
          <para>The following example shows the command and results from creating a node
with the PM address <literal>1.2.3.4</literal>, the PM user name ipmi, and password
<literal>ipmi</literal>.</para>
          <screen language="console">$ nova baremetal-node-create --pm_address 1.2.3.4 --pm_user ipmi \
  --pm_password ipmi $(hostname -f) 1 512 10 aa:bb:cc:dd:ee:ff
+------------------+-------------------+
| Property         | Value             |
+------------------+-------------------+
| instance_uuid    | None              |
| pm_address       | 1.2.3.4           |
| interfaces       | []                |
| prov_vlan_id     | None              |
| cpus             | 1                 |
| memory_mb        | 512               |
| prov_mac_address | aa:bb:cc:dd:ee:ff |
| service_host     | ubuntu            |
| local_gb         | 10                |
| id               | 1                 |
| pm_user          | ipmi              |
| terminal_port    | None              |
+------------------+-------------------+</screen>
        </sect3>
        <sect3>
          <title>Add a network interface to the node</title>
          <para>For each NIC on the node, you must create an interface, specifying the
interface's MAC address.</para>
          <screen language="console">$ nova baremetal-interface-add 1 aa:bb:cc:dd:ee:ff
+-------------+-------------------+
| Property    | Value             |
+-------------+-------------------+
| datapath_id | 0                 |
| id          | 1                 |
| port_no     | 0                 |
| address     | aa:bb:cc:dd:ee:ff |
+-------------+-------------------+</screen>
        </sect3>
        <sect3>
          <title>Launch an instance from a bare-metal image</title>
          <para>A bare-metal instance is an instance created directly on a physical
machine, without any virtualization layer running underneath it. Nova
retains power control via IPMI. In some situations, Nova may retain
network control via Neutron and OpenFlow.</para>
          <screen language="console"> $ openstack server create --image my-baremetal-image --flavor \
   my-baremetal-flavor test
 +-----------------------------+--------------------------------------+
 | Property                    | Value                                |
 +-----------------------------+--------------------------------------+
 | status                      | BUILD                                |
 | id                          | cc302a8f-cd81-484b-89a8-b75eb3911b1b |
 +-----------------------------+--------------------------------------+

... wait for instance to become active ...</screen>
          <note>
            <para>Set the <literal>--availability-zone</literal> parameter to specify which zone or
node to use to start the server. Separate the zone from the host
name with a comma. For example:</para>
            <screen language="console">$ openstack server create --availability-zone zone:HOST,NODE</screen>
            <para><literal>host</literal> is optional for the <literal>--availability-zone</literal> parameter. You
can simply specify <literal>zone:,node</literal>, still including the comma.</para>
          </note>
        </sect3>
        <sect3>
          <title>List bare-metal nodes and interfaces</title>
          <para>Use the <command>nova baremetal-node-list</command> command to view all bare-metal
nodes and interfaces. When a node is in use, its status includes the
UUID of the instance that runs on it:</para>
          <screen language="console"><?dbsuse-fo font-size="8pt"?>$ nova baremetal-node-list
+----+--------+------+-----------+---------+-------------------+------+------------+-------------+-------------+---------------+
| ID | Host   | CPUs | Memory_MB | Disk_GB | MAC Address       | VLAN | PM Address | PM Username | PM Password | Terminal Port |
+----+--------+------+-----------+---------+-------------------+------+------------+-------------+-------------+---------------+
| 1  | ubuntu | 1    | 512       | 10      | aa:bb:cc:dd:ee:ff | None | 1.2.3.4    | ipmi        |             | None          |
+----+--------+------+-----------+---------+-------------------+------+------------+-------------+-------------+---------------+</screen>
        </sect3>
        <sect3>
          <title>Show details for a bare-metal node</title>
          <para>Use the <command>nova baremetal-node-show</command> command to view the details for a
bare-metal node:</para>
          <screen language="console">$ nova baremetal-node-show 1
+------------------+--------------------------------------+
| Property         | Value                                |
+------------------+--------------------------------------+
| instance_uuid    | cc302a8f-cd81-484b-89a8-b75eb3911b1b |
| pm_address       | 1.2.3.4                              |
| interfaces       | [{u'datapath_id': u'0', u'id': 1,    |
|                  | u'port_no': 0,                       |
|                  | u'address': u'aa:bb:cc:dd:ee:ff'}]   |
| prov_vlan_id     | None                                 |
| cpus             | 1                                    |
| memory_mb        | 512                                  |
| prov_mac_address | aa:bb:cc:dd:ee:ff                    |
| service_host     | ubuntu                               |
| local_gb         | 10                                   |
| id               | 1                                    |
| pm_user          | ipmi                                 |
| terminal_port    | None                                 |
+------------------+--------------------------------------+</screen>
        </sect3>
      </sect2>
    </sect1>
    <sect1>
      <title>Provide user data to instances</title>
      <para>A user data file is a special key in the metadata service that holds a
file that cloud-aware applications in the guest instance can access. For
example, one application that uses <xref linkend="term-user-data"/> is the
<link xlink:href="https://help.ubuntu.com/community/CloudInit">cloud-init</link> system,
which is an open-source package from Ubuntu that is available on various
Linux distributions and which handles early initialization of a cloud
instance.</para>
      <para>You can place user data in a local file and pass it through the
<literal>--user-data &lt;user-data-file&gt;</literal> parameter at instance creation.</para>
      <screen language="console">$ openstack server create --image ubuntu-cloudimage --flavor 1 \
  --user-data mydata.file VM_INSTANCE</screen>
    </sect1>
    <sect1>
      <title>Use snapshots to migrate instances</title>
      <para>To use snapshots to migrate instances from OpenStack projects to clouds,
complete these steps.</para>
      <para>In the source project:</para>
      <procedure>
        <step>
          <para>
            <xref linkend="create-a-snapshot-of-the-instance"/>
          </para>
        </step>
        <step>
          <para>
            <xref linkend="download-the-snapshot-as-an-image"/>
          </para>
        </step>
      </procedure>
      <para>In the destination project:</para>
      <procedure>
        <step>
          <para>
            <xref linkend="import-the-snapshot-to-the-new-environment"/>
          </para>
        </step>
        <step>
          <para>
            <xref linkend="boot-a-new-instance-from-the-snapshot"/>
          </para>
        </step>
      </procedure>
      <note>
        <para>Some cloud providers allow only administrators to perform this task.</para>
      </note>
      <sect2 xml:id="create-a-snapshot-of-the-instance">
        <title>Create a snapshot of the instance</title>
        <procedure>
          <step>
            <para>Shut down the source VM before you take the snapshot to ensure that all
data is flushed to disk. If necessary, list the instances to view the
instance name:</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack server list
+--------------------------------------+------------+--------+------------------------------+------------+
| ID                                   | Name       | Status | Networks                     | Image Name |
+--------------------------------------+------------+--------+------------------------------+------------+
| c41f3074-c82a-4837-8673-fa7e9fea7e11 | myInstance | ACTIVE | private=10.0.0.3             | cirros     |
+--------------------------------------+------------+--------+------------------------------+------------+</screen>
          </step>
          <step>
            <para>Use the <command>openstack server stop</command> command to shut down the instance:</para>
            <screen language="console">$ openstack server stop myInstance</screen>
          </step>
          <step>
            <para>Use the <command>openstack server list</command> command to confirm that the
instance shows a <literal>SHUTOFF</literal> status:</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack server list
+--------------------------------------+------------+---------+------------------+------------+
| ID                                   | Name       | Status  | Networks         | Image Name |
+--------------------------------------+------------+---------+------------------+------------+
| c41f3074-c82a-4837-8673-fa7e9fea7e11 | myInstance | SHUTOFF | private=10.0.0.3 | cirros     |
+--------------------------------------+------------+---------+------------------+------------+</screen>
          </step>
          <step>
            <para>Use the <command>nova image-create</command> command to take a snapshot:</para>
            <screen language="console">$ nova image-create --poll myInstance myInstanceSnapshot
Instance snapshotting... 50% complete</screen>
          </step>
          <step>
            <para>Use the <command>openstack image list</command> command to check the status
until the status is <literal>active</literal>:</para>
            <screen language="console">$ openstack image list
+--------------------------------------+---------------------------------+--------+
| ID                                   | Name                            | Status |
+--------------------------------------+---------------------------------+--------+
| 657ebb01-6fae-47dc-986a-e49c4dd8c433 | cirros-0.3.2-x86_64-uec         | active |
| 72074c6d-bf52-4a56-a61c-02a17bf3819b | cirros-0.3.2-x86_64-uec-kernel  | active |
| 3c5e5f06-637b-413e-90f6-ca7ed015ec9e | cirros-0.3.2-x86_64-uec-ramdisk | active |
| f30b204e-1ce6-40e7-b8d9-b353d4d84e7d | myInstanceSnapshot              | active |
+--------------------------------------+---------------------------------+--------+</screen>
          </step>
        </procedure>
      </sect2>
      <sect2 xml:id="download-the-snapshot-as-an-image">
        <title>Download the snapshot as an image</title>
        <procedure>
          <step>
            <para>Get the image ID:</para>
            <screen language="console">$ openstack image list
+-------------------+-------------------+--------+
| ID                | Name              | Status |
+-------------------+-------------------+--------+
| f30b204e-1ce6...  | myInstanceSnapshot| active |
+-------------------+-------------------+--------+</screen>
          </step>
          <step>
            <para>Download the snapshot by using the image ID that was returned in the
previous step:</para>
            <screen language="console">$ glance image-download --file snapshot.raw f30b204e-1ce6-40e7-b8d9-b353d4d84e7d</screen>
            <note>
              <para>The <command>glance image-download</command> command requires the image ID and
cannot use the image name.
Check there is sufficient space on the destination file system for
the image file.</para>
            </note>
          </step>
          <step>
            <para>Make the image available to the new environment, either through HTTP or
direct upload to a machine (<literal>scp</literal>).</para>
          </step>
        </procedure>
      </sect2>
      <sect2 xml:id="import-the-snapshot-to-the-new-environment">
        <title>Import the snapshot to the new environment</title>
        <para>In the new project or cloud environment, import the snapshot:</para>
        <screen language="console">$ glance --os-image-api-version 1 image-create \
  --container-format bare --disk-format qcow2 --copy-from IMAGE_URL</screen>
      </sect2>
      <sect2 xml:id="boot-a-new-instance-from-the-snapshot">
        <title>Boot a new instance from the snapshot</title>
        <para>In the new project or cloud environment, use the snapshot to create the
new instance:</para>
        <screen language="console">$ openstack server create --flavor m1.tiny --image myInstanceSnapshot myNewInstance</screen>
      </sect2>
    </sect1>
    <sect1>
      <title>Store metadata on a configuration drive</title>
      <para>You can configure OpenStack to write metadata to a special configuration drive
that attaches to the instance when it boots. The instance can mount this drive
and read files from it to get information that is normally available through
the <link xlink:href="https://docs.openstack.org/admin-guide/compute-networking-nova.html#metadata-service">metadata service</link>.
This metadata is different from the user data.</para>
      <para>One use case for using the configuration drive is to pass a networking
configuration when you do not use DHCP to assign IP addresses to
instances. For example, you might pass the IP address configuration for
the instance through the configuration drive, which the instance can
mount and access before you configure the network settings for the
instance.</para>
      <para>Any modern guest operating system that is capable of mounting an ISO
9660 or VFAT file system can use the configuration drive.</para>
      <sect2>
        <title>Requirements and guidelines</title>
        <para>To use the configuration drive, you must follow the following
requirements for the compute host and image.</para>
        <para>
          <emphasis role="bold">Compute host requirements</emphasis>
        </para>
        <itemizedlist>
          <listitem>
            <para>The following hypervisors support the configuration drive: libvirt,
XenServer, Hyper-V, and VMware.</para>
            <para>Also, the Bare Metal service supports the configuration drive.</para>
          </listitem>
          <listitem>
            <para>To use configuration drive with libvirt, XenServer, or VMware, you
must first install the genisoimage package on each compute host.
Otherwise, instances do not boot properly.</para>
            <para>Use the <literal>mkisofs_cmd</literal> flag to set the path where you install the
genisoimage program. If genisoimage is in same path as the
<literal>nova-compute</literal> service, you do not need to set this flag.</para>
          </listitem>
          <listitem>
            <para>To use configuration drive with Hyper-V, you must set the
<literal>mkisofs_cmd</literal> value to the full path to an <literal>mkisofs.exe</literal>
installation. Additionally, you must set the <literal>qemu_img_cmd</literal> value
in the <literal>hyperv</literal> configuration section to the full path to an
<command>qemu-img</command> command installation.</para>
          </listitem>
          <listitem>
            <para>To use configuration drive with the Bare Metal service,
you do not need to prepare anything because the Bare Metal
service treats the configuration drive properly.</para>
          </listitem>
        </itemizedlist>
        <para>
          <emphasis role="bold">Image requirements</emphasis>
        </para>
        <itemizedlist>
          <listitem>
            <para>An image built with a recent version of the cloud-init package can
automatically access metadata passed through the configuration drive.
The cloud-init package version 0.7.1 works with Ubuntu, Fedora
based images (such as Red Hat Enterprise Linux) and openSUSE based
images (such as SUSE Linux Enterprise Server).</para>
          </listitem>
          <listitem>
            <para>If an image does not have the cloud-init package installed, you must
customize the image to run a script that mounts the configuration
drive on boot, reads the data from the drive, and takes appropriate
action such as adding the public key to an account. You can read more
details about how data is organized on the configuration drive.</para>
          </listitem>
          <listitem>
            <para>If you use Xen with a configuration drive, use the
<literal>xenapi_disable_agent</literal> configuration parameter to disable the
agent.</para>
          </listitem>
        </itemizedlist>
        <para>
          <emphasis role="bold">Guidelines</emphasis>
        </para>
        <itemizedlist>
          <listitem>
            <para>Do not rely on the presence of the EC2 metadata in the configuration
drive, because this content might be removed in a future release. For
example, do not rely on files in the <literal>ec2</literal> directory.</para>
          </listitem>
          <listitem>
            <para>When you create images that access configuration drive data and
multiple directories are under the <literal>openstack</literal> directory, always
select the highest API version by date that your consumer supports.
For example, if your guest image supports the 2012-03-05, 2012-08-05,
and 2013-04-13 versions, try 2013-04-13 first and fall back to a
previous version if 2013-04-13 is not present.</para>
          </listitem>
        </itemizedlist>
      </sect2>
      <sect2>
        <title>Enable and access the configuration drive</title>
        <procedure>
          <step>
            <para>To enable the configuration drive, pass the <literal>--config-drive true</literal>
parameter to the <command>openstack server create</command> command.</para>
            <para>The following example enables the configuration drive and passes user
data, two files, and two key/value metadata pairs, all of which are
accessible from the configuration drive:</para>
            <screen language="console">$ openstack server create --config-drive true --image my-image-name \
  --flavor 1 --key-name mykey --user-data ./my-user-data.txt \
  --file /etc/network/interfaces=/home/myuser/instance-interfaces \
  --file known_hosts=/home/myuser/.ssh/known_hosts \
  --property role=webservers --property essential=false MYINSTANCE</screen>
            <para>You can also configure the Compute service to always create a
configuration drive by setting the following option in the
<literal>/etc/nova/nova.conf</literal> file:</para>
            <screen language="console">force_config_drive = true</screen>
            <note>
              <para>If a user passes the <literal>--config-drive true</literal> flag to the <command>nova
boot</command> command, an administrator cannot disable the configuration
drive.</para>
            </note>
          </step>
          <step>
            <para>If your guest operating system supports accessing disk by label, you
can mount the configuration drive as the
<literal>/dev/disk/by-label/configurationDriveVolumeLabel</literal> device. In the
following example, the configuration drive has the <literal>config-2</literal>
volume label:</para>
            <screen language="console"># mkdir -p /mnt/config
# mount /dev/disk/by-label/config-2 /mnt/config</screen>
          </step>
        </procedure>
        <note>
          <para>Ensure that you use at least version 0.3.1 of CirrOS for
configuration drive support.</para>
          <para>If your guest operating system does not use <literal>udev</literal>, the
<literal>/dev/disk/by-label</literal> directory is not present.</para>
          <para>You can use the <command>blkid</command> command to identify the block device that
corresponds to the configuration drive. For example, when you boot
the CirrOS image with the <literal>m1.tiny</literal> flavor, the device is
<literal>/dev/vdb</literal>:</para>
          <screen language="console"># blkid -t LABEL="config-2" -odevice</screen>
          <screen language="console">/dev/vdb</screen>
          <para>Once identified, you can mount the device:</para>
          <screen language="console"># mkdir -p /mnt/config
# mount /dev/vdb /mnt/config</screen>
        </note>
        <sect3>
          <title>Configuration drive contents</title>
          <para>In this example, the contents of the configuration drive are as follows:</para>
          <screen>ec2/2009-04-04/meta-data.json
ec2/2009-04-04/user-data
ec2/latest/meta-data.json
ec2/latest/user-data
openstack/2012-08-10/meta_data.json
openstack/2012-08-10/user_data
openstack/content
openstack/content/0000
openstack/content/0001
openstack/latest/meta_data.json
openstack/latest/user_data</screen>
          <para>The files that appear on the configuration drive depend on the arguments
that you pass to the <command>openstack server create</command> command.</para>
        </sect3>
        <sect3>
          <title>OpenStack metadata format</title>
          <para>The following example shows the contents of the
<literal>openstack/2012-08-10/meta_data.json</literal> and
<literal>openstack/latest/meta_data.json</literal> files. These files are identical.
The file contents are formatted for readability.</para>
          <screen language="json"><?dbsuse-fo font-size="8pt"?>{
    "availability_zone": "nova",
    "files": [
        {
            "content_path": "/content/0000",
            "path": "/etc/network/interfaces"
        },
        {
            "content_path": "/content/0001",
            "path": "known_hosts"
        }
    ],
    "hostname": "test.novalocal",
    "launch_index": 0,
    "name": "test",
    "meta": {
        "role": "webservers",
        "essential": "false"
    },
    "public_keys": {
        "mykey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQDBqUfVvCSez0/Wfpd8dLLgZXV9GtXQ7hnMN+Z0OWQUyebVEHey1CXuin0uY1cAJMhUq8j98SiW+cU0sU4J3x5l2+xi1bodDm1BtFWVeLIOQINpfV1n8fKjHB+ynPpe1F6tMDvrFGUlJs44t30BrujMXBe8Rq44cCk6wqyjATA3rQ== Generated by Nova\n"
    },
    "uuid": "83679162-1378-4288-a2d4-70e13ec132aa"
}</screen>
          <para>Note the effect of the
<literal>--file /etc/network/interfaces=/home/myuser/instance-interfaces</literal>
argument that was passed to the <command>openstack server create</command> command.
The contents of this file are contained in the <literal>openstack/content/0000</literal>
file on the configuration drive, and the path is specified as
<literal>/etc/network/interfaces</literal> in the <literal>meta_data.json</literal> file.</para>
        </sect3>
        <sect3>
          <title>EC2 metadata format</title>
          <para>The following example shows the contents of the
<literal>ec2/2009-04-04/meta-data.json</literal> and the <literal>ec2/latest/meta-data.json</literal>
files. These files are identical. The file contents are formatted to
improve readability.</para>
          <screen language="json"><?dbsuse-fo font-size="8pt"?>{
    "ami-id": "ami-00000001",
    "ami-launch-index": 0,
    "ami-manifest-path": "FIXME",
    "block-device-mapping": {
        "ami": "sda1",
        "ephemeral0": "sda2",
        "root": "/dev/sda1",
        "swap": "sda3"
    },
    "hostname": "test.novalocal",
    "instance-action": "none",
    "instance-id": "i-00000001",
    "instance-type": "m1.tiny",
    "kernel-id": "aki-00000002",
    "local-hostname": "test.novalocal",
    "local-ipv4": null,
    "placement": {
        "availability-zone": "nova"
    },
    "public-hostname": "test.novalocal",
    "public-ipv4": "",
    "public-keys": {
        "0": {
            "openssh-key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQDBqUfVvCSez0/Wfpd8dLLgZXV9GtXQ7hnMN+Z0OWQUyebVEHey1CXuin0uY1cAJMhUq8j98SiW+cU0sU4J3x5l2+xi1bodDm1BtFWVeLIOQINpfV1n8fKjHB+ynPpe1F6tMDvrFGUlJs44t30BrujMXBe8Rq44cCk6wqyjATA3rQ== Generated by Nova\n"
        }
    },
    "ramdisk-id": "ari-00000003",
    "reservation-id": "r-7lfps8wj",
    "security-groups": [
        "default"
    ]
}</screen>
        </sect3>
        <sect3>
          <title>User data</title>
          <para>The <literal>openstack/2012-08-10/user_data</literal>, <literal>openstack/latest/user_data</literal>,
<literal>ec2/2009-04-04/user-data</literal>, and <literal>ec2/latest/user-data</literal> file are
present only if the <literal>--user-data</literal> flag and the contents of the user
data file are passed to the <command>openstack server create</command> command.</para>
        </sect3>
        <sect3>
          <title>Configuration drive format</title>
          <para>The default format of the configuration drive as an ISO 9660 file
system. To explicitly specify the ISO 9660 format, add the following
line to the <literal>/etc/nova/nova.conf</literal> file:</para>
          <screen language="console">config_drive_format=iso9660</screen>
          <para>By default, you cannot attach the configuration drive image as a CD
drive instead of as a disk drive. To attach a CD drive, add the
following line to the <literal>/etc/nova/nova.conf</literal> file:</para>
          <screen language="console">config_drive_cdrom=true</screen>
          <para>For legacy reasons, you can configure the configuration drive to use
VFAT format instead of ISO 9660. It is unlikely that you would require
VFAT format because ISO 9660 is widely supported across operating
systems. However, to use the VFAT format, add the following line to the
<literal>/etc/nova/nova.conf</literal> file:</para>
          <screen language="console">config_drive_format=vfat</screen>
          <para>If you choose VFAT, the configuration drive is 64 MB.</para>
          <note>
            <para>In current version (Liberty) of OpenStack Compute, live migration with
<literal>config_drive</literal> on local disk is forbidden due to the bug in libvirt
of copying a read-only disk. However, if we use VFAT as the format of
<literal>config_drive</literal>, the function of live migration works well.</para>
          </note>
        </sect3>
      </sect2>
    </sect1>
    <sect1>
      <title>Create and manage networks</title>
      <para>Before you run commands, <link xlink:href="https://docs.openstack.org/user-guide/common/cli-set-environment-variables-using-openstack-rc.html">set environment variables using the OpenStack RC file</link>.</para>
      <sect2>
        <title>Create networks</title>
        <procedure>
          <step>
            <para>List the extensions of the system:</para>
            <screen language="console">$ openstack extension list -c Alias -c Name --network
+------------------------------------------+---------------------------+
| Name                                     | Alias                     |
+------------------------------------------+---------------------------+
| Default Subnetpools                      | default-subnetpools       |
| Network IP Availability                  | network-ip-availability   |
| Auto Allocated Topology Services         | auto-allocated-topology   |
| Neutron L3 Configurable external gateway | ext-gw-mode               |
| Address scope                            | address-scope             |
| Neutron Extra Route                      | extraroute                |
+------------------------------------------+---------------------------+</screen>
          </step>
          <step>
            <para>Create a network:</para>
            <screen language="console">$ openstack network create net1
Created a new network:
+---------------------------+--------------------------------------+
| Field                     | Value                                |
+---------------------------+--------------------------------------+
| admin_state_up            | UP                                   |
| availability_zone_hints   |                                      |
| availability_zones        |                                      |
| created_at                | 2016-12-21T08:32:54Z                 |
| description               |                                      |
| headers                   |                                      |
| id                        | 180620e3-9eae-4ba7-9739-c5847966e1f0 |
| ipv4_address_scope        | None                                 |
| ipv6_address_scope        | None                                 |
| mtu                       | 1450                                 |
| name                      | net1                                 |
| port_security_enabled     | True                                 |
| project_id                | c961a8f6d3654657885226378ade8220     |
| provider:network_type     | vxlan                                |
| provider:physical_network | None                                 |
| provider:segmentation_id  | 14                                   |
| revision_number           | 3                                    |
| router:external           | Internal                             |
| shared                    | False                                |
| status                    | ACTIVE                               |
| subnets                   |                                      |
| tags                      | []                                   |
| updated_at                | 2016-12-21T08:32:54Z                 |
+---------------------------+--------------------------------------+</screen>
            <note>
              <para>Some fields of the created network are invisible to non-admin users.</para>
            </note>
          </step>
          <step>
            <para>Create a network with specified provider network type.</para>
            <screen language="console">$ openstack network create net2 --provider-network-type vxlan
Created a new network:
+---------------------------+--------------------------------------+
| Field                     | Value                                |
+---------------------------+--------------------------------------+
| admin_state_up            | UP                                   |
| availability_zone_hints   |                                      |
| availability_zones        |                                      |
| created_at                | 2016-12-21T08:33:34Z                 |
| description               |                                      |
| headers                   |                                      |
| id                        | c0a563d5-ef7d-46b3-b30d-6b9d4138b6cf |
| ipv4_address_scope        | None                                 |
| ipv6_address_scope        | None                                 |
| mtu                       | 1450                                 |
| name                      | net2                                 |
| port_security_enabled     | True                                 |
| project_id                | c961a8f6d3654657885226378ade8220     |
| provider:network_type     | vxlan                                |
| provider:physical_network | None                                 |
| provider:segmentation_id  | 87                                   |
| revision_number           | 3                                    |
| router:external           | Internal                             |
| shared                    | False                                |
| status                    | ACTIVE                               |
| subnets                   |                                      |
| tags                      | []                                   |
| updated_at                | 2016-12-21T08:33:34Z                 |
+---------------------------+--------------------------------------+</screen>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Create subnets</title>
        <para>Create a subnet:</para>
        <screen language="console">$ openstack subnet create subnet1 --network net1
  --subnet-range 192.168.2.0/24
+-------------------+--------------------------------------+
| Field             | Value                                |
+-------------------+--------------------------------------+
| allocation_pools  | 192.168.2.2-192.168.2.254            |
| cidr              | 192.168.2.0/24                       |
| created_at        | 2016-12-22T18:47:52Z                 |
| description       |                                      |
| dns_nameservers   |                                      |
| enable_dhcp       | True                                 |
| gateway_ip        | 192.168.2.1                          |
| headers           |                                      |
| host_routes       |                                      |
| id                | a394689c-f547-4834-9778-3e0bb22130dc |
| ip_version        | 4                                    |
| ipv6_address_mode | None                                 |
| ipv6_ra_mode      | None                                 |
| name              | subnet1                              |
| network_id        | 9db55b7f-e803-4e1b-9bba-6262f60b96cb |
| project_id        | e17431afc0524e0690484889a04b7fa0     |
| revision_number   | 2                                    |
| service_types     |                                      |
| subnetpool_id     | None                                 |
| updated_at        | 2016-12-22T18:47:52Z                 |
+-------------------+--------------------------------------+</screen>
        <para>The <literal>subnet-create</literal> command has the following positional and optional
parameters:</para>
        <itemizedlist>
          <listitem>
            <para>The name or ID of the network to which the subnet belongs.</para>
            <para>In this example, <literal>net1</literal> is a positional argument that specifies the
network name.</para>
          </listitem>
          <listitem>
            <para>The CIDR of the subnet.</para>
            <para>In this example, <literal>192.168.2.0/24</literal> is a positional argument that
specifies the CIDR.</para>
          </listitem>
          <listitem>
            <para>The subnet name, which is optional.</para>
            <para>In this example, <literal>--name subnet1</literal> specifies the name of the
subnet.</para>
          </listitem>
        </itemizedlist>
        <para>For information and examples on more advanced use of neutron's
<literal>subnet</literal> subcommand, see the <link xlink:href="https://docs.openstack.org/admin-guide/networking-use.html#advanced-networking-operations">OpenStack Administrator
Guide</link>.</para>
      </sect2>
      <sect2>
        <title>Create routers</title>
        <procedure>
          <step>
            <para>Create a router:</para>
            <screen language="console">$ openstack router create router1
+-------------------------+--------------------------------------+
| Field                   | Value                                |
+-------------------------+--------------------------------------+
| admin_state_up          | UP                                   |
| availability_zone_hints |                                      |
| availability_zones      |                                      |
| created_at              | 2016-12-22T18:48:57Z                 |
| description             |                                      |
| distributed             | True                                 |
| external_gateway_info   | null                                 |
| flavor_id               | None                                 |
| ha                      | False                                |
| headers                 |                                      |
| id                      | e25a24ee-3458-45c7-b16e-edf49092aab7 |
| name                    | router1                              |
| project_id              | e17431afc0524e0690484889a04b7fa0     |
| revision_number         | 1                                    |
| routes                  |                                      |
| status                  | ACTIVE                               |
| updated_at              | 2016-12-22T18:48:57Z                 |
+-------------------------+--------------------------------------+</screen>
            <para>Take note of the unique router identifier returned, this will be
required in subsequent steps.</para>
          </step>
          <step>
            <para>Link the router to the external provider network:</para>
            <screen language="console">$ openstack router set ROUTER --external-gateway NETWORK</screen>
            <para>Replace ROUTER with the unique identifier of the router, replace NETWORK
with the unique identifier of the external provider network.</para>
          </step>
          <step>
            <para>Link the router to the subnet:</para>
            <screen language="console">$ openstack router add subnet ROUTER SUBNET</screen>
            <para>Replace ROUTER with the unique identifier of the router, replace SUBNET
with the unique identifier of the subnet.</para>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Create ports</title>
        <procedure>
          <step>
            <para>Create a port with specified IP address:</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack port create --network net1 --fixed-ip subnet=subnet1,ip-address=192.168.2.40 port1
+-----------------------+-----------------------------------------+
| Field                 | Value                                   |
+-----------------------+-----------------------------------------+
| admin_state_up        | UP                                      |
| allowed_address_pairs |                                         |
| binding_host_id       |                                         |
| binding_profile       |                                         |
| binding_vif_details   |                                         |
| binding_vif_type      | unbound                                 |
| binding_vnic_type     | normal                                  |
| created_at            | 2016-12-22T18:54:43Z                    |
| description           |                                         |
| device_id             |                                         |
| device_owner          |                                         |
| extra_dhcp_opts       |                                         |
| fixed_ips             | ip_address='192.168.2.40', subnet_id='a |
|                       | 394689c-f547-4834-9778-3e0bb22130dc'    |
| headers               |                                         |
| id                    | 031ddba8-3e3f-4c3c-ae26-7776905eb24f    |
| mac_address           | fa:16:3e:df:3d:c7                       |
| name                  | port1                                   |
| network_id            | 9db55b7f-e803-4e1b-9bba-6262f60b96cb    |
| port_security_enabled | True                                    |
| project_id            | e17431afc0524e0690484889a04b7fa0        |
| revision_number       | 5                                       |
| security_groups       | 84abb9eb-dc59-40c1-802c-4e173c345b6a    |
| status                | DOWN                                    |
| updated_at            | 2016-12-22T18:54:44Z                    |
+-----------------------+-----------------------------------------+</screen>
            <para>In the previous command, <literal>net1</literal> is the network name, which is a
positional argument. <literal>--fixed-ip subnet&lt;subnet&gt;,ip-address=192.168.2.40</literal> is
an option which specifies the port's fixed IP address we wanted.</para>
            <note>
              <para>When creating a port, you can specify any unallocated IP in the
subnet even if the address is not in a pre-defined pool of allocated
IP addresses (set by your cloud provider).</para>
            </note>
          </step>
          <step>
            <para>Create a port without specified IP address:</para>
            <screen language="console">$ openstack port create port2 --network net1
+-----------------------+-----------------------------------------+
| Field                 | Value                                   |
+-----------------------+-----------------------------------------+
| admin_state_up        | UP                                      |
| allowed_address_pairs |                                         |
| binding_host_id       |                                         |
| binding_profile       |                                         |
| binding_vif_details   |                                         |
| binding_vif_type      | unbound                                 |
| binding_vnic_type     | normal                                  |
| created_at            | 2016-12-22T18:56:06Z                    |
| description           |                                         |
| device_id             |                                         |
| device_owner          |                                         |
| extra_dhcp_opts       |                                         |
| fixed_ips             | ip_address='192.168.2.10', subnet_id='a |
|                       | 394689c-f547-4834-9778-3e0bb22130dc'    |
| headers               |                                         |
| id                    | eac47fcd-07ac-42dd-9993-5b36ac1f201b    |
| mac_address           | fa:16:3e:96:ae:6e                       |
| name                  | port2                                   |
| network_id            | 9db55b7f-e803-4e1b-9bba-6262f60b96cb    |
| port_security_enabled | True                                    |
| project_id            | e17431afc0524e0690484889a04b7fa0        |
| revision_number       | 5                                       |
| security_groups       | 84abb9eb-dc59-40c1-802c-4e173c345b6a    |
| status                | DOWN                                    |
| updated_at            | 2016-12-22T18:56:06Z                    |
+-----------------------+-----------------------------------------+</screen>
            <note>
              <para>Note that the system allocates one IP address if you do not specify
an IP address in the <command>openstack port create</command> command.</para>
            </note>
            <note>
              <para>You can specify a MAC address with <literal>--mac-address MAC_ADDRESS</literal>.
If you specify an invalid MAC address, including <literal>00:00:00:00:00:00</literal>
or <literal>ff:ff:ff:ff:ff:ff</literal>, you will get an error.</para>
            </note>
          </step>
          <step>
            <para>Query ports with specified fixed IP addresses:</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ neutron port-list --fixed-ips ip_address=192.168.2.2 \
  ip_address=192.168.2.40
+----------------+------+-------------------+-------------------------------------------------+
| id             | name | mac_address       | fixed_ips                                       |
+----------------+------+-------------------+-------------------------------------------------+
| baf13412-26... |      | fa:16:3e:f6:ec:c7 | {"subnet_id"... ..."ip_address": "192.168.2.2"} |
| f7a08fe4-e7... |      | fa:16:3e:97:e0:fc | {"subnet_id"... ..."ip_address": "192.168.2.40"}|
+----------------+------+-------------------+-------------------------------------------------+</screen>
          </step>
        </procedure>
      </sect2>
    </sect1>
    <sect1>
      <title>Manage objects and containers</title>
      <para>The OpenStack Object Storage service provides the <literal>swift</literal> client,
which is a command-line interface (CLI). Use this client to list
objects and containers, upload objects to containers, and download
or delete objects from containers. You can also gather statistics and
update metadata for accounts, containers, and objects.</para>
      <para>This client is based on the native swift client library, <literal>client.py</literal>,
which seamlessly re-authenticates if the current token expires during
processing, retries operations multiple times, and provides a processing
concurrency of 10.</para>
      <sect2>
        <title>Create and manage containers</title>
        <itemizedlist>
          <listitem>
            <para>To create a container, run the following command and replace
<literal>CONTAINER</literal> with the name of your container.</para>
            <screen language="console">$ swift post CONTAINER</screen>
          </listitem>
          <listitem>
            <para>To list all containers, run the following command:</para>
            <screen language="console">$ swift list</screen>
          </listitem>
          <listitem>
            <para>To check the status of containers, run the following command:</para>
            <screen language="console">$ swift stat</screen>
            <screen language="console">Account: AUTH_7b5970fbe7724bf9b74c245e77c03bcg
Containers: 2
Objects: 3
Bytes: 268826
Accept-Ranges: bytes
X-Timestamp: 1392683866.17952
Content-Type: text/plain; charset=utf-8</screen>
            <para>You can also use the <command>swift stat</command> command with the <literal>ACCOUNT</literal> or
<literal>CONTAINER</literal> names as parameters.</para>
            <screen language="console">$ swift stat CONTAINER</screen>
            <screen language="console">Account: AUTH_7b5970fbe7724bf9b74c245e77c03bcg
Container: storage1
Objects: 2
Bytes: 240221
Read ACL:
Write ACL:
Sync To:
Sync Key:
Accept-Ranges: bytes
X-Timestamp: 1392683866.20180
Content-Type: text/plain; charset=utf-8</screen>
          </listitem>
        </itemizedlist>
      </sect2>
      <sect2>
        <title>Manage access</title>
        <itemizedlist>
          <listitem>
            <para>Users have roles on accounts. For example, a user with the admin role
has full access to all containers and objects in an account. You can
set access control lists (ACLs) at the container level and support
lists for read and write access, which you set with the
<literal>X-Container-Read</literal> and <literal>X-Container-Write</literal> headers.</para>
            <para>To give a user read access, use the <command>swift post</command> command with the
<literal>-r</literal> parameter. To give a user write access, use the
<literal>-w</literal> parameter.</para>
          </listitem>
          <listitem>
            <para>The following are examples of <literal>read</literal> ACLs for containers:</para>
            <para>A request with any HTTP referer header can read container contents:</para>
            <screen language="console">$ swift post CONTAINER -r ".r:*"</screen>
            <para>A request with any HTTP referer header can read and list container
contents:</para>
            <screen language="console">$ swift post CONTAINER -r ".r:*,.rlistings"</screen>
            <para>A list of specific HTTP referer headers permitted to read container
contents:</para>
            <screen language="console">$ swift post CONTAINER -r \
  ".r:openstack.example.com,.r:swift.example.com,.r:storage.example.com"</screen>
            <para>A list of specific HTTP referer headers denied read access:</para>
            <screen language="console">$ swift post CONTAINER -r \
  ".r:*,.r:-openstack.example.com,.r:-swift.example.com,.r:-storage.example.com"</screen>
            <para>All users residing in project1 can read container contents:</para>
            <screen language="console">$ swift post CONTAINER -r "project1:*"</screen>
            <para>User1 from project1 can read container contents:</para>
            <screen language="console">$ swift post CONTAINER -r "project1:user1"</screen>
            <para>A list of specific users and projects permitted to read container contents:</para>
            <screen language="console">$ swift post CONTAINER -r \
  "project1:user1,project1:user2,project3:*,project4:user1"</screen>
          </listitem>
          <listitem>
            <para>The following are examples of <literal>write</literal> ACLs for containers:</para>
            <para>All users residing in project1 can write to the container:</para>
            <screen language="console">$ swift post CONTAINER -w "project1:*"</screen>
            <para>User1 from project1 can write to the container:</para>
            <screen language="console">$ swift post CONTAINER -w "project1:user1"</screen>
            <para>A list of specific users and projects permitted to write to the container:</para>
            <screen language="console">$ swift post CONTAINER -w \
  "project1:user1,project1:user2,project3:*,project4:user1"</screen>
          </listitem>
        </itemizedlist>
        <note>
          <para>To successfully write to a container, a user must have read privileges
(in addition to write) on the container. For all aforementioned
read/write ACL examples, one can replace the project/user name with
project/user UUID, i.e. <literal>&lt;project_uuid&gt;:&lt;user_uuid&gt;</literal>. If using multiple
keystone domains, UUID format is required.</para>
        </note>
      </sect2>
      <sect2>
        <title>Manage objects</title>
        <itemizedlist>
          <listitem>
            <para>To upload an object to a container, run the following command:</para>
            <screen language="console">$ swift upload CONTAINER OBJECT_FILENAME</screen>
            <para>To upload in chunks, for larger than 5GB files, run the following command:</para>
            <screen language="console">$ swift upload -S CHUNK_SIZE CONTAINER OBJECT_FILENAME</screen>
          </listitem>
          <listitem>
            <para>To check the status of the object, run the following command:</para>
            <screen language="console">$ swift stat CONTAINER OBJECT_FILENAME</screen>
            <screen language="console">Account: AUTH_7b5970fbe7724bf9b74c245e77c03bcg
Container: storage1
Object: images
Content Type: application/octet-stream
Content Length: 211616
Last Modified: Tue, 18 Feb 2014 00:40:36 GMT
ETag: 82169623d55158f70a0d720f238ec3ef
Meta Orig-Filename: images.jpg
Accept-Ranges: bytes
X-Timestamp: 1392684036.33306</screen>
          </listitem>
          <listitem>
            <para>To list the objects in a container, run the following command:</para>
            <screen language="console">$ swift list CONTAINER</screen>
          </listitem>
          <listitem>
            <para>To download an object from a container, run the following command:</para>
            <screen language="console">$ swift download CONTAINER OBJECT_FILENAME</screen>
          </listitem>
        </itemizedlist>
      </sect2>
      <sect2 xml:id="env-vars">
        <title>Environment variables required to run examples</title>
        <para>To run the cURL command examples for the Object Storage API requests,
set these environment variables:</para>
        <variablelist>
          <varlistentry>
            <term>publicURL</term>
            <listitem>
              <para>The public URL that is the HTTP endpoint from where you can access
Object Storage. It includes the Object Storage API version number
and your account name. For example,
<literal>https://23.253.72.207/v1/my_account</literal>.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>token</term>
            <listitem>
              <para>The authentication token for Object Storage.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <para>To obtain these values, run the <command>swift stat -v</command> command.</para>
        <para>As shown in this example, the public URL appears in the <literal>StorageURL</literal>
field, and the token appears in the <literal>Auth Token</literal> field:</para>
        <screen language="console">StorageURL: https://23.253.72.207/v1/my_account
Auth Token: {token}
Account: my_account
Containers: 2
Objects: 3
Bytes: 47
Meta Book: MobyDick
X-Timestamp: 1389453423.35964
X-Trans-Id: txee55498935404a2caad89-0052dd3b77
Content-Type: text/plain; charset=utf-8
Accept-Ranges: bytes</screen>
      </sect2>
      <sect2>
        <title>Object versioning</title>
        <para>You can store multiple versions of your content so that you can recover
from unintended overwrites. Object versioning is an easy way to
implement version control, which you can use with any type of content.</para>
        <note>
          <para>You cannot version a large-object manifest file, but the large-object
manifest file can point to versioned segments.</para>
        </note>
        <para>We strongly recommend that you put non-current objects in a different
container than the container where current object versions reside.</para>
        <sect3>
          <title>To enable and use object versioning</title>
          <procedure>
            <step>
              <para>To enable object versioning, ask your cloud provider to set the
<literal>allow_versions</literal> option to <literal>TRUE</literal> in the container configuration
file.</para>
            </step>
            <step>
              <para>Create an <literal>archive</literal> container to store older versions of objects:</para>
              <screen language="console"><?dbsuse-fo font-size="8pt"?>$ curl -i $publicURL/archive -X PUT -H "Content-Length: 0" -H "X-Auth-Token: $token"</screen>
              <screen language="console">HTTP/1.1 201 Created
Content-Length: 0
Content-Type: text/html; charset=UTF-8
X-Trans-Id: tx46f8c29050834d88b8d7e-0052e1859d
Date: Thu, 23 Jan 2014 21:11:57 GMT</screen>
            </step>
            <step>
              <para>Create a <literal>current</literal> container to store current versions of objects.</para>
              <para>Include the <literal>X-Versions-Location</literal> header. This header defines the
container that holds the non-current versions of your objects. You
must UTF-8-encode and then URL-encode the container name before you
include it in the <literal>X-Versions-Location</literal> header. This header enables
object versioning for all objects in the <literal>current</literal> container.
Changes to objects in the <literal>current</literal> container automatically create
non-current versions in the <literal>archive</literal> container.</para>
              <screen language="console">$ curl -i $publicURL/current -X PUT -H "Content-Length: 0" -H \
  ”X-Auth-Token: $token" -H "X-Versions-Location: archive"</screen>
              <screen language="console">HTTP/1.1 201 Created
Content-Length: 0
Content-Type: text/html; charset=UTF-8
X-Trans-Id: txb91810fb717347d09eec8-0052e18997
Date: Thu, 23 Jan 2014 21:28:55 GMT</screen>
            </step>
            <step>
              <para>Create the first version of an object in the <literal>current</literal> container:</para>
              <screen language="console">$ curl -i $publicURL/current/my_object --data-binary 1 -X PUT -H \
  ”Content-Length: 0" -H "X-Auth-Token: $token"</screen>
              <screen language="console">HTTP/1.1 201 Created
Last-Modified: Thu, 23 Jan 2014 21:31:22 GMT
Content-Length: 0
Etag: d41d8cd98f00b204e9800998ecf8427e
Content-Type: text/html; charset=UTF-8
X-Trans-Id: tx5992d536a4bd4fec973aa-0052e18a2a
Date: Thu, 23 Jan 2014 21:31:22 GMT</screen>
              <para>Nothing is written to the non-current version container when you
initially <literal>PUT</literal> an object in the <literal>current</literal> container. However,
subsequent <literal>PUT</literal> requests that edit an object trigger the creation
of a version of that object in the <literal>archive</literal> container.</para>
              <para>These non-current versions are named as follows:</para>
              <screen language="console">&lt;length&gt;&lt;object_name&gt;&lt;timestamp&gt;</screen>
              <para>Where <literal>length</literal> is the 3-character, zero-padded hexadecimal
character length of the object, <literal>&lt;object_name&gt;</literal> is the object name,
and <literal>&lt;timestamp&gt;</literal> is the time when the object was initially created
as a current version.</para>
            </step>
            <step>
              <para>Create a second version of the object in the <literal>current</literal> container:</para>
              <screen language="console">$ curl -i $publicURL/current/my_object --data-binary 2 -X PUT -H \
  “Content-Length: 0" -H "X-Auth-Token: $token"</screen>
              <screen language="console">HTTP/1.1 201 Created
Last-Modified: Thu, 23 Jan 2014 21:41:32 GMT
Content-Length: 0
Etag: d41d8cd98f00b204e9800998ecf8427e
Content-Type: text/html; charset=UTF-8
X-Trans-Id: tx468287ce4fc94eada96ec-0052e18c8c
Date: Thu, 23 Jan 2014 21:41:32 GMT</screen>
            </step>
            <step>
              <para>Issue a <literal>GET</literal> request to a versioned object to get the current
version of the object. You do not have to do any request redirects or
metadata lookups.</para>
              <para>List older versions of the object in the <literal>archive</literal> container:</para>
              <screen language="console">$ curl -i $publicURL/archive?prefix=009my_object -X GET -H \
  "X-Auth-Token: $token"</screen>
              <screen language="console">HTTP/1.1 200 OK
Content-Length: 30
X-Container-Object-Count: 1
Accept-Ranges: bytes
X-Timestamp: 1390513280.79684
X-Container-Bytes-Used: 0
Content-Type: text/plain; charset=utf-8
X-Trans-Id: tx9a441884997542d3a5868-0052e18d8e
Date: Thu, 23 Jan 2014 21:45:50 GMT

  009my_object/1390512682.92052</screen>
              <note>
                <para>A <literal>POST</literal> request to a versioned object updates only the metadata
for the object and does not create a new version of the object. New
versions are created only when the content of the object changes.</para>
              </note>
            </step>
            <step>
              <para>Issue a <literal>DELETE</literal> request to a versioned object to remove the
current version of the object and replace it with the next-most
current version in the non-current container.</para>
              <screen language="console">$ curl -i $publicURL/current/my_object -X DELETE -H \
  "X-Auth-Token: $token"</screen>
              <screen language="console">HTTP/1.1 204 No Content
Content-Length: 0
Content-Type: text/html; charset=UTF-8
X-Trans-Id: tx006d944e02494e229b8ee-0052e18edd
Date: Thu, 23 Jan 2014 21:51:25 GMT</screen>
              <para>List objects in the <literal>archive</literal> container to show that the archived
object was moved back to the <literal>current</literal> container:</para>
              <screen language="console">$ curl -i $publicURL/archive?prefix=009my_object -X GET -H \
  "X-Auth-Token: $token"</screen>
              <screen language="console">HTTP/1.1 204 No Content
Content-Length: 0
X-Container-Object-Count: 0
Accept-Ranges: bytes
X-Timestamp: 1390513280.79684
X-Container-Bytes-Used: 0
Content-Type: text/html; charset=UTF-8
X-Trans-Id: tx044f2a05f56f4997af737-0052e18eed
Date: Thu, 23 Jan 2014 21:51:41 GMT</screen>
              <para>This next-most current version carries with it any metadata last set
on it. If you want to completely remove an object and you have five
versions of it, you must <literal>DELETE</literal> it five times.</para>
            </step>
            <step>
              <para>To disable object versioning for the <literal>current</literal> container, remove
its <literal>X-Versions-Location</literal> metadata header by sending an empty key
value.</para>
              <screen language="console">$ curl -i $publicURL/current -X PUT -H "Content-Length: 0" -H \
  "X-Auth-Token: $token" -H "X-Versions-Location: "</screen>
              <screen language="console">  HTTP/1.1 202 Accepted
  Content-Length: 76
  Content-Type: text/html; charset=UTF-8
  X-Trans-Id: txe2476de217134549996d0-0052e19038
  Date: Thu, 23 Jan 2014 21:57:12 GMT

&lt;html&gt;&lt;h1&gt;Accepted&lt;/h1&gt;&lt;p&gt;The request is accepted for processing.&lt;/p&gt;&lt;/html&gt;</screen>
            </step>
          </procedure>
        </sect3>
      </sect2>
      <sect2>
        <title>Object expiration</title>
        <para>You can schedule Object Storage (swift) objects to expire by setting the
<literal>X-Delete-At</literal> or <literal>X-Delete-After</literal> header. Once the object is deleted,
swift will no longer serve the object and it will be deleted from the cluster
shortly thereafter.</para>
        <itemizedlist>
          <listitem>
            <para>Set an object to expire at an absolute time (in Unix time). You
can get the current Unix time by running <literal>date +'%s'</literal>.</para>
            <screen language="console">$ swift post CONTAINER OBJECT_FILENAME -H "X-Delete-At:UNIX_TIME"</screen>
            <para>Verify the <literal>X-Delete-At</literal> header has posted to the object:</para>
            <screen language="console">$ swift stat CONTAINER OBJECT_FILENAME</screen>
          </listitem>
          <listitem>
            <para>Set an object to expire after a relative amount of time (in seconds):</para>
            <screen language="console">$ swift post CONTAINER OBJECT_FILENAME -H "X-Delete-After:SECONDS"</screen>
            <para>The <literal>X-Delete-After</literal> header will be converted to <literal>X-Delete-At</literal>.
Verify the <literal>X-Delete-At</literal> header has posted to the object:</para>
            <screen language="console">$ swift stat CONTAINER OBJECT_FILENAME</screen>
            <para>If you no longer want to expire the object, you can remove the
<literal>X-Delete-At</literal> header:</para>
            <screen language="console">$ swift post CONTAINER OBJECT_FILENAME -H "X-Remove-Delete-At:"</screen>
          </listitem>
        </itemizedlist>
        <note>
          <para>In order for object expiration to work properly, the
<literal>swift-object-expirer</literal> daemon will need access to all backend
servers in the cluster. The daemon does not need access to the
proxy-server or public network.</para>
        </note>
      </sect2>
      <sect2>
        <title>Serialized response formats</title>
        <para>By default, the Object Storage API uses a <literal>text/plain</literal> response
format. In addition, both JSON and XML data serialization response
formats are supported.</para>
        <note>
          <para>To run the cURL command examples, you must export environment variables. For more
information, see the section <xref linkend="env-vars"/>.</para>
        </note>
        <para>To define the response format, use one of these methods:</para>
        <informaltable>
          <tgroup cols="2">
            <colspec colname="c1" colwidth="25.7*"/>
            <colspec colname="c2" colwidth="74.3*"/>
            <thead>
              <row>
                <entry>
                  <para>Method</para>
                </entry>
                <entry>
                  <para>Description</para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>format= <literal>format</literal>
query parameter</para>
                </entry>
                <entry>
                  <para>Append this parameter to the URL for a <literal>GET</literal> request,
where <literal>format</literal> is <literal>json</literal> or <literal>xml</literal>.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para><literal>Accept</literal> request
header</para>
                </entry>
                <entry>
                  <para>Include this header in the <literal>GET</literal> request.
The valid header values are:</para>
                  <variablelist>
                    <varlistentry>
                      <term>text/plain</term>
                      <listitem>
                        <para>Plain text response format. The default.</para>
                      </listitem>
                    </varlistentry>
                    <varlistentry>
                      <term>application/jsontext</term>
                      <listitem>
                        <para>JSON data serialization response format.</para>
                      </listitem>
                    </varlistentry>
                    <varlistentry>
                      <term>application/xml</term>
                      <listitem>
                        <para>XML data serialization response format.</para>
                      </listitem>
                    </varlistentry>
                    <varlistentry>
                      <term>text/xml</term>
                      <listitem>
                        <para>XML data serialization response format.</para>
                      </listitem>
                    </varlistentry>
                  </variablelist>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
        <sect3>
          <title>Example 1. JSON example with format query parameter</title>
          <para>For example, this request uses the <literal>format</literal> query parameter to ask
for a JSON response:</para>
          <screen language="console">$ curl -i $publicURL?format=json -X GET -H "X-Auth-Token: $token"</screen>
          <screen language="console">HTTP/1.1 200 OK
Content-Length: 96
X-Account-Object-Count: 1
X-Timestamp: 1389453423.35964
X-Account-Meta-Subject: Literature
X-Account-Bytes-Used: 14
X-Account-Container-Count: 2
Content-Type: application/json; charset=utf-8
Accept-Ranges: bytes
X-Trans-Id: tx274a77a8975c4a66aeb24-0052d95365
Date: Fri, 17 Jan 2014 15:59:33 GMT</screen>
          <para>Object Storage lists container names with additional information in JSON
format:</para>
          <screen language="json">[
   {
      "count":0,
      "bytes":0,
      "name":"janeausten"
   },
   {
      "count":1,
      "bytes":14,
      "name":"marktwain"
   }
]</screen>
        </sect3>
        <sect3>
          <title>Example 2. XML example with Accept header</title>
          <para>This request uses the <literal>Accept</literal> request header to ask for an XML
response:</para>
          <screen language="console">$ curl -i $publicURL -X GET -H "X-Auth-Token: $token" -H \
  ”Accept: application/xml; charset=utf-8"</screen>
          <screen language="console">HTTP/1.1 200 OK
Content-Length: 263
X-Account-Object-Count: 3
X-Account-Meta-Book: MobyDick
X-Timestamp: 1389453423.35964
X-Account-Bytes-Used: 47
X-Account-Container-Count: 2
Content-Type: application/xml; charset=utf-8
Accept-Ranges: bytes
X-Trans-Id: txf0b4c9727c3e491694019-0052e03420
Date: Wed, 22 Jan 2014 21:12:00 GMT</screen>
          <para>Object Storage lists container names with additional information in XML
format:</para>
          <screen language="xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;account name="AUTH_73f0aa26640f4971864919d0eb0f0880"&gt;
    &lt;container&gt;
        &lt;name&gt;janeausten&lt;/name&gt;
        &lt;count&gt;2&lt;/count&gt;
        &lt;bytes&gt;33&lt;/bytes&gt;
    &lt;/container&gt;
    &lt;container&gt;
        &lt;name&gt;marktwain&lt;/name&gt;
        &lt;count&gt;1&lt;/count&gt;
        &lt;bytes&gt;14&lt;/bytes&gt;
    &lt;/container&gt;
&lt;/account&gt;</screen>
          <para>The remainder of the examples in this guide use standard, non-serialized
responses. However, all <literal>GET</literal> requests that perform list operations
accept the <literal>format</literal> query parameter or <literal>Accept</literal> request header.</para>
        </sect3>
      </sect2>
      <sect2>
        <title>Page through large lists of containers or objects</title>
        <para>If you have a large number of containers or objects, you can use the
<literal>marker</literal>, <literal>limit</literal>, and <literal>end_marker</literal> parameters to control
how many items are returned in a list and where the list starts or ends.</para>
        <itemizedlist>
          <listitem>
            <variablelist>
              <varlistentry>
                <term>marker</term>
                <listitem>
                  <para>When you request a list of containers or objects, Object Storage
returns a maximum of 10,000 names for each request. To get
subsequent names, you must make another request with the
<literal>marker</literal> parameter. Set the <literal>marker</literal> parameter to the name of
the last item returned in the previous list. You must URL-encode the
<literal>marker</literal> value before you send the HTTP request. Object Storage
returns a maximum of 10,000 names starting after the last item
returned.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
          <listitem>
            <variablelist>
              <varlistentry>
                <term>limit</term>
                <listitem>
                  <para>To return fewer than 10,000 names, use the <literal>limit</literal> parameter. If
the number of names returned equals the specified <literal>limit</literal> (or
10,000 if you omit the <literal>limit</literal> parameter), you can assume there
are more names to list. If the number of names in the list is
exactly divisible by the <literal>limit</literal> value, the last request has no
content.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
          <listitem>
            <variablelist>
              <varlistentry>
                <term>end_marker</term>
                <listitem>
                  <para>Limits the result set to names that are less than the
<literal>end_marker</literal> parameter value. You must URL-encode the
<literal>end_marker</literal> value before you send the HTTP request.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </itemizedlist>
        <sect3>
          <title>To page through a large list of containers</title>
          <para>Assume the following list of container names:</para>
          <screen language="console">apples
bananas
kiwis
oranges
pears</screen>
          <procedure>
            <step>
              <para>Use a <literal>limit</literal> of two:</para>
              <screen language="console"># curl -i $publicURL/?limit=2 -X GET -H "X-Auth-Token: $token"</screen>
              <screen language="console">apples
bananas</screen>
              <para>Because two container names are returned, there are more names to
list.</para>
            </step>
            <step>
              <para>Make another request with a <literal>marker</literal> parameter set to the name of
the last item returned:</para>
              <screen language="console"># curl -i $publicURL/?limit=2&amp;amp;marker=bananas -X GET -H \
  “X-Auth-Token: $token"</screen>
              <screen language="console">kiwis
oranges</screen>
              <para>Again, two items are returned, and there might be more.</para>
            </step>
            <step>
              <para>Make another request with a <literal>marker</literal> of the last item returned:</para>
              <screen language="console"># curl -i $publicURL/?limit=2&amp;amp;marker=oranges -X GET -H \”
  X-Auth-Token: $token"</screen>
              <screen language="console">pears</screen>
              <para>You receive a one-item response, which is fewer than the <literal>limit</literal>
number of names. This indicates that this is the end of the list.</para>
            </step>
            <step>
              <para>Use the <literal>end_marker</literal> parameter to limit the result set to object
names that are less than the <literal>end_marker</literal> parameter value:</para>
              <screen language="console"># curl -i $publicURL/?end_marker=oranges -X GET -H \”
 X-Auth-Token: $token"</screen>
              <screen language="console">apples
bananas
kiwis</screen>
              <para>You receive a result set of all container names before the
<literal>end-marker</literal> value.</para>
            </step>
          </procedure>
        </sect3>
      </sect2>
      <sect2>
        <title>Pseudo-hierarchical folders and directories</title>
        <para>Although you cannot nest directories in OpenStack Object Storage, you
can simulate a hierarchical structure within a single container by
adding forward slash characters (<literal>/</literal>) in the object name. To navigate
the pseudo-directory structure, you can use the <literal>delimiter</literal> query
parameter. This example shows you how to use pseudo-hierarchical folders
and directories.</para>
        <note>
          <para>In this example, the objects reside in a container called <literal>backups</literal>.
Within that container, the objects are organized in a pseudo-directory
called <literal>photos</literal>. The container name is not displayed in the example,
but it is a part of the object URLs. For instance, the URL of the
picture <literal>me.jpg</literal> is
<literal>https://storage.swiftdrive.com/v1/CF_xer7_343/backups/photos/me.jpg</literal>.</para>
        </note>
        <sect3>
          <title>List pseudo-hierarchical folders request: HTTP</title>
          <para>To display a list of all the objects in the storage container, use
<literal>GET</literal> without a <literal>delimiter</literal> or <literal>prefix</literal>.</para>
          <screen language="console">$ curl -X GET -i -H "X-Auth-Token: $token" \
 $publicurl/v1/AccountString/backups</screen>
          <para>The system returns status code 2xx (between 200 and 299, inclusive) and
the requested list of the objects.</para>
          <screen language="console">photos/animals/cats/persian.jpg
photos/animals/cats/siamese.jpg
photos/animals/dogs/corgi.jpg
photos/animals/dogs/poodle.jpg
photos/animals/dogs/terrier.jpg
photos/me.jpg
photos/plants/fern.jpg
photos/plants/rose.jpg</screen>
          <para>Use the delimiter parameter to limit the displayed results. To use
<literal>delimiter</literal> with pseudo-directories, you must use the parameter slash
(<literal>/</literal>).</para>
          <screen language="console">$ curl -X GET -i -H "X-Auth-Token: $token" \
 $publicurl/v1/AccountString/backups?delimiter=/</screen>
          <para>The system returns status code 2xx (between 200 and 299, inclusive) and
the requested matching objects. Because you use the slash, only the
pseudo-directory <literal>photos/</literal> displays. The returned values from a slash
<literal>delimiter</literal> query are not real objects. The value will refer to
a real object if it does not end with a slash. The pseudo-directories
have no content-type, rather, each pseudo-directory has
its own <literal>subdir</literal> entry in the response of JSON and XML results.
For example:</para>
          <screen language="JSON">[
   {
     "subdir": "photos/"
   }
 ]

 [
   {
     "subdir": "photos/animals/"
   },
   {
     "hash": "b249a153f8f38b51e92916bbc6ea57ad",
     "last_modified": "2015-12-03T17:31:28.187370",
     "bytes": 2906,
     "name": "photos/me.jpg",
     "content_type": "image/jpeg"
   },
   {
     "subdir": "photos/plants/"
   }
 ]</screen>
          <screen language="XML">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
 &lt;container name="backups"&gt;
   &lt;subdir name="photos/"&gt;
     &lt;name&gt;photos/&lt;/name&gt;
   &lt;/subdir&gt;
 &lt;/container&gt;

 &lt;?xml version="1.0" encoding="UTF-8"?&gt;
 &lt;container name="backups"&gt;
   &lt;subdir name="photos/animals/"&gt;
     &lt;name&gt;photos/animals/&lt;/name&gt;
   &lt;/subdir&gt;
   &lt;object&gt;
     &lt;name&gt;photos/me.jpg&lt;/name&gt;
     &lt;hash&gt;b249a153f8f38b51e92916bbc6ea57ad&lt;/hash&gt;
     &lt;bytes&gt;2906&lt;/bytes&gt;
     &lt;content_type&gt;image/jpeg&lt;/content_type&gt;
     &lt;last_modified&gt;2015-12-03T17:31:28.187370&lt;/last_modified&gt;
   &lt;/object&gt;
   &lt;subdir name="photos/plants/"&gt;
     &lt;name&gt;photos/plants/&lt;/name&gt;
   &lt;/subdir&gt;
 &lt;/container&gt;</screen>
          <para>Use the <literal>prefix</literal> and <literal>delimiter</literal> parameters to view the objects
inside a pseudo-directory, including further nested pseudo-directories.</para>
          <screen language="console">$ curl -X GET -i -H "X-Auth-Token: $token" \
 $publicurl/v1/AccountString/backups?prefix=photos/&amp;delimiter=/</screen>
          <para>The system returns status code 2xx (between 200 and 299, inclusive) and
the objects and pseudo-directories within the top level
pseudo-directory.</para>
          <screen language="console">photos/animals/
photos/me.jpg
photos/plants/</screen>
          <para>You can create an unlimited number of nested pseudo-directories. To
navigate through them, use a longer <literal>prefix</literal> parameter coupled with
the <literal>delimiter</literal> parameter. In this sample output, there is a
pseudo-directory called <literal>dogs</literal> within the pseudo-directory
<literal>animals</literal>. To navigate directly to the files contained within
<literal>dogs</literal>, enter the following command:</para>
          <screen language="console">$ curl -X GET -i -H "X-Auth-Token: $token" \
 $publicurl/v1/AccountString/backups?prefix=photos/animals/dogs/&amp;delimiter=/</screen>
          <para>The system returns status code 2xx (between 200 and 299, inclusive) and
the objects and pseudo-directories within the nested pseudo-directory.</para>
          <screen language="console">photos/animals/dogs/corgi.jpg
photos/animals/dogs/poodle.jpg
photos/animals/dogs/terrier.jpg</screen>
        </sect3>
      </sect2>
      <sect2 xml:id="discoverability">
        <title>Discoverability</title>
        <para>Your Object Storage system might not enable all features that this
document describes. These features are:</para>
        <itemizedlist>
          <listitem>
            <para>
              <xref linkend="large-object-creation"/>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="archive-auto-extract"/>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="bulk-delete"/>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="static-website"/>
            </para>
          </listitem>
        </itemizedlist>
        <para>To discover which features are enabled in your Object Storage system,
use the <literal>/info</literal> request.</para>
        <para>To use the <literal>/info</literal> request, send a <literal>GET</literal> request using the <literal>/info</literal>
path to the Object Store endpoint as shown in this example:</para>
        <screen language="console">$ curl https://storage.example.com/info</screen>
        <para>This example shows a truncated response body:</para>
        <screen language="json">{
   "swift":{
      "version":"1.11.0"
   },
   "staticweb":{

   },
   "tempurl":{

   }
}</screen>
        <para>This output shows that the Object Storage system has enabled the static
website and temporary URL features.</para>
        <note>
          <para>In some cases, the <literal>/info</literal> request will return an error. This could be
because your service provider has disabled the <literal>/info</literal> request
function, or because you are using an older version that does not
support it.</para>
        </note>
      </sect2>
      <sect2 xml:id="large-object-creation">
        <title>Large objects</title>
        <para>To discover whether your Object Storage system supports this feature, see
<xref linkend="discoverability"/> or check with your service provider.</para>
        <para>By default, the content of an object cannot be greater than 5 GB.
However, you can use a number of smaller objects to construct a large
object. The large object is comprised of two types of objects:</para>
        <itemizedlist>
          <listitem>
            <para><literal>Segment objects</literal> store the object content. You can divide your content
into segments and upload each segment into its own segment object. Segment
objects do not have any special features. You create, update, download, and
delete segment objects just as you do with normal objects.</para>
          </listitem>
          <listitem>
            <para>A <literal>manifest object</literal> links the segment objects into one logical large
object. When you download a manifest object, Object Storage concatenates and
returns the contents of the segment objects in the response body. This
behavior extends to the response headers returned by <literal>GET</literal> and <literal>HEAD</literal>
requests. The <literal>Content-Length</literal> response header contains the total size of
all segment objects.</para>
            <para>Object Storage takes the <literal>ETag</literal> value of each segment, concatenates them
together, and returns the MD5 checksum of the result to calculate the
<literal>ETag</literal> response header value. The manifest object types are:</para>
            <variablelist>
              <varlistentry>
                <term>Static large objects</term>
                <listitem>
                  <para>The manifest object content is an ordered list of the names of
the segment objects in JSON format. See <xref linkend="static-large-objects"/>.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>Dynamic large objects</term>
                <listitem>
                  <para>The manifest object has no content but it has a
<literal>X-Object-Manifest</literal> metadata header. The value of this header
is <literal>CONTAINER/PREFIX</literal>, where <literal>CONTAINER</literal> is the name of
the container where the segment objects are stored, and
<literal>PREFIX</literal> is a string that all segment objects have in common.
See <xref linkend="dynamic-large-objects"/>.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </itemizedlist>
        <note>
          <para>If you use a manifest object as the source of a <literal>COPY</literal> request, the
new object is a normal, and not a segment, object. If the total size of the
source segment objects exceeds 5 GB, the <literal>COPY</literal> request fails. However,
you can make a duplicate of the manifest object and this new object can be
larger than 5 GB.</para>
        </note>
        <sect3 xml:id="static-large-objects">
          <title>Static large objects</title>
          <para>To create a static large object, divide your content into pieces and create
(upload) a segment object to contain each piece.</para>
          <para>You must record the <literal>ETag</literal> response header value that the <literal>PUT</literal> operation
returns. Alternatively, you can calculate the MD5 checksum of the segment
before you perform the upload and include this value in the <literal>ETag</literal> request
header. This action ensures that the upload cannot corrupt your data.</para>
          <para>List the name of each segment object along with its size and MD5
checksum in order.</para>
          <para>Create a manifest object. Include the <literal>?multipart-manifest=put</literal>
query string at the end of the manifest object name to indicate that
this is a manifest object.</para>
          <para>The body of the <literal>PUT</literal> request on the manifest object comprises a JSON
list where each element contains these attributes:</para>
          <variablelist>
            <varlistentry>
              <term>path</term>
              <listitem>
                <para>The container and object name in the format:
<literal>CONTAINER_NAME/OBJECT_NAME</literal>.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>etag</term>
              <listitem>
                <para>The MD5 checksum of the content of the segment object. This value
must match the <literal>ETag</literal> of that object.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>size_bytes</term>
              <listitem>
                <para>The size of the segment object. This value must match the
<literal>Content-Length</literal> of that object.</para>
              </listitem>
            </varlistentry>
          </variablelist>
          <sect4>
            <title>Static large object manifest list</title>
            <para>This example shows three segment objects. You can use several containers
and the object names do not have to conform to a specific pattern, in
contrast to dynamic large objects.</para>
            <screen language="json">[
    {
        "path": "mycontainer/objseg1",
        "etag": "0228c7926b8b642dfb29554cd1f00963",
        "size_bytes": 1468006
    },
    {
        "path": "mycontainer/pseudodir/seg-obj2",
        "etag": "5bfc9ea51a00b790717eeb934fb77b9b",
        "size_bytes": 1572864
    },
    {
        "path": "other-container/seg-final",
        "etag": "b9c3da507d2557c1ddc51f27c54bae51",
        "size_bytes": 256
    }
]</screen>
            <para>The <literal>Content-Length</literal> request header must contain the length of the
JSON content and not the length of the segment objects. However, after the
<literal>PUT</literal> operation completes, the <literal>Content-Length</literal> metadata is set to
the total length of all the object segments. A similar situation applies
to the <literal>ETag</literal>. If used in the <literal>PUT</literal> operation, it must contain the
MD5 checksum of the JSON content. The <literal>ETag</literal> metadata value is then
set to be the MD5 checksum of the concatenated <literal>ETag</literal> values of the
object segments. You can also set the <literal>Content-Type</literal> request header
and custom object metadata.</para>
            <para>When the <literal>PUT</literal> operation sees the <literal>?multipart-manifest=put</literal> query
parameter, it reads the request body and verifies that each segment
object exists and that the sizes and ETags match. If there is a
mismatch, the <literal>PUT</literal> operation fails.</para>
            <para>If everything matches, the API creates the manifest object and sets the
<literal>X-Static-Large-Object</literal> metadata to <literal>true</literal> to indicate that the manifest is
a static object manifest.</para>
            <para>Normally when you perform a <literal>GET</literal> operation on the manifest object, the
response body contains the concatenated content of the segment objects. To
download the manifest list, use the <literal>?multipart-manifest=get</literal> query
parameter. The list in the response is not formatted the same as the manifest
that you originally used in the <literal>PUT</literal> operation.</para>
            <para>If you use the <literal>DELETE</literal> operation on a manifest object, the manifest
object is deleted. The segment objects are not affected. However, if you
add the <literal>?multipart-manifest=delete</literal> query parameter, the segment
objects are deleted and if all are successfully deleted, the manifest
object is also deleted.</para>
            <para>To change the manifest, use a <literal>PUT</literal> operation with the
<literal>?multipart-manifest=put</literal> query parameter. This request creates a
manifest object. You can also update the object metadata in the usual
way.</para>
          </sect4>
        </sect3>
        <sect3 xml:id="dynamic-large-objects">
          <title>Dynamic large objects</title>
          <para>Before you can upload objects that are larger than 5 GB, you must segment
them. You upload the segment objects like you do with any other object and
create a dynamic large manifest object. The manifest object tells Object
Storage how to find the segment objects that comprise the large object. You
can still access each segment individually, but when you retrieve the manifest
object, the API concatenates the segments. You can include any number of
segments in a single large object.</para>
          <para>To ensure the download works correctly, you must upload all the object
segments to the same container and prefix each object name so that the
segments sort in correct concatenation order.</para>
          <para>You also create and upload a manifest file. The manifest file is a zero-byte
file with the extra <literal>X-Object-Manifest</literal><literal>CONTAINER/PREFIX</literal> header. The
<literal>CONTAINER</literal> is the container the object segments are in and <literal>PREFIX</literal> is
the common prefix for all the segments. You must UTF-8-encode and then
URL-encode the container and common prefix in the <literal>X-Object-Manifest</literal> header.</para>
          <para>It is best to upload all the segments first and then create or update
the manifest. With this method, the full object is not available for
downloading until the upload is complete. Also, you can upload a new set
of segments to a second location and update the manifest to point to
this new location. During the upload of the new segments, the original
manifest is still available to download the first set of segments.</para>
          <sect4>
            <title>Upload segment of large object request: HTTP</title>
            <screen language="console">PUT /API_VERSION/ACCOUNT/CONTAINER/OBJECT HTTP/1.1
Host: storage.example.com
X-Auth-Token: eaaafd18-0fed-4b3a-81b4-663c99ec1cbb
ETag: 8a964ee2a5e88be344f36c22562a6486
Content-Length: 1
X-Object-Meta-PIN: 1234</screen>
            <para>No response body is returned.</para>
            <para>The 2``nn`` response code indicates a successful write. <literal>nn</literal> is a value from
00 to 99.</para>
            <para>The <literal>Length Required (411)</literal> response code indicates that the request does
not include a required <literal>Content-Length</literal> or <literal>Content-Type</literal> header.</para>
            <para>The <literal>Unprocessable Entity (422)</literal> response code indicates that the MD5
checksum of the data written to the storage system does NOT match the optional
ETag value.</para>
            <para>You can continue to upload segments, like this example shows, before you
upload the manifest.</para>
          </sect4>
          <sect4>
            <title>Upload next segment of large object request: HTTP</title>
            <screen language="console">PUT /API_VERSION/ACCOUNT/CONTAINER/OBJECT HTTP/1.1
Host: storage.example.com
X-Auth-Token: eaaafd18-0fed-4b3a-81b4-663c99ec1cbb
ETag: 8a964ee2a5e88be344f36c22562a6486
Content-Length: 1
X-Object-Meta-PIN: 1234</screen>
            <para>Next, upload the manifest. This manifest specifies the container where the
object segments reside. Note that if you upload additional segments after you
create the manifest, the concatenated object becomes that much larger but you
do not need to recreate the manifest file for subsequent additional segments.</para>
          </sect4>
          <sect4>
            <title>Upload manifest request: HTTP</title>
            <screen language="console">PUT /API_VERSION/ACCOUNT/CONTAINER/OBJECT HTTP/1.1
Host: storage.clouddrive.com
X-Auth-Token: eaaafd18-0fed-4b3a-81b4-663c99ec1cbb
Content-Length: 0
X-Object-Meta-PIN: 1234
X-Object-Manifest: CONTAINER/PREFIX</screen>
          </sect4>
          <sect4>
            <title>Upload manifest response: HTTP</title>
            <screen language="console">[...]</screen>
            <para>A <literal>GET</literal> or <literal>HEAD</literal> request on the manifest returns a <literal>Content-Type</literal>
response header value that is the same as the <literal>Content-Type</literal> request header
value in the <literal>PUT</literal> request that created the manifest. To change the
<literal>Content- Type</literal>, reissue the <literal>PUT</literal> request.</para>
          </sect4>
        </sect3>
        <sect3>
          <title>Extra transaction information</title>
          <para>You can use the <literal>X-Trans-Id-Extra</literal> request header to include extra
information to help you debug any errors that might occur with large object
upload and other Object Storage transactions.</para>
          <para>The Object Storage API appends the first 32 characters of the
<literal>X-Trans-Id-Extra</literal> request header value to the transaction ID value in the
generated <literal>X-Trans-Id</literal> response header. You must UTF-8-encode and then
URL-encode the extra transaction information before you include it in
the <literal>X-Trans-Id-Extra</literal> request header.</para>
          <para>For example, you can include extra transaction information when you upload
large objects such as images.</para>
          <para>When you upload each segment and the manifest, include the same value in the
<literal>X-Trans-Id-Extra</literal> request header. If an error occurs, you can find all
requests that are related to the large object upload in the Object Storage
logs.</para>
          <para>You can also use <literal>X-Trans-Id-Extra</literal> strings to help operators debug requests
that fail to receive responses. The operator can search for the extra
information in the logs.</para>
        </sect3>
        <sect3>
          <title>Comparison of static and dynamic large objects</title>
          <para>While static and dynamic objects have similar behavior, this table describes
their differences:</para>
          <informaltable>
            <tgroup cols="3">
              <colspec colname="c1" colwidth="28.6*"/>
              <colspec colname="c2" colwidth="35.7*"/>
              <colspec colname="c3" colwidth="35.7*"/>
              <thead>
                <row>
                  <entry>
                    <para>Description</para>
                  </entry>
                  <entry>
                    <para>Static large object</para>
                  </entry>
                  <entry>
                    <para>Dynamic large object</para>
                  </entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry>
                    <para>End-to-end integrity</para>
                  </entry>
                  <entry>
                    <para>Assured. The list of segments includes the MD5 checksum
(<literal>ETag</literal>) of each segment. You cannot upload the manifest
object if the <literal>ETag</literal> in the list differs from the uploaded
segment object. If a segment is somehow lost, an attempt to
download the manifest object results in an error.</para>
                  </entry>
                  <entry>
                    <para>Not guaranteed. The eventual consistency model means that
although you have uploaded a segment object, it might not
appear in the container listing until later. If you download
the manifest before it appears in the container, it does not
form part of the content returned in response to a <literal>GET</literal>
request.</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>Upload order</para>
                  </entry>
                  <entry>
                    <para>You must upload the segment objects before upload the manifest
object.</para>
                  </entry>
                  <entry>
                    <para>You can upload manifest and segment objects in any order. You
are recommended to upload the manifest object after the
segments in case a premature download of the manifest occurs.
However, this is not enforced.</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>Removal or addition of segment objects</para>
                  </entry>
                  <entry>
                    <para>You cannot add or remove segment objects from the manifest.
However, you can create a completely new manifest object of the
same name with a different manifest list.</para>
                  </entry>
                  <entry>
                    <para>You can upload new segment objects or remove existing segments.
The names must simply match the <literal>PREFIX</literal> supplied in
<literal>X-Object-Manifest</literal>.</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>Segment object size and number</para>
                  </entry>
                  <entry>
                    <para>Segment objects must be at least 1 MB in size (by default). The
final segment object can be any size. At most, 1000 segments
are supported (by default).</para>
                  </entry>
                  <entry>
                    <para>Segment objects can be any size.</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>Segment object container name</para>
                  </entry>
                  <entry>
                    <para>The manifest list includes the container name of each object.
Segment objects can be in different containers.</para>
                  </entry>
                  <entry>
                    <para>All segment objects must be in the same container.</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>Manifest object metadata</para>
                  </entry>
                  <entry>
                    <para>The object has <literal>X-Static-Large-Object</literal> set to <literal>true</literal>. You
do not set this metadata directly. Instead the system sets it
when you <literal>PUT</literal> a static manifest object.</para>
                  </entry>
                  <entry>
                    <para>The <literal>X-Object-Manifest</literal> value is the <literal>CONTAINER/PREFIX</literal>,
which indicates where the segment objects are located. You
supply this request header in the <literal>PUT</literal> operation.</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>Copying the manifest object</para>
                  </entry>
                  <entry>
                    <para>Include the <literal>?multipart-manifest=get</literal> query string in the
<literal>COPY</literal> request. The new object contains the same manifest as
the original. The segment objects are not copied. Instead, both
the original and new manifest objects share the same set of
segment objects.</para>
                  </entry>
                  <entry>
                    <para>The <literal>COPY</literal> operation does not create a manifest object. To
duplicate a manifest object, use the <literal>GET</literal> operation to read
the value of <literal>X-Object-Manifest</literal> and use this value in the
<literal>X-Object-Manifest</literal> request header in a <literal>PUT</literal> operation.
This creates a new manifest object that shares the same set of
segment objects as the original manifest object.</para>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>
      </sect2>
      <sect2 xml:id="archive-auto-extract">
        <title>Auto-extract archive files</title>
        <para>To discover whether your Object Storage system supports this feature,
see <xref linkend="discoverability"/>. Alternatively, check with your service
provider.</para>
        <para>Use the auto-extract archive feature to upload a tar archive file.</para>
        <para>The Object Storage system extracts files from the archive file and
creates an object.</para>
        <sect3>
          <title>Auto-extract archive request</title>
          <para>To upload an archive file, make a <literal>PUT</literal> request. Add the
<literal>extract-archive=format</literal> query parameter to indicate that you are
uploading a tar archive file instead of normal content.</para>
          <para>Valid values for the <literal>format</literal> variable are <literal>tar</literal>, <literal>tar.gz</literal>, or
<literal>tar.bz2</literal>.</para>
          <para>The path you specify in the <literal>PUT</literal> request is used for the location of
the object and the prefix for the resulting object names.</para>
          <para>In the <literal>PUT</literal> request, you can specify the path for:</para>
          <itemizedlist>
            <listitem>
              <para>An account</para>
            </listitem>
            <listitem>
              <para>Optionally, a specific container</para>
            </listitem>
            <listitem>
              <para>Optionally, a specific object prefix</para>
            </listitem>
          </itemizedlist>
          <para>For example, if the first object in the tar archive is
<literal>/home/file1.txt</literal> and you specify the
<literal>/v1/12345678912345/mybackup/castor/</literal> path, the operation creates the
<literal>castor/home/file1.txt</literal> object in the <literal>mybackup</literal> container in the
<literal>12345678912345</literal> account.</para>
        </sect3>
        <sect3>
          <title>Create an archive for auto-extract</title>
          <para>You must use the tar utility to create the tar archive file.</para>
          <para>You can upload regular files but you cannot upload other items (for
example, empty directories or symbolic links).</para>
          <para>You must UTF-8-encode the member names.</para>
          <para>The archive auto-extract feature supports these formats:</para>
          <itemizedlist>
            <listitem>
              <para>The POSIX.1-1988 Ustar format.</para>
            </listitem>
            <listitem>
              <para>The GNU tar format. Includes the long name, long link, and sparse
extensions.</para>
            </listitem>
            <listitem>
              <para>The POSIX.1-2001 pax format.</para>
              <para>Use gzip or bzip2 to compress the archive.</para>
              <para>Use the <literal>extract-archive</literal> query parameter to specify the format.
Valid values for this parameter are <literal>tar</literal>, <literal>tar.gz</literal>, or
<literal>tar.bz2</literal>.</para>
            </listitem>
          </itemizedlist>
        </sect3>
        <sect3>
          <title>Auto-extract archive response</title>
          <para>When Object Storage processes the request, it performs multiple
sub-operations. Even if all sub-operations fail, the operation returns a
201 <literal>Created</literal> status. Some sub-operations might succeed while others
fail. Examine the response body to determine the results of each
auto-extract archive sub-operation.</para>
          <para>You can set the <literal>Accept</literal> request header to one of these values to
define the response format:</para>
          <variablelist>
            <varlistentry>
              <term>
                <literal>text/plain</literal>
              </term>
              <listitem>
                <para>Formats response as plain text. If you omit the <literal>Accept</literal> header,
<literal>text/plain</literal> is the default.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>application/json</literal>
              </term>
              <listitem>
                <para>Formats response as JSON.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>application/xml</literal>
              </term>
              <listitem>
                <para>Formats response as XML.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>text/xml</literal>
              </term>
              <listitem>
                <para>Formats response as XML.</para>
              </listitem>
            </varlistentry>
          </variablelist>
          <para>The following auto-extract archive files example shows a <literal>text/plain</literal>
response body where no failures occurred:</para>
          <screen language="console">Number Files Created: 10
Errors:</screen>
          <para>The following auto-extract archive files example shows a <literal>text/plain</literal>
response where some failures occurred. In this example, the Object
Storage system is configured to reject certain character strings so that
the 400 Bad Request error occurs for any objects that use the restricted
strings.</para>
          <screen language="console">Number Files Created: 8
Errors:
/v1/12345678912345/mycontainer/home/xx%3Cyy, 400 Bad Request
/v1/12345678912345/mycontainer/../image.gif, 400 Bad Request</screen>
          <para>The following example shows the failure response in <literal>application/json</literal>
format.</para>
          <screen language="json">{
   "Number Files Created":1,
   "Errors":[
      [
         "/v1/12345678912345/mycontainer/home/xx%3Cyy",
         "400 Bad Request"
      ],
      [
         "/v1/12345678912345/mycontainer/../image.gif",
         "400 Bad Request"
      ]
   ]
}</screen>
        </sect3>
      </sect2>
      <sect2 xml:id="bulk-delete">
        <title>Bulk delete</title>
        <para>To discover whether your Object Storage system supports this feature,
see <xref linkend="discoverability"/>. Alternatively, check with your service provider.</para>
        <para>With bulk delete, you can delete up to 10,000 objects or containers
(configurable) in one request.</para>
        <sect3>
          <title>Bulk delete request</title>
          <para>To perform a bulk delete operation, add the <literal>bulk-delete</literal> query
parameter to the path of a <literal>POST</literal> or <literal>DELETE</literal> operation.</para>
          <note>
            <para>The <literal>DELETE</literal> operation is supported for backwards compatibility.</para>
          </note>
          <para>The path is the account, such as <literal>/v1/12345678912345</literal>, that contains
the objects and containers.</para>
          <para>In the request body of the <literal>POST</literal> or <literal>DELETE</literal> operation, list the
objects or containers to be deleted. Separate each name with a newline
character. You can include a maximum of 10,000 items (configurable) in
the list.</para>
          <para>In addition, you must:</para>
          <itemizedlist>
            <listitem>
              <para>UTF-8-encode and then URL-encode the names.</para>
            </listitem>
            <listitem>
              <para>To indicate an object, specify the container and object name as:
<literal>CONTAINER_NAME</literal>/<literal>OBJECT_NAME</literal>.</para>
            </listitem>
            <listitem>
              <para>To indicate a container, specify the container name as:
<literal>CONTAINER_NAME</literal>. Make sure that the container is empty. If it
contains objects, Object Storage cannot delete the container.</para>
            </listitem>
            <listitem>
              <para>Set the <literal>Content-Type</literal> request header to <literal>text/plain</literal>.</para>
            </listitem>
          </itemizedlist>
        </sect3>
        <sect3>
          <title>Bulk delete response</title>
          <para>When Object Storage processes the request, it performs multiple
sub-operations. Even if all sub-operations fail, the operation returns a
200 status. The bulk operation returns a response body that contains
details that indicate which sub-operations have succeeded and failed.
Some sub-operations might succeed while others fail. Examine the
response body to determine the results of each delete sub-operation.</para>
          <para>You can set the <literal>Accept</literal> request header to one of the following values
to define the response format:</para>
          <variablelist>
            <varlistentry>
              <term>
                <literal>text/plain</literal>
              </term>
              <listitem>
                <para>Formats response as plain text. If you omit the
<literal>Accept</literal> header, <literal>text/plain</literal> is the default.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>application/json</literal>
              </term>
              <listitem>
                <para>Formats response as JSON.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term><literal>application/xml</literal> or <literal>text/xml</literal></term>
              <listitem>
                <para>Formats response as XML.</para>
              </listitem>
            </varlistentry>
          </variablelist>
          <para>The response body contains the following information:</para>
          <itemizedlist>
            <listitem>
              <para>The number of files actually deleted.</para>
            </listitem>
            <listitem>
              <para>The number of not found objects.</para>
            </listitem>
            <listitem>
              <para>Errors. A list of object names and associated error statuses for the
objects that failed to delete. The format depends on the value that
you set in the <literal>Accept</literal> header.</para>
            </listitem>
          </itemizedlist>
          <para>The following bulk delete response is in <literal>application/xml</literal> format. In
this example, the <literal>mycontainer</literal> container is not empty, so it cannot
be deleted.</para>
          <screen language="xml">&lt;delete&gt;
    &lt;number_deleted&gt;2&lt;/number_deleted&gt;
    &lt;number_not_found&gt;4&lt;/number_not_found&gt;
    &lt;errors&gt;
        &lt;object&gt;
            &lt;name&gt;/v1/12345678912345/mycontainer&lt;/name&gt;
            &lt;status&gt;409 Conflict&lt;/status&gt;
        &lt;/object&gt;
    &lt;/errors&gt;
&lt;/delete&gt;</screen>
        </sect3>
      </sect2>
      <sect2 xml:id="static-website">
        <title>Create static website</title>
        <para>To discover whether your Object Storage system supports this feature,
see <xref linkend="discoverability"/>. Alternatively, check with your service
provider.</para>
        <para>You can use your Object Storage account to create a static website. This
static website is created with Static Web middleware and serves container
data with a specified index file, error file resolution, and optional
file listings. This mode is normally active only for anonymous requests,
which provide no authentication token. To use it with authenticated
requests, set the header <literal>X-Web-Mode</literal> to <literal>TRUE</literal> on the request.</para>
        <para>The Static Web filter must be added to the pipeline in your
<literal>/etc/swift/proxy-server.conf</literal> file below any authentication
middleware. You must also add a Static Web middleware configuration
section.</para>
        <para>See the Cloud Administrator Guide for an example of the <link xlink:href="https://docs.openstack.org/newton/config-reference/object-storage/features.html#static-web-sites">static web configuration syntax</link>.</para>
        <para>See the Cloud Administrator Guide for a complete example of the <link xlink:href="https://docs.openstack.org/newton/config-reference/object-storage/proxy-server.html#sample-proxy-server-configuration-file">/etc/swift/proxy-server.conf file</link>
(including static web).</para>
        <para>Your publicly readable containers are checked for two headers,
<literal>X-Container-Meta-Web-Index</literal> and <literal>X-Container-Meta-Web-Error</literal>. The
<literal>X-Container-Meta-Web-Error</literal> header is discussed below, in the
section called <xref linkend="set-error-static-website"/>.</para>
        <para>Use <literal>X-Container-Meta-Web-Index</literal> to determine the index file (or
default page served, such as <literal>index.html</literal>) for your website. When
someone initially enters your site, the <literal>index.html</literal> file displays
automatically. If you create sub-directories for your site by creating
pseudo-directories in your container, the index page for each
sub-directory is displayed by default. If your pseudo-directory does not
have a file with the same name as your index file, visits to the
sub-directory return a 404 error.</para>
        <para>You also have the option of displaying a list of files in your
pseudo-directory instead of a web page. To do this, set the
<literal>X-Container-Meta-Web-Listings</literal> header to <literal>TRUE</literal>. You may add styles
to your file listing by setting <literal>X-Container-Meta-Web-Listings-CSS</literal>
to a style sheet (for example, <literal>lists.css</literal>).</para>
        <sect3>
          <title>Static Web middleware through Object Storage</title>
          <para>The following sections show how to use Static Web middleware through
Object Storage.</para>
          <sect4>
            <title>Make container publicly readable</title>
            <para>Make the container publicly readable. Once the container is publicly
readable, you can access your objects directly, but you must set the
index file to browse the main site URL and its sub-directories.</para>
            <screen language="console">$ swift post -r '.r:*,.rlistings' container</screen>
          </sect4>
          <sect4>
            <title>Set site index file</title>
            <para>Set the index file. In this case, <literal>index.html</literal> is the default file
displayed when the site appears.</para>
            <screen language="console">$ swift post -m 'web-index:index.html' container</screen>
          </sect4>
          <sect4>
            <title>Enable file listing</title>
            <para>Turn on file listing. If you do not set the index file, the URL displays
a list of the objects in the container. Instructions on styling the list
with a CSS follow.</para>
            <screen language="console">$ swift post -m 'web-listings: true' container</screen>
          </sect4>
          <sect4>
            <title>Enable CSS for file listing</title>
            <para>Style the file listing using a CSS.</para>
            <screen language="console">$ swift post -m 'web-listings-css:listings.css' container</screen>
          </sect4>
          <sect4 xml:id="set-error-static-website">
            <title>Set error pages for static website</title>
            <para>You can create and set custom error pages for visitors to your website;
currently, only 401 (Unauthorized) and 404 (Not Found) errors are
supported. To do this, set the metadata header,
<literal>X-Container-Meta-Web-Error</literal>.</para>
            <para>Error pages are served with the status code pre-pended to the name of
the error page you set. For instance, if you set
<literal>X-Container-Meta-Web-Error</literal> to <literal>error.html</literal>, 401 errors will
display the page <literal>401error.html</literal>. Similarly, 404 errors will display
<literal>404error.html</literal>. You must have both of these pages created in your
container when you set the <literal>X-Container-Meta-Web-Error</literal> metadata, or
your site will display generic error pages.</para>
            <para>You only have to set the <literal>X-Container-Meta-Web-Error</literal> metadata once
for your entire static website.</para>
          </sect4>
          <sect4>
            <title>Set error pages for static website request</title>
            <screen language="console">$ swift post -m 'web-error:error.html' container</screen>
            <para>Any 2<literal>nn</literal> response indicates success.</para>
          </sect4>
        </sect3>
      </sect2>
    </sect1>
    <sect1>
      <title>Create and manage stacks</title>
      <para>The Orchestration service enables you to orchestrate multiple composite
cloud applications. This service supports use of both the Amazon Web
Services (AWS) CloudFormation template format through both a Query API
that is compatible with CloudFormation and the native OpenStack
<xref linkend="term-heat-orchestration-template-hot"/> format through a REST API.</para>
      <para>These flexible template languages enable application developers to
describe and automate the deployment of infrastructure, services, and
applications. The templates enable creation of most OpenStack resource
types, such as instances, floating IP addresses, volumes, security
groups, and users. The resources, once created, are referred to as
stacks.</para>
      <para>The template languages are described in the <link xlink:href="https://docs.openstack.org/developer/heat/template_guide/index.html">Template
Guide</link>
in the <link xlink:href="https://docs.openstack.org/developer/heat/">Heat developer
documentation</link>.</para>
      <sect2>
        <title>Create a stack from an example template file</title>
        <itemizedlist>
          <listitem>
            <para>To create a stack, or template, from an <link xlink:href="https://git.openstack.org/cgit/openstack/heat-templates">example template
file</link>, run
the following command:</para>
            <screen language="console">$ openstack stack create --template server_console.yaml \
  --parameter "image=cirros" MYSTACK</screen>
            <para>The <literal>--parameter</literal> values that you specify depend on the parameters
that are defined in the template. If a website hosts the template
file, you can also specify the URL with the <literal>--template</literal> parameter.</para>
            <para>The command returns the following output:</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>+---------------------+----------------------------------------------------------------+
| Field               | Value                                                          |
+---------------------+----------------------------------------------------------------+
| id                  | 70b9feca-8f99-418e-b2f1-cc38d61b3ffb                           |
| stack_name          | MYSTACK                                                        |
| description         | The heat template is used to demo the 'console_urls' attribute |
|                     | of OS::Nova::Server.                                           |
|                     |                                                                |
| creation_time       | 2016-06-08T09:54:15                                            |
| updated_time        | None                                                           |
| stack_status        | CREATE_IN_PROGRESS                                             |
| stack_status_reason |                                                                |
+---------------------+----------------------------------------------------------------+</screen>
          </listitem>
          <listitem>
            <para>You can also use the <literal>--dry-run</literal> option with the
<command>openstack stack create</command> command to validate a
template file without creating a stack from it.</para>
            <para>If validation fails, the response returns an error message.</para>
          </listitem>
        </itemizedlist>
      </sect2>
      <sect2>
        <title>Get information about stacks</title>
        <para>To explore the state and history of a particular stack, you can run a
number of commands.</para>
        <itemizedlist>
          <listitem>
            <para>To see which stacks are visible to the current user, run the
following command:</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack stack list
+--------------------------------------+------------+-----------------+---------------------+--------------+
| ID                                   | Stack Name | Stack Status    | Creation Time       | Updated Time |
+--------------------------------------+------------+-----------------+---------------------+--------------+
| 70b9feca-8f99-418e-b2f1-cc38d61b3ffb | MYSTACK    | CREATE_COMPLETE | 2016-06-08T09:54:15 | None         |
+--------------------------------------+------------+-----------------+---------------------+--------------+</screen>
          </listitem>
          <listitem>
            <para>To show the details of a stack, run the following command:</para>
            <screen language="console">$ openstack stack show MYSTACK</screen>
          </listitem>
          <listitem>
            <para>A stack consists of a collection of resources. To list the resources
and their status, run the following command:</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack stack resource list MYSTACK
+---------------+--------------------------------------+------------------+-----------------+---------------------+
| resource_name | physical_resource_id                 | resource_type    | resource_status | updated_time        |
+---------------+--------------------------------------+------------------+-----------------+---------------------+
| server        | 1b3a7c13-42be-4999-a2a1-8fbefd00062b | OS::Nova::Server | CREATE_COMPLETE | 2016-06-08T09:54:15 |
+---------------+--------------------------------------+------------------+-----------------+---------------------+</screen>
          </listitem>
          <listitem>
            <para>To show the details for a specific resource in a stack, run the
following command:</para>
            <screen language="console">$ openstack stack resource show MYSTACK server</screen>
          </listitem>
          <listitem>
            <para>Some resources have associated metadata which can change throughout
the lifecycle of a resource. Show the metadata by running the
following command:</para>
            <screen language="console">$ openstack stack resource metadata MYSTACK server</screen>
          </listitem>
          <listitem>
            <para>A series of events is generated during the lifecycle of a stack. To
display lifecycle events, run the following command:</para>
            <screen language="console">$ openstack stack event list MYSTACK
2016-06-08 09:54:15 [MYSTACK]: CREATE_IN_PROGRESS  Stack CREATE started
2016-06-08 09:54:15 [server]: CREATE_IN_PROGRESS  state changed
2016-06-08 09:54:41 [server]: CREATE_COMPLETE  state changed
2016-06-08 09:54:41 [MYSTACK]: CREATE_COMPLETE  Stack CREATE completed successfully</screen>
          </listitem>
          <listitem>
            <para>To show the details for a particular event, run the following
command:</para>
            <screen language="console">$ openstack stack event show MYSTACK server EVENT</screen>
          </listitem>
        </itemizedlist>
      </sect2>
      <sect2>
        <title>Update a stack</title>
        <para>To update an existing stack from a modified template file, run a command
like the following command:</para>
        <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack stack update --template server_console.yaml \
  --parameter "image=ubuntu" MYSTACK
+---------------------+----------------------------------------------------------------+
| Field               | Value                                                          |
+---------------------+----------------------------------------------------------------+
| id                  | 267a459a-a8cd-4d3e-b5a1-8c08e945764f                           |
| stack_name          | mystack                                                        |
| description         | The heat template is used to demo the 'console_urls' attribute |
|                     | of OS::Nova::Server.                                           |
|                     |                                                                |
| creation_time       | 2016-06-08T09:54:15                                            |
| updated_time        | 2016-06-08T10:41:18                                            |
| stack_status        | UPDATE_IN_PROGRESS                                             |
| stack_status_reason | Stack UPDATE started                                           |
+---------------------+----------------------------------------------------------------+</screen>
        <para>Some resources are updated in-place, while others are replaced with new
resources.</para>
      </sect2>
    </sect1>
    <sect1>
      <title>Measure cloud resources</title>
      <para>Telemetry measures cloud resources in OpenStack. It collects data
related to billing. Currently, this metering service is available
through only the <command>ceilometer</command> command-line client.</para>
      <para>To model data, Telemetry uses the following abstractions:</para>
      <variablelist>
        <varlistentry>
          <term>Meter</term>
          <listitem>
            <para>Measures a specific aspect of resource usage,
such as the existence of a running instance, or
ongoing performance, such as the CPU utilization
for an instance. Meters exist for each type of
resource. For example, a separate <literal>cpu_util</literal>
meter exists for each instance. The lifecycle
of a meter is decoupled from the existence of
its related resource. The meter persists after
the resource goes away.</para>
            <para>A meter has the following attributes:</para>
            <itemizedlist>
              <listitem>
                <para>String name</para>
              </listitem>
              <listitem>
                <para>A unit of measurement</para>
              </listitem>
              <listitem>
                <para>A type, which indicates whether values increase
monotonically (cumulative), are interpreted as
a change from the previous value (delta), or are
stand-alone and relate only to the current duration (gauge)</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Sample</term>
          <listitem>
            <para>An individual data point that is associated with a specific meter.
A sample has the same attributes as the associated meter, with
the addition of time stamp and value attributes. The value attribute
is also known as the sample <literal>volume</literal>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Statistic</term>
          <listitem>
            <para>A set of data point aggregates over a time duration. (In contrast,
a sample represents a single data point.) The Telemetry service
employs the following aggregation functions:</para>
            <itemizedlist>
              <listitem>
                <para><emphasis role="bold">count</emphasis>. The number of samples in each period.</para>
              </listitem>
              <listitem>
                <para><emphasis role="bold">max</emphasis>. The maximum number of sample volumes in each period.</para>
              </listitem>
              <listitem>
                <para><emphasis role="bold">min</emphasis>. The minimum number of sample volumes in each period.</para>
              </listitem>
              <listitem>
                <para><emphasis role="bold">avg</emphasis>. The average of sample volumes over each period.</para>
              </listitem>
              <listitem>
                <para><emphasis role="bold">sum</emphasis>. The sum of sample volumes over each period.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Alarm</term>
          <listitem>
            <para>A set of rules that define a monitor and a current state, with
edge-triggered actions associated with target states.
Alarms provide user-oriented Monitoring-as-a-Service and a
general purpose utility for OpenStack. Orchestration auto
scaling is a typical use case. Alarms follow a tristate
model of <literal>ok</literal>, <literal>alarm</literal>, and <literal>insufficient data</literal>.
For conventional threshold-oriented alarms, a static
threshold value and comparison operator govern state transitions.
The comparison operator compares a selected meter statistic against
an evaluation window of configurable length into the recent past.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>This example uses the <command>openstack</command> client to create an auto-scaling
stack and the <command>ceilometer</command> client to measure resources.</para>
      <procedure>
        <step>
          <para>Create an auto-scaling stack by running the following command.
The <literal>-f</literal> option specifies the name of the stack template
file, and the <literal>-P</literal> option specifies the <literal>KeyName</literal>
parameter as <literal>heat_key</literal>:</para>
          <screen language="console">$ openstack stack create --template cfn/F17/AutoScalingCeilometer.yaml \
  --parameter "KeyName=heat_key" mystack</screen>
        </step>
        <step>
          <para>List the heat resources that were created:</para>
          <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack stack resource list mystack
+---------------+--------------------------------------+------------------+-----------------+---------------------+
| resource_name | physical_resource_id                 | resource_type    | resource_status | updated_time        |
+---------------+--------------------------------------+------------------+-----------------+---------------------+
| server        | 1b3a7c13-42be-4999-a2a1-8fbefd00062b | OS::Nova::Server | CREATE_COMPLETE | 2013-10-02T05:53:41Z |
| ...           | ...                                  | ...              | ...             | ...                  |
+---------------+--------------------------------------+------------------+-----------------+---------------------+</screen>
        </step>
        <step>
          <para>List the alarms that are set:</para>
          <screen language="console"><?dbsuse-fo font-size="8pt"?>$ ceilometer alarm-list
+--------------------------------------+------------------------------+-------------------+---------+------------+----------------------------------+
| Alarm ID                             | Name                         | State             | Enabled | Continuous | Alarm condition                  |
+--------------------------------------+------------------------------+-------------------+---------+------------+----------------------------------+
| 4f896b40-0859-460b-9c6a-b0d329814496 | as-CPUAlarmLow-i6qqgkf2fubs  | insufficient data | True    | False      | cpu_util &amp;lt; 15.0 during 1x 60s |
| 75d8ecf7-afc5-4bdc-95ff-19ed9ba22920 | as-CPUAlarmHigh-sf4muyfruy5m | insufficient data | True    | False      | cpu_util &amp;gt; 50.0 during 1x 60s |
+--------------------------------------+------------------------------+-------------------+---------+------------+----------------------------------+</screen>
        </step>
        <step>
          <para>List the meters that are set:</para>
          <screen language="console"><?dbsuse-fo font-size="8pt"?>$ ceilometer meter-list
+-------------+------------+----------+--------------------------------------+----------------------------------+----------------------------------+
| Name        | Type       | Unit     | Resource ID                          | User ID                          | Project ID                       |
+-------------+------------+----------+--------------------------------------+----------------------------------+----------------------------------+
| cpu         | cumulative | ns       | 3965b41b-81b0-4386-bea5-6ec37c8841c1 | d1a2996d3b1f4e0e8645ba9650308011 | bf03bf32e3884d489004ac995ff7a61c |
| cpu         | cumulative | ns       | 62520a83-73c7-4084-be54-275fe770ef2c | d1a2996d3b1f4e0e8645ba9650308011 | bf03bf32e3884d489004ac995ff7a61c |
| cpu_util    | gauge      | %        | 3965b41b-81b0-4386-bea5-6ec37c8841c1 | d1a2996d3b1f4e0e8645ba9650308011 | bf03bf32e3884d489004ac995ff7a61c |
+-------------+------------+----------+--------------------------------------+----------------------------------+----------------------------------+</screen>
        </step>
        <step>
          <para>List samples:</para>
          <screen language="console"><?dbsuse-fo font-size="8pt"?>$ ceilometer sample-list -m cpu_util
+--------------------------------------+----------+-------+---------------+------+---------------------+
| Resource ID                          | Name     | Type  | Volume        | Unit | Timestamp           |
+--------------------------------------+----------+-------+---------------+------+---------------------+
| 3965b41b-81b0-4386-bea5-6ec37c8841c1 | cpu_util | gauge | 3.98333333333 | %    | 2013-10-02T10:50:12 |
+--------------------------------------+----------+-------+---------------+------+---------------------+</screen>
        </step>
        <step>
          <para>View statistics:</para>
          <screen language="console"><?dbsuse-fo font-size="8pt"?>$ ceilometer statistics -m cpu_util
+--------+---------------------+---------------------+-------+---------------+---------------+---------------+---------------+----------+---------------------+---------------------+
| Period | Period Start        | Period End          | Count | Min           | Max           | Sum           | Avg           | Duration | Duration Start      | Duration End        |
+--------+---------------------+---------------------+-------+---------------+---------------+---------------+---------------+----------+---------------------+---------------------+
| 0      | 2013-10-02T10:50:12 | 2013-10-02T10:50:12 | 1     | 3.98333333333 | 3.98333333333 | 3.98333333333 | 3.98333333333 | 0.0      | 2013-10-02T10:50:12 | 2013-10-02T10:50:12 |
+--------+---------------------+---------------------+-------+---------------+---------------+---------------+---------------+----------+---------------------+---------------------+</screen>
        </step>
      </procedure>
    </sect1>
    <sect1>
      <title>Create and manage databases</title>
      <para>The Database service provides scalable and reliable cloud provisioning
functionality for both relational and non-relational database engines.
Users can quickly and easily use database features without the burden of
handling complex administrative tasks.</para>
      <sect2 xml:id="create-db">
        <title>Create and access a database</title>
        <para>Assume that you have installed the Database service and populated your
data store with images for the type and versions of databases that you
want, and that you can create and access a database.</para>
        <para>This example shows you how to create and access a MySQL 5.5 database.</para>
        <sect3>
          <title>Create and access a database</title>
          <procedure>
            <step>
              <para>
                <emphasis role="bold">Determine which flavor to use for your database</emphasis>
              </para>
              <para>When you create a database instance, you must specify a nova flavor.
The flavor indicates various characteristics of the instance, such as
RAM and root volume size. You will need to create or
obtain new nova flavors that work for databases.</para>
              <para>The first step is to list flavors by using the
<command>openstack flavor list</command> command.</para>
              <screen language="console">$ openstack flavor list</screen>
              <para>Now take a look at the minimum requirements for various database
instances:</para>
              <informaltable>
                <tgroup cols="4">
                  <colspec colname="c1" colwidth="25.0*"/>
                  <colspec colname="c2" colwidth="25.0*"/>
                  <colspec colname="c3" colwidth="25.0*"/>
                  <colspec colname="c4" colwidth="25.0*"/>
                  <thead>
                    <row>
                      <entry>
                        <para>Database</para>
                      </entry>
                      <entry>
                        <para>RAM (MB)</para>
                      </entry>
                      <entry>
                        <para>Disk (GB)</para>
                      </entry>
                      <entry>
                        <para>VCPUs</para>
                      </entry>
                    </row>
                  </thead>
                  <tbody>
                    <row>
                      <entry>
                        <para>MySQL</para>
                      </entry>
                      <entry>
                        <para>512</para>
                      </entry>
                      <entry>
                        <para>5</para>
                      </entry>
                      <entry>
                        <para>1</para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>Cassandra</para>
                      </entry>
                      <entry>
                        <para>2048</para>
                      </entry>
                      <entry>
                        <para>5</para>
                      </entry>
                      <entry>
                        <para>1</para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>MongoDB</para>
                      </entry>
                      <entry>
                        <para>1024</para>
                      </entry>
                      <entry>
                        <para>5</para>
                      </entry>
                      <entry>
                        <para>1</para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>Redis</para>
                      </entry>
                      <entry>
                        <para>512</para>
                      </entry>
                      <entry>
                        <para>5</para>
                      </entry>
                      <entry>
                        <para>1</para>
                      </entry>
                    </row>
                  </tbody>
                </tgroup>
              </informaltable>
              <itemizedlist>
                <listitem>
                  <para>If you have a custom flavor that meets the needs of the database
that you want to create, proceed to
<xref linkend="create-database-instance"/> and use that flavor.</para>
                </listitem>
                <listitem>
                  <para>If your environment does not have a suitable flavor, an
administrative user must create a custom flavor by using the
<command>openstack flavor create</command> command.</para>
                </listitem>
              </itemizedlist>
              <para><emphasis role="bold">MySQL example.</emphasis> This example creates a flavor that you can use
with a MySQL database. This example has the following attributes:</para>
              <itemizedlist>
                <listitem>
                  <para>Flavor name: <literal>mysql_minimum</literal></para>
                </listitem>
                <listitem>
                  <para>Flavor ID: You must use an ID that is not already in use. In this
example, IDs 1 through 5 are in use, so use ID <literal>6</literal>.</para>
                </listitem>
                <listitem>
                  <para>RAM: <literal>512</literal></para>
                </listitem>
                <listitem>
                  <para>Root volume size in GB: <literal>5</literal></para>
                </listitem>
                <listitem>
                  <para>Virtual CPUs: <literal>1</literal></para>
                </listitem>
              </itemizedlist>
              <screen language="console">$ openstack flavor create mysql-minimum --id 6 --ram 512 --disk 5 --vcpus 1
+----------------------------+---------------+
| Field                      | Value         |
+----------------------------+---------------+
| OS-FLV-DISABLED:disabled   | False         |
| OS-FLV-EXT-DATA:ephemeral  | 0             |
| disk                       | 5             |
| id                         | 6             |
| name                       | mysql-minimum |
| os-flavor-access:is_public | True          |
| properties                 |               |
| ram                        | 512           |
| rxtx_factor                | 1.0           |
| swap                       |               |
| vcpus                      | 1             |
+----------------------------+---------------+</screen>
            </step>
            <step xml:id="create-database-instance">
              <para>
                <emphasis role="bold">Create a database instance</emphasis>
              </para>
              <para>This example creates a database instance with the following
characteristics:</para>
              <itemizedlist>
                <listitem>
                  <para>Name of the instance: <literal>mysql_instance_1</literal></para>
                </listitem>
                <listitem>
                  <para>Database flavor: <literal>6</literal></para>
                </listitem>
              </itemizedlist>
              <para>In addition, this command specifies these options for the instance:</para>
              <itemizedlist>
                <listitem>
                  <para>A volume size of <literal>5</literal> (5 GB).</para>
                </listitem>
                <listitem>
                  <para>The <literal>myDB</literal> database.</para>
                </listitem>
                <listitem>
                  <para>The database is based on the <literal>mysql</literal> data store and the
<literal>mysql-5.5</literal> datastore_version.</para>
                </listitem>
                <listitem>
                  <para>The <literal>userA</literal> user with the <literal>password</literal> password.</para>
                </listitem>
              </itemizedlist>
              <screen language="console"><?dbsuse-fo font-size="8pt"?>$ trove create mysql_instance_1 6 --size 5 --databases myDB \
    --users userA:password --datastore_version mysql-5.5 \
    --datastore mysql
+-------------------+---------------------------------------------------------------------------------------t-----------------------------------------------------------------------------------------------------------------+
|      Property     |                                                                                                  Value                                                                                                  |
+-------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|      created      |                                                                                           2014-05-29T21:26:21                                                                                           |
|     datastore     |                                                                              {u'version': u'mysql-5.5', u'type': u'mysql'}                                                                              |
| datastore_version |                                                                                                mysql-5.5                                                                                                |
|       flavor      | {u'id': u'6', u'links': [{u'href': u'https://controller:8779/v1.0/46d0bc4fc32e4b9e8520f8fc62199f58/flavors/6', u'rel': u'self'}, {u'href': u'https://controller:8779/flavors/6', u'rel': u'bookmark'}]} |
|         id        |                                                                                   5599dad6-731e-44df-bb60-488da3da9cfe                                                                                  |
|        name       |                                                                                             mysql_instance_1                                                                                            |
|       status      |                                                                                                  BUILD                                                                                                  |
|      updated      |                                                                                           2014-05-29T21:26:21                                                                                           |
|       volume      |                                                                                               {u'size': 5}                                                                                              |
+-------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</screen>
            </step>
            <step>
              <para>
                <emphasis role="bold">Get the IP address of the database instance</emphasis>
              </para>
              <para>First, use the <command>trove list</command> command to list all instances and
their IDs:</para>
              <screen language="console"><?dbsuse-fo font-size="8pt"?>$ trove list
+--------------------------------------+------------------+-----------+-------------------+--------+-----------+------+
|                  id                  |       name       | datastore | datastore_version | status | flavor_id | size |
+--------------------------------------+------------------+-----------+-------------------+--------+-----------+------+
| 5599dad6-731e-44df-bb60-488da3da9cfe | mysql_instance_1 |   mysql   |     mysql-5.5     | BUILD  |     6     |  5   |
+--------------------------------------+------------------+-----------+-------------------+--------+-----------+------+</screen>
              <para>This command returns the instance ID of your new instance.</para>
              <para>You can now pass in the instance ID with the <command>trove show</command> command
to get the IP address of the instance. In this example, replace
<literal>INSTANCE_ID</literal> with <literal>5599dad6-731e-44df-bb60-488da3da9cfe</literal>.</para>
              <screen language="console">$ trove show INSTANCE_ID

+-------------------+--------------------------------------+
|      Property     |                Value                 |
+-------------------+--------------------------------------+
|      created      |         2014-05-29T21:26:21          |
|     datastore     |                mysql                 |
| datastore_version |              mysql-5.5               |
|       flavor      |                  6                   |
|         id        | 5599dad6-731e-44df-bb60-488da3da9cfe |
|         ip        |             172.16.200.2             |
|        name       |           mysql_instance_1           |
|       status      |                BUILD                 |
|      updated      |         2014-05-29T21:26:54          |
|       volume      |                  5                   |
+-------------------+--------------------------------------+</screen>
              <para>This command returns the IP address of the database instance.</para>
            </step>
            <step>
              <para>
                <emphasis role="bold">Access the new database</emphasis>
              </para>
              <para>You can now access the new database you just created (myDB) by using
typical database access commands. In this MySQL example, replace
<literal>IP_ADDRESS</literal> with <literal>172.16.200.2</literal>.</para>
              <screen language="console">$ mysql -u userA -p password -h IP_ADDRESS myDB</screen>
            </step>
          </procedure>
        </sect3>
      </sect2>
      <sect2>
        <title>Backup and restore a database</title>
        <para>You can use Database services to backup a database and store the backup
artifact in the Object Storage service. Later on, if the original
database is damaged, you can use the backup artifact to restore the
database. The restore process creates a database instance.</para>
        <para>This example shows you how to back up and restore a MySQL database.</para>
        <procedure>
          <step>
            <para>
              <emphasis role="bold">Backup the database instance</emphasis>
            </para>
            <para>As background, assume that you have created a database
instance with the following
characteristics:</para>
            <itemizedlist>
              <listitem>
                <para>Name of the database instance: <literal>guest1</literal></para>
              </listitem>
              <listitem>
                <para>Flavor ID: <literal>10</literal></para>
              </listitem>
              <listitem>
                <para>Root volume size: <literal>2</literal></para>
              </listitem>
              <listitem>
                <para>Databases: <literal>db1</literal> and <literal>db2</literal></para>
              </listitem>
              <listitem>
                <para>Users: The <literal>user1</literal> user with the <literal>password</literal> password</para>
              </listitem>
            </itemizedlist>
            <para>First, get the ID of the <literal>guest1</literal> database instance by using the
<command>trove list</command> command:</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ trove list

+--------------------------------------+--------+-----------+-------------------+--------+-----------+------+
|                  id                  |  name  | datastore | datastore_version | status | flavor_id | size |
+--------------------------------------+--------+-----------+-------------------+--------+-----------+------+
| 97b4b853-80f6-414f-ba6f-c6f455a79ae6 | guest1 |   mysql   |     mysql-5.5     | ACTIVE |     10    |  2   |
+--------------------------------------+--------+-----------+-------------------+--------+-----------+------+</screen>
            <para>Back up the database instance by using the <command>trove backup-create</command>
command. In this example, the backup is called <literal>backup1</literal>. In this
example, replace <literal>INSTANCE_ID</literal> with
<literal>97b4b853-80f6-414f-ba6f-c6f455a79ae6</literal>:</para>
            <note>
              <para>This command syntax pertains only to python-troveclient version
1.0.6 and later. Earlier versions require you to pass in the backup
name as the first argument.</para>
            </note>
            <screen language="console">$ trove backup-create INSTANCE_ID backup1

+-------------+--------------------------------------+
|   Property  |                Value                 |
+-------------+--------------------------------------+
|   created   |         2014-03-18T17:09:07          |
| description |                 None                 |
|      id     | 8af30763-61fd-4aab-8fe8-57d528911138 |
| instance_id | 97b4b853-80f6-414f-ba6f-c6f455a79ae6 |
| locationRef |                 None                 |
|     name    |               backup1                |
|  parent_id  |                 None                 |
|     size    |                 None                 |
|    status   |                 NEW                  |
|   updated   |         2014-03-18T17:09:07          |
+-------------+--------------------------------------+</screen>
            <para>Note that the command returns both the ID of the original instance
(<literal>instance_id</literal>) and the ID of the backup artifact (<literal>id</literal>).</para>
            <para>Later on, use the <command>trove backup-list</command> command to get this
information:</para>
            <screen language="console"><?dbsuse-fo font-size="8pt"?>$ trove backup-list
+--------------------------------------+--------------------------------------+---------+-----------+-----------+---------------------+
|                  id                  |             instance_id              |   name  |   status  | parent_id |       updated       |
+--------------------------------------+--------------------------------------+---------+-----------+-----------+---------------------+
| 8af30763-61fd-4aab-8fe8-57d528911138 | 97b4b853-80f6-414f-ba6f-c6f455a79ae6 | backup1 | COMPLETED |    None   | 2014-03-18T17:09:11 |
+--------------------------------------+--------------------------------------+---------+-----------+-----------+---------------------+</screen>
            <para>You can get additional information about the backup by using the
<command>trove backup-show</command> command and passing in the <literal>BACKUP_ID</literal>,
which is <literal>8af30763-61fd-4aab-8fe8-57d528911138</literal>.</para>
            <screen language="console">$ trove backup-show BACKUP_ID

+-------------+----------------------------------------------------+
|   Property  |                   Value                            |
+-------------+----------------------------------------------------+
|   created   |              2014-03-18T17:09:07                   |
| description |                   None                             |
|      id     |                 8af...138                          |
| instance_id |                 97b...ae6                          |
| locationRef | http://10.0.0.1:.../.../8af...138.xbstream.gz.enc  |
|     name    |                 backup1                            |
|  parent_id  |                  None                              |
|     size    |                  0.17                              |
|    status   |               COMPLETED                            |
|   updated   |           2014-03-18T17:09:11                      |
+-------------+----------------------------------------------------+</screen>
          </step>
          <step>
            <para>
              <emphasis role="bold">Restore a database instance</emphasis>
            </para>
            <para>Now assume that your <literal>guest1</literal> database instance is damaged and you
need to restore it. In this example, you use the <command>trove create</command>
command to create a new database instance called <literal>guest2</literal>.</para>
            <itemizedlist>
              <listitem>
                <para>You specify that the new <literal>guest2</literal> instance has the same flavor
(<literal>10</literal>) and the same root volume size (<literal>2</literal>) as the original
<literal>guest1</literal> instance.</para>
              </listitem>
              <listitem>
                <para>You use the <literal>--backup</literal> argument to indicate that this new
instance is based on the backup artifact identified by
<literal>BACKUP_ID</literal>. In this example, replace <literal>BACKUP_ID</literal> with
<literal>8af30763-61fd-4aab-8fe8-57d528911138</literal>.</para>
              </listitem>
            </itemizedlist>
            <screen language="console">$ trove create guest2 10 --size 2 --backup BACKUP_ID

+-------------------+----------------------------------------------+
|      Property     |                Value                         |
+-------------------+----------------------------------------------+
|      created      |         2014-03-18T17:12:03                  |
|     datastore     | {u'version': u'mysql-5.5', u'type': u'mysql'}|
|datastore_version  |                mysql-5.5                     |
|       flavor      | {u'id': u'10', u'links': [{u'href': ...]}    |
|         id        |  ac7a2b35-a9b4-4ff6-beac-a1bcee86d04b        |
|        name       |                guest2                        |
|       status      |                 BUILD                        |
|      updated      |          2014-03-18T17:12:03                 |
|       volume      |             {u'size': 2}                     |
+-------------------+----------------------------------------------+</screen>
          </step>
          <step>
            <para>
              <emphasis role="bold">Verify backup</emphasis>
            </para>
            <para>Now check that the new <literal>guest2</literal> instance has the same
characteristics as the original <literal>guest1</literal> instance.</para>
            <para>Start by getting the ID of the new <literal>guest2</literal> instance.</para>
            <screen language="console">$ trove list

+-----------+--------+-----------+-------------------+--------+-----------+------+
|     id    |  name  | datastore | datastore_version | status | flavor_id | size |
+-----------+--------+-----------+-------------------+--------+-----------+------+
| 97b...ae6 | guest1 |   mysql   |     mysql-5.5     | ACTIVE |     10    |  2   |
| ac7...04b | guest2 |   mysql   |     mysql-5.5     | ACTIVE |     10    |  2   |
+-----------+--------+-----------+-------------------+--------+-----------+------+</screen>
            <para>Use the <command>trove show</command> command to display information about the new
guest2 instance. Pass in guest2's <literal>INSTANCE_ID</literal>, which is
<literal>ac7a2b35-a9b4-4ff6-beac-a1bcee86d04b</literal>.</para>
            <screen language="console">$ trove show INSTANCE_ID

+-------------------+--------------------------------------+
|      Property     |                Value                 |
+-------------------+--------------------------------------+
|      created      |         2014-03-18T17:12:03          |
|     datastore     |                mysql                 |
| datastore_version |              mysql-5.5               |
|       flavor      |                  10                  |
|         id        | ac7a2b35-a9b4-4ff6-beac-a1bcee86d04b |
|         ip        |               10.0.0.3               |
|        name       |                guest2                |
|       status      |                ACTIVE                |
|      updated      |         2014-03-18T17:12:06          |
|       volume      |                  2                   |
|    volume_used    |                 0.18                 |
+-------------------+--------------------------------------+</screen>
            <para>Note that the data store, flavor ID, and volume size have the same
values as in the original <literal>guest1</literal> instance.</para>
            <para>Use the <command>trove database-list</command> command to check that the original
databases (<literal>db1</literal> and <literal>db2</literal>) are present on the restored instance.</para>
            <screen language="console">$ trove database-list INSTANCE_ID

+--------------------+
|        name        |
+--------------------+
|        db1         |
|        db2         |
| performance_schema |
|        test        |
+--------------------+</screen>
            <para>Use the <command>trove user-list</command> command to check that the original user
(<literal>user1</literal>) is present on the restored instance.</para>
            <screen language="console">$ trove user-list INSTANCE_ID

+--------+------+-----------+
|  name  | host | databases |
+--------+------+-----------+
| user1  |  %   |  db1, db2 |
+--------+------+-----------+</screen>
          </step>
          <step>
            <para>
              <emphasis role="bold">Notify users</emphasis>
            </para>
            <para>Tell the users who were accessing the now-disabled <literal>guest1</literal>
database instance that they can now access <literal>guest2</literal>. Provide them
with <literal>guest2</literal>'s name, IP address, and any other information they
might need. (You can get this information by using the
<command>trove show</command> command.)</para>
          </step>
          <step>
            <para>
              <emphasis role="bold">Clean up</emphasis>
            </para>
            <para>At this point, you might want to delete the disabled <literal>guest1</literal>
instance, by using the <command>trove delete</command> command.</para>
            <screen language="console">$ trove delete INSTANCE_ID</screen>
          </step>
        </procedure>
      </sect2>
      <sect2>
        <title>Use incremental backups</title>
        <para>Incremental backups let you chain together a series of backups. You
start with a regular backup. Then, when you want to create a subsequent
incremental backup, you specify the parent backup.</para>
        <para>Restoring a database instance from an incremental backup is the same as
creating a database instance from a regular backup—the Database service
handles the complexities of applying the chain of incremental backups.</para>
        <para>This example shows you how to use incremental backups with a MySQL
database.</para>
        <para><emphasis role="bold">Assumptions.</emphasis> Assume that you have created a regular
backup for the following database instance:</para>
        <itemizedlist>
          <listitem>
            <para>Instance name: <literal>guest1</literal></para>
          </listitem>
          <listitem>
            <para>ID of the instance (<literal>INSTANCE_ID</literal>):
<literal>792a6a56-278f-4a01-9997-d997fa126370</literal></para>
          </listitem>
          <listitem>
            <para>ID of the regular backup artifact (<literal>BACKUP_ID</literal>):
<literal>6dc3a9b7-1f3e-4954-8582-3f2e4942cddd</literal></para>
          </listitem>
        </itemizedlist>
        <sect3>
          <title>Create and use incremental backups</title>
          <procedure>
            <step>
              <para>
                <emphasis role="bold">Create your first incremental backup</emphasis>
              </para>
              <para>Use the <command>trove backup-create</command> command and specify:</para>
              <itemizedlist>
                <listitem>
                  <para>The <literal>INSTANCE_ID</literal> of the database instance you are doing the
incremental backup for (in this example,
<literal>792a6a56-278f-4a01-9997-d997fa126370</literal>)</para>
                </listitem>
                <listitem>
                  <para>The name of the incremental backup you are creating: <literal>backup1.1</literal></para>
                </listitem>
                <listitem>
                  <para>The <literal>BACKUP_ID</literal> of the parent backup. In this case, the parent
is the regular backup, with an ID of
<literal>6dc3a9b7-1f3e-4954-8582-3f2e4942cddd</literal></para>
                </listitem>
              </itemizedlist>
              <screen language="console">$ trove backup-create INSTANCE_ID backup1.1  --parent BACKUP_ID

+-------------+--------------------------------------+
|   Property  |                Value                 |
+-------------+--------------------------------------+
|   created   |         2014-03-19T14:09:13          |
| description |                 None                 |
|      id     | 1d474981-a006-4f62-b25f-43d7b8a7097e |
| instance_id | 792a6a56-278f-4a01-9997-d997fa126370 |
| locationRef |                 None                 |
|     name    |              backup1.1               |
|  parent_id  | 6dc3a9b7-1f3e-4954-8582-3f2e4942cddd |
|     size    |                 None                 |
|    status   |                 NEW                  |
|   updated   |         2014-03-19T14:09:13          |
+-------------+--------------------------------------+</screen>
              <para>Note that this command returns both the ID of the database instance
you are incrementally backing up (<literal>instance_id</literal>) and a new ID for
the new incremental backup artifact you just created (<literal>id</literal>).</para>
            </step>
            <step>
              <para>
                <emphasis role="bold">Create your second incremental backup</emphasis>
              </para>
              <para>The name of your second incremental backup is <literal>backup1.2</literal>. This
time, when you specify the parent, pass in the ID of the incremental
backup you just created in the previous step (<literal>backup1.1</literal>). In this
example, it is <literal>1d474981-a006-4f62-b25f-43d7b8a7097e</literal>.</para>
              <screen language="console">$ trove backup-create INSTANCE_ID  backup1.2  --parent BACKUP_ID

+-------------+--------------------------------------+
|   Property  |                Value                 |
+-------------+--------------------------------------+
|   created   |         2014-03-19T14:09:13          |
| description |                 None                 |
|      id     | bb84a240-668e-49b5-861e-6a98b67e7a1f |
| instance_id | 792a6a56-278f-4a01-9997-d997fa126370 |
| locationRef |                 None                 |
|     name    |              backup1.2               |
|  parent_id  | 1d474981-a006-4f62-b25f-43d7b8a7097e |
|     size    |                 None                 |
|    status   |                 NEW                  |
|   updated   |         2014-03-19T14:09:13          |
+-------------+--------------------------------------+</screen>
            </step>
            <step>
              <para>
                <emphasis role="bold">Restore using incremental backups</emphasis>
              </para>
              <para>Now assume that your <literal>guest1</literal> database instance is damaged and you
need to restore it from your incremental backups. In this example,
you use the <command>trove create</command> command to create a new database
instance called <literal>guest2</literal>.</para>
              <para>To incorporate your incremental backups, you simply use the
<literal>--backup`</literal> parameter to pass in the <literal>BACKUP_ID</literal> of your most
recent incremental backup. The Database service handles the
complexities of applying the chain of all previous incremental
backups.</para>
              <screen language="console">$ trove create guest2 10 --size 1 --backup BACKUP_ID

+-------------------+-----------------------------------------------------------+
|      Property     |                       Value                               |
+-------------------+-----------------------------------------------------------+
|      created      |                  2014-03-19T14:10:56                      |
|     datastore     |         {u'version': u'mysql-5.5', u'type': u'mysql'}     |
| datastore_version |                      mysql-5.5                            |
|       flavor      | {u'id': u'10', u'links':                                  |
|                   | [{u'href': u'https://10.125.1.135:8779/v1.0/              |
|                   |  626734041baa4254ae316de52a20b390/flavors/10', u'rel':    |
|                   |  u'self'}, {u'href': u'https://10.125.1.135:8779/         |
|                   |  flavors/10', u'rel': u'bookmark'}]}                      |
|         id        |         a3680953-eea9-4cf2-918b-5b8e49d7e1b3              |
|        name       |                      guest2                               |
|       status      |                      BUILD                                |
|      updated      |                  2014-03-19T14:10:56                      |
|       volume      |                   {u'size': 1}                            |
+-------------------+-----------------------------------------------------------+</screen>
            </step>
          </procedure>
        </sect3>
      </sect2>
      <sect2>
        <title>Manage database configuration</title>
        <para>You can manage database configuration tasks by using configuration
groups. Configuration groups let you set configuration options, in bulk,
on one or more databases.</para>
        <para>This example assumes you have created a MySQL
database and shows you how to use a
configuration group to configure it. Although this example sets just one
option on one database, you can use these same procedures to set
multiple options on multiple database instances throughout your
environment. This can provide significant time savings in managing your
cloud.</para>
        <sect3>
          <title>Bulk-configure a database or databases</title>
          <procedure>
            <step>
              <para>
                <emphasis role="bold">List available options</emphasis>
              </para>
              <para>First, determine which configuration options you can set. Different
data store versions have different configuration options.</para>
              <para>List the names and IDs of all available versions of the <literal>mysql</literal>
data store:</para>
              <screen language="console">$ trove datastore-version-list mysql

+--------------------------------------+-----------+
|                  id                  |    name   |
+--------------------------------------+-----------+
| eeb574ce-f49a-48b6-820d-b2959fcd38bb | mysql-5.5 |
+--------------------------------------+-----------+</screen>
              <para>Pass in the data store version ID with the
<command>trove configuration-parameter-list</command> command to get the available
options:</para>
              <screen language="console"><?dbsuse-fo font-size="8pt"?>$ trove configuration-parameter-list DATASTORE_VERSION_ID

+--------------------------------+---------+---------+----------------------+------------------+
|              name              |   type  |   min   |         max          | restart_required |
+--------------------------------+---------+---------+----------------------+------------------+
|    auto_increment_increment    | integer |    1    |        65535         |      False       |
|     auto_increment_offset      | integer |    1    |        65535         |      False       |
|           autocommit           | integer |    0    |          1           |      False       |
|    bulk_insert_buffer_size     | integer |    0    | 18446744073709547520 |      False       |
|      character_set_client      |  string |         |                      |      False       |
|    character_set_connection    |  string |         |                      |      False       |
|     character_set_database     |  string |         |                      |      False       |
|    character_set_filesystem    |  string |         |                      |      False       |
|     character_set_results      |  string |         |                      |      False       |
|      character_set_server      |  string |         |                      |      False       |
|      collation_connection      |  string |         |                      |      False       |
|       collation_database       |  string |         |                      |      False       |
|        collation_server        |  string |         |                      |      False       |
|        connect_timeout         | integer |    1    |        65535         |      False       |
|        expire_logs_days        | integer |    1    |        65535         |      False       |
|    innodb_buffer_pool_size     | integer |    0    |     68719476736      |       True       |
|     innodb_file_per_table      | integer |    0    |          1           |       True       |
| innodb_flush_log_at_trx_commit | integer |    0    |          2           |      False       |
|     innodb_log_buffer_size     | integer | 1048576 |      4294967296      |       True       |
|       innodb_open_files        | integer |    10   |      4294967296      |       True       |
|   innodb_thread_concurrency    | integer |    0    |         1000         |      False       |
|      interactive_timeout       | integer |    1    |        65535         |      False       |
|        join_buffer_size        | integer |    0    |      4294967296      |      False       |
|        key_buffer_size         | integer |    0    |      4294967296      |      False       |
|          local_infile          | integer |    0    |          1           |      False       |
|       max_allowed_packet       | integer |   1024  |      1073741824      |      False       |
|       max_connect_errors       | integer |    1    | 18446744073709547520 |      False       |
|        max_connections         | integer |    1    |        65535         |      False       |
|      max_user_connections      | integer |    1    |        100000        |      False       |
|    myisam_sort_buffer_size     | integer |    4    | 18446744073709547520 |      False       |
|           server_id            | integer |    1    |        100000        |       True       |
|        sort_buffer_size        | integer |  32768  | 18446744073709547520 |      False       |
|          sync_binlog           | integer |    0    | 18446744073709547520 |      False       |
|          wait_timeout          | integer |    1    |       31536000       |      False       |
+--------------------------------+---------+---------+----------------------+------------------+</screen>
              <para>In this example, the <command>trove configuration-parameter-list</command> command
returns a list of options that work with MySQL 5.5.</para>
            </step>
            <step>
              <para>
                <emphasis role="bold">Create a configuration group</emphasis>
              </para>
              <para>A configuration group contains a comma-separated list of key-value
pairs. Each pair consists of a configuration option and its value.</para>
              <para>You can create a configuration group by using the
<command>trove configuration-create</command> command. The general syntax
for this command is:</para>
              <screen language="console">$ trove configuration-create NAME VALUES --datastore DATASTORE_NAME</screen>
              <itemizedlist>
                <listitem>
                  <para><emphasis>NAME</emphasis>. The name you want to use for this group.</para>
                </listitem>
                <listitem>
                  <para><emphasis>VALUES</emphasis>. The list of key-value pairs.</para>
                </listitem>
                <listitem>
                  <para><emphasis>DATASTORE_NAME</emphasis>. The name of the associated data store.</para>
                </listitem>
              </itemizedlist>
              <para>Set <emphasis>VALUES</emphasis> as a JSON dictionary, for example:</para>
              <screen language="json">{"myFirstKey" : "someString", "mySecondKey" : 1}</screen>
              <para>This example creates a configuration group called <literal>group1</literal>.
<literal>group1</literal> contains just one key and value pair, and this pair sets
the <literal>sync_binlog</literal> option to <literal>1</literal>.</para>
              <screen language="console">$ trove configuration-create group1 '{"sync_binlog" : 1}' --datastore mysql

+----------------------+--------------------------------------+
|       Property       |                Value                 |
+----------------------+--------------------------------------+
| datastore_version_id | eeb574ce-f49a-48b6-820d-b2959fcd38bb |
|     description      |                 None                 |
|          id          | 9a9ef3bc-079b-476a-9cbf-85aa64f898a5 |
|         name         |                group1                |
|        values        |          {"sync_binlog": 1}          |
+----------------------+--------------------------------------+</screen>
            </step>
            <step>
              <para>
                <emphasis role="bold">Examine your existing configuration</emphasis>
              </para>
              <para>Before you use the newly-created configuration group, look at how the
<literal>sync_binlog</literal> option is configured on your database. Replace the
following sample connection values with values that connect to your
database:</para>
              <screen language="console">$ mysql -u user7 -ppassword -h 172.16.200.2 myDB7
 Welcome to the MySQL monitor. Commands end with ; or \g.
 ...
 mysql&gt; show variables like 'sync_binlog';
 +---------------+-------+
 | Variable_name | Value |
 +---------------+-------+
 | sync_binlog   | 0     |
 +---------------+-------+</screen>
              <para>As you can see, the <literal>sync_binlog</literal> option is currently set to <literal>0</literal>
for the <literal>myDB7</literal> database.</para>
            </step>
            <step>
              <para>
                <emphasis role="bold">Change the database configuration using a configuration group</emphasis>
              </para>
              <para>You can change a database's configuration by attaching a
configuration group to a database instance. You do this by using the
<command>trove configuration-attach</command> command and passing in the ID of the
database instance and the ID of the configuration group.</para>
              <para>Get the ID of the database instance:</para>
              <screen language="console"><?dbsuse-fo font-size="8pt"?>$ trove list

+-------------+------------------+-----------+-------------------+--------+-----------+------+
|     id      |       name       | datastore | datastore_version | status | flavor_id | size |
+-------------+------------------+-----------+-------------------+--------+-----------+------+
| 26a265dd... | mysql_instance_7 |   mysql   |     mysql-5.5     | ACTIVE |     6     |  5   |
+-------------+------------------+-----------+-------------------+--------+-----------+------+</screen>
              <para>Get the ID of the configuration group:</para>
              <screen language="console">$ trove configuration-list

+-------------+--------+-------------+---------------------+
|    id       |  name  | description |datastore_version_id |
+-------------+--------+-------------+---------------------+
| 9a9ef3bc... | group1 |     None    |      eeb574ce...    |
+-------------+--------+-------------+---------------------+</screen>
              <para>Attach the configuration group to the database instance:</para>
              <note>
                <para>This command syntax pertains only to python-troveclient version
1.0.6 and later. Earlier versions require you to pass in the
configuration group ID as the first argument.</para>
              </note>
              <screen language="console">$ trove configuration-attach DB_INSTANCE_ID CONFIG_GROUP_ID</screen>
            </step>
            <step>
              <para>
                <emphasis role="bold">Re-examine the database configuration</emphasis>
              </para>
              <para>Display the <literal>sync_binlog</literal> setting again:</para>
              <screen language="console">mysql&gt; show variables like 'sync_binlog';
+---------------+-------+
| Variable_name | Value |
+---------------+-------+
| sync_binlog   | 1     |
+---------------+-------+</screen>
              <para>As you can see, the <literal>sync_binlog</literal> option is now set to <literal>1</literal>, as
specified in the <literal>group1</literal> configuration group.</para>
            </step>
          </procedure>
          <para><emphasis role="bold">Conclusion.</emphasis> Using a configuration group to set a single option on
a single database is obviously a trivial example. However, configuration
groups can provide major efficiencies when you consider that:</para>
          <itemizedlist>
            <listitem>
              <para>A configuration group can specify a large number of option values.</para>
            </listitem>
            <listitem>
              <para>You can apply a configuration group to hundreds or thousands of
database instances in your environment.</para>
            </listitem>
          </itemizedlist>
          <para>Used in this way, configuration groups let you modify your database
cloud configuration, on the fly, on a massive scale.</para>
          <para><emphasis role="bold">Maintenance.</emphasis> There are also a number of useful maintenance
features for working with configuration groups. You can:</para>
          <itemizedlist>
            <listitem>
              <para>Disassociate a configuration group from a database instance, using
the <command>trove configuration-detach</command> command.</para>
            </listitem>
            <listitem>
              <para>Modify a configuration group on the fly, using the
<command>trove configuration-patch</command> command.</para>
            </listitem>
            <listitem>
              <para>Find out what instances are using a configuration group, using the
<command>trove configuration-instances</command> command.</para>
            </listitem>
            <listitem>
              <para>Delete a configuration group, using the
<command>trove configuration-delete</command> command. You might want to
do this if no instances use a group.</para>
            </listitem>
          </itemizedlist>
        </sect3>
      </sect2>
      <sect2>
        <title>Set up database replication</title>
        <para>You can create a replica of an existing database instance. When you make
subsequent changes to the original instance, the system automatically
applies those changes to the replica.</para>
        <itemizedlist>
          <listitem>
            <para>Replicas are read-only.</para>
          </listitem>
          <listitem>
            <para>When you create a replica, do not specify the <literal>--users</literal> or
<literal>--databases</literal> options.</para>
          </listitem>
          <listitem>
            <para>You can choose a smaller volume or flavor for a replica than for the
original, but the replica's volume must be big enough to hold the
data snapshot from the original.</para>
          </listitem>
        </itemizedlist>
        <para>This example shows you how to replicate a MySQL database instance.</para>
        <sect3>
          <title>Set up replication</title>
          <procedure>
            <step>
              <para>
                <emphasis role="bold">Get the instance ID</emphasis>
              </para>
              <para>Get the ID of the original instance you want to replicate:</para>
              <screen language="console"><?dbsuse-fo font-size="8pt"?>$ trove list
+-----------+------------+-----------+-------------------+--------+-----------+------+
|     id    |  name      | datastore | datastore_version | status | flavor_id | size |
+-----------+------------+-----------+-------------------+--------+-----------+------+
| 97b...ae6 | base_1     |   mysql   |     mysql-5.5     | ACTIVE |     10    |  2   |
+-----------+------------+-----------+-------------------+--------+-----------+------+</screen>
            </step>
            <step>
              <para>
                <emphasis role="bold">Create the replica</emphasis>
              </para>
              <para>Create a new instance that will be a replica of the original
instance. You do this by passing in the <literal>--replica_of</literal> option with
the <command>trove create</command> command. This example creates a replica
called <literal>replica_1</literal>. <literal>replica_1</literal> is a replica of the original instance,
<literal>base_1</literal>:</para>
              <screen language="console">$ trove create replica_1 6 --size=5 --datastore_version mysql-5.5 \
  --datastore mysql --replica_of ID_OF_ORIGINAL_INSTANCE</screen>
            </step>
            <step>
              <para>
                <emphasis role="bold">Verify replication status</emphasis>
              </para>
              <para>Pass in <literal>replica_1</literal>'s instance ID with the <command>trove show</command> command
to verify that the newly created <literal>replica_1</literal> instance is a replica
of the original <literal>base_1</literal>. Note that the <literal>replica_of</literal> property is
set to the ID of <literal>base_1</literal>.</para>
              <screen language="console">$ trove show INSTANCE_ID_OF_REPLICA_1
+-------------------+--------------------------------------+
| Property          | Value                                |
+-------------------+--------------------------------------+
| created           | 2014-09-16T11:16:49                  |
| datastore         | mysql                                |
| datastore_version | mysql-5.5                            |
| flavor            | 6                                    |
| id                | 49c6eff6-ef91-4eff-91c0-efbda7e83c38 |
| name              | replica_1                            |
| replica_of        | 97b4b853-80f6-414f-ba6f-c6f455a79ae6 |
| status            | BUILD                                |
| updated           | 2014-09-16T11:16:49                  |
| volume            | 5                                    |
+-------------------+--------------------------------------+</screen>
              <para>Now pass in <literal>base_1</literal>'s instance ID with the <command>trove show</command> command
to list the replica(s) associated with the original instance. Note
that the <literal>replicas</literal> property is set to the ID of <literal>replica_1</literal>. If
there are multiple replicas, they appear as a comma-separated list.</para>
              <screen language="console">$ trove show INSTANCE_ID_OF_BASE_1
+-------------------+--------------------------------------+
| Property          | Value                                |
+-------------------+--------------------------------------+
| created           | 2014-09-16T11:04:56                  |
| datastore         | mysql                                |
| datastore_version | mysql-5.5                            |
| flavor            | 6                                    |
| id                | 97b4b853-80f6-414f-ba6f-c6f455a79ae6 |
| ip                | 172.16.200.2                         |
| name              | base_1                               |
| replicas          | 49c6eff6-ef91-4eff-91c0-efbda7e83c38 |
| status            | ACTIVE                               |
| updated           | 2014-09-16T11:05:06                  |
| volume            | 5                                    |
| volume_used       | 0.11                                 |
+-------------------+--------------------------------------+</screen>
            </step>
            <step>
              <para>
                <emphasis role="bold">Detach the replica</emphasis>
              </para>
              <para>If the original instance goes down, you can detach the replica. The
replica becomes a standalone database instance. You can then take the
new standalone instance and create a new replica of that instance.</para>
              <para>You detach a replica using the <command>trove detach-replica</command> command:</para>
              <screen language="console">$ trove detach-replica INSTANCE_ID_OF_REPLICA</screen>
            </step>
          </procedure>
        </sect3>
      </sect2>
      <sect2>
        <title>Set up database clustering</title>
        <para>You can store data across multiple machines by setting up MongoDB
sharded clusters.</para>
        <para>Each cluster includes:</para>
        <itemizedlist>
          <listitem>
            <para>One or more <emphasis>shards</emphasis>. Each shard consists of a three member replica
set (three instances organized as a replica set).</para>
          </listitem>
          <listitem>
            <para>One or more <emphasis>query routers</emphasis>. A query router is the machine that your
application actually connects to. This machine is responsible for
communicating with the config server to figure out where the
requested data is stored. It then accesses and returns the data from
the appropriate shard(s).</para>
          </listitem>
          <listitem>
            <para>One or more <emphasis>config servers</emphasis>. Config servers store the metadata that
links requested data with the shard that contains it.</para>
          </listitem>
        </itemizedlist>
        <para>This example shows you how to set up a MongoDB sharded cluster.</para>
        <note>
          <para><emphasis role="bold">Before you begin.</emphasis> Make sure that:</para>
          <itemizedlist>
            <listitem>
              <para>The administrative user has registered a MongoDB datastore type and
version.</para>
            </listitem>
            <listitem>
              <para>The administrative user has created an appropriate <xref linkend="create-db"/>.</para>
            </listitem>
          </itemizedlist>
        </note>
        <sect3>
          <title>Set up clustering</title>
          <procedure>
            <step>
              <para>
                <emphasis role="bold">Create a cluster</emphasis>
              </para>
              <para>Create a cluster by using the <command>trove cluster-create</command> command. This
command creates a one-shard cluster. Pass in:</para>
              <itemizedlist>
                <listitem>
                  <para>The name of the cluster.</para>
                </listitem>
                <listitem>
                  <para>The name and version of the datastore you want to use.</para>
                </listitem>
                <listitem>
                  <para>The three instances you want to include in the replication set for
the first shard. Specify each instance by using the <literal>--instance</literal>
argument and the associated flavor ID and volume size. Use the
same flavor ID and volume size for each instance. In this example,
flavor <literal>7</literal> is a custom flavor that meets the MongoDB minimum
requirements.</para>
                </listitem>
              </itemizedlist>
              <screen language="console">$ trove cluster-create cluster1 mongodb "2.4" \
  --instance flavor_id=7,volume=2 --instance flavor_id=7,volume=2 \
  --instance flavor_id=7,volume=2
 +-------------------+--------------------------------------+
 | Property          | Value                                |
 +-------------------+--------------------------------------+
 | created           | 2014-08-16T01:46:51                  |
 | datastore         | mongodb                              |
 | datastore_version | 2.4                                  |
 | id                | aa6ef0f5-dbef-48cd-8952-573ad881e717 |
 | name              | cluster1                             |
 | task_description  | Building the initial cluster.        |
 | task_name         | BUILDING                             |
 | updated           | 2014-08-16T01:46:51                  |
 +-------------------+--------------------------------------+</screen>
            </step>
            <step>
              <para>
                <emphasis role="bold">Display cluster information</emphasis>
              </para>
              <para>Display information about a cluster by using the
<command>trove cluster-show</command> command. Pass in the ID of the cluster.</para>
              <para>The cluster ID displays when you first create a cluster. (If you need
to find it later on, use the <command>trove cluster-list</command> command to list
the names and IDs of all the clusters in your system.)</para>
              <screen language="console">$ trove cluster-show CLUSTER_ID
 +-------------------+--------------------------------------+
 | Property          | Value                                |
 +-------------------+--------------------------------------+
 | created           | 2014-08-16T01:46:51                  |
 | datastore         | mongodb                              |
 | datastore_version | 2.4                                  |
 | id                | aa6ef0f5-dbef-48cd-8952-573ad881e717 |
 | ip                | 10.0.0.2                             |
 | name              | cluster1                             |
 | task_description  | No tasks for the cluster.            |
 | task_name         | NONE                                 |
 | updated           | 2014-08-16T01:59:33                  |
 +-------------------+--------------------------------------+</screen>
              <note>
                <para><emphasis role="bold">Your application connects to this IP address.</emphasis> The <command>trove cluster-show</command>
command displays the IP address of the query router.
This is the IP address your application uses to retrieve data from
the database.</para>
              </note>
            </step>
            <step>
              <para>
                <emphasis role="bold">List cluster instances</emphasis>
              </para>
              <para>List the instances in a cluster by using the
<command>trove cluster-instances</command> command.</para>
              <screen language="console">$ trove cluster-instances CLUSTER_ID
+--------------------------------------+----------------+-----------+------+
| ID                                   | Name           | Flavor ID | Size |
+--------------------------------------+----------------+-----------+------+
| 45532fc4-661c-4030-8ca4-18f02aa2b337 | cluster1-rs1-1 | 7         |    2 |
| 7458a98d-6f89-4dfd-bb61-5cf1dd65c121 | cluster1-rs1-2 | 7         |    2 |
| b37634fb-e33c-4846-8fe8-cf2b2c95e731 | cluster1-rs1-3 | 7         |    2 |
+--------------------------------------+----------------+-----------+------+</screen>
              <para><emphasis role="bold">Naming conventions for replication sets and instances.</emphasis> Note
that the <literal>Name</literal> column displays an instance name that includes the
replication set name. The replication set names and instance names
are automatically generated, following these rules:</para>
              <itemizedlist>
                <listitem>
                  <para><emphasis role="bold">Replication set name.</emphasis> This name consists of the cluster
name, followed by the string -rs<emphasis>n</emphasis>, where <emphasis>n</emphasis> is 1 for
the first replication set you create, 2 for the second replication
set, and so on. In this example, the cluster name is <literal>cluster1</literal>,
and there is only one replication set, so the replication set name
is <literal>cluster1-rs1</literal>.</para>
                </listitem>
                <listitem>
                  <para><emphasis role="bold">Instance name.</emphasis> This name consists of the replication set
name followed by the string -<emphasis>n</emphasis>, where <emphasis>n</emphasis> is 1 for the
first instance in a replication set, 2 for the second
instance, and so on. In this example, the instance names are
<literal>cluster1-rs1-1</literal>, <literal>cluster1-rs1-2</literal>, and <literal>cluster1-rs1-3</literal>.</para>
                </listitem>
              </itemizedlist>
            </step>
            <step>
              <para>
                <emphasis role="bold">List clusters</emphasis>
              </para>
              <para>List all the clusters in your system, using the
<command>trove cluster-list</command> command.</para>
              <screen language="console"><?dbsuse-fo font-size="8pt"?>$ trove cluster-list
+--------------------------------------+----------+-----------+-------------------+-----------+
| ID                                   | Name     | Datastore | Datastore Version | Task Name |
+--------------------------------------+----------+-----------+-------------------+-----------+
| aa6ef0f5-dbef-48cd-8952-573ad881e717 | cluster1 | mongodb   | 2.4               | NONE      |
| b8829c2a-b03a-49d3-a5b1-21ec974223ee | cluster2 | mongodb   | 2.4               | BUILDING  |
+--------------------------------------+----------+-----------+-------------------+-----------+</screen>
            </step>
            <step>
              <para>
                <emphasis role="bold">Delete a cluster</emphasis>
              </para>
              <para>Delete a cluster, using the <command>trove cluster-delete</command> command.</para>
              <screen language="console">$ trove cluster-delete CLUSTER_ID</screen>
            </step>
          </procedure>
          <sect4>
            <title>Query routers and config servers</title>
            <para>Each cluster includes at least one query router and one config server.
Query routers and config servers count against your quota. When you
delete a cluster, the system deletes the associated query router(s) and
config server(s).</para>
          </sect4>
        </sect3>
      </sect2>
    </sect1>
  </chapter>
  <chapter>
    <title>OpenStack Python SDK</title>
    <info/>
    <sect1>
      <title>Overview</title>
      <para>OpenStack provides four different options for interacting with its
APIs from Python, each targeting a slightly different user:</para>
      <itemizedlist>
        <listitem>
          <para>OpenStack SDK</para>
        </listitem>
        <listitem>
          <para>shade</para>
        </listitem>
        <listitem>
          <para>Per-project client libraries</para>
        </listitem>
        <listitem>
          <para>Direct REST calls via keystoneauth</para>
        </listitem>
      </itemizedlist>
      <para>You should also be familiar with:</para>
      <itemizedlist>
        <listitem>
          <para>RESTful web services</para>
        </listitem>
        <listitem>
          <para>HTTP/1.1</para>
        </listitem>
        <listitem>
          <para>JSON and data serialization formats</para>
        </listitem>
      </itemizedlist>
      <sect2>
        <title>OpenStack SDK</title>
        <para>The <link xlink:href="https://pypi.python.org/pypi/openstacksdk">OpenStack Python Software Development Kit (SDK)</link> is used to write Python
automation scripts that create and manage resources in your OpenStack
cloud. The SDK implements Python bindings to the OpenStack API, which
enables you to perform automation tasks in Python by making calls on
Python objects, rather than making REST calls directly.</para>
        <para>New users should default to coding against the OpenStack SDK.</para>
      </sect2>
      <sect2>
        <title>shade</title>
        <para><link xlink:href="http://pypi.python.org/pypi/shade">shade</link> is an abstraction library
focused on hiding implementation differences between OpenStack clouds. While
the OpenStack SDK presents a clean object interface to the underlying REST
APIs, shade hides them if doing so is advantageous. If you plan on
running the same Python program against many OpenStack clouds, you may want to
use shade - but if you need to access any features of a cloud that do not have
a cloud-neutral abstraction mapping, you will be unable to do so with shade.</para>
      </sect2>
      <sect2>
        <title>Per-project client libraries</title>
        <para>Each OpenStack project produces a client library that wraps its own REST API.
Unless there is no other choice for some reason, the per-project libraries
should be avoided.</para>
      </sect2>
      <sect2>
        <title>Direct REST calls via keystoneauth</title>
        <para>All of OpenStack's APIs are actually REST APIs. The
<link xlink:href="https://docs.openstack.org/developer/keystoneauth">keystoneauth</link> library
provides an object that looks very much like a
<link xlink:href="http://docs.python-requests.org/en/master/api/#request-sessions">Session</link>
object from the Python
<link xlink:href="http://pypi.python.org/pypi/requests">requests</link> library that handles all
of the authentication for you. If you are more comfortable just dealing with
REST or if there is a feature implemented in your cloud that has not seen
support in any of the libraries yet, this option is for you.</para>
      </sect2>
    </sect1>
    <sect1>
      <title>Installing OpenStack SDK</title>
      <para>Each OpenStack project has its own Python library. These libraries are
bundled with the command-line clients. For example, the Python bindings
for the Compute API are bundled with the python-novaclient package.</para>
      <para>For details about how to install the clients, see
.</para>
    </sect1>
    <sect1 xml:id="sdk-authenticate">
      <title>Authenticate</title>
      <para>When using the SDK, you must authenticate against an OpenStack endpoint
before you can use OpenStack services. Because all projects use Keystone
for authentication, the process is the same no matter which service
or library you have decided to use. Each library also has more advanced
and complicated ways to do things, should those be needed.</para>
      <para>There are two basic ways to deal with your cloud config and credentials:</para>
      <itemizedlist>
        <listitem>
          <para>Environment variables via an openrc.sh file</para>
        </listitem>
        <listitem>
          <para>clouds.yaml config file</para>
        </listitem>
      </itemizedlist>
      <para>The environment variables have been around the longest and are the form
you are most likely to receive from your cloud provider. If you have one
and only one cloud account, they are the most convenient way.</para>
      <para><literal>clouds.yaml</literal> is a bit newer and was designed to help folks who have
more than one OpenStack cloud that they are using.</para>
    </sect1>
    <sect1>
      <title>Create a Legacy Client Object</title>
      <para>All of the legacy client objects can be constructed the same way - the only
difference is the first argument to <literal>make_client</literal>. The examples will use
<literal>compute</literal> to get a nova client, but neutron can be accessed instead by
replacing <literal>compute</literal> with <literal>network</literal>.</para>
      <para>To use the legacy <literal>python-novaclient</literal> with a Compute endpoint, instantiate a
<link xlink:href="https://docs.openstack.org/developer/python-novaclient/ref/v2/client.html">novaclient.v2.client.Client</link>
object using <literal>os-client-config</literal>:</para>
      <screen language="python">import os_client_config

nova = os_client_config.make_client(
    'compute',
    auth_url='https://example.com',
    username='example-openstack-user',
    password='example-password',
    project_name='example-project-name',
    region_name='example-region-name')</screen>
      <para>If you desire a specific micro-version of the Nova API, you can pass that
as the <literal>version</literal> parameter:</para>
      <screen language="python">import os_client_config

nova = os_client_config.make_client(
    'compute',
    version='2.10',
    auth_url='https://example.com',
    username='example-openstack-user',
    password='example-password',
    project_name='example-project-name',
    region_name='example-region-name')</screen>
      <para>If you authenticate against an endpoint that uses a custom
authentication back end, you must provide the name of the plugin in the
<literal>auth_type</literal> parameter.</para>
      <para>For instance, the Rackspace public cloud is an OpenStack deployment that has
an optional custom authentication back end. While normal keystone password
authentication works perfectly well, you may want to use the
custom Rackspace keystoneauth API Key plugin found in
<link xlink:href="https://pypi.python.org/pypi/rackspaceauth">rackspace-keystoneauth-plugin</link>.</para>
      <screen language="python">nova = os_client_config.make_client(
    'compute',
    auth_type='rackspace_apikey',
    auth_url='https://example.com',
    username='example-openstack-user',
    api_key='example-apikey',
    project_name='example-project-name',
    region_name='example-region-name')</screen>
    </sect1>
    <sect1>
      <title>Manage images</title>
      <para>When working with images in the SDK, you will call both <literal>glance</literal> and
<literal>nova</literal> methods.</para>
      <sect2>
        <title>List images</title>
        <para>To list the available images, call the
<literal>glanceclient.v2.images.Controller.list</literal> method:</para>
        <screen language="python">import glanceclient.v2.client as glclient
glance = glclient.Client(...)
images = glance.images.list()</screen>
        <para>The images method returns a Python generator, as shown in the following
interaction with the Python interpreter:</para>
        <screen language="python">&gt;&gt;&gt; images = glance.images.list()
&gt;&gt;&gt; images
&lt;generator object list at 0x105e9c2d0&gt;
&gt;&gt;&gt; list(images)
[{u'checksum': u'f8a2eeee2dc65b3d9b6e63678955bd83',
  u'container_format': u'ami',
  u'created_at': u'2013-10-20T14:28:10Z',
  u'disk_format': u'ami',
  u'file': u'/v2/images/dbc9b2db-51d7-403d-b680-3f576380b00c/file',
  u'id': u'dbc9b2db-51d7-403d-b680-3f576380b00c',
  u'kernel_id': u'c002c82e-2cfa-4952-8461-2095b69c18a6',
  u'min_disk': 0,
  u'min_ram': 0,
  u'name': u'cirros-0.3.2-x86_64-uec',
  u'protected': False,
  u'ramdisk_id': u'4c1c9b4f-3fe9-425a-a1ec-1d8fd90b4db3',
  u'schema': u'/v2/schemas/image',
  u'size': 25165824,
  u'status': u'active',
  u'tags': [],
  u'updated_at': u'2013-10-20T14:28:11Z',
  u'visibility': u'public'},
 {u'checksum': u'69c33642f44ca552ba4bb8b66ad97e85',
  u'container_format': u'ari',
  u'created_at': u'2013-10-20T14:28:09Z',
  u'disk_format': u'ari',
  u'file': u'/v2/images/4c1c9b4f-3fe9-425a-a1ec-1d8fd90b4db3/file',
  u'id': u'4c1c9b4f-3fe9-425a-a1ec-1d8fd90b4db3',
  u'min_disk': 0,
  u'min_ram': 0,
  u'name': u'cirros-0.3.2-x86_64-uec-ramdisk',
  u'protected': False,
  u'schema': u'/v2/schemas/image',
  u'size': 3714968,
  u'status': u'active',
  u'tags': [],
  u'updated_at': u'2013-10-20T14:28:10Z',
  u'visibility': u'public'},
 {u'checksum': u'c352f4e7121c6eae958bc1570324f17e',
  u'container_format': u'aki',
  u'created_at': u'2013-10-20T14:28:08Z',
  u'disk_format': u'aki',
  u'file': u'/v2/images/c002c82e-2cfa-4952-8461-2095b69c18a6/file',
  u'id': u'c002c82e-2cfa-4952-8461-2095b69c18a6',
  u'min_disk': 0,
  u'min_ram': 0,
  u'name': u'cirros-0.3.2-x86_64-uec-kernel',
  u'protected': False,
  u'schema': u'/v2/schemas/image',
  u'size': 4955792,
  u'status': u'active',
  u'tags': [],
  u'updated_at': u'2013-10-20T14:28:09Z',
  u'visibility': u'public'}]</screen>
      </sect2>
      <sect2>
        <title>Get image by ID</title>
        <para>To retrieve an image object from its ID, call the
<literal>glanceclient.v2.images.Controller.get</literal> method:</para>
        <screen language="python">import glanceclient.v2.client as glclient
image_id = 'c002c82e-2cfa-4952-8461-2095b69c18a6'
glance = glclient.Client(...)
image = glance.images.get(image_id)</screen>
      </sect2>
      <sect2>
        <title>Get image by name</title>
        <para>The Image service Python bindings do not support the retrieval of an
image object by name. However, the Compute Python bindings enable you to
get an image object by name. To get an image object by name, call the
<literal>novaclient.v2.images.ImageManager.find</literal> method:</para>
        <screen language="python">import novaclient.v2.client as nvclient
name = "cirros"
nova = nvclient.Client(...)
image = nova.images.find(name=name)</screen>
      </sect2>
      <sect2>
        <title>Upload an image</title>
        <para>To upload an image, call the <literal>glanceclient.v2.images.ImageManager.create</literal>
method:</para>
        <screen language="python">import glanceclient.v2.client as glclient
imagefile = "/tmp/myimage.img"
glance = glclient.Client(...)
with open(imagefile) as fimage:
  glance.images.create(name="myimage", is_public=False, disk_format="qcow2",
                       container_format="bare", data=fimage)</screen>
      </sect2>
    </sect1>
    <sect1>
      <title>Assign CORS headers to requests</title>
      <para><xref linkend="term-cross-origin-resource-sharing-cors"/> is a specification that
defines how browsers and servers communicate across origins by using
HTTP headers, such as those assigned by Object Storage API
requests. The Object Storage API supports the following headers:</para>
      <itemizedlist>
        <listitem>
          <para>Access-Control-Allow-Credentials</para>
        </listitem>
        <listitem>
          <para>Access-Control-Allow-Methods</para>
        </listitem>
        <listitem>
          <para>Access-Control-Allow-Origin</para>
        </listitem>
        <listitem>
          <para>Access-Control-Expose-Headers</para>
        </listitem>
        <listitem>
          <para>Access-Control-Max-Age</para>
        </listitem>
        <listitem>
          <para>Access-Control-Request-Headers</para>
        </listitem>
        <listitem>
          <para>Access-Control-Request-Method</para>
        </listitem>
        <listitem>
          <para>Origin</para>
        </listitem>
      </itemizedlist>
      <para>You can only assign these headers to objects. For more information, see
<link xlink:href="http://www.w3.org/TR/access-control/">www.w3.org/TR/access-control/</link>.</para>
      <para>This example assigns the file origin to the <literal>Origin</literal> header, which
ensures that the file originated from a reputable source.</para>
      <screen language="console">$ curl -i -X POST -H "Origin: example.com" -H "X-Auth-Token:
48e17715dfce47bb90dc2a336f63493a"
https://storage.example.com/v1/MossoCloudFS_c31366f1-9f1c-40dc-a
b92-6b3f0b5a8c45/ephotos
HTTP/1.1 204 No Content
Content-Length: 0
Content-Type: text/html; charset=UTF-8
Access-Control-Allow-Origin: example.com
Access-Control-Expose-Headers: cache-control, content-language,
content-type, expires, last-modified, pragma, etag, x-timestamp, x-trans-id
X-Trans-Id: tx979bfe26be6649c489ada-0054cba1d9ord1
Date: Fri, 30 Jan 2015 15:23:05 GMT</screen>
    </sect1>
    <sect1>
      <title>Schedule objects for deletion</title>
      <para>To determine whether your Object Storage system supports this feature,
see .
Alternatively, check with your service provider.</para>
      <para>Scheduling an object for deletion is helpful for managing objects that
you do not want to permanently store, such as log files, recurring full
backups of a dataset, or documents or images that become outdated at a
specified time.</para>
      <para>To schedule an object for deletion, include one of these headers with
the <literal>PUT</literal> or <literal>POST</literal> request on the object:</para>
      <variablelist>
        <varlistentry>
          <term>X-Delete-At</term>
          <listitem>
            <para>A UNIX epoch timestamp, in integer form. For example, <literal>1348691905</literal>
represents <literal>Wed, 26 Sept 2012 20:38:25 GMT</literal>. It specifies the time you
want the object to expire, no longer be served, and be deleted completely
from the object store.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>X-Delete-After</term>
          <listitem>
            <para>An integer value which specifies the number of seconds from the time of
the request to when you want to delete the object.
This header is converted to a <literal>X-Delete-At</literal> header that is set to
the sum of the <literal>X-Delete-After</literal> value plus the current time, in
seconds.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <note>
        <para>Use <link xlink:href="http://www.epochconverter.com/">EpochConverter</link> to convert dates to
and from epoch timestamps and for batch conversions.</para>
      </note>
      <para>Use the POST method to assign expiration headers to existing objects
that you want to expire.</para>
      <para>In this example, the <literal>X-Delete-At</literal> header is assigned a UNIX epoch
timestamp in integer form for <literal>Mon, 11 Jun 2012 15:38:25 GMT</literal>.</para>
      <screen language="console">$ curl -i publicURL/marktwain/goodbye -X PUT -H "X-Auth-Token: token" \
  -H "X-Delete-At: 1390581073" -H "Content-Length: 14" -H \
  "Content-Type: application/octet-stream"</screen>
      <para>In this example, the <literal>X-Delete-After</literal> header is set to 864000 seconds.
The object expires after this time.</para>
      <screen language="console">PUT /&lt;api version&gt;/&lt;account&gt;/&lt;container&gt;/&lt;object&gt; HTTP/1.1
Host: storage.example.com
X-Auth-Token: eaaafd18-0fed-4b3a-81b4-663c99ec1cbb
Content-Type: image/jpeg
X-Delete-After: 864000</screen>
    </sect1>
    <sect1>
      <title>Configure access and security for instances</title>
      <para>When working with images in the SDK, you will call <literal>novaclient</literal>
methods.</para>
      <sect2>
        <title>Add a keypair</title>
        <para>To generate a keypair, call the
<link xlink:href="http://docs.openstack.org/developer/python-novaclient/api/novaclient.v1_1.keypairs.html#novaclient.v1_1.keypairs.KeypairManager.create">novaclient.v1_1.keypairs.KeypairManager.create</link> method:</para>
        <screen language="python">import novaclient.v2.client as nvclient
nova = nvclient.Client(...)
keypair_name = "staging"
keypair = nova.keypairs.create(name=keypair_name)
print keypair.private_key</screen>
        <para>The Python script output looks something like this:</para>
        <screen language="console">-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEA8XkaMqInSPfy0hMfWO+OZRtIgrQAbQkNcaNHmv2GN2G6xZlb\nuBRux5Xk/6SZ
ABaNPm1nRWm/ZDHnxCsFTcAl2LYOQXx3Cl2qKNY4r2di4G48GAkd\n7k5lDP2RgQatUM8npO0CD9PU
...
mmrceYYK08/lQ7JKLmVkdzdQKt77+v1oBBuHiykLfI6h1m77NRDw9r8cV\nzczYeoALifpjTPMkKS8
ECfDCuDn/vc9K1He8CRaJHf8AMLQLM3MN
-----END RSA PRIVATE KEY-----</screen>
        <para>You typically write the private key to a file to use it later. The
file must be readable and writeable by only the file owner; otherwise,
the SSH client will refuse to read the private key file. The safest way
is to create the file with the appropriate permissions, as shown in the
following example:</para>
        <screen language="python">import novaclient.v2.client as nvclient
import os
nova = nvclient.Client(...)
keypair_name = "staging"
private_key_filename = "/home/alice/id-staging"
keypair = nova.keypairs.create(name=keypair_name)

# Create a file for writing that can only be read and written by
owner
fp = os.open(private_key_filename, os.O_WRONLY | os.O_CREAT, 0o600)
with os.fdopen(fp, 'w') as f:
    f.write(keypair.private_key)</screen>
      </sect2>
      <sect2>
        <title>Import a keypair</title>
        <para>If you have already generated a keypair with the public key located at
<literal>~/.ssh/id_rsa.pub</literal>, pass the contents of the file to the
<link xlink:href="http://docs.openstack.org/developer/python-novaclient/api/novaclient.v1_1.keypairs.html#novaclient.v1_1.keypairs.KeypairManager.create">novaclient.v1_1.keypairs.KeypairManager.create</link> method to
import the public key to Compute:</para>
        <screen language="python">import novaclient.v2.client as nvclient
import os.path
with open(os.path.expanduser('~/.ssh/id_rsa.pub')) as f:
    public_key = f.read()
nova = nvclient.Client(...)
nova.keypairs.create('mykey', public_key)</screen>
      </sect2>
      <sect2>
        <title>List keypairs</title>
        <para>To list keypairs, call the
<link xlink:href="https://docs.openstack.org/developer/python-novaclient/api/novaclient.v1_1.keypairs.html#novaclient.v1_1.keypairs.KeypairManager.list">novaclient.v1_1.keypairs.KeypairManager.list</link> method:</para>
        <screen language="python">import novaclient.v2.client as nvclient
nova = nvclient.Client(...)
keypairs = nova.keypairs.list()</screen>
      </sect2>
      <sect2>
        <title>Create and manage security groups</title>
        <para>To list security groups for the current project, call the
<link xlink:href="https://docs.openstack.org/developer/python-novaclient/api/novaclient.v1_1.security_groups.html#novaclient.v1_1.security_groups.SecurityGroupManager.list">novaclient.v_1.security_groups.SecurityGroupManager.list</link> method:</para>
        <screen language="python">import novaclient.v2.client as nvclient
nova = nvclient.Client(...)
security_groups = nova.security_groups.list()</screen>
        <para>To create a security group with a specified name and description, call
the <link xlink:href="https://docs.openstack.org/developer/python-novaclient/api/novaclient.v1_1.security_groups.html#novaclient.v1_1.security_groups.SecurityGroupManager.create">novaclient.v_1.security_groups.SecurityGroupManager.create</link> method:</para>
        <screen language="python">import novaclient.v2.client as nvclient
nova = nvclient.Client(...)
nova.security_groups.create(name="web", description="Web servers")</screen>
        <para>To delete a security group, call the
<link xlink:href="https://docs.openstack.org/developer/python-novaclient/api/novaclient.v1_1.security_groups.html#novaclient.v1_1.security_groups.SecurityGroupManager.delete">novaclient.v_1.security_groups.SecurityGroupManager.delete</link> method, passing either a
<link xlink:href="https://docs.openstack.org/developer/python-novaclient/api/novaclient.v1_1.security_groups.html#novaclient.v1_1.security_groups.SecurityGroup">novaclient.v1_1.security_groups.SecurityGroup</link> object or group ID as an argument:</para>
        <screen language="python">import novaclient.v2.client as nvclient
nova = nvclient.Client(...)
group = nova.security_groups.find(name="web")
nova.security_groups.delete(group)
# The following lines would also delete the group:
# nova.security_groups.delete(group.id)
# group.delete()</screen>
      </sect2>
      <sect2>
        <title>Create and manage security group rules</title>
        <para>Access the security group rules from the <literal>rules</literal> attribute of a
<link xlink:href="http://docs.openstack.org/developer/python-novaclient/api/novaclient.v1_1.security_groups.html#novaclient.v1_1.security_groups.SecurityGroup">novaclient.v1_1.security_groups.SecurityGroup</link> object:</para>
        <screen language="python">import novaclient.v2.client as nvclient
nova = nvclient.Client(...)
group = nova.security_groups.find(name="web")
print group.rules</screen>
        <para>To add a rule to a security group, call the
<link xlink:href="https://docs.openstack.org/developer/python-novaclient/api/novaclient.v1_1.security_group_rules.html#novaclient.v1_1.security_group_rules.SecurityGroupRuleManager.create">novaclient.v1_1.security_group_rules.SecurityGroupRuleManager.create</link> method:</para>
        <screen language="python">import novaclient.v2.client as nvclient
nova = nvclient.Client(...)
group = nova.security_groups.find(name="web")
# Add rules for ICMP, tcp/80 and tcp/443
nova.security_group_rules.create(group.id, ip_protocol="icmp",
                                 from_port=-1, to_port=-1)
nova.security_group_rules.create(group.id, ip_protocol="tcp",
                                 from_port=80, to_port=80)
nova.security_group_rules.create(group.id, ip_protocol="tcp",
                                 from_port=443, to_port=443)</screen>
      </sect2>
    </sect1>
    <sect1>
      <title>Networking</title>
      <para>To use the information in this section, you should have a general
understanding of OpenStack Networking, OpenStack Compute, and the
integration between the two. You should also have access to a plug-in
that implements the Networking API v2.0.</para>
      <sect2>
        <title>Set environment variables</title>
        <para>Make sure that you set the relevant environment variables.</para>
        <para>As an example, see the sample shell file that sets these variables to
get credentials:</para>
        <screen language="bash">export OS_USERNAME="admin"
export OS_PASSWORD="password"
export OS_TENANT_NAME="admin"
export OS_AUTH_URL="http://IPADDRESS/v2.0"</screen>
      </sect2>
      <sect2 xml:id="get-credentials">
        <title>Get credentials</title>
        <para>The examples in this section use the <literal>get_credentials</literal> method:</para>
        <screen language="python">def get_credentials():
    d = {}
    d['username'] = os.environ['OS_USERNAME']
    d['password'] = os.environ['OS_PASSWORD']
    d['auth_url'] = os.environ['OS_AUTH_URL']
    d['tenant_name'] = os.environ['OS_TENANT_NAME']
    return d</screen>
        <para>This code resides in the <literal>credentials.py</literal> file, which all samples
import.</para>
        <para>Use the <literal>get_credentials()</literal> method to populate and get a dictionary:</para>
        <screen language="python">credentials = get_credentials()</screen>
      </sect2>
      <sect2 xml:id="get-nova-credentials">
        <title>Get Nova credentials</title>
        <para>The examples in this section use the <literal>get_nova_credentials</literal> method:</para>
        <screen language="python">def get_nova_credentials():
    d = {}
    d['username'] = os.environ['OS_USERNAME']
    d['api_key'] = os.environ['OS_PASSWORD']
    d['auth_url'] = os.environ['OS_AUTH_URL']
    d['project_id'] = os.environ['OS_TENANT_NAME']
    return d</screen>
        <para>This code resides in the <literal>credentials.py</literal> file, which all samples
import.</para>
        <para>Use the <literal>get_nova_credentials()</literal> method to populate and get a
dictionary:</para>
        <screen language="python">nova_credentials = get_nova_credentials()</screen>
      </sect2>
      <sect2 xml:id="print-values">
        <title>Print values</title>
        <para>The examples in this section use the <literal>print_values</literal> and
<literal>print_values_server</literal> methods:</para>
        <screen language="python">def print_values(val, type):
    if type == 'ports':
        val_list = val['ports']
    if type == 'networks':
        val_list = val['networks']
    if type == 'routers':
        val_list = val['routers']
    for p in val_list:
        for k, v in p.items():
            print("%s : %s" % (k, v))
        print('\n')


def print_values_server(val, server_id, type):
    if type == 'ports':
        val_list = val['ports']

    if type == 'networks':
        val_list = val['networks']
    for p in val_list:
        bool = False
        for k, v in p.items():
            if k == 'device_id' and v == server_id:
                bool = True
        if bool:
            for k, v in p.items():
                print("%s : %s" % (k, v))
            print('\n')</screen>
        <para>This code resides in the <literal>utils.py</literal> file, which all samples import.</para>
      </sect2>
      <sect2>
        <title>Create network</title>
        <para>The following program creates a network:</para>
        <screen language="python">#!/usr/bin/env python
from neutronclient.v2_0 import client
from credentials import get_credentials

network_name = 'sample_network'
credentials = get_credentials()
neutron = client.Client(**credentials)
try:
    body_sample = {'network': {'name': network_name,
                   'admin_state_up': True}}

    netw = neutron.create_network(body=body_sample)
    net_dict = netw['network']
    network_id = net_dict['id']
    print('Network %s created' % network_id)

    body_create_subnet = {'subnets': [{'cidr': '192.168.199.0/24',
                          'ip_version': 4, 'network_id': network_id}]}

    subnet = neutron.create_subnet(body=body_create_subnet)
    print('Created subnet %s' % subnet)
finally:
    print("Execution completed")</screen>
      </sect2>
      <sect2>
        <title>List networks</title>
        <para>The following program lists networks:</para>
        <screen language="python">#!/usr/bin/env python
from neutronclient.v2_0 import client
from credentials import get_credentials
from utils import print_values

credentials = get_credentials()
neutron = client.Client(**credentials)
netw = neutron.list_networks()

print_values(netw, 'networks')</screen>
        <para>For <literal>print_values</literal>, see <xref linkend="print-values"/>.</para>
      </sect2>
      <sect2>
        <title>Create ports</title>
        <para>The following program creates a port:</para>
        <screen language="python">#!/usr/bin/env python
from neutronclient.v2_0 import client
import novaclient.v2.client as nvclient
from credentials import get_credentials
from credentials import get_nova_credentials

credentials = get_nova_credentials()
nova_client = nvclient.Client(**credentials)

# Replace with server_id and network_id from your environment

server_id = '9a52795a-a70d-49a8-a5d0-5b38d78bd12d'
network_id = 'ce5d204a-93f5-43ef-bd89-3ab99ad09a9a'
server_detail = nova_client.servers.get(server_id)
print(server_detail.id)

if server_detail != None:
    credentials = get_credentials()
    neutron = client.Client(**credentials)

    body_value = {
                     "port": {
                             "admin_state_up": True,
                             "device_id": server_id,
                             "name": "port1",
                             "network_id": network_id
                      }
                 }
    response = neutron.create_port(body=body_value)
    print(response)</screen>
        <para>For <literal>get_nova_credentials</literal>, see <xref linkend="get-nova-credentials"/>.</para>
        <para>For <literal>get_credentials</literal>, see <xref linkend="get-credentials"/>.</para>
      </sect2>
      <sect2>
        <title>List ports</title>
        <para>The following program lists ports:</para>
        <screen language="python">#!/usr/bin/env python
from neutronclient.v2_0 import client
from credentials import get_credentials
from utils import print_values

credentials = get_credentials()
neutron = client.Client(**credentials)
ports = neutron.list_ports()
print_values(ports, 'ports')</screen>
        <para>For <literal>get_credentials</literal> see <xref linkend="get-credentials"/>.</para>
        <para>For <literal>print_values</literal>, see <xref linkend="print-values"/>.</para>
      </sect2>
      <sect2>
        <title>List server ports</title>
        <para>The following program lists the ports for a server:</para>
        <screen language="python">#!/usr/bin/env python
from neutronclient.v2_0 import client
import novaclient.v2.client as nvclient
from credentials import get_credentials
from credentials import get_nova_credentials
from utils import print_values_server

credentials = get_nova_credentials()
nova_client = nvclient.Client(**credentials)

# change these values according to your environment

server_id = '9a52795a-a70d-49a8-a5d0-5b38d78bd12d'
network_id = 'ce5d204a-93f5-43ef-bd89-3ab99ad09a9a'
server_detail = nova_client.servers.get(server_id)
print(server_detail.id)

if server_detail is not None:
    credentials = get_credentials()
    neutron = client.Client(**credentials)
    ports = neutron.list_ports()

    print_values_server(ports, server_id, 'ports')
    body_value = {'port': {
        'admin_state_up': True,
        'device_id': server_id,
        'name': 'port1',
        'network_id': network_id,
        }}

    response = neutron.create_port(body=body_value)
    print(response)</screen>
      </sect2>
      <sect2>
        <title>Create router and add port to subnet</title>
        <para>This example queries OpenStack Networking to create a router and add a
port to a subnet.</para>
        <procedure>
          <step>
            <para>Import the following modules:</para>
            <screen language="python">from neutronclient.v2_0 import client
import novaclient.v2.client as nvclient
from credentials import get_credentials
from credentials import get_nova_credentials
from utils import print_values_server</screen>
          </step>
          <step>
            <para>Get Nova Credentials. See :ref:'Get Nova credentials
&lt;get-nova-credentials&gt;'.</para>
          </step>
          <step>
            <para>Instantiate the <literal>nova_client</literal> client object by using the
<literal>credentials</literal> dictionary object:</para>
            <screen language="python">nova_client = nvclient.Client(**credentials)</screen>
          </step>
          <step>
            <para>Create a router and add a port to the subnet:</para>
            <screen language="python"># Replace with network_id from your environment

network_id = '81bf592a-9e3f-4f84-a839-ae87df188dc1'

credentials = get_credentials()
neutron = client.Client(**credentials)
neutron.format = json
request = {'router': {'name': 'router name',
                      'admin_state_up': True}}

router = neutron.create_router(request)
router_id = router['router']['id']
# for example: '72cf1682-60a8-4890-b0ed-6bad7d9f5466'
router = neutron.show_router(router_id)
print(router)
body_value = {'port': {
    'admin_state_up': True,
    'device_id': router_id,
    'name': 'port1',
    'network_id': network_id,
    }}

response = neutron.create_port(body=body_value)
print(response)
print("Execution Completed")</screen>
          </step>
        </procedure>
        <sect3>
          <title>Create router: complete code listing example</title>
          <screen language="python">#!/usr/bin/env python
from neutronclient.v2_0 import client
import novaclient.v2.client as nvclient
from credentials import get_credentials
from credentials import get_nova_credentials
from utils import print_values_server

credentials = get_nova_credentials()
nova_client = nvclient.Client(**credentials)

# Replace with network_id from your environment

network_id = '81bf592a-9e3f-4f84-a839-ae87df188dc1'
try:
    credentials = get_credentials()
    neutron = client.Client(**credentials)
    neutron.format = 'json'
    request = {'router': {'name': 'router name',
                          'admin_state_up': True}}
    router = neutron.create_router(request)
    router_id = router['router']['id']
    # for example: '72cf1682-60a8-4890-b0ed-6bad7d9f5466'
    router = neutron.show_router(router_id)
    print(router)
    body_value = {'port': {
        'admin_state_up': True,
        'device_id': router_id,
        'name': 'port1',
        'network_id': network_id,
        }}

    response = neutron.create_port(body=body_value)
    print(response)
finally:
    print("Execution completed")</screen>
        </sect3>
      </sect2>
      <sect2>
        <title>Delete a network</title>
        <para>This example queries OpenStack Networking to delete a network.</para>
        <para>To delete a network:</para>
        <procedure>
          <step>
            <para>Import the following modules:</para>
            <screen language="python">from neutronclient.v2_0 import client
from credentials import get_credentials</screen>
          </step>
          <step>
            <para>Get credentials. See <xref linkend="get-nova-credentials"/>.</para>
          </step>
          <step>
            <para>Instantiate the <literal>neutron</literal> client object by using the <literal>credentials</literal>
dictionary object:</para>
            <screen language="python">neutron = client.Client(**credentials)</screen>
          </step>
          <step>
            <para>Delete the network:</para>
            <screen language="python">body_sample = {'network': {'name': network_name,
               'admin_state_up': True}}

netw = neutron.create_network(body=body_sample)
net_dict = netw['network']
network_id = net_dict['id']
print('Network %s created' % network_id)

body_create_subnet = {'subnets': [{'cidr': '192.168.199.0/24',
                      'ip_version': 4, 'network_id': network_id}]}

subnet = neutron.create_subnet(body=body_create_subnet)
print('Created subnet %s' % subnet)

neutron.delete_network(network_id)
print('Deleted Network %s' % network_id)

print("Execution completed")</screen>
          </step>
        </procedure>
        <sect3>
          <title>Delete network: complete code listing example</title>
          <screen language="python">#!/usr/bin/env python
from neutronclient.v2_0 import client
from credentials import get_credentials

network_name = 'temp_network'
credentials = get_credentials()
neutron = client.Client(**credentials)
try:
    body_sample = {'network': {'name': network_name,
                   'admin_state_up': True}}

    netw = neutron.create_network(body=body_sample)
    net_dict = netw['network']
    network_id = net_dict['id']
    print('Network %s created' % network_id)

    body_create_subnet = {'subnets': [{'cidr': '192.168.199.0/24',
                          'ip_version': 4, 'network_id': network_id}]}

    subnet = neutron.create_subnet(body=body_create_subnet)
    print('Created subnet %s' % subnet)

    neutron.delete_network(network_id)
    print('Deleted Network %s' % network_id)
finally:
    print("Execution Completed")</screen>
        </sect3>
      </sect2>
      <sect2>
        <title>List routers</title>
        <para>This example queries OpenStack Networking to list all routers.</para>
        <procedure>
          <step>
            <para>Import the following modules:</para>
            <screen language="python">from neutronclient.v2_0 import client
from credentials import get_credentials
from utils import print_values</screen>
          </step>
          <step>
            <para>Get credentials. See <xref linkend="get-nova-credentials"/>.</para>
          </step>
          <step>
            <para>Instantiate the <literal>neutron</literal> client object by using the <literal>credentials</literal>
dictionary object:</para>
            <screen language="python">neutron = client.Client(**credentials)</screen>
          </step>
          <step>
            <para>List the routers:</para>
            <screen language="python">routers_list = neutron.list_routers(retrieve_all=True)
print_values(routers_list, 'routers')
print("Execution completed")</screen>
            <para>For <literal>print_values</literal>, see <xref linkend="print-values"/>.</para>
          </step>
        </procedure>
        <sect3>
          <title>List routers: complete code listing example</title>
          <screen language="python">#!/usr/bin/env python
from neutronclient.v2_0 import client
from credentials import get_credentials
from utils import print_values

try:
    credentials = get_credentials()
    neutron = client.Client(**credentials)
    routers_list = neutron.list_routers(retrieve_all=True)
    print_values(routers_list, 'routers')
finally:
    print("Execution completed")</screen>
        </sect3>
      </sect2>
      <sect2>
        <title>List security groups</title>
        <para>This example queries OpenStack Networking to list security groups.</para>
        <procedure>
          <step>
            <para>Import the following modules:</para>
            <screen language="python">from neutronclient.v2_0 import client
from credentials import get_credentials
from utils import print_values</screen>
          </step>
          <step>
            <para>Get credentials. See <xref linkend="get-credentials"/>.</para>
          </step>
          <step>
            <para>Instantiate the <literal>neutron</literal> client object by using the <literal>credentials</literal>
dictionary object:</para>
            <screen language="python">neutron = client.Client(**credentials)</screen>
          </step>
          <step>
            <para>List Security groups</para>
            <screen language="python">sg = neutron.list_security_groups()
print(sg)</screen>
          </step>
        </procedure>
        <sect3>
          <title>List security groups: complete code listing example</title>
          <screen language="python">#!/usr/bin/env python
from neutronclient.v2_0 import client
from credentials import get_credentials
from utils import print_values

credentials = get_credentials()
neutron = client.Client(**credentials)
sg = neutron.list_security_groups()
print(sg)</screen>
          <note>
            <para>OpenStack Networking security groups are case-sensitive while the
nova-network security groups are case-insensitive.</para>
          </note>
        </sect3>
      </sect2>
      <sect2>
        <title>List subnets</title>
        <para>This example queries OpenStack Networking to list subnets.</para>
        <procedure>
          <step>
            <para>Import the following modules:</para>
            <screen language="python">from neutronclient.v2_0 import client
from credentials import get_credentials
from utils import print_values</screen>
          </step>
          <step>
            <para>Get credentials. See :ref:'Get credentials &lt;get-credentials&gt;'.</para>
          </step>
          <step>
            <para>Instantiate the <literal>neutron</literal> client object by using the <literal>credentials</literal>
dictionary object:</para>
            <screen language="python">neutron = client.Client(**credentials)</screen>
          </step>
          <step>
            <para>List subnets:</para>
            <screen language="python">subnets = neutron.list_subnets()
print(subnets)</screen>
          </step>
        </procedure>
        <sect3>
          <title>List subnets: complete code listing example</title>
          <screen language="python">#!/usr/bin/env python
from neutronclient.v2_0 import client
from credentials import get_credentials
from utils import print_values

credentials = get_credentials()
neutron = client.Client(**credentials)
subnets = neutron.list_subnets()
print(subnets)</screen>
        </sect3>
      </sect2>
    </sect1>
    <sect1>
      <title>Compute</title>
      <para>To use the information in this section, you must be familiar with
OpenStack Compute.</para>
      <sect2>
        <title>Set environment variables</title>
        <para>To set up environmental variables and authenticate against Compute API
endpoints, see <xref linkend="sdk-authenticate"/>.</para>
      </sect2>
      <sect2 xml:id="get-openstack-credentials">
        <title>Get OpenStack credentials (API v2)</title>
        <para>This example uses the <literal>get_nova_credentials_v2</literal> method:</para>
        <screen language="python">def get_nova_credentials_v2():
    d = {}
    d['version'] = '2'
    d['username'] = os.environ['OS_USERNAME']
    d['api_key'] = os.environ['OS_PASSWORD']
    d['auth_url'] = os.environ['OS_AUTH_URL']
    d['project_id'] = os.environ['OS_TENANT_NAME']
    return d</screen>
        <para>This code resides in the <literal>credentials.py</literal> file, which all samples
import.</para>
        <para>Use the <literal>get_nova_credentials_v2()</literal> method to populate and get a
dictionary:</para>
        <screen language="python">credentials = get_nova_credentials_v2()</screen>
      </sect2>
      <sect2>
        <title>List servers (API v2)</title>
        <para>The following program lists servers by using the Compute API v2.</para>
        <procedure>
          <step>
            <para>Import the following modules:</para>
            <screen language="python">from credentials import get_nova_credentials_v2
from novaclient.client import Client</screen>
          </step>
          <step>
            <para>Get Nova credentials. See <xref linkend="get-openstack-credentials"/>.</para>
          </step>
          <step>
            <para>Instantiate the <literal>nova_client</literal> client object by using the
<literal>credentials</literal> dictionary object:</para>
            <screen language="python">nova_client = Client(**credentials)</screen>
          </step>
          <step>
            <para>List servers by calling <literal>servers.list</literal> on <literal>nova_client</literal> object:</para>
            <screen language="python">print(nova_client.servers.list())</screen>
          </step>
        </procedure>
        <sect3>
          <title>List server code listing example</title>
          <screen language="python">#!/usr/bin/env python
from credentials import get_nova_credentials_v2
from novaclient.client import Client

credentials = get_nova_credentials_v2()
nova_client = Client(**credentials)

print(nova_client.servers.list())</screen>
        </sect3>
      </sect2>
      <sect2>
        <title>Create server (API v2)</title>
        <para>The following program creates a server (VM) by using the Compute API v2.</para>
        <procedure>
          <step>
            <para>Import the following modules:</para>
            <screen language="python">import time
from credentials import get_nova_credentials_v2
from novaclient.client import Client</screen>
          </step>
          <step>
            <para>Get OpenStack credentials. See <xref linkend="get-openstack-credentials"/>.</para>
          </step>
          <step>
            <para>Instantiate the <literal>nova_client</literal> client object by using the
<literal>credentials</literal> dictionary object:</para>
            <screen language="python">nova_client = Client(**credentials)</screen>
          </step>
          <step>
            <para>Get the flavor and image to use to create a server. This code uses
the <literal>cirros</literal> image, the <literal>m1.tiny</literal> flavor, and the <literal>private</literal>
network:</para>
            <screen language="python">image = nova_client.images.find(name="cirros")
flavor = nova_client.flavors.find(name="m1.tiny")
net = nova_client.networks.find(label="private")</screen>
          </step>
          <step>
            <para>To create the server, use the network, image, and flavor:</para>
            <screen language="python">nics = [{'net-id': net.id}]
instance = nova_client.servers.create(name="vm2", image=image,
flavor=flavor, key_name="keypair-1", nics=nics)</screen>
          </step>
          <step>
            <para>Run the "Sleep for five seconds" command, and determine whether
the server/vm was created by calling <literal>nova_client.servers.list()</literal>:</para>
            <screen language="python">print("Sleeping for 5s after create command")
time.sleep(5)
print("List of VMs")
print(nova_client.servers.list())</screen>
          </step>
        </procedure>
        <sect3>
          <title>Create server code listing example</title>
          <screen language="python"><?dbsuse-fo font-size="8pt"?>#!/usr/bin/env python
import time
from credentials import get_nova_credentials_v2
from novaclient.client import Client

try:
    credentials = get_nova_credentials_v2()
    nova_client = Client(**credentials)

    image = nova_client.images.find(name="cirros")
    flavor = nova_client.flavors.find(name="m1.tiny")
    net = nova_client.networks.find(label="private")
    nics = [{'net-id': net.id}]
    instance = nova_client.servers.create(name="vm2", image=image,
                                      flavor=flavor, key_name="keypair-1", nics=nics)
    print("Sleeping for 5s after create command")
    time.sleep(5)
    print("List of VMs")
    print(nova_client.servers.list())
finally:
    print("Execution Completed")</screen>
        </sect3>
      </sect2>
      <sect2>
        <title>Delete server (API v2)</title>
        <para>The following program deletes a server (VM) by using the Compute API v2.</para>
        <procedure>
          <step>
            <para>Import the following modules:</para>
            <screen language="python">import time
from credentials import get_nova_credentials_v2
from novaclient.client import Client</screen>
          </step>
          <step>
            <para>Get Nova credentials. See <xref linkend="get-openstack-credentials"/>.</para>
          </step>
          <step>
            <para>Instantiate the <literal>nova_client</literal> client object by using the
<literal>credentials</literal> dictionary object:</para>
            <screen language="python">nova_client = Client(**credentials)</screen>
          </step>
          <step>
            <para>Determine whether the <literal>vm1</literal> server exists:</para>
            <substeps>
              <step>
                <para>List servers: <literal>servers_list</literal>.</para>
              </step>
              <step>
                <para>Iterate over <literal>servers_list</literal> and compare name with <literal>vm1</literal>.</para>
              </step>
              <step>
                <para>If true, set the variable name <literal>server_exists</literal> to <literal>True</literal>
and break from the for loop:</para>
              </step>
            </substeps>
            <screen language="python">servers_list = nova_client.servers.list()
server_del = "vm1"
server_exists = False

for s in servers_list:
    if s.name == server_del:
        print("This server %s exists" % server_del)
        server_exists = True
        break</screen>
          </step>
          <step>
            <para>If the server exists, run the <literal>delete</literal> method of the
<literal>nova_client.servers</literal> object:</para>
            <screen language="python">nova_client.servers.delete(s)</screen>
          </step>
        </procedure>
        <sect3>
          <title>Delete server code example</title>
          <screen language="python">#!/usr/bin/env python
from credentials import get_nova_credentials_v2
from novaclient.client import Client

credentials = get_nova_credentials_v2()
nova_client = Client(**credentials)

servers_list = nova_client.servers.list()
server_del = "vm1"
server_exists = False

for s in servers_list:
    if s.name == server_del:
        print("This server %s exists" % server_del)
        server_exists = True
        break
if not server_exists:
    print("server %s does not exist" % server_del)
else:
    print("deleting server..........")
    nova_client.servers.delete(s)
    print("server %s deleted" % server_del)</screen>
        </sect3>
      </sect2>
      <sect2>
        <title>Update server (API v2)</title>
        <para>The following program updates the name of a server (VM) by using the
Compute API v2.</para>
        <procedure>
          <step>
            <para>Import the following modules:</para>
            <screen language="python">from credentials import get_nova_credentials_v2
from novaclient.client import Client
from utils import print_server</screen>
            <para><literal>print_server</literal> is a method defined in <literal>utils.py</literal> and prints the
server details as shown in the code listing below:</para>
            <screen language="python">def print_server(server):
    print("-"*35)
    print("server id: %s" % server.id)
    print("server name: %s" % server.name)
    print("server image: %s" % server.image)
    print("server flavor: %s" % server.flavor)
    print("server key name: %s" % server.key_name)
    print("user_id: %s" % server.user_id)
    print("-"*35)</screen>
          </step>
          <step>
            <para>Get OpenStack Credentials. See <xref linkend="get-openstack-credentials"/>.</para>
          </step>
          <step>
            <para>Instantiate the <literal>nova_client</literal> client object by using the
<literal>credentials</literal> dictionary object:</para>
            <screen language="python">nova_client = Client(**credentials)</screen>
          </step>
          <step>
            <para>Get the server instance using <literal>server_id</literal> and print the details by
calling <literal>print_server</literal> method:</para>
            <screen language="python">server_id = '99889c8d-113f-4a7e-970c-77f1916bfe14'
server = nova_client.servers.get(server_id)
n = server.name
print_server(server)</screen>
          </step>
          <step>
            <para>Call <literal>server.update</literal> on the server object with the new value for
<literal>name</literal> variable:</para>
            <screen language="python">server.update(name = n + '1')</screen>
          </step>
          <step>
            <para>Get the updated instance of the server:</para>
            <screen language="python">server_updated = nova_client.servers.get(server_id)</screen>
          </step>
          <step>
            <para>Call <literal>print_server</literal> again to check the update server details:</para>
            <screen language="python">print_server(server_updated)</screen>
          </step>
        </procedure>
        <sect3>
          <title>Update server code listing example</title>
          <screen language="python">#!/usr/bin/env python

from credentials import get_nova_credentials_v2
from novaclient.client import Client
from utils import print_server

credentials = get_nova_credentials_v2()
nova_client = Client(**credentials)

# Change the server_id specific to your environment

server_id = '99889c8d-113f-4a7e-970c-77f1916bfe14'
server = nova_client.servers.get(server_id)
n = server.name
print_server(server)

server.update(name=n +'1')
server_updated = nova_client.servers.get(server_id)
print_server(server_updated)</screen>
        </sect3>
      </sect2>
      <sect2>
        <title>List flavors (API v2)</title>
        <para>The following program lists flavors and their details by using the
Compute API v2.</para>
        <procedure>
          <step>
            <para>Import the following modules:</para>
            <screen language="python">from credentials import get_nova_credentials_v2
from novaclient.client import Client
from utils import print_flavors</screen>
            <para>The <literal>print_flavors</literal> method is defined in <literal>utils.py</literal> and prints the
flavor details:</para>
            <screen language="python">def print_flavors(flavor_list):
    for flavor in flavor_list:
       print("-"*35)
       print("flavor id : %s" % flavor.id)
       print("flavor name : %s" % flavor.name)
       print("-"*35)</screen>
          </step>
          <step>
            <para>Get OpenStack credentials. <xref linkend="get-openstack-credentials"/>.</para>
          </step>
          <step>
            <para>Instantiate the <literal>nova_client</literal> client object by using the
<literal>credentials</literal> dictionary object:</para>
            <screen language="python">nova_client = Client(**credentials)</screen>
          </step>
          <step>
            <para>List flavors by calling <literal>list()</literal> on <literal>nova_client.flavors</literal> object:</para>
            <screen language="python">flavors_list =  nova_client.flavors.list()</screen>
          </step>
          <step>
            <para>Print the flavor details, id and name by calling <literal>print_flavors</literal>:</para>
            <screen language="python">print_flavors(flavors_list)</screen>
          </step>
        </procedure>
        <sect3>
          <title>List flavors code listing example</title>
          <screen language="python">#!/usr/bin/env python

from credentials import get_nova_credentials_v2
from novaclient.client import Client
from utils import print_flavors

credentials = get_nova_credentials_v2()
nova_client = Client(**credentials)

flavors_list = nova_client.flavors.list()
print_flavors(flavors_list)</screen>
        </sect3>
      </sect2>
      <sect2>
        <title>List floating IPs (API v2)</title>
        <para>The following program lists the floating IPs and their details by using
the Compute API v2.</para>
        <procedure>
          <step>
            <para>Import the following modules:</para>
            <screen language="python">from credentials import get_nova_credentials_v2
from novaclient.client import Client
from utils import print_values_ip</screen>
            <para>The <literal>print_values_ip</literal> method is defined in <literal>utils.py</literal> and prints the
floating_ip object details:</para>
            <screen language="python">def print_values_ip(ip_list):
    ip_dict_lisl = []
    for ip in ip_list:
        print("-"*35)
        print("fixed_ip : %s" % ip.fixed_ip)
        print("id : %s" % ip.id)
        print("instance_id : %s" % ip.instance_id)
        print("ip : %s" % ip.ip)
        print("pool : %s" % ip.pool)</screen>
          </step>
          <step>
            <para>Get OpenStack credentials. See <xref linkend="get-openstack-credentials"/>.</para>
          </step>
          <step>
            <para>Instantiate the <literal>nova_client</literal> client object by using the
<literal>credentials</literal> dictionary object:</para>
            <screen language="python">nova_client = Client(**credentials)</screen>
          </step>
          <step>
            <para>List floating IPs by calling <literal>list()</literal> on <literal>nova_client.floating_ips</literal>
object:</para>
            <screen language="python">ip_list = nova_client.floating_ips.list()</screen>
          </step>
          <step>
            <para>Print the floating IP object details by calling <literal>print_values_ip</literal>:</para>
            <screen language="python">print_values_ip(ip_list)</screen>
          </step>
        </procedure>
        <sect3>
          <title>List floating IPs code listing example</title>
          <screen language="python">#!/usr/bin/env python

from credentials import get_nova_credentials_v2
from novaclient.client import Client
from utils import print_values_ip

credentials = get_nova_credentials_v2()
nova_client = Client(**credentials)
ip_list = nova_client.floating_ips.list()
print_values_ip(ip_list)</screen>
        </sect3>
      </sect2>
      <sect2>
        <title>List hosts (API v2)</title>
        <para>The following program lists the hosts by using the Compute API v2.</para>
        <procedure>
          <step>
            <para>Import the following modules:</para>
            <screen language="python">from credentials import get_nova_credentials_v2
from novaclient.client import Client
from utils import print_hosts</screen>
            <para>The <literal>print_hosts</literal> method is defined in <literal>utils.py</literal> and prints the
host object details:</para>
            <screen language="python">def print_hosts(host_list):
    for host in host_list:
       print("-"*35)
       print("host_name : %s" % host.host_name)
       print("service : %s" % host.service)
       print("zone : %s" % host.zone)
       print("-"*35)</screen>
          </step>
          <step>
            <para>Get OpenStack credentials. See <xref linkend="get-openstack-credentials"/>.</para>
          </step>
          <step>
            <para>Instantiate the <literal>nova_client</literal> client object by using the
<literal>credentials</literal> dictionary object:</para>
            <screen language="python">nova_client = Client(**credentials)</screen>
          </step>
          <step>
            <para>List hosts by calling <literal>list()</literal> on <literal>nova_client.hosts</literal> object:</para>
            <screen language="python">host_list = nova_client.hosts.list()</screen>
          </step>
          <step>
            <para>Print the host object details by calling <literal>print_hosts(host_list)</literal>:</para>
            <screen language="python">print_hosts(host_list)</screen>
          </step>
        </procedure>
        <sect3>
          <title>List hosts code listing example</title>
          <screen language="python">#!/usr/bin/env python

from credentials import get_nova_credentials_v2
from novaclient.client import Client
from utils import print_hosts

credentials = get_nova_credentials_v2()
nova_client = Client(**credentials)
host_list = nova_client.hosts.list()

print_hosts(host_list)</screen>
        </sect3>
      </sect2>
    </sect1>
  </chapter>
  <chapter>
    <title>HOT Guide</title>
    <info/>
    <para>Orchestration is compatible with the CloudFormation template, but you can also
write heat templates to orchestrate cloud resources.</para>
    <para>To learn how, refer to the <link xlink:href="https://docs.openstack.org/developer/heat/template_guide/index.html">Template Guide</link>
on the OpenStack developer documentation website.</para>
  </chapter>
  <chapter>
    <title>OpenStack command-line interface cheat sheet</title>
    <info/>
    <para>Here is a list of common commands for reference.</para>
    <sect1>
      <title>Identity (keystone)</title>
      <para>List all users</para>
      <screen language="console">$ openstack user list</screen>
      <para>List Identity service catalog</para>
      <screen language="console">$ openstack catalog list</screen>
    </sect1>
    <sect1>
      <title>Images (glance)</title>
      <para>List images you can access</para>
      <screen language="console">$ openstack image list</screen>
      <para>Delete specified image</para>
      <screen language="console">$ openstack image delete IMAGE</screen>
      <para>Describe a specific image</para>
      <screen language="console">$ openstack image show IMAGE</screen>
      <para>Update image</para>
      <screen language="console">$ openstack image set IMAGE</screen>
      <para>Upload kernel image</para>
      <screen language="console">$ openstack image create "cirros-threepart-kernel" \
  --disk-format aki --container-format aki --public \
  --file ~/images/cirros-0.3.1~pre4-x86_64-vmlinuz</screen>
      <para>Upload RAM image</para>
      <screen language="console">$ openstack image create "cirros-threepart-ramdisk" \
  --disk-format ari --container-format ari --public \
  --file ~/images/cirros-0.3.1~pre4-x86_64-initrd</screen>
      <para>Upload three-part image</para>
      <screen language="console">$ openstack image create "cirros-threepart" --disk-format ami \
  --container-format ami --public \
  --property kernel_id=$KID-property ramdisk_id=$RID \
  --file ~/images/cirros-0.3.1~pre4-x86_64-blank.img</screen>
      <para>Register raw image</para>
      <screen language="console">$ openstack image create "cirros-raw" --disk-format raw \
  --container-format bare --public \
  --file ~/images/cirros-0.3.1~pre4-x86_64-disk.img</screen>
    </sect1>
    <sect1>
      <title>Compute (nova)</title>
      <para>List instances, check status of instance</para>
      <screen language="console">$ openstack server list</screen>
      <para>List images</para>
      <screen language="console">$ openstack image list</screen>
      <para>Create a flavor named m1.tiny</para>
      <screen language="console">$ openstack flavor create --ram 512 --disk 1 --vcpus 1 m1.tiny</screen>
      <para>List flavors</para>
      <screen language="console">$ openstack flavor list</screen>
      <para>Boot an instance using flavor and image names (if names are unique)</para>
      <screen language="console">$ openstack server create --image IMAGE --flavor FLAVOR INSTANCE_NAME
$ openstack server create --image cirros-0.3.1-x86_64-uec --flavor m1.tiny \
  MyFirstInstance</screen>
      <para>Log in to the instance (from Linux)</para>
      <note>
        <para>The <command>ip</command> command is available only on Linux. Using <command>ip netns</command> provides your
environment a copy of the network stack with its own routes, firewall
rules, and network devices for better troubleshooting.</para>
      </note>
      <screen language="console"># ip netns
# ip netns exec NETNS_NAME ssh USER@SERVER
# ip netns exec qdhcp-6021a3b4-8587-4f9c-8064-0103885dfba2 \
  ssh cirros@10.0.0.2</screen>
      <note>
        <para>In CirrOS, the password for user <literal>cirros</literal> is <literal>cubswin:)</literal>.
For any other operating system, use SSH keys.</para>
      </note>
      <para>Log in to the instance with a public IP address (from Mac)</para>
      <screen language="console">$ ssh cloud-user@128.107.37.150</screen>
      <para>Show details of instance</para>
      <screen language="console">$ openstack server show NAME
$ openstack server show MyFirstInstance</screen>
      <para>View console log of instance</para>
      <screen language="console">$ openstack console log show MyFirstInstance</screen>
      <para>Set metadata on an instance</para>
      <screen language="console">$ nova meta volumeTwoImage set newmeta='my meta data'</screen>
      <para>Create an instance snapshot</para>
      <screen language="console">$ openstack image create volumeTwoImage snapshotOfVolumeImage
$ openstack image show snapshotOfVolumeImage</screen>
      <sect2>
        <title>Pause, suspend, stop, rescue, resize, rebuild, reboot an instance</title>
        <para>Pause</para>
        <screen language="console">$ openstack server pause NAME
$ openstack server pause volumeTwoImage</screen>
        <para>Unpause</para>
        <screen language="console">$ openstack server unpause NAME</screen>
        <para>Suspend</para>
        <screen language="console">$ openstack server suspend NAME</screen>
        <para>Unsuspend</para>
        <screen language="console">$ openstack server resume NAME</screen>
        <para>Stop</para>
        <screen language="console">$ openstack server stop NAME</screen>
        <para>Start</para>
        <screen language="console">$ openstack server start NAME</screen>
        <para>Rescue</para>
        <screen language="console">$ openstack server rescue NAME
$ openstack server rescue NAME --rescue_image_ref RESCUE_IMAGE</screen>
        <para>Resize</para>
        <screen language="console">$ openstack server resize NAME FLAVOR
$ openstack server resize my-pem-server m1.small
$ openstack server resize --confirm my-pem-server1</screen>
        <para>Rebuild</para>
        <screen language="console">$ openstack server rebuild NAME IMAGE
$ openstack server rebuild newtinny cirros-qcow2</screen>
        <para>Reboot</para>
        <screen language="console">$ openstack server reboot NAME
$ openstack server reboot newtinny</screen>
        <para>Inject user data and files into an instance</para>
        <screen language="console">$ openstack server create --user-data FILE INSTANCE
$ openstack server create --user-data userdata.txt --image cirros-qcow2 \
  --flavor m1.tiny MyUserdataInstance2</screen>
        <para>To validate that the file was injected, use ssh to connect to the instance,
and look in <literal>/var/lib/cloud</literal> for the file.</para>
        <para>Inject a keypair into an instance and access the instance with that
keypair</para>
        <para>Create keypair</para>
        <screen language="console">$ openstack keypair create test &gt; test.pem
$ chmod 600 test.pem</screen>
        <para>Start an instance (boot)</para>
        <screen language="console">$ openstack server create --image cirros-0.3.0-x86_64 --flavor m1.small \
  --key-name test MyFirstServer</screen>
        <para>Use ssh to connect to the instance</para>
        <screen language="console"># ip netns exec qdhcp-98f09f1e-64c4-4301-a897-5067ee6d544f \
  ssh -i test.pem cirros@10.0.0.4</screen>
        <para>Manage security groups</para>
        <para>Add rules to default security group allowing ping and SSH between
instances in the default security group</para>
        <screen language="console">$ openstack security group rule create default \
    --remote-group default --protocol icmp
$ openstack security group rule create default \
    --remote-group default --dst-port 22</screen>
      </sect2>
    </sect1>
    <sect1>
      <title>Networking (neutron)</title>
      <para>Create network</para>
      <screen language="console">$ openstack network create NETWORK_NAME</screen>
      <para>Create a subnet</para>
      <screen language="console">$ openstack subnet create --subnet-pool SUBNET --network NETWORK SUBNET_NAME
$ openstack subnet create --subnet-pool 10.0.0.0/29 --network net1 subnet1</screen>
    </sect1>
    <sect1>
      <title>Block Storage (cinder)</title>
      <para>Used to manage volumes and volume snapshots that attach to instances.</para>
      <para>Create a new volume</para>
      <screen language="console">$ openstack volume create --size SIZE_IN_GB NAME
$ openstack volume create --size 1 MyFirstVolume</screen>
      <para>Boot an instance and attach to volume</para>
      <screen language="console">$ openstack server create --image cirros-qcow2 --flavor m1.tiny MyVolumeInstance</screen>
      <para>List all volumes, noticing the volume status</para>
      <screen language="console">$ openstack volume list</screen>
      <para>Attach a volume to an instance after the instance is active, and the
volume is available</para>
      <screen language="console">$ openstack server add volume INSTANCE_ID VOLUME_ID
$ openstack server add volume MyVolumeInstance 573e024d-5235-49ce-8332-be1576d323f8</screen>
      <note>
        <para>On the Xen Hypervisor it is possible to provide a specific device name instead of
automatic allocation. For example:</para>
      </note>
      <screen language="console"><?dbsuse-fo font-size="8pt"?>$ openstack server add volume --device /dev/vdb MyVolumeInstance 573e024d..1576d323f8

This is not currently possible when using non-Xen hypervisors with OpenStack.</screen>
      <para>Manage volumes after login into the instance</para>
      <para>List storage devices</para>
      <screen language="console"># fdisk -l</screen>
      <para>Make filesystem on volume</para>
      <screen language="console"># mkfs.ext3 /dev/vdb</screen>
      <para>Create a mountpoint</para>
      <screen language="console"># mkdir /myspace</screen>
      <para>Mount the volume at the mountpoint</para>
      <screen language="console"># mount /dev/vdb /myspace</screen>
      <para>Create a file on the volume</para>
      <screen language="console"># touch /myspace/helloworld.txt
# ls /myspace</screen>
      <para>Unmount the volume</para>
      <screen language="console"># umount /myspace</screen>
    </sect1>
    <sect1>
      <title>Object Storage (swift)</title>
      <para>Display information for the account, container, or object</para>
      <screen language="console">$ swift stat
$ swift stat ACCOUNT
$ swift stat CONTAINER
$ swift stat OBJECT</screen>
      <para>List containers</para>
      <screen language="console">$ swift list</screen>
    </sect1>
  </chapter>
  <chapter>
    <title>Appendix</title>
    <info/>
    <sect1>
      <title>Community support</title>
      <para>The following resources are available to help you run and use OpenStack.
The OpenStack community constantly improves and adds to the main
features of OpenStack, but if you have any questions, do not hesitate to
ask. Use the following resources to get OpenStack support and
troubleshoot your installations.</para>
      <sect2>
        <title>Documentation</title>
        <para>For the available OpenStack documentation, see
<link xlink:href="https://docs.openstack.org">docs.openstack.org</link>.</para>
        <para>To provide feedback on documentation, join and use the
<link xlink:href="mailto:openstack-docs@lists.openstack.org">openstack-docs@lists.openstack.org</link> mailing list at <link xlink:href="http://lists.openstack.org/cgi-bin/mailman/listinfo/openstack-docs">OpenStack
Documentation Mailing
List</link>,
join our IRC channel <literal>#openstack-doc</literal> on the freenode IRC network,
or <link xlink:href="https://bugs.launchpad.net/openstack-manuals/+filebug">report a
bug</link>.</para>
        <para>The following books explain how to install an OpenStack cloud and its
associated components:</para>
        <itemizedlist>
          <listitem>
            <para>
              <link xlink:href="https://docs.openstack.org/newton/install-guide-obs/">Installation Tutorial for openSUSE Leap 42.2 and SUSE Linux Enterprise
Server 12 SP2</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://docs.openstack.org/newton/install-guide-rdo/">Installation Tutorial for Red Hat Enterprise Linux 7 and CentOS 7</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://docs.openstack.org/newton/install-guide-ubuntu/">Installation Tutorial for Ubuntu 16.04 (LTS)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://docs.openstack.org/newton/install-guide-debconf/">Installation Tutorial for Debian with Debconf</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://docs.openstack.org/newton/install-guide-debian/">Installation Tutorial for Debian</link>
            </para>
          </listitem>
        </itemizedlist>
        <para>The following books explain how to configure and run an OpenStack cloud:</para>
        <itemizedlist>
          <listitem>
            <para>
              <link xlink:href="https://docs.openstack.org/arch-design/">Architecture Design Guide</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://docs.openstack.org/admin-guide/">Administrator Guide</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://docs.openstack.org/newton/config-reference/">Configuration Reference</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://docs.openstack.org/ops/">Operations Guide</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://docs.openstack.org/newton/networking-guide">Networking Guide</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://docs.openstack.org/ha-guide/">High Availability Guide</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://docs.openstack.org/sec/">Security Guide</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://docs.openstack.org/image-guide/">Virtual Machine Image Guide</link>
            </para>
          </listitem>
        </itemizedlist>
        <para>The following books explain how to use the OpenStack Dashboard and
command-line clients:</para>
        <itemizedlist>
          <listitem>
            <para>
              <link xlink:href="https://docs.openstack.org/user-guide/">End User Guide</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://docs.openstack.org/cli-reference/">Command-Line Interface Reference</link>
            </para>
          </listitem>
        </itemizedlist>
        <para>The following documentation provides reference and guidance information
for the OpenStack APIs:</para>
        <itemizedlist>
          <listitem>
            <para>
              <link xlink:href="https://developer.openstack.org/api-guide/quick-start/">API Guide</link>
            </para>
          </listitem>
        </itemizedlist>
        <para>The following guide provides how to contribute to OpenStack documentation:</para>
        <itemizedlist>
          <listitem>
            <para>
              <link xlink:href="https://docs.openstack.org/contributor-guide/">Documentation Contributor Guide</link>
            </para>
          </listitem>
        </itemizedlist>
      </sect2>
      <sect2>
        <title>ask.openstack.org</title>
        <para>During the set up or testing of OpenStack, you might have questions
about how a specific task is completed or be in a situation where a
feature does not work correctly. Use the
<link xlink:href="https://ask.openstack.org">ask.openstack.org</link> site to ask questions
and get answers. When you visit the <link xlink:href="https://ask.openstack.org">Ask OpenStack</link> site, scan
the recently asked questions to see whether your question has already
been answered. If not, ask a new question. Be sure to give a clear,
concise summary in the title and provide as much detail as possible in
the description. Paste in your command output or stack traces, links to
screen shots, and any other information which might be useful.</para>
      </sect2>
      <sect2>
        <title>OpenStack mailing lists</title>
        <para>A great way to get answers and insights is to post your question or
problematic scenario to the OpenStack mailing list. You can learn from
and help others who might have similar issues. To subscribe or view the
archives, go to the <link xlink:href="http://lists.openstack.org/cgi-bin/mailman/listinfo/openstack">general OpenStack mailing list</link>. If you are
interested in the other mailing lists for specific projects or development,
refer to <link xlink:href="https://wiki.openstack.org/wiki/Mailing_Lists">Mailing Lists</link>.</para>
      </sect2>
      <sect2>
        <title>The OpenStack wiki</title>
        <para>The <link xlink:href="https://wiki.openstack.org/">OpenStack wiki</link> contains a broad
range of topics but some of the information can be difficult to find or
is a few pages deep. Fortunately, the wiki search feature enables you to
search by title or content. If you search for specific information, such
as about networking or OpenStack Compute, you can find a large amount
of relevant material. More is being added all the time, so be sure to
check back often. You can find the search box in the upper-right corner
of any OpenStack wiki page.</para>
      </sect2>
      <sect2>
        <title>The Launchpad Bugs area</title>
        <para>The OpenStack community values your set up and testing efforts and wants
your feedback. To log a bug, you must sign up for a Launchpad account at
<link xlink:href="https://launchpad.net/+login">https://launchpad.net/+login</link>. You can view existing bugs and report bugs
in the Launchpad Bugs area. Use the search feature to determine whether
the bug has already been reported or already been fixed. If it still
seems like your bug is unreported, fill out a bug report.</para>
        <para>Some tips:</para>
        <itemizedlist>
          <listitem>
            <para>Give a clear, concise summary.</para>
          </listitem>
          <listitem>
            <para>Provide as much detail as possible in the description. Paste in your
command output or stack traces, links to screen shots, and any other
information which might be useful.</para>
          </listitem>
          <listitem>
            <para>Be sure to include the software and package versions that you are
using, especially if you are using a development branch, such as,
<literal>"Kilo release" vs git commit bc79c3ecc55929bac585d04a03475b72e06a3208</literal>.</para>
          </listitem>
          <listitem>
            <para>Any deployment-specific information is helpful, such as whether you
are using Ubuntu 14.04 or are performing a multi-node installation.</para>
          </listitem>
        </itemizedlist>
        <para>The following Launchpad Bugs areas are available:</para>
        <itemizedlist>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/cinder">Bugs: OpenStack Block Storage
(cinder)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/nova">Bugs: OpenStack Compute (nova)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/horizon">Bugs: OpenStack Dashboard
(horizon)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/keystone">Bugs: OpenStack Identity
(keystone)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/glance">Bugs: OpenStack Image service
(glance)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/neutron">Bugs: OpenStack Networking
(neutron)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/swift">Bugs: OpenStack Object Storage
(swift)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/murano">Bugs: Application catalog (murano)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/ironic">Bugs: Bare metal service (ironic)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/senlin">Bugs: Clustering service (senlin)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/magnum">Bugs: Container Infrastructure Management service (magnum)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/sahara">Bugs: Data processing service
(sahara)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/trove">Bugs: Database service (trove)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/fuel">Bugs: Deployment service (fuel)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/designate">Bugs: DNS service (designate)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/barbican">Bugs: Key Manager Service (barbican)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/monasca">Bugs: Monitoring (monasca)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/heat">Bugs: Orchestration (heat)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/cloudkitty">Bugs: Rating (cloudkitty)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/manila">Bugs: Shared file systems (manila)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/ceilometer">Bugs: Telemetry
(ceilometer)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/gnocchi">Bugs: Telemetry v3
(gnocchi)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/mistral">Bugs: Workflow service
(mistral)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/zaqar">Bugs: Messaging service
(zaqar)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/openstack-api-site">Bugs: OpenStack API Documentation
(developer.openstack.org)</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <link xlink:href="https://bugs.launchpad.net/openstack-manuals">Bugs: OpenStack Documentation
(docs.openstack.org)</link>
            </para>
          </listitem>
        </itemizedlist>
      </sect2>
      <sect2>
        <title>The OpenStack IRC channel</title>
        <para>The OpenStack community lives in the #openstack IRC channel on the
Freenode network. You can hang out, ask questions, or get immediate
feedback for urgent and pressing issues. To install an IRC client or use
a browser-based client, go to
<link xlink:href="https://webchat.freenode.net">https://webchat.freenode.net/</link>. You can
also use <link xlink:href="http://colloquy.info/">Colloquy</link> (Mac OS X),
<link xlink:href="http://www.mirc.com/">mIRC</link> (Windows),
or XChat (Linux). When you are in the IRC channel
and want to share code or command output, the generally accepted method
is to use a Paste Bin. The OpenStack project has one at <link xlink:href="http://paste.openstack.org">Paste</link>. Just paste your longer amounts of text or
logs in the web form and you get a URL that you can paste into the
channel. The OpenStack IRC channel is <literal>#openstack</literal> on
<literal>irc.freenode.net</literal>. You can find a list of all OpenStack IRC channels on
the <link xlink:href="https://wiki.openstack.org/wiki/IRC">IRC page on the wiki</link>.</para>
      </sect2>
      <sect2>
        <title>Documentation feedback</title>
        <para>To provide feedback on documentation, join and use the
<link xlink:href="mailto:openstack-docs@lists.openstack.org">openstack-docs@lists.openstack.org</link> mailing list at <link xlink:href="http://lists.openstack.org/cgi-bin/mailman/listinfo/openstack-docs">OpenStack
Documentation Mailing
List</link>,
or <link xlink:href="https://bugs.launchpad.net/openstack-manuals/+filebug">report a
bug</link>.</para>
      </sect2>
      <sect2>
        <title>OpenStack distribution packages</title>
        <para>The following Linux distributions provide community-supported packages
for OpenStack:</para>
        <itemizedlist>
          <listitem>
            <para>
              <emphasis role="bold">Debian:</emphasis>
              <link xlink:href="https://wiki.debian.org/OpenStack">https://wiki.debian.org/OpenStack</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <emphasis role="bold">CentOS, Fedora, and Red Hat Enterprise Linux:</emphasis>
              <link xlink:href="https://www.rdoproject.org/">https://www.rdoproject.org/</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <emphasis role="bold">openSUSE and SUSE Linux Enterprise Server:</emphasis>
              <link xlink:href="https://en.opensuse.org/Portal:OpenStack">https://en.opensuse.org/Portal:OpenStack</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <emphasis role="bold">Ubuntu:</emphasis>
              <link xlink:href="https://wiki.ubuntu.com/ServerTeam/CloudArchive">https://wiki.ubuntu.com/ServerTeam/CloudArchive</link>
            </para>
          </listitem>
        </itemizedlist>
      </sect2>
    </sect1>
  </chapter>
  <glossary>
    <title>Glossary</title>
    <info/>
    <para>This glossary offers a list of terms and definitions to define a
vocabulary for OpenStack-related concepts.</para>
    <para>To add to OpenStack glossary, clone the <link xlink:href="https://git.openstack.org/cgit/openstack/openstack-manuals">openstack/openstack-manuals
repository</link> and
update the source file <literal>doc/common/glossary.rst</literal> through the
OpenStack contribution process.</para>
    <glossdiv>
      <title>0-9</title>
      <info/>
      <glossentry>
        <glossterm>6to4</glossterm>
        <glossdef>
          <para>A mechanism that allows IPv6 packets to be transmitted
over an IPv4 network, providing a strategy for migrating to
IPv6.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
    <glossdiv>
      <title>A</title>
      <info/>
      <glossentry>
        <glossterm>absolute limit</glossterm>
        <glossdef>
          <para>Impassable limits for guest VMs. Settings include total RAM
size, maximum number of vCPUs, and maximum disk size.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>access control list (ACL)</glossterm>
        <glossdef>
          <para>A list of permissions attached to an object. An ACL specifies
which users or system processes have access to objects. It also
defines which operations can be performed on specified objects. Each
entry in a typical ACL specifies a subject and an operation. For
instance, the ACL entry <literal>(Alice, delete)</literal> for a file gives
Alice permission to delete the file.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>access key</glossterm>
        <glossdef>
          <para>Alternative term for an Amazon EC2 access key. See EC2 access
key.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>account</glossterm>
        <glossdef>
          <para>The Object Storage context of an account. Do not confuse with a
user account from an authentication service, such as Active Directory,
/etc/passwd, OpenLDAP, OpenStack Identity, and so on.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>account auditor</glossterm>
        <glossdef>
          <para>Checks for missing replicas and incorrect or corrupted objects
in a specified Object Storage account by running queries against the
back-end SQLite database.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>account database</glossterm>
        <glossdef>
          <para>A SQLite database that contains Object Storage accounts and
related metadata and that the accounts server accesses.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>account reaper</glossterm>
        <glossdef>
          <para>An Object Storage worker that scans for and deletes account
databases and that the account server has marked for deletion.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>account server</glossterm>
        <glossdef>
          <para>Lists containers in Object Storage and stores container
information in the account database.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>account service</glossterm>
        <glossdef>
          <para>An Object Storage component that provides account services such
as list, create, modify, and audit. Do not confuse with OpenStack
Identity service, OpenLDAP, or similar user-account services.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>accounting</glossterm>
        <glossdef>
          <para>The Compute service provides accounting information through the
event notification and system usage data facilities.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Active Directory</glossterm>
        <glossdef>
          <para>Authentication and identity service by Microsoft, based on LDAP.
Supported in OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>active/active configuration</glossterm>
        <glossdef>
          <para>In a high-availability setup with an active/active
configuration, several systems share the load together and if one
fails, the load is distributed to the remaining systems.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>active/passive configuration</glossterm>
        <glossdef>
          <para>In a high-availability setup with an active/passive
configuration, systems are set up to bring additional resources online
to replace those that have failed.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>address pool</glossterm>
        <glossdef>
          <para>A group of fixed and/or floating IP addresses that are assigned
to a project and can be used by or assigned to the VM instances in a
project.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Address Resolution Protocol (ARP)</glossterm>
        <glossdef>
          <para>The protocol by which layer-3 IP addresses are resolved into
layer-2 link local addresses.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>admin API</glossterm>
        <glossdef>
          <para>A subset of API calls that are accessible to authorized
administrators and are generally not accessible to end users or the
public Internet. They can exist as a separate service (keystone) or
can be a subset of another API (nova).</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>admin server</glossterm>
        <glossdef>
          <para>In the context of the Identity service, the worker process that
provides access to the admin API.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>administrator</glossterm>
        <glossdef>
          <para>The person responsible for installing, configuring,
and managing an OpenStack cloud.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Advanced Message Queuing Protocol (AMQP)</glossterm>
        <glossdef>
          <para>The open standard messaging protocol used by OpenStack
components for intra-service communications, provided by RabbitMQ,
Qpid, or ZeroMQ.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Advanced RISC Machine (ARM)</glossterm>
        <glossdef>
          <para>Lower power consumption CPU often found in mobile and embedded
devices. Supported by OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>alert</glossterm>
        <glossdef>
          <para>The Compute service can send alerts through its notification
system, which includes a facility to create custom notification
drivers. Alerts can be sent to and displayed on the dashboard.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>allocate</glossterm>
        <glossdef>
          <para>The process of taking a floating IP address from the address
pool so it can be associated with a fixed IP on a guest VM
instance.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Amazon Kernel Image (AKI)</glossterm>
        <glossdef>
          <para>Both a VM container format and disk format. Supported by Image
service.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Amazon Machine Image (AMI)</glossterm>
        <glossdef>
          <para>Both a VM container format and disk format. Supported by Image
service.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Amazon Ramdisk Image (ARI)</glossterm>
        <glossdef>
          <para>Both a VM container format and disk format. Supported by Image
service.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Anvil</glossterm>
        <glossdef>
          <para>A project that ports the shell script-based project named
DevStack to Python.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>aodh</glossterm>
        <glossdef>
          <para>Part of the OpenStack <xref linkend="term-telemetry-service-telemetry"/>; provides alarming functionality.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Apache</glossterm>
        <glossdef>
          <para>The Apache Software Foundation supports the Apache community of
open-source software projects. These projects provide software
products for the public good.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Apache License 2.0</glossterm>
        <glossdef>
          <para>All OpenStack core projects are provided under the terms of the
Apache License 2.0 license.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Apache Web Server</glossterm>
        <glossdef>
          <para>The most common web server software currently used on the
Internet.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>API endpoint</glossterm>
        <glossdef>
          <para>The daemon, worker, or service that a client communicates with
to access an API. API endpoints can provide any number of services,
such as authentication, sales data, performance meters, Compute VM
commands, census data, and so on.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>API extension</glossterm>
        <glossdef>
          <para>Custom modules that extend some OpenStack core APIs.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>API extension plug-in</glossterm>
        <glossdef>
          <para>Alternative term for a Networking plug-in or Networking API
extension.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>API key</glossterm>
        <glossdef>
          <para>Alternative term for an API token.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>API server</glossterm>
        <glossdef>
          <para>Any node running a daemon or worker that provides an API
endpoint.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>API token</glossterm>
        <glossdef>
          <para>Passed to API requests and used by OpenStack to verify that the
client is authorized to run the requested operation.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>API version</glossterm>
        <glossdef>
          <para>In OpenStack, the API version for a project is part of the URL.
For example, <literal>example.com/nova/v1/foobar</literal>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>applet</glossterm>
        <glossdef>
          <para>A Java program that can be embedded into a web page.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-application-catalog-service-murano">
        <glossterm>Application Catalog service (murano)</glossterm>
        <glossdef>
          <para>The project that provides an application catalog service so that users
can compose and deploy composite environments on an application
abstraction level while managing the application lifecycle.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Application Programming Interface (API)</glossterm>
        <glossdef>
          <para>A collection of specifications used to access a service,
application, or program. Includes service calls, required parameters
for each call, and the expected return values.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>application server</glossterm>
        <glossdef>
          <para>A piece of software that makes available another piece of
software over a network.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Application Service Provider (ASP)</glossterm>
        <glossdef>
          <para>Companies that rent specialized applications that help
businesses and organizations provide additional services
with lower cost.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>arptables</glossterm>
        <glossdef>
          <para>Tool used for maintaining Address Resolution Protocol packet
filter rules in the Linux kernel firewall modules. Used along with
iptables, ebtables, and ip6tables in Compute to provide firewall
services for VMs.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>associate</glossterm>
        <glossdef>
          <para>The process associating a Compute floating IP address with a
fixed IP address.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Asynchronous JavaScript and XML (AJAX)</glossterm>
        <glossdef>
          <para>A group of interrelated web development techniques used on the
client-side to create asynchronous web applications. Used extensively
in horizon.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>ATA over Ethernet (AoE)</glossterm>
        <glossdef>
          <para>A disk storage protocol tunneled within Ethernet.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>attach</glossterm>
        <glossdef>
          <para>The process of connecting a VIF or vNIC to a L2 network in
Networking. In the context of Compute, this process connects a storage
volume to an instance.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>attachment (network)</glossterm>
        <glossdef>
          <para>Association of an interface ID to a logical port. Plugs an
interface into a port.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>auditing</glossterm>
        <glossdef>
          <para>Provided in Compute through the system usage data
facility.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>auditor</glossterm>
        <glossdef>
          <para>A worker process that verifies the integrity of Object Storage
objects, containers, and accounts. Auditors is the collective term for
the Object Storage account auditor, container auditor, and object
auditor.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Austin</glossterm>
        <glossdef>
          <para>The code name for the initial release of
OpenStack. The first design summit took place in
Austin, Texas, US.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>auth node</glossterm>
        <glossdef>
          <para>Alternative term for an Object Storage authorization
node.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>authentication</glossterm>
        <glossdef>
          <para>The process that confirms that the user, process, or client is
really who they say they are through private key, secret token,
password, fingerprint, or similar method.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>authentication token</glossterm>
        <glossdef>
          <para>A string of text provided to the client after authentication.
Must be provided by the user or process in subsequent requests to the
API endpoint.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>AuthN</glossterm>
        <glossdef>
          <para>The Identity service component that provides authentication
services.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>authorization</glossterm>
        <glossdef>
          <para>The act of verifying that a user, process, or client is
authorized to perform an action.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>authorization node</glossterm>
        <glossdef>
          <para>An Object Storage node that provides authorization
services.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>AuthZ</glossterm>
        <glossdef>
          <para>The Identity component that provides high-level
authorization services.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Auto ACK</glossterm>
        <glossdef>
          <para>Configuration setting within RabbitMQ that enables or disables
message acknowledgment. Enabled by default.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>auto declare</glossterm>
        <glossdef>
          <para>A Compute RabbitMQ setting that determines whether a message
exchange is automatically created when the program starts.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>availability zone</glossterm>
        <glossdef>
          <para>An Amazon EC2 concept of an isolated area that is used for fault
tolerance. Do not confuse with an OpenStack Compute zone or
cell.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>AWS CloudFormation template</glossterm>
        <glossdef>
          <para>AWS CloudFormation allows Amazon Web Services (AWS) users to create and manage a
collection of related resources. The Orchestration service
supports a CloudFormation-compatible format (CFN).</para>
        </glossdef>
      </glossentry>
    </glossdiv>
    <glossdiv>
      <title>B</title>
      <info/>
      <glossentry>
        <glossterm>back end</glossterm>
        <glossdef>
          <para>Interactions and processes that are obfuscated from the user,
such as Compute volume mount, data transmission to an iSCSI target by
a daemon, or Object Storage object integrity checks.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>back-end catalog</glossterm>
        <glossdef>
          <para>The storage method used by the Identity service catalog service
to store and retrieve information about API endpoints that are
available to the client. Examples include an SQL database, LDAP
database, or KVS back end.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>back-end store</glossterm>
        <glossdef>
          <para>The persistent data store used to save and retrieve information
for a service, such as lists of Object Storage objects, current state
of guest VMs, lists of user names, and so on. Also, the method that the
Image service uses to get and store VM images. Options include Object
Storage, locally mounted file system, RADOS block devices, VMware
datastore, and HTTP.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-backup-restore-and-disaster-recovery-service-freezer">
        <glossterm>Backup, Restore, and Disaster Recovery service (freezer)</glossterm>
        <glossdef>
          <para>The project that provides integrated tooling for backing up, restoring,
and recovering file systems, instances, or database backups.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>bandwidth</glossterm>
        <glossdef>
          <para>The amount of available data used by communication resources,
such as the Internet. Represents the amount of data that is used to
download things or the amount of data available to download.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>barbican</glossterm>
        <glossdef>
          <para>Code name of the <xref linkend="term-key-manager-service-barbican"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>bare</glossterm>
        <glossdef>
          <para>An Image service container format that indicates that no
container exists for the VM image.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-bare-metal-service-ironic">
        <glossterm>Bare Metal service (ironic)</glossterm>
        <glossdef>
          <para>The OpenStack service that provides a service and associated libraries
capable of managing and provisioning physical machines in a
security-aware and fault-tolerant manner.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>base image</glossterm>
        <glossdef>
          <para>An OpenStack-provided image.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Bell-LaPadula model</glossterm>
        <glossdef>
          <para>A security model that focuses on data confidentiality
and controlled access to classified information.
This model divides the entities into subjects and objects.
The clearance of a subject is compared to the classification of the
object to determine if the subject is authorized for the specific access mode.
The clearance or classification scheme is expressed in terms of a lattice.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-benchmark-service-rally">
        <glossterm>Benchmark service (rally)</glossterm>
        <glossdef>
          <para>OpenStack project that provides a framework for
performance analysis and benchmarking of individual
OpenStack components as well as full production OpenStack
cloud deployments.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Bexar</glossterm>
        <glossdef>
          <para>A grouped release of projects related to
OpenStack that came out in February of 2011. It
included only Compute (nova) and Object Storage (swift).
Bexar is the code name for the second release of
OpenStack. The design summit took place in
San Antonio, Texas, US, which is the county seat for Bexar county.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>binary</glossterm>
        <glossdef>
          <para>Information that consists solely of ones and zeroes, which is
the language of computers.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>bit</glossterm>
        <glossdef>
          <para>A bit is a single digit number that is in base of 2 (either a
zero or one). Bandwidth usage is measured in bits per second.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>bits per second (BPS)</glossterm>
        <glossdef>
          <para>The universal measurement of how quickly data is transferred
from place to place.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>block device</glossterm>
        <glossdef>
          <para>A device that moves data in the form of blocks. These device
nodes interface the devices, such as hard disks, CD-ROM drives, flash
drives, and other addressable regions of memory.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>block migration</glossterm>
        <glossdef>
          <para>A method of VM live migration used by KVM to evacuate instances
from one host to another with very little downtime during a
user-initiated switchover. Does not require shared storage. Supported
by Compute.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Block Storage API</glossterm>
        <glossdef>
          <para>An API on a separate endpoint for attaching,
detaching, and creating block storage for compute
VMs.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-block-storage-service-cinder">
        <glossterm>Block Storage service (cinder)</glossterm>
        <glossdef>
          <para>The OpenStack service that implement services and libraries to provide
on-demand, self-service access to Block Storage resources via abstraction
and automation on top of other block storage devices.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>BMC (Baseboard Management Controller)</glossterm>
        <glossdef>
          <para>The intelligence in the IPMI architecture, which is a specialized
micro-controller that is embedded on the motherboard of a computer
and acts as a server. Manages the interface between system management
software and platform hardware.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>bootable disk image</glossterm>
        <glossdef>
          <para>A type of VM image that exists as a single, bootable
file.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Bootstrap Protocol (BOOTP)</glossterm>
        <glossdef>
          <para>A network protocol used by a network client to obtain an IP
address from a configuration server. Provided in Compute through the
dnsmasq daemon when using either the FlatDHCP manager or VLAN manager
network manager.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Border Gateway Protocol (BGP)</glossterm>
        <glossdef>
          <para>The Border Gateway Protocol is a dynamic routing protocol
that connects autonomous systems.  Considered the
backbone of the Internet, this protocol connects disparate
networks to form a larger network.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>browser</glossterm>
        <glossdef>
          <para>Any client software that enables a computer or device to access
the Internet.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>builder file</glossterm>
        <glossdef>
          <para>Contains configuration information that Object Storage uses to
reconfigure a ring or to re-create it from scratch after a serious
failure.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>bursting</glossterm>
        <glossdef>
          <para>The practice of utilizing a secondary environment to
elastically build instances on-demand when the primary
environment is resource constrained.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>button class</glossterm>
        <glossdef>
          <para>A group of related button types within horizon. Buttons to
start, stop, and suspend VMs are in one class. Buttons to associate
and disassociate floating IP addresses are in another class, and so
on.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>byte</glossterm>
        <glossdef>
          <para>Set of bits that make up a single character; there are usually 8
bits to a byte.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
    <glossdiv>
      <title>C</title>
      <info/>
      <glossentry>
        <glossterm>cache pruner</glossterm>
        <glossdef>
          <para>A program that keeps the Image service VM image cache at or
below its configured maximum size.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Cactus</glossterm>
        <glossdef>
          <para>An OpenStack grouped release of projects that came out in the
spring of 2011. It included Compute (nova), Object Storage (swift),
and the Image service (glance).
Cactus is a city in Texas, US and is the code name for
the third release of OpenStack. When OpenStack releases went
from three to six months long, the code name of the release
changed to match a geography nearest the previous
summit.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>CALL</glossterm>
        <glossdef>
          <para>One of the RPC primitives used by the OpenStack message queue
software. Sends a message and waits for a response.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>capability</glossterm>
        <glossdef>
          <para>Defines resources for a cell, including CPU, storage, and
networking. Can apply to the specific services within a cell or a
whole cell.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>capacity cache</glossterm>
        <glossdef>
          <para>A Compute back-end database table that contains the current
workload, amount of free RAM, and number of VMs running on each host.
Used to determine on which host a VM starts.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>capacity updater</glossterm>
        <glossdef>
          <para>A notification driver that monitors VM instances and updates the
capacity cache as needed.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>CAST</glossterm>
        <glossdef>
          <para>One of the RPC primitives used by the OpenStack message queue
software. Sends a message and does not wait for a response.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>catalog</glossterm>
        <glossdef>
          <para>A list of API endpoints that are available to a user after
authentication with the Identity service.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>catalog service</glossterm>
        <glossdef>
          <para>An Identity service that lists API endpoints that are available
to a user after authentication with the Identity service.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>ceilometer</glossterm>
        <glossdef>
          <para>Part of the OpenStack <xref linkend="term-telemetry-service-telemetry"/>; gathers and stores metrics from other
OpenStack services.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>cell</glossterm>
        <glossdef>
          <para>Provides logical partitioning of Compute resources in a child
and parent relationship. Requests are passed from parent cells to
child cells if the parent cannot provide the requested
resource.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>cell forwarding</glossterm>
        <glossdef>
          <para>A Compute option that enables parent cells to pass resource
requests to child cells if the parent cannot provide the requested
resource.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>cell manager</glossterm>
        <glossdef>
          <para>The Compute component that contains a list of the current
capabilities of each host within the cell and routes requests as
appropriate.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>CentOS</glossterm>
        <glossdef>
          <para>A Linux distribution that is compatible with OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Ceph</glossterm>
        <glossdef>
          <para>Massively scalable distributed storage system that consists of
an object store, block store, and POSIX-compatible distributed file
system. Compatible with OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>CephFS</glossterm>
        <glossdef>
          <para>The POSIX-compliant file system provided by Ceph.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>certificate authority (CA)</glossterm>
        <glossdef>
          <para>In cryptography, an entity that issues digital certificates. The digital
certificate certifies the ownership of a public key by the named
subject of the certificate. This enables others (relying parties) to
rely upon signatures or assertions made by the private key that
corresponds to the certified public key. In this model of trust
relationships, a CA is a trusted third party for both the subject
(owner) of the certificate and the party relying upon the certificate.
CAs are characteristic of many public key infrastructure (PKI)
schemes.
In OpenStack, a simple certificate authority is provided by Compute for
cloudpipe VPNs and VM image decryption.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Challenge-Handshake Authentication Protocol (CHAP)</glossterm>
        <glossdef>
          <para>An iSCSI authentication method supported by Compute.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>chance scheduler</glossterm>
        <glossdef>
          <para>A scheduling method used by Compute that randomly chooses an
available host from the pool.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>changes since</glossterm>
        <glossdef>
          <para>A Compute API parameter that downloads changes to the requested
item since your last request, instead of downloading a new, fresh set
of data and comparing it against the old data.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Chef</glossterm>
        <glossdef>
          <para>An operating system configuration management tool supporting
OpenStack deployments.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>child cell</glossterm>
        <glossdef>
          <para>If a requested resource such as CPU time, disk storage, or
memory is not available in the parent cell, the request is forwarded
to its associated child cells. If the child cell can fulfill the
request, it does. Otherwise, it attempts to pass the request to any of
its children.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>cinder</glossterm>
        <glossdef>
          <para>Codename for <xref linkend="term-block-storage-service-cinder"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>CirrOS</glossterm>
        <glossdef>
          <para>A minimal Linux distribution designed for use as a test
image on clouds such as OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Cisco neutron plug-in</glossterm>
        <glossdef>
          <para>A Networking plug-in for Cisco devices and technologies,
including UCS and Nexus.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>cloud architect</glossterm>
        <glossdef>
          <para>A person who plans, designs, and oversees the creation of
clouds.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Cloud Auditing Data Federation (CADF)</glossterm>
        <glossdef>
          <para>Cloud Auditing Data Federation (CADF) is a
specification for audit event data. CADF is
supported by OpenStack Identity.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>cloud computing</glossterm>
        <glossdef>
          <para>A model that enables access to a shared pool of configurable
computing resources, such as networks, servers, storage, applications,
and services, that can be rapidly provisioned and released with
minimal management effort or service provider interaction.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>cloud controller</glossterm>
        <glossdef>
          <para>Collection of Compute components that represent the global state
of the cloud; talks to services, such as Identity authentication,
Object Storage, and node/storage workers through a
queue.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>cloud controller node</glossterm>
        <glossdef>
          <para>A node that runs network, volume, API, scheduler, and image
services. Each service may be broken out into separate nodes for
scalability or availability.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Cloud Data Management Interface (CDMI)</glossterm>
        <glossdef>
          <para>SINA standard that defines a RESTful API for managing objects in
the cloud, currently unsupported in OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Cloud Infrastructure Management Interface (CIMI)</glossterm>
        <glossdef>
          <para>An in-progress specification for cloud management. Currently
unsupported in OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>cloud-init</glossterm>
        <glossdef>
          <para>A package commonly installed in VM images that performs
initialization of an instance after boot using information that it
retrieves from the metadata service, such as the SSH public key and
user data.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>cloudadmin</glossterm>
        <glossdef>
          <para>One of the default roles in the Compute RBAC system. Grants
complete system access.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Cloudbase-Init</glossterm>
        <glossdef>
          <para>A Windows project providing guest initialization features,
similar to cloud-init.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>cloudpipe</glossterm>
        <glossdef>
          <para>A compute service that creates VPNs on a per-project
basis.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>cloudpipe image</glossterm>
        <glossdef>
          <para>A pre-made VM image that serves as a cloudpipe server.
Essentially, OpenVPN running on Linux.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-clustering-service-senlin">
        <glossterm>Clustering service (senlin)</glossterm>
        <glossdef>
          <para>The project that implements clustering services and libraries
for the management of groups of homogeneous objects exposed
by other OpenStack services.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>command filter</glossterm>
        <glossdef>
          <para>Lists allowed commands within the Compute rootwrap
facility.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Common Internet File System (CIFS)</glossterm>
        <glossdef>
          <para>A file sharing protocol. It is a public or open variation of the
original Server Message Block (SMB) protocol developed and used by
Microsoft. Like the SMB protocol, CIFS runs at a higher level and uses
the TCP/IP protocol.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-common-libraries-oslo">
        <glossterm>Common Libraries (oslo)</glossterm>
        <glossdef>
          <para>The project that produces a set of python libraries containing code
shared by OpenStack projects. The APIs provided by these libraries
should be high quality, stable, consistent, documented and generally
applicable.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>community project</glossterm>
        <glossdef>
          <para>A project that is not officially endorsed by the OpenStack
Foundation. If the project is successful enough, it might be elevated
to an incubated project and then to a core project, or it might be
merged with the main code trunk.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>compression</glossterm>
        <glossdef>
          <para>Reducing the size of files by special encoding, the file can be
decompressed again to its original content. OpenStack supports
compression at the Linux file system level but does not support
compression for things such as Object Storage objects or Image service
VM images.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-compute-api-nova-api">
        <glossterm>Compute API (Nova API)</glossterm>
        <glossdef>
          <para>The nova-api daemon provides access to nova services. Can communicate with
other APIs, such as the Amazon EC2 API.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>compute controller</glossterm>
        <glossdef>
          <para>The Compute component that chooses suitable hosts on which to
start VM instances.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>compute host</glossterm>
        <glossdef>
          <para>Physical host dedicated to running compute nodes.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>compute node</glossterm>
        <glossdef>
          <para>A node that runs the nova-compute daemon that manages VM
instances that provide a wide
range of services, such as web applications and analytics.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-compute-service-nova">
        <glossterm>Compute service (nova)</glossterm>
        <glossdef>
          <para>The OpenStack core project that implements services and associated
libraries to provide massively-scalable, on-demand, self-service
access to compute resources, including bare metal, virtual machines,
and containers.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>compute worker</glossterm>
        <glossdef>
          <para>The Compute component that runs on each compute node and manages
the VM instance lifecycle, including run, reboot, terminate,
attach/detach volumes, and so on. Provided by the nova-compute daemon.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>concatenated object</glossterm>
        <glossdef>
          <para>A set of segment objects that Object Storage combines and sends
to the client.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>conductor</glossterm>
        <glossdef>
          <para>In Compute, conductor is the process that proxies database
requests from the compute process. Using conductor improves security
because compute nodes do not need direct access to the
database.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>congress</glossterm>
        <glossdef>
          <para>Code name for the <xref linkend="term-governance-service-congress"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>consistency window</glossterm>
        <glossdef>
          <para>The amount of time it takes for a new Object Storage object to
become accessible to all clients.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>console log</glossterm>
        <glossdef>
          <para>Contains the output from a Linux VM console in Compute.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>container</glossterm>
        <glossdef>
          <para>Organizes and stores objects in Object Storage. Similar to the
concept of a Linux directory but cannot be nested. Alternative term
for an Image service container format.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>container auditor</glossterm>
        <glossdef>
          <para>Checks for missing replicas or incorrect objects in specified
Object Storage containers through queries to the SQLite back-end
database.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>container database</glossterm>
        <glossdef>
          <para>A SQLite database that stores Object Storage containers and
container metadata. The container server accesses this
database.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>container format</glossterm>
        <glossdef>
          <para>A wrapper used by the Image service that contains a VM image and
its associated metadata, such as machine state, OS disk size, and so
on.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-container-infrastructure-management-service-magnum">
        <glossterm>Container Infrastructure Management service (magnum)</glossterm>
        <glossdef>
          <para>The project which provides a set of services for provisioning, scaling,
and managing container orchestration engines.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>container server</glossterm>
        <glossdef>
          <para>An Object Storage server that manages containers.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>container service</glossterm>
        <glossdef>
          <para>The Object Storage component that provides container services,
such as create, delete, list, and so on.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>content delivery network (CDN)</glossterm>
        <glossdef>
          <para>A content delivery network is a specialized network that is
used to distribute content to clients, typically located
close to the client for increased performance.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>controller node</glossterm>
        <glossdef>
          <para>Alternative term for a cloud controller node.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>core API</glossterm>
        <glossdef>
          <para>Depending on context, the core API is either the OpenStack API
or the main API of a specific core project, such as Compute,
Networking, Image service, and so on.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>core service</glossterm>
        <glossdef>
          <para>An official OpenStack service defined as core by
DefCore Committee. Currently, consists of
Block Storage service (cinder), Compute service (nova),
Identity service (keystone), Image service (glance),
Networking service (neutron), and Object Storage service (swift).</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>cost</glossterm>
        <glossdef>
          <para>Under the Compute distributed scheduler, this is calculated by
looking at the capabilities of each host relative to the flavor of the
VM instance being requested.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>credentials</glossterm>
        <glossdef>
          <para>Data that is only known to or accessible by a user and
used to verify that the user is who he says he is.
Credentials are presented to the server during
authentication. Examples include a password, secret key,
digital certificate, and fingerprint.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-cross-origin-resource-sharing-cors">
        <glossterm>Cross-Origin Resource Sharing (CORS)</glossterm>
        <glossdef>
          <para>A mechanism that allows many resources (for example,
fonts, JavaScript) on a web page to be requested from
another domain outside the domain from which the resource
originated. In particular, JavaScript's AJAX calls can use
the XMLHttpRequest mechanism.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Crowbar</glossterm>
        <glossdef>
          <para>An open source community project by SUSE that aims to provide
all necessary services to quickly deploy and manage clouds.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>current workload</glossterm>
        <glossdef>
          <para>An element of the Compute capacity cache that is calculated
based on the number of build, snapshot, migrate, and resize operations
currently in progress on a given host.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>customer</glossterm>
        <glossdef>
          <para>Alternative term for project.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>customization module</glossterm>
        <glossdef>
          <para>A user-created Python module that is loaded by horizon to change
the look and feel of the dashboard.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
    <glossdiv>
      <title>D</title>
      <info/>
      <glossentry>
        <glossterm>daemon</glossterm>
        <glossdef>
          <para>A process that runs in the background and waits for requests.
May or may not listen on a TCP or UDP port. Do not confuse with a
worker.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-dashboard-horizon">
        <glossterm>Dashboard (horizon)</glossterm>
        <glossdef>
          <para>OpenStack project which provides an extensible, unified, web-based
user interface for all OpenStack services.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>data encryption</glossterm>
        <glossdef>
          <para>Both Image service and Compute support encrypted virtual machine
(VM) images (but not instances). In-transit data encryption is
supported in OpenStack using technologies such as HTTPS, SSL, TLS, and
SSH. Object Storage does not support object encryption at the
application level but may support storage that uses disk encryption.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Data loss prevention (DLP) software</glossterm>
        <glossdef>
          <para>Software programs used to protect sensitive information
and prevent it from leaking outside a network boundary
through the detection and denying of the data transportation.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-data-processing-service-sahara">
        <glossterm>Data Processing service (sahara)</glossterm>
        <glossdef>
          <para>OpenStack project that provides a scalable
data-processing stack and associated management
interfaces.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>data store</glossterm>
        <glossdef>
          <para>A database engine supported by the Database service.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>database ID</glossterm>
        <glossdef>
          <para>A unique ID given to each replica of an Object Storage
database.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>database replicator</glossterm>
        <glossdef>
          <para>An Object Storage component that copies changes in the account,
container, and object databases to other nodes.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-database-service-trove">
        <glossterm>Database service (trove)</glossterm>
        <glossdef>
          <para>An integrated project that provides scalable and reliable
Cloud Database-as-a-Service functionality for both
relational and non-relational database engines.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>deallocate</glossterm>
        <glossdef>
          <para>The process of removing the association between a floating IP
address and a fixed IP address. Once this association is removed, the
floating IP returns to the address pool.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Debian</glossterm>
        <glossdef>
          <para>A Linux distribution that is compatible with OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>deduplication</glossterm>
        <glossdef>
          <para>The process of finding duplicate data at the disk block, file,
and/or object level to minimize storage use—currently unsupported
within OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>default panel</glossterm>
        <glossdef>
          <para>The default panel that is displayed when a user accesses the
dashboard.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>default project</glossterm>
        <glossdef>
          <para>New users are assigned to this project if no project is specified
when a user is created.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>default token</glossterm>
        <glossdef>
          <para>An Identity service token that is not associated with a specific
project and is exchanged for a scoped token.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>delayed delete</glossterm>
        <glossdef>
          <para>An option within Image service so that an image is deleted after
a predefined number of seconds instead of immediately.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>delivery mode</glossterm>
        <glossdef>
          <para>Setting for the Compute RabbitMQ message delivery mode; can be
set to either transient or persistent.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>denial of service (DoS)</glossterm>
        <glossdef>
          <para>Denial of service (DoS) is a short form for
denial-of-service attack. This is a malicious attempt to
prevent legitimate users from using a service.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>deprecated auth</glossterm>
        <glossdef>
          <para>An option within Compute that enables administrators to create
and manage users through the <literal>nova-manage</literal> command as
opposed to using the Identity service.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>designate</glossterm>
        <glossdef>
          <para>Code name for the <xref linkend="term-dns-service-designate"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Desktop-as-a-Service</glossterm>
        <glossdef>
          <para>A platform that provides a suite of desktop environments
that users access to receive a desktop experience from
any location. This may provide general use, development, or
even homogeneous testing environments.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>developer</glossterm>
        <glossdef>
          <para>One of the default roles in the Compute RBAC system and the
default role assigned to a new user.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>device ID</glossterm>
        <glossdef>
          <para>Maps Object Storage partitions to physical storage
devices.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>device weight</glossterm>
        <glossdef>
          <para>Distributes partitions proportionately across Object Storage
devices based on the storage capacity of each device.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>DevStack</glossterm>
        <glossdef>
          <para>Community project that uses shell scripts to quickly build
complete OpenStack development environments.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>DHCP agent</glossterm>
        <glossdef>
          <para>OpenStack Networking agent that provides DHCP services
for virtual networks.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Diablo</glossterm>
        <glossdef>
          <para>A grouped release of projects related to OpenStack that came out
in the fall of 2011, the fourth release of OpenStack. It included
Compute (nova 2011.3), Object Storage (swift 1.4.3), and the Image
service (glance).
Diablo is the code name for the fourth release of
OpenStack. The design summit took place in
the Bay Area near Santa Clara,
California, US and Diablo is a nearby city.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>direct consumer</glossterm>
        <glossdef>
          <para>An element of the Compute RabbitMQ that comes to life when a RPC
call is executed. It connects to a direct exchange through a unique
exclusive queue, sends the message, and terminates.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>direct exchange</glossterm>
        <glossdef>
          <para>A routing table that is created within the Compute RabbitMQ
during RPC calls; one is created for each RPC call that is
invoked.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>direct publisher</glossterm>
        <glossdef>
          <para>Element of RabbitMQ that provides a response to an incoming MQ
message.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>disassociate</glossterm>
        <glossdef>
          <para>The process of removing the association between a floating IP
address and fixed IP and thus returning the floating IP address to the
address pool.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Discretionary Access Control (DAC)</glossterm>
        <glossdef>
          <para>Governs the ability of subjects to access objects, while enabling
users to make policy decisions and assign security attributes.
The traditional UNIX system of users, groups, and read-write-execute
permissions is an example of DAC.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>disk encryption</glossterm>
        <glossdef>
          <para>The ability to encrypt data at the file system, disk partition,
or whole-disk level. Supported within Compute VMs.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>disk format</glossterm>
        <glossdef>
          <para>The underlying format that a disk image for a VM is stored as
within the Image service back-end store. For example, AMI, ISO, QCOW2,
VMDK, and so on.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>dispersion</glossterm>
        <glossdef>
          <para>In Object Storage, tools to test and ensure dispersion of
objects and containers to ensure fault tolerance.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>distributed virtual router (DVR)</glossterm>
        <glossdef>
          <para>Mechanism for highly available multi-host routing when using
OpenStack Networking (neutron).</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Django</glossterm>
        <glossdef>
          <para>A web framework used extensively in horizon.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>DNS record</glossterm>
        <glossdef>
          <para>A record that specifies information about a particular domain
and belongs to the domain.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-dns-service-designate">
        <glossterm>DNS service (designate)</glossterm>
        <glossdef>
          <para>OpenStack project that provides scalable, on demand, self
service access to authoritative DNS services, in a
technology-agnostic manner.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>dnsmasq</glossterm>
        <glossdef>
          <para>Daemon that provides DNS, DHCP, BOOTP, and TFTP services for
virtual networks.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>domain</glossterm>
        <glossdef>
          <para>An Identity API v3 entity. Represents a collection of
projects, groups and users that defines administrative boundaries for
managing OpenStack Identity entities.
On the Internet, separates a website from other sites. Often,
the domain name has two or more parts that are separated by dots.
For example, yahoo.com, usa.gov, harvard.edu, or
mail.yahoo.com.
Also, a domain is an entity or container of all DNS-related
information containing one or more records.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Domain Name System (DNS)</glossterm>
        <glossdef>
          <para>A system by which Internet domain name-to-address and
address-to-name resolutions are determined.
DNS helps navigate the Internet by translating the IP address
into an address that is easier to remember. For example, translating
111.111.111.1 into www.yahoo.com.
All domains and their components, such as mail servers, utilize
DNS to resolve to the appropriate locations. DNS servers are usually
set up in a master-slave relationship such that failure of the master
invokes the slave. DNS servers might also be clustered or replicated
such that changes made to one DNS server are automatically propagated
to other active servers.
In Compute, the support that enables associating DNS entries
with floating IP addresses, nodes, or cells so that hostnames are
consistent across reboots.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>download</glossterm>
        <glossdef>
          <para>The transfer of data, usually in the form of files, from one
computer to another.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>durable exchange</glossterm>
        <glossdef>
          <para>The Compute RabbitMQ message exchange that remains active when
the server restarts.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>durable queue</glossterm>
        <glossdef>
          <para>A Compute RabbitMQ message queue that remains active when the
server restarts.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Dynamic Host Configuration Protocol (DHCP)</glossterm>
        <glossdef>
          <para>A network protocol that configures devices that are connected to a
network so that they can communicate on that network by using the
Internet Protocol (IP). The protocol is implemented in a client-server
model where DHCP clients request configuration data, such as an IP
address, a default route, and one or more DNS server addresses from a
DHCP server.
A method to automatically configure networking for a host at
boot time. Provided by both Networking and Compute.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Dynamic HyperText Markup Language (DHTML)</glossterm>
        <glossdef>
          <para>Pages that use HTML, JavaScript, and Cascading Style Sheets to
enable users to interact with a web page or show simple
animation.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
    <glossdiv>
      <title>E</title>
      <info/>
      <glossentry>
        <glossterm>east-west traffic</glossterm>
        <glossdef>
          <para>Network traffic between servers in the same cloud or data center.
See also north-south traffic.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>EBS boot volume</glossterm>
        <glossdef>
          <para>An Amazon EBS storage volume that contains a bootable VM image,
currently unsupported in OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>ebtables</glossterm>
        <glossdef>
          <para>Filtering tool for a Linux bridging firewall, enabling
filtering of network traffic passing through a Linux bridge.
Used in Compute along with arptables, iptables, and ip6tables
to ensure isolation of network communications.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>EC2</glossterm>
        <glossdef>
          <para>The Amazon commercial compute product, similar to
Compute.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>EC2 access key</glossterm>
        <glossdef>
          <para>Used along with an EC2 secret key to access the Compute EC2
API.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>EC2 API</glossterm>
        <glossdef>
          <para>OpenStack supports accessing the Amazon EC2 API through
Compute.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>EC2 Compatibility API</glossterm>
        <glossdef>
          <para>A Compute component that enables OpenStack to communicate with
Amazon EC2.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>EC2 secret key</glossterm>
        <glossdef>
          <para>Used along with an EC2 access key when communicating with the
Compute EC2 API; used to digitally sign each request.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Elastic Block Storage (EBS)</glossterm>
        <glossdef>
          <para>The Amazon commercial block storage product.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>encapsulation</glossterm>
        <glossdef>
          <para>The practice of placing one packet type within another for
the purposes of abstracting or securing data. Examples
include GRE, MPLS, or IPsec.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>encryption</glossterm>
        <glossdef>
          <para>OpenStack supports encryption technologies such as HTTPS, SSH,
SSL, TLS, digital certificates, and data encryption.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>endpoint</glossterm>
        <glossdef>
          <para>See API endpoint.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>endpoint registry</glossterm>
        <glossdef>
          <para>Alternative term for an Identity service catalog.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>endpoint template</glossterm>
        <glossdef>
          <para>A list of URL and port number endpoints that indicate where a
service, such as Object Storage, Compute, Identity, and so on, can be
accessed.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>entity</glossterm>
        <glossdef>
          <para>Any piece of hardware or software that wants to connect to the
network services provided by Networking, the network connectivity
service. An entity can make use of Networking by implementing a
VIF.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>ephemeral image</glossterm>
        <glossdef>
          <para>A VM image that does not save changes made to its volumes and
reverts them to their original state after the instance is
terminated.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>ephemeral volume</glossterm>
        <glossdef>
          <para>Volume that does not save the changes made to it and reverts to
its original state when the current user relinquishes control.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Essex</glossterm>
        <glossdef>
          <para>A grouped release of projects related to OpenStack that came out
in April 2012, the fifth release of OpenStack. It included Compute
(nova 2012.1), Object Storage (swift 1.4.8), Image (glance), Identity
(keystone), and Dashboard (horizon).
Essex is the code name for the fifth release of
OpenStack. The design summit took place in
Boston, Massachusetts, US and Essex is a nearby city.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>ESXi</glossterm>
        <glossdef>
          <para>An OpenStack-supported hypervisor.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>ETag</glossterm>
        <glossdef>
          <para>MD5 hash of an object within Object Storage, used to ensure data
integrity.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>euca2ools</glossterm>
        <glossdef>
          <para>A collection of command-line tools for administering VMs; most
are compatible with OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Eucalyptus Kernel Image (EKI)</glossterm>
        <glossdef>
          <para>Used along with an ERI to create an EMI.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Eucalyptus Machine Image (EMI)</glossterm>
        <glossdef>
          <para>VM image container format supported by Image service.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Eucalyptus Ramdisk Image (ERI)</glossterm>
        <glossdef>
          <para>Used along with an EKI to create an EMI.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>evacuate</glossterm>
        <glossdef>
          <para>The process of migrating one or all virtual machine (VM)
instances from one host to another, compatible with both shared
storage live migration and block migration.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>exchange</glossterm>
        <glossdef>
          <para>Alternative term for a RabbitMQ message exchange.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>exchange type</glossterm>
        <glossdef>
          <para>A routing algorithm in the Compute RabbitMQ.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>exclusive queue</glossterm>
        <glossdef>
          <para>Connected to by a direct consumer in RabbitMQ—Compute, the
message can be consumed only by the current connection.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>extended attributes (xattr)</glossterm>
        <glossdef>
          <para>File system option that enables storage of additional
information beyond owner, group, permissions, modification time, and
so on. The underlying Object Storage file system must support extended
attributes.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>extension</glossterm>
        <glossdef>
          <para>Alternative term for an API extension or plug-in. In the context
of Identity service, this is a call that is specific to the
implementation, such as adding support for OpenID.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>external network</glossterm>
        <glossdef>
          <para>A network segment typically used for instance Internet
access.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>extra specs</glossterm>
        <glossdef>
          <para>Specifies additional requirements when Compute determines where
to start a new instance. Examples include a minimum amount of network
bandwidth or a GPU.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
    <glossdiv>
      <title>F</title>
      <info/>
      <glossentry>
        <glossterm>FakeLDAP</glossterm>
        <glossdef>
          <para>An easy method to create a local LDAP directory for testing
Identity and Compute. Requires Redis.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>fan-out exchange</glossterm>
        <glossdef>
          <para>Within RabbitMQ and Compute, it is the messaging interface that
is used by the scheduler service to receive capability messages from
the compute, volume, and network nodes.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>federated identity</glossterm>
        <glossdef>
          <para>A method to establish trusts between identity providers and the
OpenStack cloud.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Fedora</glossterm>
        <glossdef>
          <para>A Linux distribution compatible with OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Fibre Channel</glossterm>
        <glossdef>
          <para>Storage protocol similar in concept to TCP/IP; encapsulates SCSI
commands and data.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Fibre Channel over Ethernet (FCoE)</glossterm>
        <glossdef>
          <para>The fibre channel protocol tunneled within Ethernet.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>fill-first scheduler</glossterm>
        <glossdef>
          <para>The Compute scheduling method that attempts to fill a host with
VMs rather than starting new VMs on a variety of hosts.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>filter</glossterm>
        <glossdef>
          <para>The step in the Compute scheduling process when hosts that
cannot run VMs are eliminated and not chosen.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>firewall</glossterm>
        <glossdef>
          <para>Used to restrict communications between hosts and/or nodes,
implemented in Compute using iptables, arptables, ip6tables, and
ebtables.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>FireWall-as-a-Service (FWaaS)</glossterm>
        <glossdef>
          <para>A Networking extension that provides perimeter firewall
functionality.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>fixed IP address</glossterm>
        <glossdef>
          <para>An IP address that is associated with the same instance each
time that instance boots, is generally not accessible to end users or
the public Internet, and is used for management of the
instance.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Flat Manager</glossterm>
        <glossdef>
          <para>The Compute component that gives IP addresses to authorized
nodes and assumes DHCP, DNS, and routing configuration and services
are provided by something else.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>flat mode injection</glossterm>
        <glossdef>
          <para>A Compute networking method where the OS network configuration
information is injected into the VM image before the instance
starts.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>flat network</glossterm>
        <glossdef>
          <para>Virtual network type that uses neither VLANs nor tunnels to
segregate project traffic. Each flat network typically requires
a separate underlying physical interface defined by bridge
mappings. However, a flat network can contain multiple
subnets.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>FlatDHCP Manager</glossterm>
        <glossdef>
          <para>The Compute component that provides dnsmasq (DHCP, DNS, BOOTP,
TFTP) and radvd (routing) services.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>flavor</glossterm>
        <glossdef>
          <para>Alternative term for a VM instance type.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>flavor ID</glossterm>
        <glossdef>
          <para>UUID for each Compute or Image service VM flavor or instance
type.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>floating IP address</glossterm>
        <glossdef>
          <para>An IP address that a project can associate with a VM so that the
instance has the same public IP address each time that it boots. You
create a pool of floating IP addresses and assign them to instances as
they are launched to maintain a consistent IP address for maintaining
DNS assignment.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Folsom</glossterm>
        <glossdef>
          <para>A grouped release of projects related to OpenStack that came out
in the fall of 2012, the sixth release of OpenStack. It includes
Compute (nova), Object Storage (swift), Identity (keystone),
Networking (neutron), Image service (glance), and Volumes or Block
Storage (cinder).
Folsom is the code name for the sixth release of
OpenStack. The design summit took place in
San Francisco, California, US and Folsom is a nearby city.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>FormPost</glossterm>
        <glossdef>
          <para>Object Storage middleware that uploads (posts) an image through
a form on a web page.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>freezer</glossterm>
        <glossdef>
          <para>Code name for the <xref linkend="term-backup-restore-and-disaster-recovery-service-freezer"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>front end</glossterm>
        <glossdef>
          <para>The point where a user interacts with a service; can be an API
endpoint, the dashboard, or a command-line tool.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
    <glossdiv>
      <title>G</title>
      <info/>
      <glossentry>
        <glossterm>gateway</glossterm>
        <glossdef>
          <para>An IP address, typically assigned to a router, that
passes network traffic between different networks.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>generic receive offload (GRO)</glossterm>
        <glossdef>
          <para>Feature of certain network interface drivers that
combines many smaller received packets into a large packet
before delivery to the kernel IP stack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>generic routing encapsulation (GRE)</glossterm>
        <glossdef>
          <para>Protocol that encapsulates a wide variety of network
layer protocols inside virtual point-to-point links.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>glance</glossterm>
        <glossdef>
          <para>Codename for the <xref linkend="term-image-service-glance"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>glance API server</glossterm>
        <glossdef>
          <para>Alternative name for the <xref linkend="term-image-api"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>glance registry</glossterm>
        <glossdef>
          <para>Alternative term for the Image service <xref linkend="term-image-registry"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>global endpoint template</glossterm>
        <glossdef>
          <para>The Identity service endpoint template that contains services
available to all projects.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>GlusterFS</glossterm>
        <glossdef>
          <para>A file system designed to aggregate NAS hosts, compatible with
OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>gnocchi</glossterm>
        <glossdef>
          <para>Part of the OpenStack <xref linkend="term-telemetry-service-telemetry"/>; provides an indexer and time-series
database.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>golden image</glossterm>
        <glossdef>
          <para>A method of operating system installation where a finalized disk
image is created and then used by all nodes without
modification.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-governance-service-congress">
        <glossterm>Governance service (congress)</glossterm>
        <glossdef>
          <para>The project that provides Governance-as-a-Service across
any collection of cloud services in order to monitor,
enforce, and audit policy over dynamic infrastructure.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Graphic Interchange Format (GIF)</glossterm>
        <glossdef>
          <para>A type of image file that is commonly used for animated images
on web pages.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Graphics Processing Unit (GPU)</glossterm>
        <glossdef>
          <para>Choosing a host based on the existence of a GPU is currently
unsupported in OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Green Threads</glossterm>
        <glossdef>
          <para>The cooperative threading model used by Python; reduces race
conditions and only context switches when specific library calls are
made. Each OpenStack service is its own thread.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Grizzly</glossterm>
        <glossdef>
          <para>The code name for the seventh release of
OpenStack. The design summit took place in
San Diego, California, US and Grizzly is an element of the state flag of
California.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Group</glossterm>
        <glossdef>
          <para>An Identity v3 API entity. Represents a collection of users that is
owned by a specific domain.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>guest OS</glossterm>
        <glossdef>
          <para>An operating system instance running under the control of a
hypervisor.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
    <glossdiv>
      <title>H</title>
      <info/>
      <glossentry>
        <glossterm>Hadoop</glossterm>
        <glossdef>
          <para>Apache Hadoop is an open source software framework that supports
data-intensive distributed applications.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Hadoop Distributed File System (HDFS)</glossterm>
        <glossdef>
          <para>A distributed, highly fault-tolerant file system designed to run
on low-cost commodity hardware.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>handover</glossterm>
        <glossdef>
          <para>An object state in Object Storage where a new replica of the
object is automatically created due to a drive failure.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>HAProxy</glossterm>
        <glossdef>
          <para>Provides a high availability load balancer and proxy server for
TCP and HTTP-based applications that spreads requests across
multiple servers.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>hard reboot</glossterm>
        <glossdef>
          <para>A type of reboot where a physical or virtual power button is
pressed as opposed to a graceful, proper shutdown of the operating
system.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Havana</glossterm>
        <glossdef>
          <para>The code name for the eighth release of OpenStack. The
design summit took place in Portland, Oregon, US and Havana is
an unincorporated community in Oregon.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>health monitor</glossterm>
        <glossdef>
          <para>Determines whether back-end members of a VIP pool can
process a request. A pool can have several health monitors
associated with it. When a pool has several monitors
associated with it, all monitors check each member of the
pool. All monitors must declare a member to be healthy for
it to stay active.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>heat</glossterm>
        <glossdef>
          <para>Codename for the <xref linkend="term-orchestration-service-heat"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-heat-orchestration-template-hot">
        <glossterm>Heat Orchestration Template (HOT)</glossterm>
        <glossdef>
          <para>Heat input in the format native to OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>high availability (HA)</glossterm>
        <glossdef>
          <para>A high availability system design approach and associated
service implementation ensures that a prearranged level of
operational performance will be met during a contractual
measurement period. High availability systems seek to
minimize system downtime and data loss.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>horizon</glossterm>
        <glossdef>
          <para>Codename for the <xref linkend="term-dashboard-horizon"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>horizon plug-in</glossterm>
        <glossdef>
          <para>A plug-in for the OpenStack Dashboard (horizon).</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>host</glossterm>
        <glossdef>
          <para>A physical computer, not a VM instance (node).</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>host aggregate</glossterm>
        <glossdef>
          <para>A method to further subdivide availability zones into hypervisor
pools, a collection of common hosts.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Host Bus Adapter (HBA)</glossterm>
        <glossdef>
          <para>Device plugged into a PCI slot, such as a fibre channel or
network card.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>hybrid cloud</glossterm>
        <glossdef>
          <para>A hybrid cloud is a composition of two or more clouds
(private, community or public) that remain distinct entities
but are bound together, offering the benefits of multiple
deployment models.  Hybrid cloud can also mean the ability
to connect colocation, managed and/or dedicated services
with cloud resources.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Hyper-V</glossterm>
        <glossdef>
          <para>One of the hypervisors supported by OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>hyperlink</glossterm>
        <glossdef>
          <para>Any kind of text that contains a link to some other site,
commonly found in documents where clicking on a word or words opens up
a different website.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Hypertext Transfer Protocol (HTTP)</glossterm>
        <glossdef>
          <para>An application protocol for distributed, collaborative,
hypermedia information systems. It is the foundation of data
communication for the World Wide Web. Hypertext is structured
text that uses logical links (hyperlinks) between nodes containing
text. HTTP is the protocol to exchange or transfer hypertext.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Hypertext Transfer Protocol Secure (HTTPS)</glossterm>
        <glossdef>
          <para>An encrypted communications protocol for secure communication
over a computer network, with especially wide deployment on the
Internet. Technically, it is not a protocol in and of itself;
rather, it is the result of simply layering the Hypertext Transfer
Protocol (HTTP) on top of the TLS or SSL protocol, thus adding the
security capabilities of TLS or SSL to standard HTTP communications.
Most OpenStack API endpoints and many inter-component communications
support HTTPS communication.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>hypervisor</glossterm>
        <glossdef>
          <para>Software that arbitrates and controls VM access to the actual
underlying hardware.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>hypervisor pool</glossterm>
        <glossdef>
          <para>A collection of hypervisors grouped together through host
aggregates.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
    <glossdiv>
      <title>I</title>
      <info/>
      <glossentry>
        <glossterm>Icehouse</glossterm>
        <glossdef>
          <para>The code name for the ninth release of OpenStack. The
design summit took place in Hong Kong and Ice House is a
street in that city.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>ID number</glossterm>
        <glossdef>
          <para>Unique numeric ID associated with each user in Identity,
conceptually similar to a Linux or LDAP UID.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Identity API</glossterm>
        <glossdef>
          <para>Alternative term for the Identity service API.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Identity back end</glossterm>
        <glossdef>
          <para>The source used by Identity service to retrieve user
information; an OpenLDAP server, for example.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>identity provider</glossterm>
        <glossdef>
          <para>A directory service, which allows users to login with a user
name and password. It is a typical source of authentication
tokens.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-identity-service-keystone">
        <glossterm>Identity service (keystone)</glossterm>
        <glossdef>
          <para>The project that facilitates API client authentication, service
discovery, distributed multi-tenant authorization, and auditing.
It provides a central directory of users mapped to the OpenStack
services they can access. It also registers endpoints for OpenStack
services and acts as a common authentication system.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Identity service API</glossterm>
        <glossdef>
          <para>The API used to access the OpenStack Identity service provided
through keystone.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>image</glossterm>
        <glossdef>
          <para>A collection of files for a specific operating system (OS) that
you use to create or rebuild a server. OpenStack provides pre-built
images. You can also create custom images, or snapshots, from servers
that you have launched. Custom images can be used for data backups or
as "gold" images for additional servers.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-image-api">
        <glossterm>Image API</glossterm>
        <glossdef>
          <para>The Image service API endpoint for management of VM
images.
Processes client requests for VMs, updates Image service
metadata on the registry server, and communicates with the store
adapter to upload VM images from the back-end store.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>image cache</glossterm>
        <glossdef>
          <para>Used by Image service to obtain images on the local host rather
than re-downloading them from the image server each time one is
requested.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>image ID</glossterm>
        <glossdef>
          <para>Combination of a URI and UUID used to access Image service VM
images through the image API.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>image membership</glossterm>
        <glossdef>
          <para>A list of projects that can access a given VM image within Image
service.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>image owner</glossterm>
        <glossdef>
          <para>The project who owns an Image service virtual machine
image.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-image-registry">
        <glossterm>image registry</glossterm>
        <glossdef>
          <para>A list of VM images that are available through Image
service.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-image-service-glance">
        <glossterm>Image service (glance)</glossterm>
        <glossdef>
          <para>The OpenStack service that provide services and associated libraries
to store, browse, share, distribute and manage bootable disk images,
other data closely associated with initializing compute resources,
and metadata definitions.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>image status</glossterm>
        <glossdef>
          <para>The current status of a VM image in Image service, not to be
confused with the status of a running instance.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>image store</glossterm>
        <glossdef>
          <para>The back-end store used by Image service to store VM images,
options include Object Storage, locally mounted file system,
RADOS block devices, VMware datastore, or HTTP.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>image UUID</glossterm>
        <glossdef>
          <para>UUID used by Image service to uniquely identify each VM
image.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>incubated project</glossterm>
        <glossdef>
          <para>A community project may be elevated to this status and is then
promoted to a core project.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-infrastructure-optimization-service-watcher">
        <glossterm>Infrastructure Optimization service (watcher)</glossterm>
        <glossdef>
          <para>OpenStack project that aims to provide a flexible and scalable resource
optimization service for multi-tenant OpenStack-based clouds.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Infrastructure-as-a-Service (IaaS)</glossterm>
        <glossdef>
          <para>IaaS is a provisioning model in which an organization outsources
physical components of a data center, such as storage, hardware,
servers, and networking components. A service provider owns the
equipment and is responsible for housing, operating and maintaining
it. The client typically pays on a per-use basis.
IaaS is a model for providing cloud services.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>ingress filtering</glossterm>
        <glossdef>
          <para>The process of filtering incoming network traffic. Supported by
Compute.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>INI format</glossterm>
        <glossdef>
          <para>The OpenStack configuration files use an INI format to
describe options and their values. It consists of sections
and key value pairs.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>injection</glossterm>
        <glossdef>
          <para>The process of putting a file into a virtual machine image
before the instance is started.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Input/Output Operations Per Second (IOPS)</glossterm>
        <glossdef>
          <para>IOPS are a common performance measurement used to benchmark computer
storage devices like hard disk drives, solid state drives, and
storage area networks.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>instance</glossterm>
        <glossdef>
          <para>A running VM, or a VM in a known state such as suspended, that
can be used like a hardware server.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>instance ID</glossterm>
        <glossdef>
          <para>Alternative term for instance UUID.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>instance state</glossterm>
        <glossdef>
          <para>The current state of a guest VM image.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>instance tunnels network</glossterm>
        <glossdef>
          <para>A network segment used for instance traffic tunnels
between compute nodes and the network node.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>instance type</glossterm>
        <glossdef>
          <para>Describes the parameters of the various virtual machine images
that are available to users; includes parameters such as CPU, storage,
and memory. Alternative term for flavor.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>instance type ID</glossterm>
        <glossdef>
          <para>Alternative term for a flavor ID.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>instance UUID</glossterm>
        <glossdef>
          <para>Unique ID assigned to each guest VM instance.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Intelligent Platform Management Interface (IPMI)</glossterm>
        <glossdef>
          <para>IPMI is a standardized computer system interface used by system
administrators for out-of-band management of computer systems and
monitoring of their operation. In layman's terms, it is a way to
manage a computer using a direct network connection, whether it is
turned on or not; connecting to the hardware rather than an operating
system or login shell.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>interface</glossterm>
        <glossdef>
          <para>A physical or virtual device that provides connectivity
to another device or medium.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>interface ID</glossterm>
        <glossdef>
          <para>Unique ID for a Networking VIF or vNIC in the form of a
UUID.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Internet Control Message Protocol (ICMP)</glossterm>
        <glossdef>
          <para>A network protocol used by network devices for control messages.
For example, <command>ping</command> uses ICMP to test
connectivity.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Internet protocol (IP)</glossterm>
        <glossdef>
          <para>Principal communications protocol in the internet protocol
suite for relaying datagrams across network boundaries.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Internet Service Provider (ISP)</glossterm>
        <glossdef>
          <para>Any business that provides Internet access to individuals or
businesses.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Internet Small Computer System Interface (iSCSI)</glossterm>
        <glossdef>
          <para>Storage protocol that encapsulates SCSI frames for transport
over IP networks.
Supported by Compute, Object Storage, and Image service.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>IP address</glossterm>
        <glossdef>
          <para>Number that is unique to every computer system on the Internet.
Two versions of the Internet Protocol (IP) are in use for addresses:
IPv4 and IPv6.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>IP Address Management (IPAM)</glossterm>
        <glossdef>
          <para>The process of automating IP address allocation, deallocation,
and management. Currently provided by Compute, melange, and
Networking.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>ip6tables</glossterm>
        <glossdef>
          <para>Tool used to set up, maintain, and inspect the tables of IPv6
packet filter rules in the Linux kernel. In OpenStack Compute,
ip6tables is used along with arptables, ebtables, and iptables to
create firewalls for both nodes and VMs.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>ipset</glossterm>
        <glossdef>
          <para>Extension to iptables that allows creation of firewall rules
that match entire "sets" of IP addresses simultaneously. These
sets reside in indexed data structures to increase efficiency,
particularly on systems with a large quantity of rules.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>iptables</glossterm>
        <glossdef>
          <para>Used along with arptables and ebtables, iptables create
firewalls in Compute. iptables are the tables provided by the Linux
kernel firewall (implemented as different Netfilter modules) and the
chains and rules it stores. Different kernel modules and programs are
currently used for different protocols: iptables applies to IPv4,
ip6tables to IPv6, arptables to ARP, and ebtables to Ethernet frames.
Requires root privilege to manipulate.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>ironic</glossterm>
        <glossdef>
          <para>Codename for the <xref linkend="term-bare-metal-service-ironic"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>iSCSI Qualified Name (IQN)</glossterm>
        <glossdef>
          <para>IQN is the format most commonly used for iSCSI names, which uniquely
identify nodes in an iSCSI network.
All IQNs follow the pattern iqn.yyyy-mm.domain:identifier, where
'yyyy-mm' is the year and month in which the domain was registered,
'domain' is the reversed domain name of the issuing organization, and
'identifier' is an optional string which makes each IQN under the same
domain unique. For example, 'iqn.2015-10.org.openstack.408ae959bce1'.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>ISO9660</glossterm>
        <glossdef>
          <para>One of the VM image disk formats supported by Image
service.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>itsec</glossterm>
        <glossdef>
          <para>A default role in the Compute RBAC system that can quarantine an
instance in any project.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
    <glossdiv>
      <title>J</title>
      <info/>
      <glossentry>
        <glossterm>Java</glossterm>
        <glossdef>
          <para>A programming language that is used to create systems that
involve more than one computer by way of a network.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>JavaScript</glossterm>
        <glossdef>
          <para>A scripting language that is used to build web pages.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>JavaScript Object Notation (JSON)</glossterm>
        <glossdef>
          <para>One of the supported response formats in OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Jenkins</glossterm>
        <glossdef>
          <para>Tool used to run jobs automatically for OpenStack
development.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>jumbo frame</glossterm>
        <glossdef>
          <para>Feature in modern Ethernet networks that supports frames up to
approximately 9000 bytes.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Juno</glossterm>
        <glossdef>
          <para>The code name for the tenth release of OpenStack. The
design summit took place in Atlanta, Georgia, US and Juno is
an unincorporated community in Georgia.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
    <glossdiv>
      <title>K</title>
      <info/>
      <glossentry>
        <glossterm>Kerberos</glossterm>
        <glossdef>
          <para>A network authentication protocol which works on the basis of
tickets. Kerberos allows nodes communication over a non-secure
network, and allows nodes to prove their identity to one another in a
secure manner.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>kernel-based VM (KVM)</glossterm>
        <glossdef>
          <para>An OpenStack-supported hypervisor. KVM is a full
virtualization solution for Linux on x86 hardware containing
virtualization extensions (Intel VT or AMD-V), ARM, IBM
Power, and IBM zSeries. It consists of a loadable kernel
module, that provides the core virtualization infrastructure
and a processor specific module.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-key-manager-service-barbican">
        <glossterm>Key Manager service (barbican)</glossterm>
        <glossdef>
          <para>The project that produces a secret storage and
generation system capable of providing key management for
services wishing to enable encryption features.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>keystone</glossterm>
        <glossdef>
          <para>Codename of the <xref linkend="term-identity-service-keystone"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Kickstart</glossterm>
        <glossdef>
          <para>A tool to automate system configuration and installation on Red
Hat, Fedora, and CentOS-based Linux distributions.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Kilo</glossterm>
        <glossdef>
          <para>The code name for the eleventh release of OpenStack. The
design summit took place in Paris, France. Due to delays in the name
selection, the release was known only as K. Because <literal>k</literal> is the
unit symbol for kilo and the reference artifact is stored near Paris
in the Pavillon de Breteuil in Sèvres, the community chose Kilo as
the release name.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
    <glossdiv>
      <title>L</title>
      <info/>
      <glossentry>
        <glossterm>large object</glossterm>
        <glossdef>
          <para>An object within Object Storage that is larger than 5 GB.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Launchpad</glossterm>
        <glossdef>
          <para>The collaboration site for OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Layer-2 (L2) agent</glossterm>
        <glossdef>
          <para>OpenStack Networking agent that provides layer-2
connectivity for virtual networks.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Layer-2 network</glossterm>
        <glossdef>
          <para>Term used in the OSI network architecture for the data link
layer. The data link layer is responsible for media access
control, flow control and detecting and possibly correcting
errors that may occur in the physical layer.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Layer-3 (L3) agent</glossterm>
        <glossdef>
          <para>OpenStack Networking agent that provides layer-3
(routing) services for virtual networks.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Layer-3 network</glossterm>
        <glossdef>
          <para>Term used in the OSI network architecture for the network
layer. The network layer is responsible for packet
forwarding including routing from one node to another.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Liberty</glossterm>
        <glossdef>
          <para>The code name for the twelfth release of OpenStack. The
design summit took place in Vancouver, Canada and Liberty is
the name of a village in the Canadian province of
Saskatchewan.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>libvirt</glossterm>
        <glossdef>
          <para>Virtualization API library used by OpenStack to interact with
many of its supported hypervisors.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Lightweight Directory Access Protocol (LDAP)</glossterm>
        <glossdef>
          <para>An application protocol for accessing and maintaining distributed
directory information services over an IP network.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Linux bridge</glossterm>
        <glossdef>
          <para>Software that enables multiple VMs to share a single physical
NIC within Compute.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Linux Bridge neutron plug-in</glossterm>
        <glossdef>
          <para>Enables a Linux bridge to understand a Networking port,
interface attachment, and other abstractions.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Linux containers (LXC)</glossterm>
        <glossdef>
          <para>An OpenStack-supported hypervisor.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>live migration</glossterm>
        <glossdef>
          <para>The ability within Compute to move running virtual machine
instances from one host to another with only a small service
interruption during switchover.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>load balancer</glossterm>
        <glossdef>
          <para>A load balancer is a logical device that belongs to a cloud
account. It is used to distribute workloads between multiple back-end
systems or services, based on the criteria defined as part of its
configuration.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>load balancing</glossterm>
        <glossdef>
          <para>The process of spreading client requests between two or more
nodes to improve performance and availability.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Load-Balancer-as-a-Service (LBaaS)</glossterm>
        <glossdef>
          <para>Enables Networking to distribute incoming requests evenly
between designated instances.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-load-balancing-service-octavia">
        <glossterm>Load-balancing service (octavia)</glossterm>
        <glossdef>
          <para>The project that aims to rovide scalable, on demand, self service
access to load-balancer services, in technology-agnostic manner.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Logical Volume Manager (LVM)</glossterm>
        <glossdef>
          <para>Provides a method of allocating space on mass-storage
devices that is more flexible than conventional partitioning
schemes.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
    <glossdiv>
      <title>M</title>
      <info/>
      <glossentry>
        <glossterm>magnum</glossterm>
        <glossdef>
          <para>Code name for the <xref linkend="term-container-infrastructure-management-service-magnum"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>management API</glossterm>
        <glossdef>
          <para>Alternative term for an admin API.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>management network</glossterm>
        <glossdef>
          <para>A network segment used for administration, not accessible to the
public Internet.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>manager</glossterm>
        <glossdef>
          <para>Logical groupings of related code, such as the Block Storage
volume manager or network manager.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>manifest</glossterm>
        <glossdef>
          <para>Used to track segments of a large object within Object
Storage.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>manifest object</glossterm>
        <glossdef>
          <para>A special Object Storage object that contains the manifest for a
large object.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>manila</glossterm>
        <glossdef>
          <para>Codename for OpenStack <xref linkend="term-shared-file-systems-service-manila"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>manila-share</glossterm>
        <glossdef>
          <para>Responsible for managing Shared File System Service devices, specifically
the back-end devices.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>maximum transmission unit (MTU)</glossterm>
        <glossdef>
          <para>Maximum frame or packet size for a particular network
medium. Typically 1500 bytes for Ethernet networks.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>mechanism driver</glossterm>
        <glossdef>
          <para>A driver for the Modular Layer 2 (ML2) neutron plug-in that
provides layer-2 connectivity for virtual instances. A
single OpenStack installation can use multiple mechanism
drivers.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>melange</glossterm>
        <glossdef>
          <para>Project name for OpenStack Network Information Service. To be
merged with Networking.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>membership</glossterm>
        <glossdef>
          <para>The association between an Image service VM image and a project.
Enables images to be shared with specified projects.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>membership list</glossterm>
        <glossdef>
          <para>A list of projects that can access a given VM image within Image
service.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>memcached</glossterm>
        <glossdef>
          <para>A distributed memory object caching system that is used by
Object Storage for caching.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>memory overcommit</glossterm>
        <glossdef>
          <para>The ability to start new VM instances based on the actual memory
usage of a host, as opposed to basing the decision on the amount of
RAM each running instance thinks it has available. Also known as RAM
overcommit.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>message broker</glossterm>
        <glossdef>
          <para>The software package used to provide AMQP messaging capabilities
within Compute. Default package is RabbitMQ.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>message bus</glossterm>
        <glossdef>
          <para>The main virtual communication line used by all AMQP messages
for inter-cloud communications within Compute.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>message queue</glossterm>
        <glossdef>
          <para>Passes requests from clients to the appropriate workers and
returns the output to the client after the job completes.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-message-service-zaqar">
        <glossterm>Message service (zaqar)</glossterm>
        <glossdef>
          <para>The project that provides a messaging service that affords a
variety of distributed application patterns in an efficient,
scalable and highly available manner, and to create and maintain
associated Python libraries and documentation.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Meta-Data Server (MDS)</glossterm>
        <glossdef>
          <para>Stores CephFS metadata.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Metadata agent</glossterm>
        <glossdef>
          <para>OpenStack Networking agent that provides metadata
services for instances.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>migration</glossterm>
        <glossdef>
          <para>The process of moving a VM instance from one host to
another.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>mistral</glossterm>
        <glossdef>
          <para>Code name for <xref linkend="term-workflow-service-mistral"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Mitaka</glossterm>
        <glossdef>
          <para>The code name for the thirteenth release of OpenStack.
The design summit took place in Tokyo, Japan. Mitaka
is a city in Tokyo.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Modular Layer 2 (ML2) neutron plug-in</glossterm>
        <glossdef>
          <para>Can concurrently use multiple layer-2 networking technologies,
such as 802.1Q and VXLAN, in Networking.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>monasca</glossterm>
        <glossdef>
          <para>Codename for OpenStack <xref linkend="term-monitoring-monasca"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Monitor (LBaaS)</glossterm>
        <glossdef>
          <para>LBaaS feature that provides availability monitoring using the
<literal>ping</literal> command, TCP, and HTTP/HTTPS GET.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Monitor (Mon)</glossterm>
        <glossdef>
          <para>A Ceph component that communicates with external clients, checks
data state and consistency, and performs quorum functions.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-monitoring-monasca">
        <glossterm>Monitoring (monasca)</glossterm>
        <glossdef>
          <para>The OpenStack service that provides a multi-tenant, highly scalable,
performant, fault-tolerant monitoring-as-a-service solution for metrics,
complex event processing and logging. To build an extensible platform for
advanced monitoring services that can be used by both operators and
tenants to gain operational insight and visibility, ensuring availability
and stability.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>multi-factor authentication</glossterm>
        <glossdef>
          <para>Authentication method that uses two or more credentials, such as
a password and a private key. Currently not supported in
Identity.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>multi-host</glossterm>
        <glossdef>
          <para>High-availability mode for legacy (nova) networking.
Each compute node handles NAT and DHCP and acts as a gateway
for all of the VMs on it. A networking failure on one compute
node doesn't affect VMs on other compute nodes.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>multinic</glossterm>
        <glossdef>
          <para>Facility in Compute that allows each virtual machine instance to
have more than one VIF connected to it.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>murano</glossterm>
        <glossdef>
          <para>Codename for the <xref linkend="term-application-catalog-service-murano"/>.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
    <glossdiv>
      <title>N</title>
      <info/>
      <glossentry>
        <glossterm>Nebula</glossterm>
        <glossdef>
          <para>Released as open source by NASA in 2010 and is the basis for
Compute.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>netadmin</glossterm>
        <glossdef>
          <para>One of the default roles in the Compute RBAC system. Enables the
user to allocate publicly accessible IP addresses to instances and
change firewall rules.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>NetApp volume driver</glossterm>
        <glossdef>
          <para>Enables Compute to communicate with NetApp storage devices
through the NetApp OnCommand
Provisioning Manager.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>network</glossterm>
        <glossdef>
          <para>A virtual network that provides connectivity between entities.
For example, a collection of virtual ports that share network
connectivity. In Networking terminology, a network is always a layer-2
network.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Network Address Translation (NAT)</glossterm>
        <glossdef>
          <para>Process of modifying IP address information while in transit.
Supported by Compute and Networking.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>network controller</glossterm>
        <glossdef>
          <para>A Compute daemon that orchestrates the network configuration of
nodes, including IP addresses, VLANs, and bridging. Also manages
routing for both public and private networks.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Network File System (NFS)</glossterm>
        <glossdef>
          <para>A method for making file systems available over the network.
Supported by OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>network ID</glossterm>
        <glossdef>
          <para>Unique ID assigned to each network segment within Networking.
Same as network UUID.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>network manager</glossterm>
        <glossdef>
          <para>The Compute component that manages various network components,
such as firewall rules, IP address allocation, and so on.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>network namespace</glossterm>
        <glossdef>
          <para>Linux kernel feature that provides independent virtual
networking instances on a single host with separate routing
tables and interfaces. Similar to virtual routing and forwarding
(VRF) services on physical network equipment.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>network node</glossterm>
        <glossdef>
          <para>Any compute node that runs the network worker daemon.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>network segment</glossterm>
        <glossdef>
          <para>Represents a virtual, isolated OSI layer-2 subnet in
Networking.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Network Service Header (NSH)</glossterm>
        <glossdef>
          <para>Provides a mechanism for metadata exchange along the
instantiated service path.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Network Time Protocol (NTP)</glossterm>
        <glossdef>
          <para>Method of keeping a clock for a host or node correct via
communication with a trusted, accurate time source.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>network UUID</glossterm>
        <glossdef>
          <para>Unique ID for a Networking network segment.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>network worker</glossterm>
        <glossdef>
          <para>The <literal>nova-network</literal> worker daemon; provides
services such as giving an IP address to a booting nova
instance.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-networking-api-neutron-api">
        <glossterm>Networking API (Neutron API)</glossterm>
        <glossdef>
          <para>API used to access OpenStack Networking. Provides an extensible
architecture to enable custom plug-in creation.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-networking-service-neutron">
        <glossterm>Networking service (neutron)</glossterm>
        <glossdef>
          <para>The OpenStack project which implements services and associated
libraries to provide on-demand, scalable, and technology-agnostic
network abstraction.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>neutron</glossterm>
        <glossdef>
          <para>Codename for OpenStack <xref linkend="term-networking-service-neutron"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>neutron API</glossterm>
        <glossdef>
          <para>An alternative name for <xref linkend="term-networking-api-neutron-api"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>neutron manager</glossterm>
        <glossdef>
          <para>Enables Compute and Networking integration, which enables
Networking to perform network management for guest VMs.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>neutron plug-in</glossterm>
        <glossdef>
          <para>Interface within Networking that enables organizations to create
custom plug-ins for advanced features, such as QoS, ACLs, or
IDS.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Newton</glossterm>
        <glossdef>
          <para>The code name for the fourteenth release of OpenStack. The
design summit took place in Austin, Texas, US. The
release is named after "Newton House" which is located at
1013 E. Ninth St., Austin, TX. which is listed on the
National Register of Historic Places.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Nexenta volume driver</glossterm>
        <glossdef>
          <para>Provides support for NexentaStor devices in Compute.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-nfv-orchestration-service-tacker">
        <glossterm>NFV Orchestration Service (tacker)</glossterm>
        <glossdef>
          <para>OpenStack service that aims to implement Network Function Virtualization
(NFV) orchestration services and libraries for end-to-end life-cycle
management of network services and Virtual Network Functions (VNFs).</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Nginx</glossterm>
        <glossdef>
          <para>An HTTP and reverse proxy server, a mail proxy server, and a generic
TCP/UDP proxy server.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>No ACK</glossterm>
        <glossdef>
          <para>Disables server-side message acknowledgment in the Compute
RabbitMQ. Increases performance but decreases reliability.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>node</glossterm>
        <glossdef>
          <para>A VM instance that runs on a host.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>non-durable exchange</glossterm>
        <glossdef>
          <para>Message exchange that is cleared when the service restarts. Its
data is not written to persistent storage.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>non-durable queue</glossterm>
        <glossdef>
          <para>Message queue that is cleared when the service restarts. Its
data is not written to persistent storage.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>non-persistent volume</glossterm>
        <glossdef>
          <para>Alternative term for an ephemeral volume.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>north-south traffic</glossterm>
        <glossdef>
          <para>Network traffic between a user or client (north) and a
server (south), or traffic into the cloud (south) and
out of the cloud (north). See also east-west traffic.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>nova</glossterm>
        <glossdef>
          <para>Codename for OpenStack <xref linkend="term-compute-service-nova"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Nova API</glossterm>
        <glossdef>
          <para>Alternative term for the <xref linkend="term-compute-api-nova-api"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>nova-network</glossterm>
        <glossdef>
          <para>A Compute component that manages IP address allocation,
firewalls, and other network-related tasks. This is the legacy
networking option and an alternative to Networking.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
    <glossdiv>
      <title>O</title>
      <info/>
      <glossentry>
        <glossterm>object</glossterm>
        <glossdef>
          <para>A BLOB of data held by Object Storage; can be in any
format.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>object auditor</glossterm>
        <glossdef>
          <para>Opens all objects for an object server and verifies the MD5
hash, size, and metadata for each object.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>object expiration</glossterm>
        <glossdef>
          <para>A configurable option within Object Storage to automatically
delete objects after a specified amount of time has passed or a
certain date is reached.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>object hash</glossterm>
        <glossdef>
          <para>Unique ID for an Object Storage object.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>object path hash</glossterm>
        <glossdef>
          <para>Used by Object Storage to determine the location of an object in
the ring. Maps objects to partitions.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>object replicator</glossterm>
        <glossdef>
          <para>An Object Storage component that copies an object to remote
partitions for fault tolerance.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>object server</glossterm>
        <glossdef>
          <para>An Object Storage component that is responsible for managing
objects.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Object Storage API</glossterm>
        <glossdef>
          <para>API used to access OpenStack <xref linkend="term-object-storage-service-swift"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Object Storage Device (OSD)</glossterm>
        <glossdef>
          <para>The Ceph storage daemon.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-object-storage-service-swift">
        <glossterm>Object Storage service (swift)</glossterm>
        <glossdef>
          <para>The OpenStack core project that provides eventually consistent
and redundant storage and retrieval of fixed digital content.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>object versioning</glossterm>
        <glossdef>
          <para>Allows a user to set a flag on an <xref linkend="term-object-storage-service-swift"/> container so that all objects within the container are
versioned.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Ocata</glossterm>
        <glossdef>
          <para>The code name for the fifteenth release of OpenStack. The
design summit will take place in Barcelona, Spain. Ocata is
a beach north of Barcelona.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Octavia</glossterm>
        <glossdef>
          <para>Code name for the <xref linkend="term-load-balancing-service-octavia"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Oldie</glossterm>
        <glossdef>
          <para>Term for an <xref linkend="term-object-storage-service-swift"/>
process that runs for a long time.  Can indicate a hung process.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Open Cloud Computing Interface (OCCI)</glossterm>
        <glossdef>
          <para>A standardized interface for managing compute, data, and network
resources, currently unsupported in OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Open Virtualization Format (OVF)</glossterm>
        <glossdef>
          <para>Standard for packaging VM images. Supported in OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Open vSwitch</glossterm>
        <glossdef>
          <para>Open vSwitch is a production quality, multilayer virtual
switch licensed under the open source Apache 2.0 license. It
is designed to enable massive network automation through
programmatic extension, while still supporting standard
management interfaces and protocols (for example NetFlow,
sFlow, SPAN, RSPAN, CLI, LACP, 802.1ag).</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Open vSwitch (OVS) agent</glossterm>
        <glossdef>
          <para>Provides an interface to the underlying Open vSwitch service for
the Networking plug-in.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Open vSwitch neutron plug-in</glossterm>
        <glossdef>
          <para>Provides support for Open vSwitch in Networking.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>OpenLDAP</glossterm>
        <glossdef>
          <para>An open source LDAP server. Supported by both Compute and
Identity.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>OpenStack</glossterm>
        <glossdef>
          <para>OpenStack is a cloud operating system that controls large pools
of compute, storage, and networking resources throughout a data
center, all managed through a dashboard that gives administrators
control while empowering their users to provision resources through a
web interface. OpenStack is an open source project licensed under the
Apache License 2.0.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>OpenStack code name</glossterm>
        <glossdef>
          <para>Each OpenStack release has a code name. Code names ascend in
alphabetical order: Austin, Bexar, Cactus, Diablo, Essex,
Folsom, Grizzly, Havana, Icehouse, Juno, Kilo, Liberty,
Mitaka, Newton, Ocata, Pike, and Queens.
Code names are cities or counties near where the
corresponding OpenStack design summit took place. An
exception, called the Waldon exception, is granted to
elements of the state flag that sound especially cool. Code
names are chosen by popular vote.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>openSUSE</glossterm>
        <glossdef>
          <para>A Linux distribution that is compatible with OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>operator</glossterm>
        <glossdef>
          <para>The person responsible for planning and maintaining an OpenStack
installation.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>optional service</glossterm>
        <glossdef>
          <para>An official OpenStack service defined as optional by
DefCore Committee. Currently, consists of
Dashboard (horizon), Telemetry service (Telemetry),
Orchestration service (heat), Database service (trove),
Bare Metal service (ironic), and so on.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-orchestration-service-heat">
        <glossterm>Orchestration service (heat)</glossterm>
        <glossdef>
          <para>The OpenStack service which orchestrates composite cloud
applications using a declarative template format through
an OpenStack-native REST API.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>orphan</glossterm>
        <glossdef>
          <para>In the context of Object Storage, this is a process that is not
terminated after an upgrade, restart, or reload of the service.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Oslo</glossterm>
        <glossdef>
          <para>Codename for the <xref linkend="term-common-libraries-oslo"/>.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
    <glossdiv>
      <title>P</title>
      <info/>
      <glossentry>
        <glossterm>panko</glossterm>
        <glossdef>
          <para>Part of the OpenStack <xref linkend="term-telemetry-service-telemetry"/>; provides event storage.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>parent cell</glossterm>
        <glossdef>
          <para>If a requested resource, such as CPU time, disk storage, or
memory, is not available in the parent cell, the request is forwarded
to associated child cells.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>partition</glossterm>
        <glossdef>
          <para>A unit of storage within Object Storage used to store objects.
It exists on top of devices and is replicated for fault
tolerance.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>partition index</glossterm>
        <glossdef>
          <para>Contains the locations of all Object Storage partitions within
the ring.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>partition shift value</glossterm>
        <glossdef>
          <para>Used by Object Storage to determine which partition data should
reside on.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>path MTU discovery (PMTUD)</glossterm>
        <glossdef>
          <para>Mechanism in IP networks to detect end-to-end MTU and adjust
packet size accordingly.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>pause</glossterm>
        <glossdef>
          <para>A VM state where no changes occur (no changes in memory, network
communications stop, etc); the VM is frozen but not shut down.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>PCI passthrough</glossterm>
        <glossdef>
          <para>Gives guest VMs exclusive access to a PCI device. Currently
supported in OpenStack Havana and later releases.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>persistent message</glossterm>
        <glossdef>
          <para>A message that is stored both in memory and on disk. The message
is not lost after a failure or restart.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>persistent volume</glossterm>
        <glossdef>
          <para>Changes to these types of disk volumes are saved.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>personality file</glossterm>
        <glossdef>
          <para>A file used to customize a Compute instance. It can be used to
inject SSH keys or a specific network configuration.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Pike</glossterm>
        <glossdef>
          <para>The code name for the sixteenth release of OpenStack. The design
summit will take place in Boston, Massachusetts, US. The release
is named after the Massachusetts Turnpike, abbreviated commonly
as the Mass Pike, which is the easternmost stretch of
Interstate 90.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Platform-as-a-Service (PaaS)</glossterm>
        <glossdef>
          <para>Provides to the consumer the ability to deploy applications
through a programming language or tools supported by the cloud
platform provider. An example of Platform-as-a-Service is an
Eclipse/Java programming platform provided with no downloads
required.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>plug-in</glossterm>
        <glossdef>
          <para>Software component providing the actual implementation for
Networking APIs, or for Compute APIs, depending on the context.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>policy service</glossterm>
        <glossdef>
          <para>Component of Identity that provides a rule-management
interface and a rule-based authorization engine.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>policy-based routing (PBR)</glossterm>
        <glossdef>
          <para>Provides a mechanism to implement packet forwarding and routing
according to the policies defined by the network administrator.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>pool</glossterm>
        <glossdef>
          <para>A logical set of devices, such as web servers, that you
group together to receive and process traffic. The load
balancing function chooses which member of the pool handles
the new requests or connections received on the VIP
address. Each VIP has one pool.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>pool member</glossterm>
        <glossdef>
          <para>An application that runs on the back-end server in a
load-balancing system.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>port</glossterm>
        <glossdef>
          <para>A virtual network port within Networking; VIFs / vNICs are
connected to a port.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>port UUID</glossterm>
        <glossdef>
          <para>Unique ID for a Networking port.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>preseed</glossterm>
        <glossdef>
          <para>A tool to automate system configuration and installation on
Debian-based Linux distributions.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>private image</glossterm>
        <glossdef>
          <para>An Image service VM image that is only available to specified
projects.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>private IP address</glossterm>
        <glossdef>
          <para>An IP address used for management and administration, not
available to the public Internet.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>private network</glossterm>
        <glossdef>
          <para>The Network Controller provides virtual networks to enable
compute servers to interact with each other and with the public
network. All machines must have a public and private network
interface. A private network interface can be a flat or VLAN network
interface. A flat network interface is controlled by the
flat_interface with flat managers. A VLAN network interface is
controlled by the <literal>vlan_interface</literal> option with VLAN
managers.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>project</glossterm>
        <glossdef>
          <para>Projects represent the base unit of “ownership” in OpenStack,
in that all resources in OpenStack should be owned by a specific project.
In OpenStack Identity, a project must be owned by a specific domain.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-project-id">
        <glossterm>project ID</glossterm>
        <glossdef>
          <para>Unique ID assigned to each project by the Identity service.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>project VPN</glossterm>
        <glossdef>
          <para>Alternative term for a cloudpipe.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>promiscuous mode</glossterm>
        <glossdef>
          <para>Causes the network interface to pass all traffic it
receives to the host rather than passing only the frames
addressed to it.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>protected property</glossterm>
        <glossdef>
          <para>Generally, extra properties on an Image service image to
which only cloud administrators have access. Limits which user
roles can perform CRUD operations on that property. The cloud
administrator can configure any image property as
protected.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>provider</glossterm>
        <glossdef>
          <para>An administrator who has access to all hosts and
instances.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>proxy node</glossterm>
        <glossdef>
          <para>A node that provides the Object Storage proxy service.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>proxy server</glossterm>
        <glossdef>
          <para>Users of Object Storage interact with the service through the
proxy server, which in turn looks up the location of the requested
data within the ring and returns the results to the user.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>public API</glossterm>
        <glossdef>
          <para>An API endpoint used for both service-to-service communication
and end-user interactions.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>public image</glossterm>
        <glossdef>
          <para>An Image service VM image that is available to all
projects.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>public IP address</glossterm>
        <glossdef>
          <para>An IP address that is accessible to end-users.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>public key authentication</glossterm>
        <glossdef>
          <para>Authentication method that uses keys rather than
passwords.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>public network</glossterm>
        <glossdef>
          <para>The Network Controller provides virtual networks to enable
compute servers to interact with each other and with the public
network. All machines must have a public and private network
interface. The public network interface is controlled by the
<literal>public_interface</literal> option.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Puppet</glossterm>
        <glossdef>
          <para>An operating system configuration-management tool supported by
OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Python</glossterm>
        <glossdef>
          <para>Programming language used extensively in OpenStack.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
    <glossdiv>
      <title>Q</title>
      <info/>
      <glossentry>
        <glossterm>QEMU Copy On Write 2 (QCOW2)</glossterm>
        <glossdef>
          <para>One of the VM image disk formats supported by Image
service.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Qpid</glossterm>
        <glossdef>
          <para>Message queue software supported by OpenStack; an alternative to
RabbitMQ.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Quality of Service (QoS)</glossterm>
        <glossdef>
          <para>The ability to guarantee certain network or storage requirements to
satisfy a Service Level Agreement (SLA) between an application provider
and end users.
Typically includes performance requirements like networking bandwidth,
latency, jitter correction, and reliability as well as storage
performance in Input/Output Operations Per Second (IOPS), throttling
agreements, and performance expectations at peak load.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>quarantine</glossterm>
        <glossdef>
          <para>If Object Storage finds objects, containers, or accounts that
are corrupt, they are placed in this state, are not replicated, cannot
be read by clients, and a correct copy is re-replicated.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Queens</glossterm>
        <glossdef>
          <para>The code name for the seventeenth release of OpenStack. The
design summit will take place in Sydney, Australia. The release
is named after the Queens Pound river in the South Coast region
of New South Wales.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Quick EMUlator (QEMU)</glossterm>
        <glossdef>
          <para>QEMU is a generic and open source machine emulator and
virtualizer.
One of the hypervisors supported by OpenStack, generally used
for development purposes.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>quota</glossterm>
        <glossdef>
          <para>In Compute and Block Storage, the ability to set resource limits
on a per-project basis.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
    <glossdiv>
      <title>R</title>
      <info/>
      <glossentry>
        <glossterm>RabbitMQ</glossterm>
        <glossdef>
          <para>The default message queue software used by OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Rackspace Cloud Files</glossterm>
        <glossdef>
          <para>Released as open source by Rackspace in 2010; the basis for
Object Storage.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>RADOS Block Device (RBD)</glossterm>
        <glossdef>
          <para>Ceph component that enables a Linux block device to be striped
over multiple distributed data stores.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>radvd</glossterm>
        <glossdef>
          <para>The router advertisement daemon, used by the Compute VLAN
manager and FlatDHCP manager to provide routing services for VM
instances.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>rally</glossterm>
        <glossdef>
          <para>Codename for the <xref linkend="term-benchmark-service-rally"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>RAM filter</glossterm>
        <glossdef>
          <para>The Compute setting that enables or disables RAM
overcommitment.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>RAM overcommit</glossterm>
        <glossdef>
          <para>The ability to start new VM instances based on the actual memory
usage of a host, as opposed to basing the decision on the amount of
RAM each running instance thinks it has available. Also known as
memory overcommit.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>rate limit</glossterm>
        <glossdef>
          <para>Configurable option within Object Storage to limit database
writes on a per-account and/or per-container basis.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>raw</glossterm>
        <glossdef>
          <para>One of the VM image disk formats supported by Image service; an
unstructured disk image.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>rebalance</glossterm>
        <glossdef>
          <para>The process of distributing Object Storage partitions across all
drives in the ring; used during initial ring creation and after ring
reconfiguration.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>reboot</glossterm>
        <glossdef>
          <para>Either a soft or hard reboot of a server. With a soft reboot,
the operating system is signaled to restart, which enables a graceful
shutdown of all processes. A hard reboot is the equivalent of power
cycling the server. The virtualization platform should ensure that the
reboot action has completed successfully, even in cases in which the
underlying domain/VM is paused or halted/stopped.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>rebuild</glossterm>
        <glossdef>
          <para>Removes all data on the server and replaces it with the
specified image. Server ID and IP addresses remain the same.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Recon</glossterm>
        <glossdef>
          <para>An Object Storage component that collects meters.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>record</glossterm>
        <glossdef>
          <para>Belongs to a particular domain and is used to specify
information about the domain.
There are several types of DNS records. Each record type contains
particular information used to describe the purpose of that record.
Examples include mail exchange (MX) records, which specify the mail
server for a particular domain; and name server (NS) records, which
specify the authoritative name servers for a domain.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>record ID</glossterm>
        <glossdef>
          <para>A number within a database that is incremented each time a
change is made. Used by Object Storage when replicating.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Red Hat Enterprise Linux (RHEL)</glossterm>
        <glossdef>
          <para>A Linux distribution that is compatible with OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>reference architecture</glossterm>
        <glossdef>
          <para>A recommended architecture for an OpenStack cloud.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>region</glossterm>
        <glossdef>
          <para>A discrete OpenStack environment with dedicated API endpoints
that typically shares only the Identity (keystone) with other
regions.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>registry</glossterm>
        <glossdef>
          <para>Alternative term for the Image service registry.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>registry server</glossterm>
        <glossdef>
          <para>An Image service that provides VM image metadata information to
clients.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Reliable, Autonomic Distributed Object Store</glossterm>
        <glossdef>
          <para>(RADOS)</para>
          <para>A collection of components that provides object storage within
Ceph. Similar to OpenStack Object Storage.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Remote Procedure Call (RPC)</glossterm>
        <glossdef>
          <para>The method used by the Compute RabbitMQ for intra-service
communications.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>replica</glossterm>
        <glossdef>
          <para>Provides data redundancy and fault tolerance by creating copies
of Object Storage objects, accounts, and containers so that they are
not lost when the underlying storage fails.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>replica count</glossterm>
        <glossdef>
          <para>The number of replicas of the data in an Object Storage
ring.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>replication</glossterm>
        <glossdef>
          <para>The process of copying data to a separate physical device for
fault tolerance and performance.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>replicator</glossterm>
        <glossdef>
          <para>The Object Storage back-end process that creates and manages
object replicas.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>request ID</glossterm>
        <glossdef>
          <para>Unique ID assigned to each request sent to Compute.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>rescue image</glossterm>
        <glossdef>
          <para>A special type of VM image that is booted when an instance is
placed into rescue mode. Allows an administrator to mount the file
systems for an instance to correct the problem.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>resize</glossterm>
        <glossdef>
          <para>Converts an existing server to a different flavor, which scales
the server up or down. The original server is saved to enable rollback
if a problem occurs. All resizes must be tested and explicitly
confirmed, at which time the original server is removed.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>RESTful</glossterm>
        <glossdef>
          <para>A kind of web service API that uses REST, or Representational
State Transfer. REST is the style of architecture for hypermedia
systems that is used for the World Wide Web.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>ring</glossterm>
        <glossdef>
          <para>An entity that maps Object Storage data to partitions. A
separate ring exists for each service, such as account, object, and
container.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>ring builder</glossterm>
        <glossdef>
          <para>Builds and manages rings within Object Storage, assigns
partitions to devices, and pushes the configuration to other storage
nodes.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>role</glossterm>
        <glossdef>
          <para>A personality that a user assumes to perform a specific set of
operations. A role includes a set of rights and privileges. A user
assuming that role inherits those rights and privileges.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Role Based Access Control (RBAC)</glossterm>
        <glossdef>
          <para>Provides a predefined list of actions that the user can perform,
such as start or stop VMs, reset passwords, and so on. Supported in
both Identity and Compute and can be configured using the dashboard.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>role ID</glossterm>
        <glossdef>
          <para>Alphanumeric ID assigned to each Identity service role.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-root-cause-analysis-rca-service-vitrage">
        <glossterm>Root Cause Analysis (RCA) service (Vitrage)</glossterm>
        <glossdef>
          <para>OpenStack project that aims to organize, analyze and visualize OpenStack
alarms and events, yield insights regarding the root cause of problems
and deduce their existence before they are directly detected.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>rootwrap</glossterm>
        <glossdef>
          <para>A feature of Compute that allows the unprivileged "nova" user to
run a specified list of commands as the Linux root user.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>round-robin scheduler</glossterm>
        <glossdef>
          <para>Type of Compute scheduler that evenly distributes instances
among available hosts.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>router</glossterm>
        <glossdef>
          <para>A physical or virtual network device that passes network
traffic between different networks.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>routing key</glossterm>
        <glossdef>
          <para>The Compute direct exchanges, fanout exchanges, and topic
exchanges use this key to determine how to process a message;
processing varies depending on exchange type.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>RPC driver</glossterm>
        <glossdef>
          <para>Modular system that allows the underlying message queue software
of Compute to be changed. For example, from RabbitMQ to ZeroMQ or
Qpid.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>rsync</glossterm>
        <glossdef>
          <para>Used by Object Storage to push object replicas.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>RXTX cap</glossterm>
        <glossdef>
          <para>Absolute limit on the amount of network traffic a Compute VM
instance can send and receive.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>RXTX quota</glossterm>
        <glossdef>
          <para>Soft limit on the amount of network traffic a Compute VM
instance can send and receive.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
    <glossdiv>
      <title>S</title>
      <info/>
      <glossentry>
        <glossterm>sahara</glossterm>
        <glossdef>
          <para>Codename for the <xref linkend="term-data-processing-service-sahara"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>SAML assertion</glossterm>
        <glossdef>
          <para>Contains information about a user as provided by the identity
provider. It is an indication that a user has been authenticated.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>scheduler manager</glossterm>
        <glossdef>
          <para>A Compute component that determines where VM instances should
start. Uses modular design to support a variety of scheduler
types.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>scoped token</glossterm>
        <glossdef>
          <para>An Identity service API access token that is associated with a
specific project.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>scrubber</glossterm>
        <glossdef>
          <para>Checks for and deletes unused VMs; the component of Image
service that implements delayed delete.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>secret key</glossterm>
        <glossdef>
          <para>String of text known only by the user; used along with an access
key to make requests to the Compute API.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>secure boot</glossterm>
        <glossdef>
          <para>Process whereby the system firmware validates the authenticity of
the code involved in the boot process.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>secure shell (SSH)</glossterm>
        <glossdef>
          <para>Open source tool used to access remote hosts through an
encrypted communications channel, SSH key injection is supported by
Compute.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>security group</glossterm>
        <glossdef>
          <para>A set of network traffic filtering rules that are applied to a
Compute instance.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>segmented object</glossterm>
        <glossdef>
          <para>An Object Storage large object that has been broken up into
pieces. The re-assembled object is called a concatenated
object.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>self-service</glossterm>
        <glossdef>
          <para>For IaaS, ability for a regular (non-privileged) account to
manage a virtual infrastructure component such as networks without
involving an administrator.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>SELinux</glossterm>
        <glossdef>
          <para>Linux kernel security module that provides the mechanism for
supporting access control policies.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>senlin</glossterm>
        <glossdef>
          <para>Code name for the <xref linkend="term-clustering-service-senlin"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>server</glossterm>
        <glossdef>
          <para>Computer that provides explicit services to the client software
running on that system, often managing a variety of computer
operations.
A server is a VM instance in the Compute system. Flavor and
image are requisite elements when creating a server.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>server image</glossterm>
        <glossdef>
          <para>Alternative term for a VM image.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>server UUID</glossterm>
        <glossdef>
          <para>Unique ID assigned to each guest VM instance.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>service</glossterm>
        <glossdef>
          <para>An OpenStack service, such as Compute, Object Storage, or Image
service. Provides one or more endpoints through which users can access
resources and perform operations.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>service catalog</glossterm>
        <glossdef>
          <para>Alternative term for the Identity service catalog.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Service Function Chain (SFC)</glossterm>
        <glossdef>
          <para>For a given service, SFC is the abstracted view of the required
service functions and the order in which they are to be applied.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>service ID</glossterm>
        <glossdef>
          <para>Unique ID assigned to each service that is available in the
Identity service catalog.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Service Level Agreement (SLA)</glossterm>
        <glossdef>
          <para>Contractual obligations that ensure the availability of a
service.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>service project</glossterm>
        <glossdef>
          <para>Special project that contains all services that are listed in the
catalog.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>service provider</glossterm>
        <glossdef>
          <para>A system that provides services to other system entities. In
case of federated identity, OpenStack Identity is the service
provider.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>service registration</glossterm>
        <glossdef>
          <para>An Identity service feature that enables services, such as
Compute, to automatically register with the catalog.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>service token</glossterm>
        <glossdef>
          <para>An administrator-defined token used by Compute to communicate
securely with the Identity service.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>session back end</glossterm>
        <glossdef>
          <para>The method of storage used by horizon to track client sessions,
such as local memory, cookies, a database, or memcached.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>session persistence</glossterm>
        <glossdef>
          <para>A feature of the load-balancing service. It attempts to force
subsequent connections to a service to be redirected to the same node
as long as it is online.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>session storage</glossterm>
        <glossdef>
          <para>A horizon component that stores and tracks client session
information. Implemented through the Django sessions framework.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>share</glossterm>
        <glossdef>
          <para>A remote, mountable file system in the context of the <xref linkend="term-shared-file-systems-service-manila"/>. You can
mount a share to, and access a share from, several hosts by several
users at a time.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>share network</glossterm>
        <glossdef>
          <para>An entity in the context of the <xref linkend="term-shared-file-systems-service-manila"/> that encapsulates
interaction with the Networking service. If the driver you selected
runs in the mode requiring such kind of interaction, you need to
specify the share network to create a share.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Shared File Systems API</glossterm>
        <glossdef>
          <para>A Shared File Systems service that provides a stable RESTful API.
The service authenticates and routes requests throughout the Shared
File Systems service. There is python-manilaclient to interact with
the API.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-shared-file-systems-service-manila">
        <glossterm>Shared File Systems service (manila)</glossterm>
        <glossdef>
          <para>The service that provides a set of services for
management of shared file systems in a multi-tenant cloud
environment, similar to how OpenStack provides block-based storage
management through the OpenStack <xref linkend="term-block-storage-service-cinder"/> project.
With the Shared File Systems service, you can create a remote file
system and mount the file system on your instances. You can also
read and write data from your instances to and from your file system.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>shared IP address</glossterm>
        <glossdef>
          <para>An IP address that can be assigned to a VM instance within the
shared IP group. Public IP addresses can be shared across multiple
servers for use in various high-availability scenarios. When an IP
address is shared to another server, the cloud network restrictions
are modified to enable each server to listen to and respond on that IP
address. You can optionally specify that the target server network
configuration be modified. Shared IP addresses can be used with many
standard heartbeat facilities, such as keepalive, that monitor for
failure and manage IP failover.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>shared IP group</glossterm>
        <glossdef>
          <para>A collection of servers that can share IPs with other members of
the group. Any server in a group can share one or more public IPs with
any other server in the group. With the exception of the first server
in a shared IP group, servers must be launched into shared IP groups.
A server may be a member of only one shared IP group.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>shared storage</glossterm>
        <glossdef>
          <para>Block storage that is simultaneously accessible by multiple
clients, for example, NFS.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Sheepdog</glossterm>
        <glossdef>
          <para>Distributed block storage system for QEMU, supported by
OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Simple Cloud Identity Management (SCIM)</glossterm>
        <glossdef>
          <para>Specification for managing identity in the cloud, currently
unsupported by OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Simple Protocol for Independent Computing Environments (SPICE)</glossterm>
        <glossdef>
          <para>SPICE provides remote desktop access to guest virtual machines. It
is an alternative to VNC. SPICE is supported by OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Single-root I/O Virtualization (SR-IOV)</glossterm>
        <glossdef>
          <para>A specification that, when implemented by a physical PCIe
device, enables it to appear as multiple separate PCIe devices. This
enables multiple virtualized guests to share direct access to the
physical device, offering improved performance over an equivalent
virtual device. Currently supported in OpenStack Havana and later
releases.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>SmokeStack</glossterm>
        <glossdef>
          <para>Runs automated tests against the core OpenStack API; written in
Rails.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>snapshot</glossterm>
        <glossdef>
          <para>A point-in-time copy of an OpenStack storage volume or image.
Use storage volume snapshots to back up volumes. Use image snapshots
to back up data, or as "gold" images for additional servers.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>soft reboot</glossterm>
        <glossdef>
          <para>A controlled reboot where a VM instance is properly restarted
through operating system commands.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-software-development-lifecycle-automation-service-solum">
        <glossterm>Software Development Lifecycle Automation service (solum)</glossterm>
        <glossdef>
          <para>OpenStack project that aims to make cloud services easier to
consume and integrate with application development process
by automating the source-to-image process, and simplifying
app-centric deployment.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Software-defined networking (SDN)</glossterm>
        <glossdef>
          <para>Provides an approach for network administrators to manage computer
network services through abstraction of lower-level functionality.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>SolidFire Volume Driver</glossterm>
        <glossdef>
          <para>The Block Storage driver for the SolidFire iSCSI storage
appliance.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>solum</glossterm>
        <glossdef>
          <para>Code name for the <xref linkend="term-software-development-lifecycle-automation-service-solum"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>spread-first scheduler</glossterm>
        <glossdef>
          <para>The Compute VM scheduling algorithm that attempts to start a new
VM on the host with the least amount of load.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>SQLAlchemy</glossterm>
        <glossdef>
          <para>An open source SQL toolkit for Python, used in OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>SQLite</glossterm>
        <glossdef>
          <para>A lightweight SQL database, used as the default persistent
storage method in many OpenStack services.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>stack</glossterm>
        <glossdef>
          <para>A set of OpenStack resources created and managed by the
Orchestration service according to a given template (either an
AWS CloudFormation template or a Heat Orchestration
Template (HOT)).</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>StackTach</glossterm>
        <glossdef>
          <para>Community project that captures Compute AMQP communications;
useful for debugging.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>static IP address</glossterm>
        <glossdef>
          <para>Alternative term for a fixed IP address.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>StaticWeb</glossterm>
        <glossdef>
          <para>WSGI middleware component of Object Storage that serves
container data as a static web page.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>storage back end</glossterm>
        <glossdef>
          <para>The method that a service uses for persistent storage, such as
iSCSI, NFS, or local disk.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>storage manager</glossterm>
        <glossdef>
          <para>A XenAPI component that provides a pluggable interface to
support a wide variety of persistent storage back ends.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>storage manager back end</glossterm>
        <glossdef>
          <para>A persistent storage method supported by XenAPI, such as iSCSI
or NFS.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>storage node</glossterm>
        <glossdef>
          <para>An Object Storage node that provides container services, account
services, and object services; controls the account databases,
container databases, and object storage.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>storage services</glossterm>
        <glossdef>
          <para>Collective name for the Object Storage object services,
container services, and account services.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>strategy</glossterm>
        <glossdef>
          <para>Specifies the authentication source used by Image service or
Identity. In the Database service, it refers to the extensions
implemented for a data store.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>subdomain</glossterm>
        <glossdef>
          <para>A domain within a parent domain. Subdomains cannot be
registered. Subdomains enable you to delegate domains. Subdomains can
themselves have subdomains, so third-level, fourth-level, fifth-level,
and deeper levels of nesting are possible.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>subnet</glossterm>
        <glossdef>
          <para>Logical subdivision of an IP network.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>SUSE Linux Enterprise Server (SLES)</glossterm>
        <glossdef>
          <para>A Linux distribution that is compatible with OpenStack.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>suspend</glossterm>
        <glossdef>
          <para>Alternative term for a paused VM instance.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>swap</glossterm>
        <glossdef>
          <para>Disk-based virtual memory used by operating systems to provide
more memory than is actually available on the system.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>swauth</glossterm>
        <glossdef>
          <para>An authentication and authorization service for Object Storage,
implemented through WSGI middleware; uses Object Storage itself as the
persistent backing store.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>swift</glossterm>
        <glossdef>
          <para>Codename for OpenStack <xref linkend="term-object-storage-service-swift"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>swift All in One (SAIO)</glossterm>
        <glossdef>
          <para>Creates a full Object Storage development environment within a
single VM.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>swift middleware</glossterm>
        <glossdef>
          <para>Collective term for Object Storage components that provide
additional functionality.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>swift proxy server</glossterm>
        <glossdef>
          <para>Acts as the gatekeeper to Object Storage and is responsible for
authenticating the user.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>swift storage node</glossterm>
        <glossdef>
          <para>A node that runs Object Storage account, container, and object
services.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>sync point</glossterm>
        <glossdef>
          <para>Point in time since the last container and accounts database
sync among nodes within Object Storage.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>sysadmin</glossterm>
        <glossdef>
          <para>One of the default roles in the Compute RBAC system. Enables a
user to add other users to a project, interact with VM images that are
associated with the project, and start and stop VM instances.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>system usage</glossterm>
        <glossdef>
          <para>A Compute component that, along with the notification system,
collects meters and usage information. This information can be used
for billing.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
    <glossdiv>
      <title>T</title>
      <info/>
      <glossentry>
        <glossterm>tacker</glossterm>
        <glossdef>
          <para>Code name for the <xref linkend="term-nfv-orchestration-service-tacker"/></para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-telemetry-service-telemetry">
        <glossterm>Telemetry service (telemetry)</glossterm>
        <glossdef>
          <para>The OpenStack project which collects measurements of the utilization
of the physical and virtual resources comprising deployed clouds,
persists this data for subsequent retrieval and analysis, and triggers
actions when defined criteria are met.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>TempAuth</glossterm>
        <glossdef>
          <para>An authentication facility within Object Storage that enables
Object Storage itself to perform authentication and authorization.
Frequently used in testing and development.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Tempest</glossterm>
        <glossdef>
          <para>Automated software test suite designed to run against the trunk
of the OpenStack core project.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>TempURL</glossterm>
        <glossdef>
          <para>An Object Storage middleware component that enables creation of
URLs for temporary object access.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>tenant</glossterm>
        <glossdef>
          <para>A group of users; used to isolate access to Compute resources.
An alternative term for a project.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Tenant API</glossterm>
        <glossdef>
          <para>An API that is accessible to projects.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>tenant endpoint</glossterm>
        <glossdef>
          <para>An Identity service API endpoint that is associated with one or
more projects.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>tenant ID</glossterm>
        <glossdef>
          <para>An alternative term for <xref linkend="term-project-id"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>token</glossterm>
        <glossdef>
          <para>An alpha-numeric string of text used to access OpenStack APIs
and resources.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>token services</glossterm>
        <glossdef>
          <para>An Identity service component that manages and validates tokens
after a user or project has been authenticated.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>tombstone</glossterm>
        <glossdef>
          <para>Used to mark Object Storage objects that have been
deleted; ensures that the object is not updated on another node after
it has been deleted.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>topic publisher</glossterm>
        <glossdef>
          <para>A process that is created when a RPC call is executed; used to
push the message to the topic exchange.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Torpedo</glossterm>
        <glossdef>
          <para>Community project used to run automated tests against the
OpenStack API.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>transaction ID</glossterm>
        <glossdef>
          <para>Unique ID assigned to each Object Storage request; used for
debugging and tracing.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>transient</glossterm>
        <glossdef>
          <para>Alternative term for non-durable.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>transient exchange</glossterm>
        <glossdef>
          <para>Alternative term for a non-durable exchange.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>transient message</glossterm>
        <glossdef>
          <para>A message that is stored in memory and is lost after the server
is restarted.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>transient queue</glossterm>
        <glossdef>
          <para>Alternative term for a non-durable queue.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>TripleO</glossterm>
        <glossdef>
          <para>OpenStack-on-OpenStack program. The code name for the
OpenStack Deployment program.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>trove</glossterm>
        <glossdef>
          <para>Codename for OpenStack <xref linkend="term-database-service-trove"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>trusted platform module (TPM)</glossterm>
        <glossdef>
          <para>Specialized microprocessor for incorporating cryptographic keys
into devices for authenticating and securing a hardware platform.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
    <glossdiv>
      <title>U</title>
      <info/>
      <glossentry>
        <glossterm>Ubuntu</glossterm>
        <glossdef>
          <para>A Debian-based Linux distribution.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>unscoped token</glossterm>
        <glossdef>
          <para>Alternative term for an Identity service default token.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>updater</glossterm>
        <glossdef>
          <para>Collective term for a group of Object Storage components that
processes queued and failed updates for containers and objects.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>user</glossterm>
        <glossdef>
          <para>In OpenStack Identity,  entities represent individual API
consumers and are owned by a specific domain. In OpenStack Compute,
a user can be associated with roles, projects, or both.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-user-data">
        <glossterm>user data</glossterm>
        <glossdef>
          <para>A blob of data that the user can specify when they launch
an instance. The instance can access this data through the
metadata service or config drive.
Commonly used to pass a shell script that the instance runs on boot.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>User Mode Linux (UML)</glossterm>
        <glossdef>
          <para>An OpenStack-supported hypervisor.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
    <glossdiv>
      <title>V</title>
      <info/>
      <glossentry>
        <glossterm>VIF UUID</glossterm>
        <glossdef>
          <para>Unique ID assigned to each Networking VIF.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Virtual Central Processing Unit (vCPU)</glossterm>
        <glossdef>
          <para>Subdivides physical CPUs. Instances can then use those
divisions.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Virtual Disk Image (VDI)</glossterm>
        <glossdef>
          <para>One of the VM image disk formats supported by Image
service.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Virtual Extensible LAN (VXLAN)</glossterm>
        <glossdef>
          <para>A network virtualization technology that attempts to reduce the
scalability problems associated with large cloud computing
deployments. It uses a VLAN-like encapsulation technique to
encapsulate Ethernet frames within UDP packets.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Virtual Hard Disk (VHD)</glossterm>
        <glossdef>
          <para>One of the VM image disk formats supported by Image
service.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>virtual IP address (VIP)</glossterm>
        <glossdef>
          <para>An Internet Protocol (IP) address configured on the load
balancer for use by clients connecting to a service that is load
balanced. Incoming connections are distributed to back-end nodes based
on the configuration of the load balancer.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>virtual machine (VM)</glossterm>
        <glossdef>
          <para>An operating system instance that runs on top of a hypervisor.
Multiple VMs can run at the same time on the same physical
host.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>virtual network</glossterm>
        <glossdef>
          <para>An L2 network segment within Networking.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Virtual Network Computing (VNC)</glossterm>
        <glossdef>
          <para>Open source GUI and CLI tools used for remote console access to
VMs. Supported by Compute.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Virtual Network InterFace (VIF)</glossterm>
        <glossdef>
          <para>An interface that is plugged into a port in a Networking
network. Typically a virtual network interface belonging to a
VM.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>virtual networking</glossterm>
        <glossdef>
          <para>A generic term for virtualization of network functions
such as switching, routing, load balancing, and security using
a combination of VMs and overlays on physical network
infrastructure.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>virtual port</glossterm>
        <glossdef>
          <para>Attachment point where a virtual interface connects to a virtual
network.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>virtual private network (VPN)</glossterm>
        <glossdef>
          <para>Provided by Compute in the form of cloudpipes, specialized
instances that are used to create VPNs on a per-project basis.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>virtual server</glossterm>
        <glossdef>
          <para>Alternative term for a VM or guest.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>virtual switch (vSwitch)</glossterm>
        <glossdef>
          <para>Software that runs on a host or node and provides the features
and functions of a hardware-based network switch.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>virtual VLAN</glossterm>
        <glossdef>
          <para>Alternative term for a virtual network.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>VirtualBox</glossterm>
        <glossdef>
          <para>An OpenStack-supported hypervisor.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Vitrage</glossterm>
        <glossdef>
          <para>Code name for the <xref linkend="term-root-cause-analysis-rca-service-vitrage"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>VLAN manager</glossterm>
        <glossdef>
          <para>A Compute component that provides dnsmasq and radvd and sets up
forwarding to and from cloudpipe instances.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>VLAN network</glossterm>
        <glossdef>
          <para>The Network Controller provides virtual networks to enable
compute servers to interact with each other and with the public
network. All machines must have a public and private network
interface. A VLAN network is a private network interface, which is
controlled by the <literal>vlan_interface</literal> option with VLAN
managers.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>VM disk (VMDK)</glossterm>
        <glossdef>
          <para>One of the VM image disk formats supported by Image
service.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>VM image</glossterm>
        <glossdef>
          <para>Alternative term for an image.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>VM Remote Control (VMRC)</glossterm>
        <glossdef>
          <para>Method to access VM instance consoles using a web browser.
Supported by Compute.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>VMware API</glossterm>
        <glossdef>
          <para>Supports interaction with VMware products in Compute.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>VMware NSX Neutron plug-in</glossterm>
        <glossdef>
          <para>Provides support for VMware NSX in Neutron.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>VNC proxy</glossterm>
        <glossdef>
          <para>A Compute component that provides users access to the consoles
of their VM instances through VNC or VMRC.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>volume</glossterm>
        <glossdef>
          <para>Disk-based data storage generally represented as an iSCSI target
with a file system that supports extended attributes; can be
persistent or ephemeral.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Volume API</glossterm>
        <glossdef>
          <para>Alternative name for the Block Storage API.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>volume controller</glossterm>
        <glossdef>
          <para>A Block Storage component that oversees and coordinates storage
volume actions.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>volume driver</glossterm>
        <glossdef>
          <para>Alternative term for a volume plug-in.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>volume ID</glossterm>
        <glossdef>
          <para>Unique ID applied to each storage volume under the Block Storage
control.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>volume manager</glossterm>
        <glossdef>
          <para>A Block Storage component that creates, attaches, and detaches
persistent storage volumes.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>volume node</glossterm>
        <glossdef>
          <para>A Block Storage node that runs the cinder-volume daemon.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>volume plug-in</glossterm>
        <glossdef>
          <para>Provides support for new and specialized types of back-end
storage for the Block Storage volume manager.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>volume worker</glossterm>
        <glossdef>
          <para>A cinder component that interacts with back-end storage to manage
the creation and deletion of volumes and the creation of compute
volumes, provided by the cinder-volume daemon.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>vSphere</glossterm>
        <glossdef>
          <para>An OpenStack-supported hypervisor.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
    <glossdiv>
      <title>W</title>
      <info/>
      <glossentry>
        <glossterm>Watcher</glossterm>
        <glossdef>
          <para>Code name for the <xref linkend="term-infrastructure-optimization-service-watcher"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>weight</glossterm>
        <glossdef>
          <para>Used by Object Storage devices to determine which storage
devices are suitable for the job. Devices are weighted by size.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>weighted cost</glossterm>
        <glossdef>
          <para>The sum of each cost used when deciding where to start a new VM
instance in Compute.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>weighting</glossterm>
        <glossdef>
          <para>A Compute process that determines the suitability of the VM
instances for a job for a particular host. For example, not enough RAM
on the host, too many CPUs on the host, and so on.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>worker</glossterm>
        <glossdef>
          <para>A daemon that listens to a queue and carries out tasks in
response to messages. For example, the cinder-volume worker manages volume
creation and deletion on storage arrays.</para>
        </glossdef>
      </glossentry>
      <glossentry xml:id="term-workflow-service-mistral">
        <glossterm>Workflow service (mistral)</glossterm>
        <glossdef>
          <para>The OpenStack service that provides a simple YAML-based language to
write workflows (tasks and transition rules) and a service that
allows to upload them, modify, run them at scale and in a highly
available manner, manage and monitor workflow execution state and state
of individual tasks.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
    <glossdiv>
      <title>X</title>
      <info/>
      <glossentry>
        <glossterm>Xen</glossterm>
        <glossdef>
          <para>Xen is a hypervisor using a microkernel design, providing
services that allow multiple computer operating systems to
execute on the same computer hardware concurrently.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Xen API</glossterm>
        <glossdef>
          <para>The Xen administrative API, which is supported by
Compute.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Xen Cloud Platform (XCP)</glossterm>
        <glossdef>
          <para>An OpenStack-supported hypervisor.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Xen Storage Manager Volume Driver</glossterm>
        <glossdef>
          <para>A Block Storage volume plug-in that enables communication with
the Xen Storage Manager API.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>XenServer</glossterm>
        <glossdef>
          <para>An OpenStack-supported hypervisor.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>XFS</glossterm>
        <glossdef>
          <para>High-performance 64-bit file system created by Silicon
Graphics. Excels in parallel I/O operations and data
consistency.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
    <glossdiv>
      <title>Z</title>
      <info/>
      <glossentry>
        <glossterm>zaqar</glossterm>
        <glossdef>
          <para>Codename for the <xref linkend="term-message-service-zaqar"/>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>ZeroMQ</glossterm>
        <glossdef>
          <para>Message queue software supported by OpenStack. An alternative to
RabbitMQ. Also spelled 0MQ.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>Zuul</glossterm>
        <glossdef>
          <para>Tool used in OpenStack development to ensure correctly ordered
testing of changes in parallel.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
  </glossary>
</book>
