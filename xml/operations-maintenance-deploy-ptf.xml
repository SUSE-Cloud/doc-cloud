<?xml version="1.0"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
    type="text/xml"
    title="Profiling step"?>
<!DOCTYPE section [
<!ENTITY % entities SYSTEM "entity-decl.ent"> %entities;
]>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="deploy-ptf">
 <title>&clm; Program Temporary Fix (PTF) Deployment</title>
 <para>
  Occasionally, in order to fix a given issue, &suse; will provide a set of
  packages known as a Program Temporary Fix (PTF). Such a PTF is fully
  supported by SUSE until the Maintenance Update containing a permanent fix has
  been released via the regular Update repositories. Customers running PTF
  fixes will be notified through the related Service Request when a permanent
  patch for a PTF has been released.
 </para>
 <para>
  Use the following steps to deploy a PTF:
 </para>
 <procedure>
  <step>
   <para>
    When &suse; has developed a PTF, you will receive a URL for that PTF. You
    should download the packages from the location provided by &suse; Support
    to a temporary location on the &clm;. For example:
   </para>
<screen>&prompt.ardana;tmpdir=`mktemp -d`
&prompt.ardana;cd $tmpdir
&prompt.ardana;wget --no-directories --recursive --reject "index.html*"\
--user=<replaceable>USER_NAME</replaceable> \
--ask-password \
--no-parent https://ptf.suse.com/54321aaaa...dddd12345/cloud8/042171/x86_64/20181030/</screen>
  </step>
  <step>
   <para>
    Remove any old data from the PTF repository, such as a listing for a PTF
    repository from a migration or when previous product patches were
    installed.
   </para>
   <screen>&prompt.ardana;sudo rm -rf /srv/www/suse-12.4/x86_64/repos/PTF/*</screen>
  </step>
  <step>
   <para>
    Move packages from the temporary download location to the PTF repository
    directory on the CLM Server. This example is for a &o_netw; PTF.
   </para>
   <screen>&prompt.ardana;sudo mkdir -p /srv/www/suse-12.4/x86_64/repos/PTF/
&prompt.ardana;sudo mv $tmpdir/*
   /srv/www/suse-12.4/x86_64/repos/PTF/
&prompt.ardana;sudo chown --recursive root:root /srv/www/suse-12.4/x86_64/repos/PTF/*
&prompt.ardana;rmdir $tmpdir</screen>
  </step>
  <step>
   <para>
    Create or update the repository metadata:
   </para>
<screen>&prompt.ardana;sudo /usr/local/sbin/createrepo-cloud-ptf
Spawning worker 0 with 2 pkgs
Workers Finished
Saving Primary metadata
Saving file lists metadata
Saving other metadata</screen>
  </step>
  <step>
   <para>
    Refresh the PTF repository before installing package updates on the &clm;
   </para>
<screen>&prompt.ardana;sudo zypper refresh --force --repo PTF
Forcing raw metadata refresh
Retrieving repository 'PTF' metadata
..........................................[d
one]
Forcing building of repository cache
Building repository 'PTF' cache ..........................................[done]
Specified repositories have been refreshed.</screen>
  </step>
  <step>
   <para>
    The PTF shows as available on the deployer.
   </para>
<screen>&prompt.ardana;sudo zypper se --repo PTF
Loading repository data...
Reading installed packages...

S | Name                          | Summary                                 | Type
--+-------------------------------+-----------------------------------------+--------
  | python-neutronclient          | Python API and CLI for OpenStack neutron | package
i | venv-openstack-neutron-x86_64 | Python virtualenv for OpenStack neutron | package</screen>
  </step>
    <step>
   <para>
    Install the PTF packages on the &compnode;
   </para>
   <screen>&prompt.ardana;cd ~/scratch/ansible/next/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/verb_hosts ardana-update-pkgs.yml --extra-vars '{"zypper_update_method": "update", "zypper_update_repositories": ["PTF"]}' --limit comp0001-mgmt</screen>
   <para>
    When it has finished, you can see that the upgraded package
    has been installed on <literal>comp0001-mgmt</literal>.
   </para>
   <screen>&prompt.ardana;sudo zypper se --detail python-neutronclient
Loading repository data...
Reading installed packages...

S | Name                 | Type     | Version                         | Arch   | Repository
--+----------------------+----------+---------------------------------+--------+--------------------------------------
i | python-neutronclient | package  | 6.5.1-4.361.042171.0.PTF.102473 | noarch | PTF
  | python-neutronclient | package  | 6.5.0-4.361                     | noarch | SUSE-OPENSTACK-CLOUD-x86_64-GM-DVD1
   </screen>
  </step>
  <step>
   <para>
    Install the PTF venv packages on the &clm;
   </para>
<screen>&prompt.ardana;sudo zypper dup  --from PTF
Refreshing service
Loading repository data...
Reading installed packages...
Computing distribution upgrade...

The following package is going to be upgraded:
  venv-openstack-neutron-x86_64

The following package has no support information from its vendor:
  venv-openstack-neutron-x86_64

1 package to upgrade.
Overall download size: 64.2 MiB. Already cached: 0 B. After the operation, additional 6.9 KiB will be used.
Continue? [y/n/...? shows all options] (y): y
Retrieving package venv-openstack-neutron-x86_64-11.0.2-13.8.1.042171.0.PTF.102473.noarch ... (1/1),  64.2 MiB ( 64.6 MiB unpacked)
Retrieving: venv-openstack-neutron-x86_64-11.0.2-13.8.1.042171.0.PTF.102473.noarch.rpm ....[done]
Checking for file conflicts: ..............................................................[done]
(1/1) Installing: venv-openstack-neutron-x86_64-11.0.2-13.8.1.042171.0.PTF.102473.noarch ....[done]
Additional rpm output:
warning
warning: /var/cache/zypp/packages/PTF/noarch/venv-openstack-neutron-x86_64-11.0.2-13.8.1.042171.0.PTF.102473.noarch.rpm: Header V3 DSA/SHA1 Signature, key ID b37b98a9: NOKEY</screen>
  </step>
  <step>
   <para>
    The PTF venv packages must first be unpacked into the deployment directory:
   </para>
<screen>&prompt.ardana;ls -la /srv/www/suse-12.4/x86_64/repos
total 898952
drwxr-xr-x 2 root root     4096 Oct 30 16:10 .
...
-rw-r--r-- 1 root root 67688160 Oct 30 12:44 neutron-20181030T124310Z.tgz &lt;&lt;&lt;
-rw-r--r-- 1 root root 64674087 Aug 14 16:14 nova-20180814T161306Z.tgz
-rw-r--r-- 1 root root 45378897 Aug 14 16:09 octavia-20180814T160839Z.tgz
-rw-r--r-- 1 root root     1879 Oct 30 16:10 packages
-rw-r--r-- 1 root root 27186008 Apr 26  2018 swift-20180426T230541Z.tgz</screen>
  </step>
  <step>
   <para>
    Running the ardana update playbook will distribute the PTF venv packages to
    the cloud server. Then you can find them loaded in the virtual environment
    directory with the other venvs.
   </para>
   <para>
    The &compnode; before running the update playbook:
   </para>
<screen>&prompt.ardana;ls -la /opt/stack/venv
total 24
drwxr-xr-x  9 root root 4096 Jul 18 15:47 neutron-20180718T154642Z
drwxr-xr-x  9 root root 4096 Aug 14 16:13 neutron-20180814T161306Z
drwxr-xr-x 10 root root 4096 May 28 09:30 nova-20180528T092954Z
drwxr-xr-x 10 root root 4096 Aug 14 16:13 nova-20180814T161306Z</screen>
  </step>
  <step>
   <para>
    Run the update.
   </para>
<screen>&prompt.ardana;cd ~/scratch/ansible/next/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/verb_hosts ardana-update.yml --limit comp0001-mgmt</screen>
   <para>
    When it has finished, you can see that an additional virtual environment
    has been installed.
   </para>
<screen>&prompt.ardana;ls -la /opt/stack/venv
total 28
drwxr-xr-x  9 root root 4096 Jul 18 15:47 neutron-20180718T154642Z
drwxr-xr-x  9 root root 4096 Aug 14 16:13 neutron-20180814T161306Z
drwxr-xr-x  9 root root 4096 Oct 30 12:43 neutron-20181030T124310Z &lt;&lt;&lt; New venv installed
drwxr-xr-x 10 root root 4096 May 28 09:30 nova-20180528T092954Z
drwxr-xr-x 10 root root 4096 Aug 14 16:13 nova-20180814T161306Z</screen>
  </step>
  <step>
   <para>
    The PTF may also have <literal>RPM</literal> package updates in addition to
    venv updates. To complete the update, follow the instructions at <xref
    linkend="perform-update"/>
   </para>
  </step>
 </procedure>
</section>
