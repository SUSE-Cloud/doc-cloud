<?xml version="1.0"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
    type="text/xml"
    title="Profiling step"?>
<!DOCTYPE section [
<!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="deploy_ptf">
 <title>&lcm; Program Temporary Fix (PTF) Deployment</title>
 <para>
  Occasionally, in order to fix a given issue, &suse; will provide a set of
  packages known as a Program Temporary Fix (PTF). Such a PTF is fully
  supported by SUSE until the Maintenance Update containing a permanent fix has
  been released via the regular Update repositories.  Customers running PTF
  fixes will be notified through the related Service Request when a permanent
  patch for a PTF has been released.
 </para>
 <para>
  Use the following steps to deploy a PTF:
 </para>
 <procedure>
  <step>
   <para>
    When &suse; has developed a PTF, you will receive a URL for that PTF. It
    will contain the entire Python virtual environment (venv). You should
    download the packages from the location provided by &suse; Support to a
    temporary location on the &lcm;. Set the variables for your Support ID and
    password. For example:
   </para>
   <screen>&prompt.ardana;sudo user=<replaceable>USER_NAME</replaceable>
&prompt.ardana;sudo psw=<replaceable>PASSWORD</replaceable>
&prompt.ardana;sudo wget --no-directories --recursive --reject "index.html*"\
--user=<replaceable>USER_NAME</replaceable> \
--password=<replaceable>PASSWORD</replaceable> \
--no-parent https://ptf.suse.com/5d0981855eecb9f040ed3a0fff8af236/cloud8/16374/x86_64/20181030/venv-openstack-neutron-x86_64-11.0.2-13.8.1.16374.0.PTF.1113308.noarch.rpm</screen>
  </step>
  <step>
   <para>
    Remove any old data from the PTF repository, such as a listing for a PTF
    repository from a migration or when previous product patches were
    installed.
   </para>
   <screen>&prompt.ardana;cd /srv/www/suse-12.3/x86_64/repos/PTF/
&prompt.ardana;sudo rm -rf *</screen>
  </step>
  <step>
   <para>
    Move the packages from the temporary download location to the following
    directories on the CLM Server:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      PTFs with <literal>noarch</literal> packages
      (<filename>*.noarch.rpm</filename>) go into
      <filename>/srv/www/suse-12.3/x86_64/repos/PTF/noarch/</filename>
     </para>
    </listitem>
    <listitem>
     <para>
      PTFs with <literal>x86_64</literal> packages
      (<filename>*.x86_64.rpm</filename>) go into
      <filename>/srv/www/suse-12.3/x86_64/repos/PTF/x86_64/</filename>
     </para>
    </listitem>
   </itemizedlist>
   <para>
    This example is for the &o_netw; venv, so that PTF is moved to the repo.
   </para>
   <screen>&prompt.ardana;sudo mkdir -p /srv/www/suse-12.3/x86_64/repos/PTF/noarch/
&prompt.ardana;sudo cp venv-openstack-neutron-x86_64-11.0.2-13.8.1.16374.0.PTF.1113308.noarch.rpm
   /srv/www/suse-12.3/x86_64/repos/PTF/noarch/</screen>
  </step>
  <step>
   <para>
    Create or update the repository metadata:
   </para>
   <screen>&prompt.ardana;sudo /usr/local/sbin/createrepo-cloud-ptf
Spawning worker 0 with 1 pkgs
Workers Finished
Saving Primary metadata
Saving file lists metadata
Saving other metadata</screen>
  </step>
  <step>
   <para>
    Refresh the PTF repository before installing package updates on the &lcm;
   </para>
   <screen>&prompt.ardana;sudo zypper refresh -fr PTF
Forcing raw metadata refresh
Retrieving repository 'PTF' metadata ..........................................[done]
Forcing building of repository cache
Building repository 'PTF' cache ..........................................[done]
Specified repositories have been refreshed.</screen>
  </step>
  <step>
   <para>
    The PTF shows as available on the deployer.
   </para>
   <screen>&prompt.ardana;sudo zypper se -r PTF
Loading repository data...
Reading installed packages...

S | Name                          | Summary                                 | Type
--+-------------------------------+-----------------------------------------+--------
i | venv-openstack-neutron-x86_64 | Python virtualenv for OpenStack Neutron | package</screen>
  </step>
  <step>
   <para>
    Install the PTF on the &lcm;
   </para>
   <screen>&prompt.ardana;sudo zypper dup --from PTF
Refreshing service
Loading repository data...
Reading installed packages...
Computing distribution upgrade...

The following package is going to be upgraded:
  venv-openstack-neutron-x86_64

The following package has no support information from its vendor:
  venv-openstack-neutron-x86_64

1 package to upgrade.
Overall download size: 64.2 MiB. Already cached: 0 B. After the operation, additional 6.9 KiB will be used.
Continue? [y/n/...? shows all options] (y): y
Retrieving package venv-openstack-neutron-x86_64-11.0.2-13.8.1.16374.0.PTF.1113308.noarch ... (1/1),  64.2 MiB ( 64.6 MiB unpacked)
Retrieving: venv-openstack-neutron-x86_64-11.0.2-13.8.1.16374.0.PTF.1113308.noarch.rpm ....[done]
Checking for file conflicts: ..............................................................[done]
(1/1) Installing: venv-openstack-neutron-x86_64-11.0.2-13.8.1.16374.0.PTF.1113308.noarch ....[done]
Additional rpm output:
warning
warning: /var/cache/zypp/packages/PTF/noarch/venv-openstack-neutron-x86_64-11.0.2-13.8.1.16374.0.PTF.1113308.noarch.rpm: Header V3 DSA/SHA1 Signature, key ID b37b98a9: NOKEY</screen>
  </step>
  <step>
   <para>
    The PTF must first be unpacked into the deployment directory:
   </para>
   <screen>&prompt.ardana;ls -la /srv/www/suse-12.3/x86_64/repos
total 898952
drwxr-xr-x 2 root root     4096 Oct 30 16:10 .
...
-rw-r--r-- 1 root root 67688160 Oct 30 12:44 neutron-20181030T124310Z.tgz &lt;&lt;&lt;
-rw-r--r-- 1 root root 64674087 Aug 14 16:14 nova-20180814T161306Z.tgz
-rw-r--r-- 1 root root 45378897 Aug 14 16:09 octavia-20180814T160839Z.tgz
-rw-r--r-- 1 root root     1879 Oct 30 16:10 packages
-rw-r--r-- 1 root root 27186008 Apr 26  2018 swift-20180426T230541Z.tgz</screen>
  </step>
  <step>
   <para>
    Running the ardana update playbook will distribute the PTF to the cloud
    server. Then you can find it loaded in the virtual environment directory
    with the other venvs.
   </para>
   <para>
    The &compnode; before running the update playbook:
   </para>
   <screen>&prompt.ardana;ls -la /opt/stack/venv
total 24
drwxr-xr-x  9 root root 4096 Jul 18 15:47 neutron-20180718T154642Z
drwxr-xr-x  9 root root 4096 Aug 14 16:13 neutron-20180814T161306Z
drwxr-xr-x 10 root root 4096 May 28 09:30 nova-20180528T092954Z
drwxr-xr-x 10 root root 4096 Aug 14 16:13 nova-20180814T161306Z</screen>
  </step>
  <step>
   <para>
    Run the update
   </para>
   <screen>&prompt.ardana;cd ~/scratch/ansible/next/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/verb_hosts ardana-update.yml --limit  comp0001-mgmt</screen>
   <para>
    When it has finished, you can see that an additional virtual environment
    has been installed
   </para>
   <screen>&prompt.ardana;ls -la /opt/stack/venv
total 28
drwxr-xr-x  9 root root 4096 Jul 18 15:47 neutron-20180718T154642Z
drwxr-xr-x  9 root root 4096 Aug 14 16:13 neutron-20180814T161306Z
drwxr-xr-x  9 root root 4096 Oct 30 12:43 neutron-20181030T124310Z &lt;&lt;&lt; New venv installed
drwxr-xr-x 10 root root 4096 May 28 09:30 nova-20180528T092954Z
   drwxr-xr-x 10 root root 4096 Aug 14 16:13 nova-20180814T161306Z</screen>
  </step>
 </procedure>
</section>
