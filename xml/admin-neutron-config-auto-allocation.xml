<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.1">
  <title>Automatic allocation of network topologies</title>
  <para>The auto-allocation feature introduced in Mitaka simplifies the procedure of
            setting up an external connectivity for end-users, and is also known as <emphasis role="bold">Get
                Me A Network</emphasis>.</para>
  <para>Previously, a user had to configure a range of networking resources to boot
            a server and get access to the Internet. For example, the following steps
            are required:</para>
  <itemizedlist>
    <listitem>
      <para>Create a network</para>
    </listitem>
    <listitem>
      <para>Create a subnet</para>
    </listitem>
    <listitem>
      <para>Create a router</para>
    </listitem>
    <listitem>
      <para>Uplink the router on an external network</para>
    </listitem>
    <listitem>
      <para>Downlink the router on the previously created subnet</para>
    </listitem>
  </itemizedlist>
  <para>These steps need to be performed on each logical segment that a VM needs to
            be connected to, and may require networking knowledge the user might not
            have.</para>
  <para>This feature is designed to automate the basic networking provisioning for
            projects. The steps to provision a basic network are run during instance
            boot, making the networking setup hands-free.</para>
  <para>To make this possible, provide a default external network and default
            subnetpools (one for IPv4, or one for IPv6, or one of each) so that the
            Networking service can choose what to do in lieu of input. Once these are in
            place, users can boot their VMs without specifying any networking details.
            The Compute service will then use this feature automatically to wire user
            VMs.</para>
  <section>
    <title>Enabling the deployment for auto-allocation</title>
    <para>To use this feature, the neutron service must have the following extensions
                enabled:</para>
    <itemizedlist>
      <listitem>
        <para>
          <literal>auto-allocated-topology</literal>
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>subnet_allocation</literal>
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>external-net</literal>
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>router</literal>
        </para>
      </listitem>
    </itemizedlist>
    <para>Before the end-user can use the auto-allocation feature, the operator must
                create the resources that will be used for the auto-allocated network
                topology creation. To perform this task, proceed with the following steps:</para>
    <procedure>
      <step>
        <para>Set up a default external network</para>
        <para>Setting up an external network is described in
                        <link xlink:href="https://docs.openstack.org/admin-guide/networking-adv-features.html">OpenStack Administrator Guide</link>.
                        Assuming the external network to be used for the auto-allocation feature
                        is named <literal>public</literal>, make it the <literal>default</literal> external network
                        with the following command:</para>
        <screen language="console">$ openstack network set public --default</screen>
        <note>
          <para>The flag <literal>--default</literal> (and <literal>--no-default</literal> flag) is only effective
                            with external networks and has no effects on regular (or internal)
                            networks.</para>
        </note>
      </step>
      <step>
        <para>Create default subnetpools</para>
        <para>The auto-allocation feature requires at least one default
                        subnetpool. One for IPv4, or one for IPv6, or one of each.</para>
        <screen language="console">$ openstack subnet pool create --share --default \
  --pool-prefix 192.0.2.0/24 --default-prefix-length 26 \
  shared-default

  +-------------------+--------------------------------------+
  | Field             | Value                                |
  +-------------------+--------------------------------------+
  | address_scope_id  | None                                 |
  | created_at        | 2017-01-12T15:10:34Z                 |
  | default_prefixlen | 26                                   |
  | default_quota     | None                                 |
  | description       |                                      |
  | headers           |                                      |
  | id                | b41b7b9c-de57-4c19-b1c5-731985bceb7f |
  | ip_version        | 4                                    |
  | is_default        | True                                 |
  | max_prefixlen     | 32                                   |
  | min_prefixlen     | 8                                    |
  | name              | shared-default                       |
  | prefixes          | 192.0.2.0/24                         |
  | project_id        | 86acdbd1d72745fd8e8320edd7543400     |
  | revision_number   | 1                                    |
  | shared            | True                                 |
  | updated_at        | 2017-01-12T15:10:34Z                 |
  +-------------------+--------------------------------------+

$ openstack subnet pool create --share --default \
  --pool-prefix 2001:db8:8000::/48 --default-prefix-length 64 \
  default-v6

+-------------------+--------------------------------------+
| Field             | Value                                |
+-------------------+--------------------------------------+
| address_scope_id  | None                                 |
| created_at        | 2017-01-12T15:14:35Z                 |
| default_prefixlen | 64                                   |
| default_quota     | None                                 |
| description       |                                      |
| headers           |                                      |
| id                | 6f387016-17f0-4564-96ad-e34775b6ea14 |
| ip_version        | 6                                    |
| is_default        | True                                 |
| max_prefixlen     | 128                                  |
| min_prefixlen     | 64                                   |
| name              | default-v6                           |
| prefixes          | 2001:db8:8000::/48                   |
| project_id        | 86acdbd1d72745fd8e8320edd7543400     |
| revision_number   | 1                                    |
| shared            | True                                 |
| updated_at        | 2017-01-12T15:14:35Z                 |
+-------------------+--------------------------------------+</screen>
      </step>
    </procedure>
  </section>
  <section>
    <title>Get Me A Network</title>
    <para>In a deployment where the operator has set up the resources as described above,
                they can get their auto-allocated network topology as follows:</para>
    <screen language="console">$ openstack network auto allocated topology create --or-show
+------------+--------------------------------------+
| Field      | Value                                |
+------------+--------------------------------------+
| id         | a380c780-d6cd-4510-a4c0-1a6ec9b85a29 |
| name       | None                                 |
| project_id | cfd1889ac7d64ad891d4f20aef9f8d7c     |
+------------+--------------------------------------+</screen>
    <note>
      <para>When the <literal>--or-show</literal> option is used the command returns the topology
                    information if it already exists.</para>
    </note>
    <para>Operators (and users with admin role) can get the auto-allocated topology for a
                project by specifying the project ID:</para>
    <screen language="console">$ openstack network auto allocated topology create --project \
  cfd1889ac7d64ad891d4f20aef9f8d7c --or-show
+------------+--------------------------------------+
| Field      | Value                                |
+------------+--------------------------------------+
| id         | a380c780-d6cd-4510-a4c0-1a6ec9b85a29 |
| name       | None                                 |
| project_id | cfd1889ac7d64ad891d4f20aef9f8d7c     |
+------------+--------------------------------------+</screen>
    <para>The ID returned by this command is a network which can be used for booting
                a VM.</para>
    <screen language="console">$ openstack server create --flavor m1.small --image \
  cirros-0.3.5-x86_64-uec --nic \
  net-id=8b835bfb-cae2-4acc-b53f-c16bb5f9a7d0 vm1</screen>
    <para>The auto-allocated topology for a user never changes. In practice, when a user
                boots a server omitting the <literal>--nic</literal> option, and there is more than one
                network available, the Compute service will invoke the API behind
                <literal>auto allocated topology create</literal>, fetch the network UUID, and pass it on
                during the boot process.</para>
  </section>
  <section>
    <title>Validating the requirements for auto-allocation</title>
    <para>To validate that the required resources are correctly set up for
                auto-allocation, without actually provisioning anything, use
                the <literal>--check-resources</literal> option:</para>
    <screen language="console">$ openstack network auto allocated topology create --check-resources
Deployment error: No default router:external network.

$ openstack network set public --default

$ openstack network auto allocated topology create --check-resources
Deployment error: No default subnetpools defined.

$ openstack subnet pool set shared-default --default

$ openstack network auto allocated topology create --check-resources
+---------+-------+
| Field   | Value |
+---------+-------+
| dry-run | pass  |
+---------+-------+</screen>
    <para>The validation option behaves identically for all users. However, it
                is considered primarily an admin or service utility since it is the
                operator who must set up the requirements.</para>
  </section>
  <section>
    <title>Project resources created by auto-allocation</title>
    <para>The auto-allocation feature creates one network topology in every project
                where it is used. The auto-allocated network topology for a project contains
                the following resources:</para>
    <informaltable>
      <tgroup cols="2">
        <colspec colname="c1" colwidth="40.0*"/>
        <colspec colname="c2" colwidth="60.0*"/>
        <thead>
          <row>
            <entry>
              <para>Resource</para>
            </entry>
            <entry>
              <para>Name</para>
            </entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <para>network</para>
            </entry>
            <entry>
              <para>
                <literal>auto_allocated_network</literal>
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>subnet (IPv4)</para>
            </entry>
            <entry>
              <para>
                <literal>auto_allocated_subnet_v4</literal>
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>subnet (IPv6)</para>
            </entry>
            <entry>
              <para>
                <literal>auto_allocated_subnet_v6</literal>
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>router</para>
            </entry>
            <entry>
              <para>
                <literal>auto_allocated_router</literal>
              </para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section>
  <section>
    <title>Compatibility notes</title>
    <para>Nova uses the <literal>auto allocated topology</literal> feature with API micro
                version 2.37 or later. This is because, unlike the neutron feature
                which was implemented in the Mitaka release, the integration for
                nova was completed during the Newton release cycle. Note that
                the CLI option <literal>--nic</literal> can be omitted regardless of the microversion
                used as long as there is no more than one network available to the
                project, in which case nova fails with a 400 error because it
                does not know which network to use. Furthermore, nova does not start
                using the feature, regardless of whether or not a user requests
                micro version 2.37 or later, unless all of the <literal>nova-compute</literal>
                services are running Newton-level code.</para>
  </section>
</section>
