<?xml version="1.0"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE section [
 <!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="topic_qmz_fg3_btx">
 <title>Configuring the Identity Service</title>
<!---->
 <section>
  <title>What is the Identity service?</title>
  <para>
   The &kw-hos; Identity service, based on the OpenStack Keystone API, provides
   UserID authentication and access authorization to help organizations achieve
   their access security and compliance objectives and successfully deploy
   OpenStack. In short, the Identity service is the gateway to the rest of the
   OpenStack services.
  </para>
  <para>
   The identity service is installed automatically by the &lcm;
   (just after MySQL and RabbitMQ). When your cloud is up and running, you can
   customize Keystone in a number of ways, including integrating with LDAP
   servers. This topic describes the default configuration. See
   <xref linkend="topic_m43_2j3_bt"/> for changes you can
   implement. Also see <xref linkend="ldap"/> for information
   on integrating with an LDAP provider.
  </para>
 </section>
 <section xml:id="idg-all-operations-configuring-identity-configure_identity-xml-6">
  <title>Which version of the Keystone Identity service should you use?</title>
  <para>
   Note that you should use identity API version 3.0. Identity API v2.0 was has
   been deprecated. Many features such as LDAP integration and fine-grained
   access control will not work with v2.0. The following are a few questions you
   may have regarding versions.
  </para>
  <para>
   <emphasis role="bold">Why does the Keystone identity catalog still show
   version 2.0?</emphasis>
  </para>
  <para>
   Tempest tests still use the v2.0 API. They are in the process of migrating
   to v3.0. We will remove the v2.0 version once tempest has migrated the
   tests. The Identity catalog has version 2.0 just to support tempest
   migration.
  </para>
  <para>
   <emphasis role="bold">Will the Keystone identity v3.0 API work if the
   identity catalog has only the v2.0 endpoint?</emphasis>
  </para>
  <para>
   Identity v3.0 does not rely on the content of the catalog. It will continue
   to work regardless of the version of the API in the catalog.
  </para>
  <para>
   <emphasis role="bold">Which CLI client should you use?</emphasis>
  </para>
  <para>
   You should use the OpenStack CLI, not the Keystone CLI, because it is
   deprecated. The Keystone CLI does not support the v3.0 API; only the
   OpenStack CLI supports the v3.0 API.
  </para>
 </section>
 <section xml:id="idg-all-operations-configuring-identity-configure_identity-xml-7">
  <title>Authentication</title>
  <para>
   The authentication function provides the initial login function to
   OpenStack. Keystone supports multiple sources of authentication, including a
   native or built-in authentication system. You can use the Keystone native
   system for all user management functions for proof-of-concept deployments or
   small deployments not requiring integration with a corporate authentication
   system, but it lacks some of the advanced functions usually found in user
   management systems such as forcing password changes. The focus of the
   Keystone native authentication system is to be the source of authentication
   for OpenStack-specific users required to operate various OpenStack services.
   These users are stored by Keystone in a default domain; the addition of
   these IDs to an external authentication system is not required.
  </para>
  <para>
   Keystone is more commonly integrated with external authentication systems
   such as OpenLDAP or Microsoft Active Directory. These systems are usually
   centrally deployed by organizations to serve as the single source of user
   management and authentication for all in-house deployed applications and
   systems requiring user authentication. In addition to LDAP and Microsoft
   Active Directory, support for integration with Security Assertion Markup
   Language (SAML)-based identity providers from companies such as Ping, CA,
   IBM, Oracle, and others is also nearly "production-ready."
  </para>
  <para>
   Keystone also provides architectural support through the underlying Apache
   deployment for other types of authentication systems, such as multi-factor
   authentication. These types of systems typically require driver support and
   integration from the respective providers.
  </para>
  <note>
   <para>
    While support for Identity providers and multi-factor authentication is
    available in Keystone, it has not yet been certified by the &kw-hos;
    engineering team and is an experimental feature in &kw-hos;.
   </para>
  </note>
  <para>
   LDAP-compatible directories such as OpenLDAP and Microsoft Active Directory
   are recommended alternatives to using Keystone local authentication. Both
   methods are widely used by organizations and are integrated with a variety
   of other enterprise applications. These directories act as the single source
   of user information within an organization. You can configure Keystone to
   authenticate against an LDAP-compatible directory on a per-domain basis.
  </para>
  <para>
   Domains, as explained in <xref linkend="sec.operation.identity"/>,
   can be configured so that, based on the user ID, an incoming user is
   automatically mapped to a specific domain. You can then configure this
   domain to authenticate against a specific LDAP directory. User credentials
   provided by the user to Keystone are passed along to the designated LDAP
   source for authentication. You can optionally configure this communication
   to be secure through SSL encryption. No special LDAP administrative access
   is required, and only read-only access is needed for this configuration.
   Keystone will not add any LDAP information. All user additions, deletions,
   and modifications are performed by the application's front end in the LDAP
   directories. After a user has been successfully authenticated, that user
   is then assigned to the groups, roles, and projects defined by the
   Keystone domain or project administrators. This information is stored in
   the Keystone service database.
  </para>
  <para>
   Another form of external authentication provided by the Keystone service is
   through integration with SAML-based identity providers (IdP) such as Ping
   Identity, IBM Tivoli, and Microsoft Active Directory Federation Server. A
   SAML-based identity provider provides authentication that is often called
   "single sign-on." The IdP server is configured to authenticate against
   identity sources such as Active Directory and provides a single
   authentication API against multiple types of downstream identity sources.
   This means that an organization could have multiple identity storage sources
   but a single authentication source. In addition, if a user has logged into
   one such source during a defined session time frame, that user does not need
   to reauthenticate within the defined session. Instead, the IdP automatically
   validates the user to requesting applications and services.
  </para>
  <para>
   A SAML-based IdP authentication source is configured with Keystone on a
   per-domain basis similar to the manner in which native LDAP directories are
   configured. Extra mapping rules are required in the configuration that
   define which Keystone group an incoming UID is automatically assigned to.
   <!-- Comment in DITA: -->
   <!-- mwelch, re: UID: First use of this term in this topic. Should it be
   spelled out or expained? -->
   This means that groups need to be defined in Keystone first, but it also
   removes the requirement that a domain or project administrator assign user
   roles and project membership on a per-user basis. Instead, groups are used
   to define project membership and roles and incoming users are automatically
   mapped to Keystone groups based on their upstream group membership. This
   strategy provides a consistent role-based access control (RBAC) model based
   on the upstream identity source. The configuration of this option is fairly
   straightforward. IdP vendors such as Ping and IBM are contributing to the
   maintenance of this function and have also produced their own integration
   documentation. HPE is using the Microsoft Active Directory Federation
   Services (AD FS) for functional testing and future documentation.
  </para>
  <!--Horizon support for web single sign-on is also now available in the
  OpenStack Kilo release but not yet validated for &kw-hos;.-->
  <para>
   The third Keystone-supported authentication source is known as multi-factor
   authentication (MFA). MFA typically requires an external source of
   authentication beyond a login name and password, and can include options
   such as SMS text, a temporal token generator, or a fingerprint scanner. Each
   of these types of MFAs are usually specific to a particular MFA vendor. The
   Keystone architecture supports an MFA-based authentication system, but this
   has not yet been certified or documented for &kw-hos;.
  </para>
 </section>
 <section xml:id="idg-all-operations-configuring-identity-configure_identity-xml-8">
  <title>Authorization</title>
  <para>
   Another major function provided by the Keystone service is access
   authorization that determines which resources and actions are available
   based on the UserID, the role of the user, and the projects that a user is
   provided access to. All of this information is created, managed, and stored
   by Keystone. These functions are applied through the Horizon web interface,
   the OpenStack command-line interface, or the direct Keystone API.
  </para>
  <para>
   Keystone provides support for organizing users by using three entities:
  </para>
  <variablelist>
   <varlistentry>
    <term>Domains</term>
    <listitem>
     <para>
      Domains provide the highest level of organization. Domains are intended
      to be used as high-level containers for multiple projects. A domain can
      represent different tenants, companies, or organizations for an OpenStack
      cloud deployed for public cloud deployments or it can represent major
      business units, functions, or any other type of top-level organization
      unit in an OpenStack private cloud deployment. Each domain has at least
      one Domain Admin assigned to it. This Domain Admin can then create
      multiple projects within the domain and assign the project administrator
      role to specific project owners. Each domain created in an OpenStack
      deployment is unique and the projects assigned to a domain cannot exist
      in another domain.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Projects</term>
    <listitem>
     <para>
      Projects are entities within a domain that represent groups of users,
      each user role within that project, and how many underlying
      infrastructure resources can be consumed by members of the project.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Groups</term>
    <listitem>
     <para>
      Groups are an optional function and provide the means of assigning
      project roles to multiple users at once.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   Keystone also makes it possible to create and assign roles to groups of
   users or individual users. Role names are created and user assignments are
   made within Keystone. The actual function of a role is defined currently for
   each OpenStack service via scripts. When users request access to an
   OpenStack service, their access tokens contain information about their
   assigned project membership and role for that project. This role is then
   matched to the service-specific script and users are allowed to perform
   functions within that service defined by the role mapping.
  </para>
 </section>
 <section xml:id="idg-all-operations-configuring-identity-configure_identity-xml-9">
  <title>Default settings</title>
  <para>
   <emphasis role="bold">Identity service configuration settings</emphasis>
  </para>
  <para>
   The identity service configuration options are described in the OpenStack
   documentation at
   <link xlink:href="https://docs.openstack.org/keystone/rocky/configuration.html">Keystone Configuration Options</link>
   on the OpenStack site.
  </para>
  <para>
   <emphasis role="bold">Default domain and service accounts</emphasis>
  </para>
  <para>
   The "default" domain is automatically created during the installation to
   contain the various required OpenStack service accounts, including the
   following:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     neutron
    </para>
   </listitem>
   <listitem>
    <para>
     glance
    </para>
   </listitem>
   <listitem>
    <para>
     swift-monitor
    </para>
   </listitem>
   <listitem>
    <para>
     ceilometer
    </para>
   </listitem>
   <listitem>
    <para>
     swift
    </para>
   </listitem>
   <listitem>
    <para>
     monasca-agent
    </para>
   </listitem>
   <listitem>
    <para>
     glance-swift
    </para>
   </listitem>
   <listitem>
    <para>
     swift-demo
    </para>
   </listitem>
   <listitem>
    <para>
     nova
    </para>
   </listitem>
   <listitem>
    <para>
     monasca
    </para>
   </listitem>
   <listitem>
    <para>
     logging
    </para>
   </listitem>
   <listitem>
    <para>
     demo
    </para>
   </listitem>
   <listitem>
    <para>
     heat
    </para>
   </listitem>
   <listitem>
    <para>
     cinder
    </para>
   </listitem>
   <listitem>
    <para>
     admin
    </para>
   </listitem>
  </itemizedlist>
  <para>
   These are required accounts and are used by the underlying OpenStack
   services. These accounts should not be removed or reassigned to a different
   domain. These "default" domain should be used only for these service
   accounts.
  </para>
  <para>
   For details on how to create additional users, see
   <xref linkend="CreateCloudAdmin"/>.
  </para>
 </section>
 <section>
  <title>Preinstalled roles</title>
  <para>
   The following are the preinstalled roles. You can create additional roles by
   UIDs with the "admin" role. Roles are defined on a per-service basis (more
   information is available at
   <link xlink:href="http://docs.openstack.org/user-guide-admin/manage_projects_users_and_roles.html">Manage
   projects, users, and roles</link> on the OpenStack website).
  </para>
  <informaltable colsep="1" rowsep="1">
   <tgroup cols="2">
    <colspec colname="c1" colnum="1"/>
    <colspec colname="c2" colnum="2"/>
    <thead>
     <row>
      <entry>Role</entry>
      <entry>Description</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>admin</entry>
      <entry>
       <para>
        The "superuser" role. Provides full access to all &kw-hos; services
        across all domains and projects. This role should be given only to a
        cloud administrator.
       </para>
      </entry>
     </row>
     <row>
      <entry>_member_</entry>
      <entry>
       <para>
        A general role that enables a user to access resources within an
        assigned project including creating, modifying, and deleting compute,
        storage, and network resources.
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
  <para>
   You can find additional information on these roles in each service policy
   stored in the <literal>/etc/PROJECT/policy.json</literal> files where
   PROJECT is a placeholder for an OpenStack service. For example, the Compute
   (Nova) service roles are stored in the
   <literal>/etc/nova/policy.json</literal> file. Each service policy file
   defines the specific API functions available to a role label.
  </para>
 </section>
</section>
