<?xml version="1.0"?>
<!DOCTYPE section [
 <!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="compute_alarmdefinitions">
 <title>Compute Alarms</title>
 <para>
  These alarms show under the Compute section of the &productname; &opscon;.
 </para>
 <informaltable colsep="1" rowsep="1">
  <tgroup cols="5">
   <colspec colname="c1" colnum="1"/>
   <colspec colname="c2" colnum="2"/>
   <colspec colname="c3" colnum="3"/>
   <colspec colname="c4" colnum="4"/>
   <colspec colname="c5" colnum="5"/>
   <thead>
    <row>
     <entry>Service</entry>
     <entry>Alarm Name</entry>
     <entry>Description</entry>
     <entry>Likely Cause</entry>
     <entry>Mitigation Tasks to Perform</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry morerows="5">compute</entry>
     <entry>HTTP Status</entry>
     <entry>This is a <literal>nova-api</literal> health check</entry>
     <entry>Process crashed.</entry>
     <entry>Restart the <literal>nova-api</literal> process on the affected node. Review the
              <literal>nova-api.log</literal> files. Try to connect locally to the http port that is
            found in the dimension field of the alarm to see if the connection is accepted.</entry>
    </row>
    <row>
     <entry>Host Status</entry>
     <entry>Alarms when the specified host is down or not reachable.</entry>
     <entry>The host is down, has been rebooted, or has network connectivity issues.</entry>
     <entry>If it is a single host, attempt to restart the system. If it is multiple hosts,
            investigate networking issues.</entry>
    </row>
    <row>
     <entry>Process Bound Check</entry>
     <entry>
      <para>
       <literal>process_name=nova-api</literal>
      </para>
      <para>
       This alarm checks that the number of processes found is in a predefined
       range
      </para>
     </entry>
     <entry>Process crashed or too many processes running</entry>
     <entry>Stop all the processes and restart the nova-api process on the affected host.
            Review the system and nova-api logs.</entry>
    </row>
    <row>
     <entry>Process Check</entry>
     <entry>
      <para>
       Separate alarms for each of these Nova services, specified by the
       <literal>component</literal> dimension:
      </para>
      <itemizedlist xml:id="ul_qwq_1xp_mx">
       <listitem>
        <para>
         nova-api
        </para>
       </listitem>
       <listitem>
        <para>
         nova-cert
        </para>
       </listitem>
       <listitem>
        <para>
         nova-compute
        </para>
       </listitem>
       <listitem>
        <para>
         nova-consoleauth
        </para>
       </listitem>
       <listitem>
        <para>
         nova-conductor
        </para>
       </listitem>
       <listitem>
        <para>
         nova-scheduler
        </para>
       </listitem>
       <listitem>
        <para>
         nova-novncproxy
        </para>
       </listitem>
      </itemizedlist>
     </entry>
     <entry>Process specified by the <literal>component</literal> dimension has crashed on the
            host specified by the <literal>hostname</literal> dimension.</entry>
     <entry>
      <para>
       Restart the process on the affected node using these steps:
      </para>
      <orderedlist xml:id="ol_rwq_1xp_mx">
       <listitem>
        <para>
         Log in to the &lcm;.
        </para>
       </listitem>
       <listitem>
        <para>
         Use the Nova start playbook against the affected node:
        </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts nova-start.yml --limit &lt;hostname&gt;</screen>
       </listitem>
      </orderedlist>
      <para>
       Review the associated logs. The logs will be in the format of
       <literal>&lt;service&gt;.log</literal>, such as
       <literal>nova-compute.log</literal> or
       <literal>nova-scheduler.log</literal>.
      </para>
     </entry>
    </row>
    <row>
     <entry>nova.heartbeat</entry>
     <entry>Check that all services are sending heartbeats.</entry>
     <entry>Process for service specified in the alarm has crashed or is hung and not reporting
            its status to the database. Alternatively it may be the service is fine but an issue
            with messaging or the database which means the status is not being updated
            correctly.</entry>
     <entry>Restart the affected service. If the service is reporting OK the issue may be with
            RabbitMQ or MySQL. In that case, check the alarms for those services.</entry>
    </row>
<!---->
    <row>
     <entry>Service Log Directory Size</entry>
     <entry>Service log directory consuming more disk than its quota.</entry>
     <entry>This could be due to a service set to <literal>DEBUG</literal> instead of
              <literal>INFO</literal> level. Another reason could be due to a repeating error
            message filling up the log files. Finally, it could be due to log rotate not configured
            properly so old log files are not being deleted properly.</entry>
     <entry>Find the service that is consuming too much disk space. Look at the logs. If
              <literal>DEBUG</literal> log entries exist, set the logging level to
              <literal>INFO</literal>. If the logs are repeatedly logging an error message, do what
            is needed to resolve the error. If old log files exist, configure log rotate to remove
            them. You could also choose to remove old log files by hand after backing them up if
            needed.</entry>
    </row>
    <row>
     <entry morerows="1">image-service</entry>
     <entry>HTTP Status</entry>
     <entry>
      <para>
       Separate alarms for each of these Glance services, specified by the
       <literal>component</literal> dimension:
      </para>
      <itemizedlist xml:id="ul_swq_1xp_mx">
       <listitem>
        <para>
         glance-api
        </para>
       </listitem>
       <listitem>
        <para>
         glance-registry
        </para>
       </listitem>
      </itemizedlist>
     </entry>
     <entry>API is unresponsive.</entry>
     <entry>
      <para>
       Restart the process on the affected node using these steps:
      </para>
      <orderedlist xml:id="ol_twq_1xp_mx">
       <listitem>
        <para>
         Log in to the &lcm;.
        </para>
       </listitem>
       <listitem>
        <para>
         Use the Glance start playbook against the affected node:
        </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts glance-start.yml --limit &lt;hostname&gt;</screen>
       </listitem>
      </orderedlist>
      <para>
       Review the associated logs.
      </para>
     </entry>
    </row>
    <row>
     <entry>Service Log Directory Size</entry>
     <entry>Service log directory consuming more disk than its quota.</entry>
     <entry>This could be due to a service set to <literal>DEBUG</literal> instead of
              <literal>INFO</literal> level. Another reason could be due to a repeating error
            message filling up the log files. Finally, it could be due to log rotate not configured
            properly so old log files are not being deleted properly.</entry>
     <entry>Find the service that is consuming too much disk space. Look at the logs. If
              <literal>DEBUG</literal> log entries exist, set the logging level to
              <literal>INFO</literal>. If the logs are repeatedly logging an error message, do what
            is needed to resolve the error. If old log files exist, configure log rotate to remove
            them. You could also choose to remove old log files by hand after backing them up if
            needed.</entry>
    </row>
    <row>
     <entry morerows="3">baremetal</entry>
     <entry>Process Check</entry>
     <entry>
      <para>
       Alarms when the specified process is not running.
      </para>
<screen>process_name = ironic-api</screen>
     </entry>
     <entry>The Ironic API is unresponsive.</entry>
     <entry>
      <para>
       Restart the <literal>ironic-api</literal> process with these steps:
      </para>
      <orderedlist xml:id="ol_uwq_1xp_mx">
       <listitem>
        <para>
         Log in to the affected host via SSH.
        </para>
       </listitem>
       <listitem>
        <para>
         Restart the <literal>ironic-api</literal> process with this command:
        </para>
<screen>sudo service ironic-api restart</screen>
       </listitem>
      </orderedlist>
     </entry>
    </row>
    <row>
     <entry>Process Check</entry>
     <entry>
      <para>
       Alarms when the specified process is not running.
      </para>
<screen>process_name = ironic-conductor</screen>
     </entry>
     <entry>The <literal>ironic-conductor</literal> process has crashed.</entry>
     <entry>
      <para>
       Restart the <literal>ironic-conductor</literal> process with these
       steps:
      </para>
      <orderedlist xml:id="ol_vwq_1xp_mx">
       <listitem>
        <para>
         Log in to the &lcm;.
        </para>
       </listitem>
       <listitem>
        <para>
         Source your <literal>admin</literal> user credentials:
        </para>
<screen>source ~/service.osrc</screen>
       </listitem>
       <listitem>
        <para>
         Locate the <literal>messaging_deployer</literal> VM:
        </para>
<screen>nova list --all-tenants | grep mess</screen>
       </listitem>
       <listitem>
        <para>
         SSH to the <literal>messaging_deployer</literal> VM:
        </para>
<screen>sudo -u ardana ssh &lt;ip_address_of_messaging_deployer&gt;</screen>
       </listitem>
       <listitem>
        <para>
         Stop the <literal>ironic-conductor</literal> process by using this
         playbook:
        </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts ironic-stop.yml</screen>
       </listitem>
       <listitem>
        <para>
         Start the process back up again, effectively restarting it, by using
         this playbook:
        </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts ironic-start.yml</screen>
       </listitem>
      </orderedlist>
     </entry>
    </row>
    <row>
     <entry>HTTP Status</entry>
     <entry>Alarms when the specified HTTP endpoint is down or not reachable.</entry>
     <entry>The API is unresponsive.</entry>
     <entry>
      <orderedlist xml:id="ol_wwq_1xp_mx">
       <listitem>
        <para>
         Log in to the &lcm;.
        </para>
       </listitem>
       <listitem>
        <para>
         Source your <literal>admin</literal> user credentials:
        </para>
<screen>source ~/service.osrc</screen>
       </listitem>
       <listitem>
        <para>
         Locate the <literal>messaging_deployer</literal> VM:
        </para>
<screen>nova list --all-tenants | grep mess</screen>
       </listitem>
       <listitem>
        <para>
         SSH to the <literal>messaging_deployer</literal> VM:
        </para>
<screen>sudo -u ardana ssh &lt;ip_address_of_messaging_deployer&gt;</screen>
       </listitem>
       <listitem>
        <para>
         Stop the <literal>ironic-api</literal> process by using this playbook:
        </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts ironic-stop.yml</screen>
       </listitem>
       <listitem>
        <para>
         Start the process back up again, effectively restarting it, by using
         this playbook:
        </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts ironic-start.yml</screen>
       </listitem>
      </orderedlist>
     </entry>
    </row>
    <row>
     <entry>Service Log Directory Size</entry>
     <entry>Service log directory consuming more disk than its quota.</entry>
     <entry>This could be due to a service set to <literal>DEBUG</literal> instead of
              <literal>INFO</literal> level. Another reason could be due to a repeating error
            message filling up the log files. Finally, it could be due to log rotate not configured
            properly so old log files are not being deleted properly.</entry>
     <entry>Find the service that is consuming too much disk space. Look at the logs. If
              <literal>DEBUG</literal> log entries exist, set the logging level to
              <literal>INFO</literal>. If the logs are repeatedly logging an error message, do what
            is needed to resolve the error. If old log files exist, configure log rotate to remove
            them. You could also choose to remove old log files by hand after backing them up if
            needed.</entry>
    </row>
   </tbody>
  </tgroup>
 </informaltable>
</section>
