<?xml version="1.0"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE section [
 <!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="barbicanUpgrade">
 <title>&kw-hos-tm; 5.0: Enabling Barbican Support When Upgrading</title>

 <section>
  <title>Enabling Barbican in previous versions of &kw-hos;</title>
  <para>
   Barbican was added in &kw-hos-phrase; 3.0 and is not available in 2.x
   distributions. (Details of the Barbican Key Management Service are discussed
   in <!-- FIXME: <xref linkend="barbican"/> -->.)
  </para>
  <itemizedlist>
   <listitem>
    <para>
     For &kw-hos; upgrades to &kw-hos-phrase;:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       If you had already added Barbican in your &kw-hos-phrase; 3.0
       deployment, then no action is required.
      </para>
     </listitem>
     <listitem>
      <para>
       However, if the Barbican service is not installed in your existing
       &kw-hos-phrase; 3.0 installation, follow the process outlined here to
       add Barbican after you have upgraded your cloud to &kw-hos-phrase;.
      </para>
     </listitem>
    </itemizedlist>
   </listitem>
  </itemizedlist>
  <para>
   If you are upgrading to &kw-hos-phrase; with your existing input model
   configuration files, you will have to include Barbican sections in the
   relevant input model files <emphasis>after performing the
   upgrade</emphasis>.
  </para>
 </section>
 <section xml:id="idg-all-upgrade-enable_barbican_for_upgrade-xml-8">
  <title><!-- FIXME: no title? --></title>
  <para>
   There are three service components (barbican-api, barbican-client,
   barbican-worker) that need to be included in the service-components list.
   These service-components are provided in the control plane configuration
   file,<literal> control_plane.yml</literal> at
   <literal>~/helion/my_cloud/definition/data/control_plane.yml</literal>.
   These three Barbican components need to be defined for clusters that have a
   server-role of 'CONTROLLER-ROLE' or 'CORE-ROLE' in their control plane
   definitions. Here is an example of the three Barbican components added to
   <literal>control_plane.yml</literal> under CONTROLLER-ROLE:
  </para>
<screen>  control-planes:
        - name: control-plane-1
        ...
        ...
        clusters:
        - name: cluster1
        ...
        ...
        cluster-prefix: c1
        server-role: CONTROLLER-ROLE
        ...
        ...
        service-components:
        - lifecycle-manager
        - ntp-server
        ...
        ...
        - barbican-api
        - barbican-client
        - barbican-worker
        ...
        ...

        ...
        ...</screen>
  <para>
   After making the changes, you must run site.yml:
  </para>
 </section>
 <section>
  <title><!-- FIXME: no title? --></title>
<screen>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts site.yml</screen>
 </section>
 <section xml:id="tls">
  <title>TLS configuration</title>
  <para>
   &kw-hos-phrase;&kw-hos-phrase; 3.0
   <literal>barbican-api</literal><literal>tls-component-endpoints:</literal><literal>network_groups.yml</literal>
  </para>
 </section>
 <section>
  <title><!-- FIXME: no title? --></title>
  <para>
   Go to <literal>helion/my_cloud/definition/data/</literal> and edit
   <literal>network_groups.yml</literal>&gt;
  </para>
<screen>cd ~/helion/my_cloud/definition/data/ </screen>
<screen>.......
        .....
        tags:
        - neutron.networks.vxlan
        - neutron.networks.vlan:
        provider-physical-network: physnet1
        - nova.compute.iscsi

        tls-component-endpoints:
        - barbican-api
        component-endpoints:
        - default

        routes:
        - default
        load-balancers:
        - provider: ip-cluster
        load-balancers:
        - provider: ip-cluster
        name: lb
        tls-components:
        - default
        components:
        - vertica
        - rabbitmq
        - mysql
        - nova-metadata
        roles:
        - internal
        - admin
        cert-file: helion-internal-cert </screen>
  <para>
   Commit the changes
  </para>
<screen>cd ~/helion
git add -A
git commit -m "My config"</screen>
  <para>
   Then run the following Ansible playbooks:
  </para>
<screen>$ ansible-playbook -i hosts/localhost config-processor-run.yml -e encrypt="" -e rekey=""
$ ansible-playbook -i hosts/localhost ready-deployment.yml
$ cd ~/scratch/ansible/next/hos/ansible
$ ansible-playbook -i hosts/verb_hosts barbican-reconfigure.yml
$ ansible-playbook -i hosts/verb_hosts hlm-reconfigure.yml</screen>
 </section>
 <section>
  <title>For More Information</title>
  <para>
   For further information on the Key Management service, see
   <!-- FIXME: <xref linkend="barbican"/> --> and
   <!-- FIXME: <xref linkend="barbicanAdmin"/> -->.
  </para>
 </section>
</section>
