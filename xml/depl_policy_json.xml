<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE appendix
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<!-- Converted by suse-upgrade version 1.1 -->
<chapter xmlns="http://docbook.org/ns/docbook"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
 xml:id="sec.deploy.policy_json">
 <title>Limiting Users' Access Rights</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:maintainer>taroth</dm:maintainer>
   <dm:status>editing</dm:status>
   <dm:deadline/>
   <dm:priority/>
   <dm:translation>no</dm:translation>
   <dm:languages/>
  </dm:docmanager>
 </info>

 <para>To limit users' access rights (or to define more fine-grained access
  rights), you can use Role Based Access Control (RBAC, only available with
  Keystone v3).<remark>taroth 2016-02-11: info by aplanas: For cloud 6 we will
   have keystone v3 API, but for cloud 5 we still have v2.0, so there is a new
   parameter in the nova_dashboard barclamp that is `use_keystone_v3` that the
   user needs to set to `True` </remark> In the example below, we will create a
  new role (<literal>ProjectAdmin</literal>). It allows users with this role to
  add and remove other users to the <literal>Member</literal> role on the same
  project.
  <remark>taroth 2016-02-15: todo: todo - also mention the following from
   bsc#931856: Because some limitations on the RBAC policy granularity, this
   subadmin can change the name and description of the project, but can't change
   quotas, create new project or delete projects.</remark></para>
 <para>To create a new role that can be assigned to a user-project pair, the
  following basic steps are needed:</para>
 <procedure>
  <step>
   <para>Create a custom <filename>policy.json</filename> file for the
    &o_ident; component. On the node where the <filename>keystone-server</filename> role is
    deployed, copy the file to
    <filename>/etc/keystone/<replaceable>CUSTOM_</replaceable>policy.json</filename>.
    For details, see <xref linkend="sec.deploy.policy_json.edit"/>.
   </para>
  </step>
  <step>
   <para>Create a custom <filename>keystone_policy.json</filename> file for the
    &o_dash; component. On the node where the
     <literal>nova_dashboard-server</literal> role is deployed, copy the custom
    <filename>keystone_policy.json</filename> file to
    <filename>/srv/www/openstack-dashboard/openstack_dashboard/conf/</filename>
    (default directory for policy files in &o_dash;). For details, see
     <xref linkend="sec.deploy.keystone_policy_json.edit"/>.</para>
  </step>
  <step>
   <para>Make the &o_ident; component aware of the
      <filename><replaceable>CUSTOM_</replaceable>policy.json</filename> file by
    editing and reapplying the <guimenu>Keystone</guimenu> &barcl;. For details,
    see <xref linkend="sec.deploy.policy_json.keystone"/>.</para>
  </step>
  <step>
   <para>Make the &o_dash; component aware of the
     <filename>keystone_policy.json</filename> file by editing and reapplying
    the <guimenu>Horizon</guimenu> &barcl;. For details, see
    <xref linkend="sec.deploy.policy_json.horizon"/>.</para>
  </step>
 </procedure>

 <sect1 xml:id="sec.deploy.policy_json.edit">
  <title>Editing <filename>policy.json</filename></title>

  <para> The <filename>policy.json</filename> file is located in
    <filename>/etc/keystone/</filename> on the node where the
    <filename>keystone-server</filename> role is deployed. </para>
  <procedure>
   <step>
    <para>Copy <filename>/etc/keystone/policy.json</filename> and save it under
     a different name, for example
      <filename><replaceable>CUSTOM_</replaceable>policy.json</filename>. </para>
    <important>
     <title>Use Different File Name</title>
     <para>If you use the same name as the original file, your custom file will
      be overwritten by the next package update.</para>
    </important>
   </step>
   <step>
    <para>To add the new role, enter the following two lines at the beginning of
     the file:</para>
    <screen>{
  "subadmin": "role:ProjectAdmin",
  "projectadmin": "rule:subadmin and project_id:%(target.project.id)s",
  [...]</screen>
   </step>
   <step>
    <para>Adjust the other rules in the file accordingly:</para>
    <screen>  "identity:get_domain": "rule:admin_required or rule:subadmin",
  [...]
  "identity:get_project": "rule:admin_required or rule:projectadmin",
  [...]
  "identity:list_user_projects": "rule:admin_or_owner or rule:projectadmin",
  [...]
  "identity:update_project": "rule:admin_required or rule:projectadmin",
  [...]
  "identity:get_user": "rule:admin_required or rule:projectadmin",
  "identity:list_users": "rule:admin_required or rule:subadmin",
  [...]
  "identity:list_groups": "rule:admin_required or rule:subadmin",
  [...]
  "identity:list_roles": "rule:admin_required or rule:subadmin",
  [...]
  "identity:list_grants": "rule:admin_required or (rule:subadmin and project_id:%(target.project.id)s)",
  "identity:create_grant": "rule:admin_required or (rule:subadmin and project_id:%(target.project.id)s and 'Member':%(target.role.name)s)",
  "identity:revoke_grant": "rule:admin_required or (rule:subadmin and project_id:%(target.project.id)s and 'Member':%(target.role.name)s)",
  [...]
  "identity:list_role_assignments": "rule:admin_required or rule:subadmin",</screen>
   </step>
   <step>
    <para>
     Save the changes.
    </para>
   </step>
   <step>
    <para>
     On the node where the <filename>keystone-server</filename> role is
     deployed, copy the file to
     <filename>/etc/keystone/<replaceable>CUSTOM_</replaceable>policy.json</filename>.
     Usually, the <filename>keystone-server</filename> role is deployed to a &contrnode;
     (or to a cluster, if you use a &ha; setup).
    </para>
   </step>
  </procedure>
 </sect1>

 <sect1 xml:id="sec.deploy.keystone_policy_json.edit">
  <title>Editing <filename>keystone_policy.json</filename></title>

  <para>By default, the <filename>keystone_policy.json</filename> file is
   located in
    <filename>/srv/www/openstack-dashboard/openstack_dashboard/conf/</filename>
   on the node where the <literal>nova_dashboard-server</literal> role is
   deployed. It is similar (but not identical) to
    <filename>policy.json</filename> and defines which actions the user with a
   certain role is allowed to execute in &o_dash;. If the user is not
   allowed to execute a certain action, the &ostack; &dash; will show an
   error message.</para>

  <procedure>
   <step>
    <para>Copy
      <filename>/srv/www/openstack-dashboard/openstack_dashboard/conf/keystone_policy.json</filename>
     and save it under a different name, for example
       <filename><replaceable>CUSTOM_</replaceable>keystone_policy.json</filename>. </para>
    <important>
     <title>Use Different File Name</title>
     <para>If you use the same name as the original file, your custom file will
      be overwritten by the next package update.</para>
    </important>
   </step>
   <step>
    <para>To add the new role, enter the following two lines at the beginning of
     the file:</para>
    <screen>{
  "subadmin": "role:ProjectAdmin",
  "projectadmin": "rule:subadmin and project_id:%(target.project.id)s",
  [...]</screen>
   </step>
   <step>
    <para>Adjust the other rules in the file accordingly:</para>
    <screen>  "identity:get_project": "rule:admin_required or rule:projectadmin",
  [...]
  "identity:list_user_projects": "rule:admin_or_owner or rule:projectadmin",
  [...]
  "identity:get_user": "rule:admin_required or rule:projectadmin",
  "identity:list_users": "rule:admin_required or rule:subadmin",
  [...]
  "identity:list_roles": "rule:admin_required or rule:subadmin",
  [...]
  "identity:list_role_assignments": "rule:admin_required or rule:subadmin",</screen>
   </step>
   <step>
    <para>Save the changes and copy the file to
       <filename>/srv/www/openstack-dashboard/openstack_dashboard/conf/<replaceable>CUSTOM_</replaceable>keystone_policy.json</filename>
     on the node where the <literal>nova_dashboard-server</literal> role is
     deployed.</para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec.deploy.policy_json.keystone">
  <title>Adjusting the <guimenu>&o_ident;</guimenu> &Barcl;
   Proposal</title>
  <procedure>
   <step>
    <para>Log in to the &crow; &wi;.</para>
   </step>
   <step>
    <para>Select <menuchoice>
      <guimenu>&Barcl;s</guimenu>
      <guimenu>All &barcl;s</guimenu>
     </menuchoice>.</para>
   </step>
   <step>
    <para>Go to the <guimenu>&o_ident;</guimenu> &barcl; and click
      <guimenu>Edit</guimenu>.</para>
   </step>
   <step>
    <para>In the <guimenu>Attributes</guimenu> section, click
     <guimenu>Raw</guimenu>. This shows the complete configuration file
     and allows you to edit it directly.</para>
   </step>
   <step>
    <para>Adjust the <literal>policy_file</literal> parameter to point to the
       <filename><replaceable>CUSTOM_</replaceable>policy.json</filename> file.
     For example:</para>
    <screen>{
  [...]
  "policy_file": "mypolicy.json",</screen>
   </step>
   <step>
    <para>
     <guimenu>Save</guimenu> and <guimenu>Apply</guimenu> the changes to the
     &o_ident; &barcl;.</para>
   </step>
  </procedure>
 </sect1>

 <sect1 xml:id="sec.deploy.policy_json.horizon">
  <title>Adjusting the <guimenu>&o_dash;</guimenu> &Barcl;
   Proposal</title>
  <procedure>
   <step>
    <para>Log in to the &crow; &wi;.</para>
   </step>
   <step>
    <para>Select <menuchoice>
      <guimenu>&Barcl;s</guimenu>
      <guimenu>All &barcl;s</guimenu>
     </menuchoice>.</para>
   </step>
   <step>
    <para>Go to the <guimenu>&o_dash;</guimenu> &barcl; and click
      <guimenu>Edit</guimenu>.</para>
   </step>
   <step>
    <para>In the <guimenu>Attributes</guimenu> section, click
      <guimenu>Raw</guimenu>. This shows the complete configuration file
     and allows you to edit it directly.</para>
   </step>
   <step>
    <para>If needed, adjust the <literal>policy_file_path</literal> parameter to
     point to the directory where you copied the newly added
       <filename><replaceable>CUSTOM_</replaceable>keystone_policy.json</filename>
     file. By default, its value is an empty string&mdash;this means that
     the default directory will be used.
    </para>
   </step>
   <step>
    <para>Enter the new file's name as value of the <literal>identity</literal>
     parameter within the <literal>policy_file</literal> section (<xref
     linkend="co.horizon.barcl.policy"/>):</para>
    <screen>{
  "policy_file_path": "",
  "policy_file": {
    "identity": "mykeystone_policy.json", <co xml:id="co.horizon.barcl.policy"/>
    "compute": "nova_policy.json",
    "volume": "cinder_policy.json",
    "image": "glance_policy.json",
    "orchestration": "heat_policy.json",
    "network": "neutron_policy.json",
    "telemetry": "ceilometer_policy.json"</screen>
   </step>
   <step>
    <para>
     <guimenu>Save</guimenu> and <guimenu>Apply</guimenu> the changes to the
     &o_dash; &barcl;.</para>
   </step>
  </procedure>
 </sect1>

 <sect1 xml:id="sec.deploy.policy_json.admin">
  <title>Pre-Installed Service Admin Role Components</title>
  <para>
   The following are the roles defined in &productname;. These roles serve as a
   way to group common administrative needs at the &ostack; service
   level. Each role represents administrative privilege into each
   service. Multiple roles can be assigned to a user. You can assign a Service
   Admin Role to a user once you have determined that the user is authorized to
   perform administrative actions and access resources in that service.
  </para>
  <para>
   The main components of Service Administrator Roles are:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     <literal>nova_admin</literal> role in the identity service (&o_ident;) and
     support in <filename>nova policy.json</filename>. Assign this role to
     users whose job function it is to perform Nova compute-related
     administrative tasks.
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>neutron_admin</literal> role in the identity service and support
     in <filename>neutron policy.json</filename>. Assign this role to users
     whose job function it is to perform neutron networking-related
     administrative tasks.
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>cinder_admin</literal> role in the identity service and support
     in <filename>cinder policy.json</filename>. Assign this role to users
     whose job function it is to perform Cinder storage-related administrative
     tasks.
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>glance_admin</literal> role in the identity service and support
     in <filename>glance policy.json</filename>. Assign this role to users
     whose job function it is to perform Cinder storage-related administrative
     tasks.
    </para>
    <warning>
     <title>
      Changing <filename>glance_policy.json</filename> may Introduce a
      Security Issue
     </title>
     <para>
      The &ostack; Security Note OSSN-0075 <link
      xlink:href="https://wiki.openstack.org/wiki/OSSN/OSSN-0075"/> describes a
      scenario where a malicious tenant is able to reuse deleted Glance image
      IDs to share malicious images with other tenants in a manner that is
      undetectable to the victim tenant.
     </para>
     <para>
      The default policy <filename>glance_policy.json</filename> that is
      shipped with &productname; prevents this by ensuring only admins can
      deactivate/reactivate images:
     </para>
     <screen>"deactivate": "role:admin"
"reactivate": "role:admin"</screen>
     <para>
      &suse; suggests these settings should <emphasis>not</emphasis> be
      changed. If you do change them please refer to the OSSN-0075 <link
      xlink:href="https://wiki.openstack.org/wiki/OSSN/OSSN-0075"/> for details
      on the exact scope of the security issue.
      </para>
    </warning>
   </listitem>
  </itemizedlist>
 </sect1>
</chapter>
