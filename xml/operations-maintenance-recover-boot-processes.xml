<?xml version="1.0"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE section [
 <!ENTITY % entities SYSTEM "entity-decl.ent"> %entities;
]>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="recover_failed_boot_processes">
 <title>Recover Start-up Processes</title>
 <para>
  In this scenario, processes do not start. If those processes are not running,
  ansible start-up scripts will fail. On the deployer, use
  <literal>Ansible</literal> to check status on the control plane servers. The
  following checks and remedies address common causes of this condition.
 </para>
 <itemizedlist>
  <listitem>
   <para>
    If disk space is low, determine the cause and remove anything that is no
    longer needed. Check disk space with the following command:
   </para>
   <screen>&prompt.ardana;ansible KEY-API -m shell -a 'df -h'</screen>
  </listitem>
  <listitem>
   <para>
    Check that Network Time Protocol (NTP) is synchronizing clocks properly
    with the following command.
   </para>
   <screen>&prompt.ardana;ansible resources -i hosts/verb_hosts \
-m shell -a "sudo ntpq -c peers"</screen>
  </listitem>
  <listitem>
   <para>
    Check <literal>keepalived</literal>, the daemon that monitors services or
    systems and automatically fails over to a standby if problems occur.
   </para>
   <screen>&prompt.ardana;ansible KEY-API -i hosts/verb_hosts \
-m shell -a "sudo systemctl status keepalived | head -8"</screen>
  </listitem>
  <listitem>
   <para>
    Restart <literal>keepalived</literal> if necessary.
   </para>
   <procedure>
    <step>
     <para>
      Check &rabbit; status first:
     </para>
     <screen>&prompt.ardana;ansible KEY-API -i hosts/verb_hosts \
-m shell -a "sudo rabbitmqctl status | head -10"</screen>
    </step>
    <step>
     <para>
      Restart &rabbit; if necessary:
     </para>
     <screen>&prompt.ardana;ansible KEY-API -i hosts/verb_hosts \
-m shell -a "sudo systemctl start rabbitmq-server"</screen>
    </step>
    <step>
     <para>
      If &rabbit; is running, restart <literal>keepalived</literal>:
     </para>
     <screen>&prompt.ardana;ansible KEY-API -i hosts/verb_hosts \
-m shell -a "sudo systemctl restart keepalived"</screen>
    </step>
   </procedure>
  </listitem>
  <listitem>
   <para>
    If &rabbit; is up, is it clustered?
   </para>
   <screen>&prompt.ardana;ansible KEY-API -i hosts/verb_hosts \
-m shell -a "sudo rabbitmqctl cluster_status"</screen>
   <para>
    Restart &rabbit; cluster if necessary:
   </para>
   <screen>&prompt.ardana;ansible_playbook -i hosts/verb_hosts rabbitmq-start.yml</screen>
  </listitem>
  <listitem>
   <para>
    Check <literal>Kafka</literal> messaging:
   </para>
   <screen>&prompt.ardana;ansible KEY-API -i hosts/verb_hosts \
-m shell -a "sudo systemctl status kafka | head -5"</screen>
  </listitem>
  <listitem>
   <para>
    Check the <literal>Spark</literal> framework:
   </para>
   <screen>&prompt.ardana;ansible KEY-API -i hosts/verb_hosts \
-m shell -a "sudo systemctl status spark-worker | head -8"
&prompt.ardana;ansible KEY-API -i hosts/verb_hosts \
-m shell -a "sudo systemctl status spark-master | head -8"</screen>
  </listitem>
  <listitem>
   <para>
    If necessary, start <literal>Spark</literal>:
   </para>
   <screen>&prompt.ardana;ansible-playbook -i hosts/verb_hosts spark-start.yml
&prompt.ardana;ansible KEY-API -i hosts/verb_hosts -m shell -a \
"sudo systemctl start spark-master | head -8"</screen>
  </listitem>
  <listitem>
   <para>
    Check <literal>Zookeeper</literal> centralized service:
   </para>
   <screen>&prompt.ardana;ansible KEY-API -i hosts/verb_hosts \
-m shell -a "sudo systemctl status zookeeper| head -8"</screen>
  </listitem>
  <listitem>
   <para>
    Check &mariadb;:
   </para>
   <screen>&prompt.ardana;ansible KEY-API -i hosts/verb_hosts
-m shell -a "sudo mysql -e 'show status;' | grep -e wsrep_incoming_addresses \
-e wsrep_local_state_comment "</screen>
  </listitem>
 </itemizedlist>
</section>
