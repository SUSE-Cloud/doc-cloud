<?xml version="1.0"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE section [
 <!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="replace_dedicated_lm">
 <title>Replacing a Standalone Controller Node</title>
 <para>
  If the controller node you need to replace is not also being used as the
  &lcm;, follow the steps below.
 </para>
 <procedure>
  <step>
   <para>
    Log in to the &lcm;.
   </para>
  </step>
  <step>
   <para>
    Update your cloud model, specifically the <literal>servers.yml</literal>
    file, with the new <literal>mac-addr</literal>, <literal>ilo-ip</literal>,
    <literal>ilo-password</literal>, and <literal>ilo-user</literal> fields
    where these have changed. Do not change the <literal>id</literal>,
    <literal>ip-addr</literal>, <literal>role</literal>, or
    <literal>server-group</literal> settings.
   </para>
  </step>
  <step>
   <para>
    Commit your configuration to the <xref linkend="using_git"/>, as follows:
   </para>
<screen>cd ~/openstack/ardana/ansible
git add -A
git commit -m "My config or other commit message"</screen>
  </step>
  <step>
   <para>
    Run the configuration processor:
   </para>
<screen>cd ~/openstack/ardana/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</screen>
  </step>
  <step>
   <para>
    Update your deployment directory:
   </para>
<screen>cd ~/openstack/ardana/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</screen>
  </step>
  <step>
   <para>
    Remove the old controller node(s) from Cobbler. You can list out the
    systems in Cobbler currently with this command:
   </para>
<screen>sudo cobbler system list</screen>
   <para>
    and then remove the old controller nodes with this command:
   </para>
<screen>sudo cobbler system remove --name &lt;node&gt;</screen>
  </step>
  <step>
   <para>
    Remove the SSH key of the old controller node from the known hosts file.
    You will specify the <literal>ip-addr</literal> value:
   </para>
<screen>ssh-keygen -f "/home/stack/.ssh/known_hosts" -R &lt;ip_addr&gt;</screen>
   <para>
    You should see a response similar to this one:
   </para>
<screen>stack@ardana-cp1-c1-m1-mgmt:~/openstack/ardana/ansible$ ssh-keygen -f "/home/stack/.ssh/known_hosts" -R 10.13.111.135
# Host 10.13.111.135 found: line 6 type ECDSA
/home/stack/.ssh/known_hosts updated.
Original contents retained as /home/stack/.ssh/known_hosts.old</screen>
  </step>
  <step>
   <para>
    Run the cobbler-deploy playbook to add the new controller node:
   </para>
<screen>cd ~/openstack/ardana/ansible
ansible-playbook -i hosts/localhost cobbler-deploy.yml</screen>
  </step>
  <step>
   <para>
    Image the new node(s) by using the bm-reimage playbook. You will specify
    the name for the node in Cobbler in the command:
   </para>
<screen>cd ~/openstack/ardana/ansible
ansible-playbook -i hosts/localhost bm-reimage.yml -e nodelist=&lt;node-name&gt;</screen>
   <important>
    <para>
     You must ensure that the old controller node is powered off before
     completing this step. This is because the new controller node will re-use
     the original IP address.
    </para>
   </important>
  </step>
  <step>
   <para>
    Configure the necessary keys used for the database etc:
   </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts monasca-rebuild-pretasks.yml</screen>
  </step>
  <step>
   <para>
    Run osconfig on the replacement controller node. For example:
   </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts osconfig-run.yml -e rebuild=True --limit=&lt;controller-hostname&gt;</screen>
  </step>
  <step>
   <para>
    If the controller being replaced is the Swift ring builder (see
    <xref linkend="topic_rtc_s3t_mt"/>) you need to restore the Swift ring
    builder files to the <literal>/etc/swiftlm/<replaceable>CLOUD-NAME</replaceable>/<replaceable>CONTROL-PLANE-NAME</replaceable>/builder_dir</literal> directory.
    See <xref linkend="topic_gbz_13t_mt"/> for details.
   </para>
  </step>
  <step>
   <para>
    Run the ardana-deploy playbook on the replacement controller.
   </para>
   <para>
    If the node being replaced is the Swift ring builder server then you only
    need to use the <literal>--limit</literal> switch for that node, otherwise
    you need to specify the hostname of your Swift ringer builder server and
    the hostname of the node being replaced.
   </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts ardana-deploy.yml -e rebuild=True --limit=&lt;controller-hostname&gt;,&lt;swift-ring-builder-hostname&gt;</screen>
   <important>
    <para>
     If you receive a RabbitMQ failure when running this playbook, review
     <xref linkend="recoverrabbit"/> for how to resolve the issue and then
     re-run the ardana-deploy playbook.
    </para>
   </important>
  </step>
  <step>
   <para>
    During the replacement of the node there will be alarms that show up during
    the process. If those do not clear after the node is back up and healthy,
    restart the threshold engine by running the following playbooks:
   </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts monasca-stop.yml --tags thresh
ansible-playbook -i hosts/verb_hosts monasca-start.yml --tags thresh</screen>
  </step>
 </procedure>
</section>
