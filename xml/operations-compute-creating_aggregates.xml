<?xml version="1.0"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE section [
 <!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="aggregates">
 <title>Managing Compute Hosts using Aggregates and Scheduler Filters</title>
 <para>
  OpenStack Nova has the concepts of availability zones and host aggregates
  that enable you to segregate your compute hosts. Availability zones are used
  to specify logical separation within your cloud based on the physical
  isolation or redundancy you have set up. Host aggregates are used to group
  compute hosts together based upon common features, such as operation system.
  For more information, read this topic.
 </para>
 <para>
  OpenStack Nova has the concepts of availability zones and host aggregates
  that enable you to segregate your Compute hosts. Availability zones are used
  to specify logical separation within your cloud based on the physical
  isolation or redundancy you have set up. Host aggregates are used to group
  compute hosts together based upon common features, such as operation system.
  For more information, see
  <link xlink:href="http://docs.openstack.org/openstack-ops/content/scaling.html">Scaling
  and Segregating your Cloud</link>.
 </para>
 <para>
  The Nova scheduler also has a filter scheduler, which supports both filtering
  and weighting to make decisions on where new compute instances should be
  created. For more information, see
  <link xlink:href="http://docs.openstack.org/developer/nova/filter_scheduler.html">Filter
  Scheduler</link> and
  <link xlink:href="http://docs.openstack.org/mitaka/config-reference/compute/scheduler.html">Scheduling</link>.
 </para>
 <para>
  This document is going to show you how to set up both a Nova host aggregate
  and configure the filter scheduler to further segregate your compute hosts.
 </para>
 <section xml:id="create_agg">
  <title>Creating a Nova Aggregate</title>
  <para>
   These steps will show you how to create a Nova aggregate and how to add a
   compute host to it. You can run these steps on any machine that contains the
   NovaClient that also has network access to your cloud environment. These
   requirements are met by the &lcm;.
  </para>
  <orderedlist>
   <listitem>
    <para>
     Log in to the &lcm;.
    </para>
   </listitem>
   <listitem>
    <para>
     Source the administrative creds:
    </para>
<screen>&prompt.ardana;source ~/service.osrc</screen>
   </listitem>
   <listitem>
    <para>
     List your current Nova aggregates:
    </para>
<screen>&prompt.ardana;nova aggregate-list</screen>
   </listitem>
   <listitem>
    <para>
     Create a new Nova aggregate with this syntax:
    </para>
<screen>&prompt.ardana;nova aggregate-create <replaceable>AGGREGATE-NAME</replaceable></screen>
    <para>
     If you wish to have the aggregate appear as an availability zone, then
     specify an availability zone with this syntax:
    </para>
<screen>&prompt.ardana;nova aggregate-create <replaceable>AGGREGATE-NAME</replaceable> <replaceable>AVAILABILITY-ZONE-NAME</replaceable></screen>
    <para>
     So, for example, if you wish to create a new aggregate for your &sle;
     compute hosts and you wanted that to show up as the
     <literal>SLE</literal> availability zone, you could use this command:
    </para>
<screen>&prompt.ardana;nova aggregate-create SLE SLE</screen>
    <para>
     This would produce an output similar to this:
    </para>
<screen>+----+------+-------------------+-------+------------------+
| Id | Name | Availability Zone | Hosts | Metadata                 
+----+------+-------------------+-------+--------------------------+
| 12 | SLE  | SLE               |       | 'availability_zone=SLE'
+----+------+-------------------+-------+--------------------------+</screen>
   </listitem>
   <listitem>
    <para>
     Next, you need to add compute hosts to this aggregate so you can start by
     listing your current hosts. You will want to limit the output of this
     command to only the hosts running the <literal>compute</literal> service,
     like this:
    </para>
<screen>&prompt.ardana;nova host-list | grep compute</screen>
   </listitem>
   <listitem>
    <para>
     You can then add host(s) to your aggregate with this syntax:
    </para>
<screen>&prompt.ardana;nova aggregate-add-host <replaceable>AGGREGATE-NAME</replaceable> <replaceable>HOST</replaceable></screen>
   </listitem>
   <listitem>
    <para>
     Then you can confirm that this has been completed by listing the details
     of your aggregate:
    </para>
<screen>nova aggregate-details <replaceable>AGGREGATE-NAME</replaceable></screen>
    <para>
     You can also list out your availability zones using this command:
    </para>
<screen>&prompt.ardana;nova availability-zone-list</screen>
   </listitem>
  </orderedlist>
 </section>
 <section xml:id="filters">
  <title>Using Nova Scheduler Filters</title>
  <para>
   The Nova scheduler has two filters that can help with differentiating
   between different compute hosts that we'll describe here.
  </para>
  <informaltable colsep="1" rowsep="1">
   <tgroup cols="2">
    <colspec colname="c1" colnum="1"/>
    <colspec colname="c2" colnum="2"/>
    <thead>
     <row>
      <entry>Filter</entry>
      <entry>Description</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>AggregateImagePropertiesIsolation</entry>
      <entry>
       <para>
        Isolates compute hosts based on image properties and aggregate
        metadata. You can use commas to specify multiple values for the same
        property. The filter will then ensure at least one value matches.
       </para>
      </entry>
     </row>
     <row>
      <entry>AggregateInstanceExtraSpecsFilter</entry>
      <entry>
       <para>
        Checks that the aggregate metadata satisfies any extra specifications
        associated with the instance type. This uses
        <literal>aggregate_instance_extra_specs</literal>
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
  <note>
   <para>
    For details about other available filters, see
    <link xlink:href="http://docs.openstack.org/developer/nova/filter_scheduler.html">Filter
    Scheduler</link>.
   </para>
  </note>
  <para>
   <emphasis role="bold">Using the AggregateImagePropertiesIsolation
   Filter</emphasis>
  </para>
  <orderedlist>
   <listitem>
    <para>
     Log in to the &lcm;.
    </para>
   </listitem>
   <listitem>
    <para>
     Edit the <literal>~/openstack/my_cloud/config/nova/nova.conf.j2</literal>
     file and add <literal>AggregateImagePropertiesIsolation</literal> to the
     scheduler_filters section. Example below, in bold:
    </para>
<screen># Scheduler
...
scheduler_available_filters = nova.scheduler.filters.all_filters
scheduler_default_filters = AvailabilityZoneFilter,RetryFilter,ComputeFilter,
 DiskFilter,RamFilter,ImagePropertiesFilter,ServerGroupAffinityFilter,
 ServerGroupAntiAffinityFilter,ComputeCapabilitiesFilter,NUMATopologyFilter,
 <emphasis role="bold">AggregateImagePropertiesIsolation</emphasis>
...</screen>
    <para>
     Optionally, you can also add these lines:
    </para>
<screen>aggregate_image_properties_isolation_namespace = &lt;a prefix string&gt;</screen>
<screen>aggregate_image_properties_isolation_separator = &lt;a separator character&gt;</screen>
    <para>
     (defaults to <literal>.</literal>)
    </para>
    <para>
     If these are added, the filter will only match image properties starting
     with the name space and separator - for example, setting to
     <literal>my_name_space</literal> and <literal>:</literal> would mean the
     image property <literal>my_name_space:image_type=SLE</literal> matches
     metadata <literal>image_type=SLE</literal>, but
     <literal>an_other=SLE</literal> would not be inspected for a match at
     all.
    </para>
    <para>
     If these are not added all image properties will be matched against any
     similarly named aggregate metadata.
    </para>
   </listitem>
   <listitem>
    <para>
     Add image properties to images that should be scheduled using the above
     filter
    </para>
   </listitem>
   <listitem>
    <para>
     Commit the changes to git:
    </para>
<screen>&prompt.ardana;git add -A
&prompt.ardana;git commit -a -m "editing nova schedule filters"</screen>
   </listitem>
   <listitem>
    <para>
     Run the configuration processor:
    </para>
<screen>&prompt.ardana;cd ~/openstack/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/localhost config-processor-run.yml</screen>
   </listitem>
   <listitem>
    <para>
     Run the ready deployment playbook:
    </para>
<screen>&prompt.ardana;cd ~/openstack/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/localhost ready-deployment.yml</screen>
   </listitem>
   <listitem>
    <para>
     Run the Nova reconfigure playbook:
    </para>
<screen>&prompt.ardana;cd ~/scratch/ansible/next/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/verb_hosts nova-reconfigure.yml</screen>
   </listitem>
  </orderedlist>
  <para>
   <emphasis role="bold">Using the AggregateInstanceExtraSpecsFilter
   Filter</emphasis>
  </para>
  <orderedlist>
   <listitem>
    <para>
     Log in to the &lcm;.
    </para>
   </listitem>
   <listitem>
    <para>
     Edit the <literal>~/openstack/my_cloud/config/nova/nova.conf.j2</literal>
     file and add <literal>AggregateInstanceExtraSpecsFilter</literal> to the
     scheduler_filters section. Example below, in bold:
    </para>
<screen># Scheduler
...
scheduler_available_filters = nova.scheduler.filters.all_filters
 scheduler_default_filters = AvailabilityZoneFilter,RetryFilter,ComputeFilter,
 DiskFilter,RamFilter,ImagePropertiesFilter,ServerGroupAffinityFilter,
 ServerGroupAntiAffinityFilter,ComputeCapabilitiesFilter,NUMATopologyFilter,
 <emphasis role="bold">AggregateInstanceExtraSpecsFilter</emphasis>
...</screen>
   </listitem>
   <listitem>
    <para>
     There is no additional configuration needed because the following is true:
    </para>
    <orderedlist>
     <listitem>
      <para>
       The filter assumes <literal>:</literal> is a separator
      </para>
     </listitem>
     <listitem>
      <para>
       The filter will match all simple keys in extra_specs plus all keys with
       a separator if the prefix is
       <literal>aggregate_instance_extra_specs</literal> - for example,
       <literal>image_type=SLE</literal> and
       <literal>aggregate_instance_extra_specs:image_type=SLE</literal> will
       both be matched against aggregate metadata
       <literal>image_type=SLE</literal>
      </para>
     </listitem>
    </orderedlist>
   </listitem>
   <listitem>
    <para>
     Add <literal>extra_specs</literal> to flavors that should be scheduled
     according to the above.
    </para>
   </listitem>
   <listitem>
    <para>
     Commit the changes to git:
    </para>
<screen>&prompt.ardana;git add -A
&prompt.ardana;git commit -a -m "Editing nova scheduler filters"</screen>
   </listitem>
   <listitem>
    <para>
     Run the configuration processor:
    </para>
<screen>&prompt.ardana;cd ~/openstack/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/localhost config-processor-run.yml</screen>
   </listitem>
   <listitem>
    <para>
     Run the ready deployment playbook:
    </para>
<screen>&prompt.ardana;cd ~/openstack/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/localhost ready-deployment.yml</screen>
   </listitem>
   <listitem>
    <para>
     Run the Nova reconfigure playbook:
    </para>
<screen>&prompt.ardana;cd ~/scratch/ansible/next/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/verb_hosts nova-reconfigure.yml</screen>
   </listitem>
  </orderedlist>
 </section>
</section>
