<?xml version="1.0"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE section [
 <!ENTITY % entities SYSTEM "entity-decl.ent"> %entities;
]>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="swiftrings_recovery">
 <title>&swift; Rings Recovery</title>
 <para>
  To recover your &swift; rings in the event of a disaster, follow the
  procedure that applies to your situation: either recover the rings with the
  manual &swift; backup and restore or use your SSH backup.
 </para>
 <section>
  <title>Restore from the &swift; deployment backup</title>
  <para>
   See <xref linkend="topic_gbz_13t_mt"/>.
  </para>
 </section>
 <section>
  <title>Restore from the SSH backup</title>
  <para>
   When you have lost all system disks of all object nodes and &swift; proxy
   nodes are corrupted, you can recover the rings from a copy of the &swift;
   rings was backed up previously. &swift; data is still available (the disks
   used by &swift; still need to be accessible).
  </para>
  <para>
   Recover the rings with these steps.
  </para>
  <procedure>
   <step>
    <para>
     Log in to a &swift; proxy node.
    </para>
   </step>
   <step>
    <para>
     Become root:
    </para>
<screen>&prompt.ardana;sudo su</screen>
   </step>
   <step>
    <para>
     Create the temporary directory for your restored files:
    </para>
<screen>&prompt.root;mkdir /tmp/swift_builder_dir_restore/</screen>
   </step>
   <step>
    <para>
     Retrieve (<command>scp</command>) the &swift; backup that was created with
     <xref linkend="swift_ring_backup"/>.
    </para>
   </step>
   <step>
    <para>
     Create a temporary directory and extract the TAR archive (for example,
     <filename>swring.tar.gz</filename>).
    </para>
    <screen>&prompt.ardana;mkdir /tmp/swift_builder_dir_restore; sudo tar -z \
--incremental --extract --ignore-zeros --warning=none --overwrite --directory \
/tmp/swift_builder_dir_restore/  -f swring.tar.gz</screen>
    <para>
     You now have the &swift; rings in
     <literal>/tmp/swift_builder_dir_restore/</literal>
    </para>
   </step>
   <step>
    <para>
     If the SWF-PRX--first-member is already deployed, copy the contents of the
     restored directory
     (<literal>/tmp/swift_builder_dir_restore/<replaceable>CLOUD_NAME</replaceable>/<replaceable>CONTROL_PLANE_NAME</replaceable>/builder_dir/</literal>)
     to
     <literal>/etc/swiftlm/<replaceable>CLOUD_NAME</replaceable>/<replaceable>CONTROL_PLANE_NAME</replaceable>/builder_dir/</literal>
     on the SWF-PRX--first-member
    </para>
   </step>
    <step>
     <para>
      Then from the &clm; run:
     </para>
    </step>
    <step>
<screen>&prompt.ardana;sudo cp -pr /tmp/swift_builder_dir_restore/<replaceable>CLOUD_NAME</replaceable>/<replaceable>CONTROL_PLANE_NAME</replaceable>/builder_dir/* \
/etc/swiftlm/<replaceable>CLOUD_NAME</replaceable>/<replaceable>CONTROL_PLANE_NAME</replaceable>/builder_dir/</screen>
    <para>For example</para>
<screen>&prompt.ardana;sudo cp -pr /tmp/swift_builder_dir_restore/entry-scale-kvm/control-plane-1/builder_dir/* \
/etc/swiftlm/entry-scale-kvm/control-plane-1/builder_dir/</screen>
<screen>&prompt.ardana;cd ~/scratch/ansible/next/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/verb_hosts swift-reconfigure.yml</screen>
   </step>
   <step>
    <para>
     If the SWF-ACC[0] is<emphasis role="bold"> not </emphasis>deployed, from
     the &clm; run these playbooks:
    </para>
<screen>&prompt.ardana;cd ~/scratch/ansible/next/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/verb_hosts guard-deployment.yml
&prompt.ardana;ansible-playbook -i hosts/verb_hosts osconfig-run.yml --limit &lt;SWF-ACC[0]-hostname&gt;</screen>
   </step>
   <step>
    <para>
     Copy the contents of the restored directory
     (<literal>/tmp/swift_builder_dir_restore/<replaceable>CLOUD_NAME</replaceable>/<replaceable>CONTROL_PLANE_NAME</replaceable>/builder_dir/</literal>) to
     <literal>/etc/swiftlm/<replaceable>CLOUD_NAME</replaceable>/<replaceable>CONTROL_PLANE_NAME</replaceable>/builder_dir/</literal>
     on the SWF-ACC[0].
    </para>
    <para>
     You will have to create the directories: <literal>/etc/swiftlm/<replaceable>CLOUD_NAME</replaceable>/<replaceable>CONTROL_PLANE_NAME</replaceable>/builder_dir/</literal>
    </para>
<screen>&prompt.ardana;sudo cp -pr /tmp/swift_builder_dir_restore/<replaceable>CLOUD_NAME</replaceable>/<replaceable>CONTROL_PLANE_NAME</replaceable>/builder_dir/* \
/etc/swiftlm/<replaceable>CLOUD_NAME</replaceable>/<replaceable>CONTROL_PLANE_NAME</replaceable>/builder_dir/</screen>
    <para>For example:</para>
<screen>&prompt.ardana;sudo cp -pr /tmp/swift_builder_dir_restore/entry-scale-kvm/control-plane-1/builder_dir/* \
/etc/swiftlm/entry-scale-kvm/control-plane-1/builder_dir/</screen>
   </step>
   <step>
    <para>
     From the &clm;, run the <filename>ardana-deploy.yml</filename>
     playbook:
    </para>
<screen>&prompt.ardana;cd ~/scratch/ansible/next/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/verb_hosts ardana-deploy.yml</screen>
   </step>
  </procedure>
 </section>
</section>
