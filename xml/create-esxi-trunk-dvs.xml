<?xml version="1.0"?>
<!DOCTYPE section [
 <!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<section xmlns="http://docbook.org/ns/docbook"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xml:id="create-esxi-trunk-dvs" version="5.1">
 <title>Creating ESXi TRUNK DVS and Required Portgroup</title>
   <para>
    The process of creating an ESXi Trunk Distributed vSwitch (DVS) consists of three
    steps: create a switch, add host and physical adapters, and add a port
    group. Use the following detailed instructions to create a trunk DVS and a
    required portgroup. These instructions use a graphical user interface
    (GUI). Command line interface (CLI) instructions are below the GUI
    instructions.
   </para>
   <section>
    <title>Creating ESXi Trunk DVS with vSphere Web Client</title>
   <procedure>
    <step>
     <para>
      Create the switch.
     </para>
     <substeps>
      <step>
       <para>
        Using vSphere webclient, connect to the vCenter server.
       </para>
      </step>
      <step>
       <para>
        Under <guimenu>Hosts and cluster</guimenu>, right-click on the
        appropriate datacenter. Select <guimenu>Distributed Switch</guimenu>
        &gt; <guimenu>New Distributed Switch</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Name the switch <literal>TRUNK</literal>. Click <guimenu>Next</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Select version 6.0.0 or larger. Click <guimenu>Next</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Under <guimenu>Edit settings</guimenu>, lower the number of uplink
        ports to the lowest possible number (0 or 1).  Uncheck <guimenu>Create a
        default port group</guimenu>. Click <guimenu>Next</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Under <guimenu>Ready to complete</guimenu>, verify the settings are
        correct and click <guimenu>Finish</guimenu>.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      Add host and physical adapters.
     </para>
     <substeps>
      <step>
      <para>
       Under <guimenu>Networking</guimenu> find the DVS named
       <literal>TRUNK</literal> you just created. Right-click on it and select
       <guimenu>Manage hosts</guimenu>.
      </para>
      </step>
      <step>
       <para>
        Under <guimenu>Select task</guimenu>, select <guimenu>Add
        hosts</guimenu>. Click <guimenu>Next</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Click <guimenu>New hosts</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Select the <literal>CURRENT ESXI HOST</literal> and select
        <guimenu>OK</guimenu>. Click <guimenu>Next</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Under <guimenu>Select network adapter tasks</guimenu>, select
        <guimenu>Manage advanced host settings</guimenu> and
        <emphasis role="bold">UNCHECK</emphasis> all other boxes. Click
        <guimenu>Next</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Under <guimenu>Advanced host settings</guimenu>, check that the <literal>Maximum
        Number of Ports</literal> reads <literal>(auto)</literal>. There
        is nothing else to do. Click <guimenu>Next</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Under <guimenu>Ready to complete</guimenu>, verify that one and only
        one host is being added and click <guimenu>Finish</guimenu>.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      Add port group.
     </para>
     <substeps>
      <step>
       <para>
        Right-click on the TRUNK DVS that was just created (or modified) and
        select <guimenu>Distributed Port Group</guimenu> &gt; <guimenu>New
        Distributed Port Group</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Name the port group <literal>TRUNK-PG</literal>. Click <guimenu>Next</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Under <guimenu>Configure settings</guimenu> select:
       </para>
       <itemizedlist>
        <listitem>
         <para>
          <literal>port binding</literal> &gt; <literal>Static
          binding</literal>
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>port allocation</literal> &gt; <literal>Elastic</literal>
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>vlan type</literal> &gt; <literal>VLAN trunking</literal> with
          range of 1&ndash;4094.
         </para>
        </listitem>
       </itemizedlist>
      </step>
      <step>
       <para>
        Check <literal>Customized default policies
        configuration</literal>. Click <guimenu>Next</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Under <guimenu>Security</guimenu> use the following values:
       </para>
       <informaltable>
        <tgroup cols="2">
         <colspec colnum="1" colname="1" colwidth="50*"/>
         <colspec colnum="2" colname="2" colwidth="50*"/>
         <thead>
          <row>
           <entry><para>Setting</para></entry>
           <entry><para>Value</para></entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry><para>promiscuous mode</para></entry>
           <entry><para>reject</para></entry>
          </row>
          <row>
           <entry><para>MAC address changes</para></entry>
           <entry><para>reject</para></entry>
          </row>
          <row>
           <entry><para>Forged transmits</para></entry>
           <entry><para>reject</para></entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </step>
      <step>
       <para>
        Set <guimenu>Autoexpand</guimenu> to <literal>true</literal> (port
        count growing).
       </para>
      </step>
      <step>
       <para>
        Skip <guimenu>Traffic shaping</guimenu> and click
        <guimenu>Next</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Skip <guimenu>Teaming and fail over</guimenu> and click <guimenu>Next</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Skip <guimenu>Monitoring</guimenu> and click
        <guimenu>Next</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Under <guimenu>Miscellaneous</guimenu> there is nothing to be
        done. Click <guimenu>Next</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Under <guimenu>Edit additional settings</guimenu> add a description if
        desired. Click <guimenu>Next</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Under <guimenu>Ready to complete</guimenu> verify everything is as
        expected and click <guimenu>Finish</guimenu>.
       </para>
      </step>
     </substeps>
    </step>
   </procedure>
  </section>
  <section>
   <title>Creating an ESXi Trunk DVS from the Command Line</title>
   <para>
    The following manual entry illustrates the use of a command-line script for creating a DVS.
   </para>
   <screen><?dbsuse-fo font-size="0.70em"?>&prompt.user;neutron-ovsvapp-create-dvs -h
usage: neutron-ovsvapp-create-dvs [-h] [--tcp tcp_port]
                                  [--pnic_devices pnic_devices]
                                  [--max_mtu max_mtu]
                                  [--host_names host_names]
                                  [--description description]
                                  [--max_ports max_ports]
                                  [--cluster_name cluster_name] [--create]
                                  [--display_spec] [--no_action]
                                  dvs_name vcenter_user vcenter_password
                                  vcenter_ip datacenter_name
positional arguments:
  dvs_name              Name to use for creating the dvs
  vcenter_user          username to be used for connecting to vcenter
  vcenter_password      username to be used for connecting to vcenter
  vcenter_ip            ip address to be used for connecting to vcenter
  datacenter_name       name of data center where the dvs will be created
optional arguments:
  -h, --help            show this help message and exit
  --tcp tcp_port        tcp port to be used for connecting to vcenter
  --pnic_devices pnic_devices
                        pnic devices to be used by dvsexample: vmnic0, vmnic1
  --max_mtu max_mtu     mtu to be used by dvs
  --host_names host_names
                        list of host names to attach to dvs
  --description description
                        description to add to dev
  --max_ports max_ports
                        maximum number of ports allowed on dvs
  --cluster_name cluster_name
                        name of cluster to use for dvs
  --create              Create the switch on the vcenter server. If this flag
                        is not present the data to create the information to
                        create the switch will be requested from the vcenter
                        server but the switch will not be created.
  --display_spec        If the flag is set, the spec create of the switch will
                        be send OUTPUT
  --no_action           If the flag is set, the script simply outputs the
                        arguments passed in and exits. It does not attempt to
                        connect to vcenter </screen>
  <para>
   Format for creating a spec
  </para>
  <screen>(DVSCreateSpec){
   configSpec =
      (VMwareDVSConfigSpec){
         configVersion = None
         name = TRUNK
         numStandalonePorts = None
         maxPorts = 3000
         uplinkPortPolicy =
            (DVSNameArrayUplinkPortPolicy){
               uplinkPortName[] =
                  dvUplink,
            }
         uplinkPortgroup[] = &lt;empty&gt;
         defaultPortConfig =
            (DVPortSetting){
               blocked =
                  (BoolPolicy){
                     inherited = None
                     value = None
                  }
               vmDirectPathGen2Allowed =
                  (BoolPolicy){
                     inherited = None
                     value = None
                  }
               inShapingPolicy =
                  (DVSTrafficShapingPolicy){
                     inherited = None
                     enabled =
                        (BoolPolicy){
                           inherited = None
                           value = None
                        }
                     averageBandwidth =
                        (LongPolicy){
                           inherited = None
                           value = None
                        }
                     peakBandwidth =
                        (LongPolicy){
                           inherited = None
                           value = None
                        }
                     burstSize =
                        (LongPolicy){
                           inherited = None
                           value = None
                        }
                  }
               outShapingPolicy =
                  (DVSTrafficShapingPolicy){
                     inherited = None
                     enabled =
                        (BoolPolicy){
                           inherited = None
                           value = None
                        }
                     averageBandwidth =
                        (LongPolicy){
                           inherited = None
                           value = None
                        }
                     peakBandwidth =
                        (LongPolicy){
                           inherited = None
                           value = None
                        }
                     burstSize =
                        (LongPolicy){
                           inherited = None
                           value = None
                        }
                  }
               vendorSpecificConfig =
                  (DVSVendorSpecificConfig){
                     inherited = None
                     keyValue[] = &lt;empty&gt;
                  }
               networkResourcePoolKey =
                  (StringPolicy){
                     inherited = None
                     value = None
                  }
               filterPolicy =
                  (DvsFilterPolicy){
                     inherited = None
                     filterConfig[] = &lt;empty&gt;
                  }
            }
         host[] =
            None,
         extensionKey = None
         description =
         policy =
            (DVSPolicy){
               autoPreInstallAllowed = None
               autoUpgradeAllowed = None
               partialUpgradeAllowed = None
            }
         vendorSpecificConfig[] = &lt;empty&gt;
         contact =
            (DVSContactInfo){
               name = None
               contact = None
            }
         switchIpAddress = None
         defaultProxySwitchMaxNumPorts = None
         infrastructureTrafficResourceConfig[] = &lt;empty&gt;
         networkResourceControlVersion = None
         pvlanConfigSpec[] = &lt;empty&gt;
         vspanConfigSpec[] = &lt;empty&gt;
         maxMtu = 1500
         linkDiscoveryProtocolConfig =
            (LinkDiscoveryProtocolConfig){
               protocol = None
               operation = None
            }
         ipfixConfig =
            (VMwareIpfixConfig){
               collectorIpAddress = None
               collectorPort = None
               observationDomainId = None
               activeFlowTimeout = None
               idleFlowTimeout = None
               samplingRate = None
               internalFlowsOnly = None
            }
         lacpApiVersion = None
         multicastFilteringMode = None
      }
   productInfo =
      (DistributedVirtualSwitchProductSpec){
         name = None
         vendor = None
         version = 6.0.0
         build = None
         forwardingClass = None
         bundleId = None
         bundleUrl = None
      }
   capability =
      (DVSCapability){
         dvsOperationSupported = None
         dvPortGroupOperationSupported = None
         dvPortOperationSupported = None
         compatibleHostComponentProductInfo[] = &lt;empty&gt;
         featuresSupported =
            (DVSFeatureCapability){
               networkResourceManagementSupported = None
               vmDirectPathGen2Supported = None
               nicTeamingPolicy[] = &lt;empty&gt;
               networkResourcePoolHighShareValue = None
               networkResourceManagementCapability =
                  (DVSNetworkResourceManagementCapability){
                     networkResourceManagementSupported = None
                     networkResourcePoolHighShareValue = None
                     qosSupported = None
                     userDefinedNetworkResourcePoolsSupported = None
                     networkResourceControlVersion3Supported = None
                  }
               healthCheckCapability = None
               rollbackCapability =
                  (DVSRollbackCapability){
                     rollbackSupported = None
                  }
               backupRestoreCapability =
                  (DVSBackupRestoreCapability){
                     backupRestoreSupported = None
                  }
               networkFilterSupported = None
            }
      }
 }
  </screen>
 </section>
</section>
