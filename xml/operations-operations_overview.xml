<?xml version="1.0"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE chapter [
 <!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="gettingstarted_ops">
 <title>Operations Overview</title>
 <para>
  A high-level overview of the processes related to operating a
  &kw-hos-phrase; cloud.
 </para>
 <section>
  <title>What is a cloud operator?</title>
  <para>
   When we talk about a cloud operator it is important to understand the scope
   of the tasks and responsibilities we are referring to. &kw-hos; defines a
   cloud operator as the person or group of people who will be administering
   the cloud infrastructure, which includes:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     Monitoring the cloud infrastructure, resolving issues as they arise.
    </para>
   </listitem>
   <listitem>
    <para>
     Managing hardware resources, adding/removing hardware due to capacity
     needs.
    </para>
   </listitem>
   <listitem>
    <para>
     Repairing, and recovering if needed, any hardware issues.
    </para>
   </listitem>
   <listitem>
    <para>
     Performing domain administration tasks, which involves creating and
     managing projects, users, and groups as well as setting and managing
     resource quotas.
    </para>
   </listitem>
  </itemizedlist>
 </section>
 <section xml:id="tools">
  <title>Tools provided to operate your cloud</title>
  <para>
   &kw-hos; provides the following tools which are available to operate your
   cloud:
  </para>
  <para>
   <emphasis role="bold">&opscon;</emphasis>
  </para>
  <para>
   Often referred to as the Ops Console, you can use this console to view data
   about your cloud infrastructure in a web-based graphical user interface
   (GUI) to make sure your cloud is operating correctly. By logging on to the
   console, &kw-hos; administrators can manage data in the following ways:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     Triage alarm notifications in the central dashboard
    </para>
   </listitem>
   <listitem>
    <para>
     Monitor the environment by giving priority to alarms that take precedence
    </para>
   </listitem>
   <listitem>
    <para>
     Manage compute nodes and easily use a form to create a new host
    </para>
   </listitem>
   <listitem>
    <para>
     Refine the monitoring environment by creating new alarms to specify a
     combination of metrics, services, and hosts that match the triggers unique
     to an environment
    </para>
   </listitem>
   <listitem>
    <para>
     Plan for future storage by tracking capacity over time to predict with
     some degree of reliability the amount of additional storage needed
    </para>
   </listitem>
  </itemizedlist>
  <para>
   For more details on how to connect to and use the &opscon;, see
   <xref linkend="opsconsole"/>.
  </para>
  <para>
   <emphasis role="bold">Dashboard</emphasis>
  </para>
  <para>
   Often referred to as Horizon or the Horizon dashboard, you can use this
   console to manage resources on a domain and project level in a web-based
   graphical user interface (GUI). The following are some of the typical
   operational tasks that you may perform using the dashboard:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     Creating and managing projects, users, and groups within your domain.
    </para>
   </listitem>
   <listitem>
    <para>
     Assigning roles to users and groups to manage access to resources.
    </para>
   </listitem>
   <listitem>
    <para>
     Setting and updating resource quotas for the projects.
    </para>
   </listitem>
  </itemizedlist>
  <para>
   For more details, see the following pages:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     <xref linkend="sec.operation.identity"/>
    </para>
   </listitem>
   <listitem>
    <para>
     <xref linkend="cloudadmin_gui"/>
    </para>
   </listitem>
  </itemizedlist>
  <para>
   <emphasis role="bold">Command-line interface (CLI)</emphasis>
  </para>
  <para>
   Each service within &kw-hos; provides a command-line client, such as the
   novaclient (sometimes referred to as the python-novaclient or nova CLI) for
   the Compute service, the keystoneclient for the Identity service, etc. There
   is also an effort in the OpenStack community to make a unified client,
   called the openstackclient, which will combine the available commands in the
   various service-specific clients into one tool. By default, we install each
   of the necessary clients onto the hosts in your environment for you to use.
  </para>
  <para>
   You will find processes defined in our documentation that use these
   command-line tools. There is also a list of common cloud administration
   tasks which we have outlined which you can use the command-line tools to do.
   For more details, see <xref linkend="CreateCloudAdmin"/>.
  </para>
 </section>
 <section>
  <title>Daily tasks</title>
  <itemizedlist>
   <listitem>
    <para>
     <emphasis role="bold">Ensure your cloud is running correctly</emphasis>:
     &kw-hos; is deployed as a set of highly available services to minimize the
     impact of failures. That said, hardware and software systems can fail.
     Detection of failures early in the process will enable you to address
     issues before they affect the broader system. &kw-hos; provides a
     monitoring solution, based on OpenStack’s Monasca, which provides
     monitoring and metrics for all OpenStack components and much of the
     underlying system, including service status, performance metrics, compute
     node, and virtual machine status. Failures are exposed via the &opscon;
     and/or alarm notifications. In the case where more detailed
     diagnostics are required, you can use a centralized logging system based
     on the &elasticsearch;, Logstash, and Kibana (ELK) stack. This provides the
     ability to search service logs to get detailed information on behavior and
     errors.
    </para>
   </listitem>
   <listitem>
    <para>
     <emphasis role="bold">Perform critical maintenance</emphasis>: To ensure
     your OpenStack installation is running correctly, provides the right
     access and functionality, and is secure, you should make ongoing
     adjustments to the environment. Examples of daily maintenance tasks
     include:
    </para>
    <itemizedlist xml:id="ul_nx2_z4x_rv">
     <listitem>
      <para>
       Add/remove projects and users. The frequency of this task depends on
       your policy.
      </para>
     </listitem>
     <listitem>
      <para>
       Apply security patches (if released).
      </para>
     </listitem>
     <listitem>
      <para>
       Run daily backups.
      </para>
     </listitem>
    </itemizedlist>
   </listitem>
  </itemizedlist>
 </section>
 <section>
  <title>Weekly or monthly tasks</title>
  <itemizedlist xml:id="ul_nz4_npx_rv">
   <listitem>
    <para>
     <emphasis role="bold">Do regular capacity planning</emphasis>: Your
     initial deployment will likely reflect the known near to mid-term scale
     requirements, but at some point your needs will outgrow your initial
     deployment’s capacity. You can expand &kw-hos; in a variety of ways,
     such as by adding compute and storage capacity.
    </para>
   </listitem>
  </itemizedlist>
  <para>
   To manage your cloud’s capacity, begin by determining the load on the
   existing system. OpenStack is a set of relatively independent components and
   services, so there are multiple subsystems that can affect capacity. These
   include control plane nodes, compute nodes, object storage nodes, block
   storage nodes, and an image management system. At the most basic level, you
   should look at the CPU used, RAM used, I/O load, and the disk space used
   relative to the amounts available. For compute nodes, you can also evaluate
   the allocation of resource to hosted virtual machines. This information can
   be viewed in the &opscon;. You can pull historical information
   from the monitoring service (OpenStack’s Monasca) by using its client or
   API. Also, OpenStack provides you some ability to manage the hosted resource
   utilization by using quotas for projects. You can track this usage over time
   to get your growth trend so that you can project when you will need to add
   capacity.
  </para>
 </section>
 <section>
  <title>Semi-annual tasks</title>
  <itemizedlist xml:id="ul_y1v_5sx_rv">
   <listitem>
    <para>
     <emphasis role="bold">Perform upgrades</emphasis>: OpenStack releases new
     versions on a six-month cycle. In general, &productname; will release new
     major versions annually with minor versions and maintenance updates more
     often. Each new release consists of both new functionality and services,
     as well as bug fixes for existing functionality.
    </para>
   </listitem>
  </itemizedlist>
  <note>
   <para>
    If you are planning to upgrade, this is also an excellent time to evaluate
    your existing capabilities, especially in terms of capacity (see Capacity
    Planning above).
   </para>
  </note>
 </section>
 <section>
  <title>Troubleshooting</title>
  <para>
   As part of managing your cloud, you should be ready to troubleshoot issues,
   as needed. The following are some common troubleshooting scenarios and
   solutions:
  </para>
  <para>
   <emphasis role="bold">How do I determine if my cloud is operating correctly
   now?</emphasis>: &kw-hos; provides a monitoring solution based on
   OpenStack’s Monasca service. This service provides monitoring and metrics
   for all OpenStack components, as well as much of the underlying system. By
   default, &kw-hos; comes with a set of alarms that provide coverage of the
   primary systems. In addition, you can define alarms based on threshold
   values for any metrics defined in the system. You can view alarm information
   in the &opscon;. You can also receive or deliver this information
   to others by configuring email or other mechanisms. Alarms provide
   information about whether a component failed and is affecting the system,
   and also what condition triggered the alarm.
  </para>
  <para>
   <emphasis role="bold">How do I troubleshoot and resolve performance issues
   for my cloud?</emphasis>: There are a variety of factors that can affect the
   performance of a cloud system, such as the following:
  </para>
  <itemizedlist xml:id="ul_vb3_ttx_rv">
   <listitem>
    <para>
     Health of the control plane
    </para>
   </listitem>
   <listitem>
    <para>
     Health of the hosting compute node and virtualization layer
    </para>
   </listitem>
   <listitem>
    <para>
     Resource allocation on the compute node
    </para>
   </listitem>
  </itemizedlist>
  <para>
   If your cloud users are experiencing performance issues on your cloud, use
   the following approach:
  </para>
  <orderedlist xml:id="ol_wb3_ttx_rv">
   <listitem>
    <para>
     View the compute summary page on the &opscon; to determine if
     any alarms have been triggered.
    </para>
   </listitem>
   <listitem>
    <para>
     Determine the hosting node of the virtual machine that is having issues.
    </para>
   </listitem>
   <listitem>
    <para>
     On the compute hosts page, view the status and resource utilization of the
     compute node to determine if it has errors or is over-allocated.
    </para>
   </listitem>
   <listitem>
    <para>
     On the compute instances page you can view the status of the VM along with
     its metrics.
    </para>
   </listitem>
  </orderedlist>
  <para>
   <emphasis role="bold">How do I troubleshoot and resolve availability issues
   for my cloud?</emphasis>: If your cloud users are experiencing availability
   issues, determine what your users are experiencing that indicates to them
   the cloud is down. For example, can they not access the Dashboard service
   (Horizon) console or APIs, indicating a problem with the control plane? Or
   are they having trouble accessing resources? Console/API issues would
   indicate a problem with the control planes. Use the &opscon; to
   view the status of services to see if there is an issue. However, if it is
   an issue of accessing a virtual machine, then also search the consolidated
   logs that are available in the ELK stack or errors related to the virtual
   machine and supporting networking.
  </para>
 </section>
 <section xml:id="idg-all-operations-operations_overview-xml-11">
  <title>Common Questions</title>
  <para>
   <emphasis role="bold">To manage a cloud, how many administrators do I
   need?</emphasis>
  </para>
  <para>
   A 24x7 cloud needs a 24x7 cloud operations team. If you already have a NOC,
   managing the cloud can be added to their workload.
  </para>
  <para>
   A cloud with 20 nodes will need a part-time person. You can manage a cloud
   with 200 nodes with two people. As the amount of nodes increases and
   processes and automation are put in place, you will need to increase the
   number of administrators but the need is not linear. As an example, if you
   have 3000 nodes and 15 clouds you will probably need 6 administrators.
  </para>
  <para>
   <emphasis role="bold">What skills do my cloud administrators need?</emphasis>
  </para>
  <para>
   Your administrators should be experienced Linux admins. They should have
   experience in application management, as well as experience with Ansible.
   It is a plus if they have experience with Bash shell scripting and Python
   programming skills.
  </para>
  <para>
   In addition, you will need networking engineers. A 3000 node environment
   will need two networking engineers.
  </para>
  <para>
   <emphasis role="bold">What operations should I plan on performing daily,
   weekly, monthly, or semi-annually?</emphasis>
  </para>
  <para>
   You should plan for operations by understanding what tasks you need to do
   daily, weekly, monthly, or semi-annually. The specific list of tasks that
   you need to perform depends on your cloud configuration, but should include
   the following high-level tasks specified in the <xref linkend="tutorials" />
  </para>
 </section>
</chapter>
