<?xml version="1.0"?>
<!DOCTYPE section [
 <!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="networking_alarmdefinitions">
 <title>Networking Alarms</title>
 <para>
  These alarms show under the Networking section of the &productname; &opscon;.
 </para>
 <informaltable colsep="1" rowsep="1">
  <tgroup cols="5">
   <colspec colname="c1" colnum="1"/>
   <colspec colname="c2" colnum="2"/>
   <colspec colname="c3" colnum="3"/>
   <colspec colname="c4" colnum="4"/>
   <colspec colname="c5" colnum="5"/>
   <thead>
    <row>
     <entry>Service</entry>
     <entry>Alarm Name</entry>
     <entry>Description</entry>
     <entry>Likely Cause</entry>
     <entry>Mitigation Tasks to Perform</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry morerows="4">networking</entry>
     <entry>Process Check</entry>
     <entry>
      <para>
       Alarms when the specified process is not running.
      </para>
      <para>
       Separate alarms for each of these Neutron services, specified by the
       <literal>component</literal> dimension:
      </para>
      <itemizedlist xml:id="ul_a11_gzp_mx">
       <listitem>
        <para>
         ipsec/charon
        </para>
       </listitem>
       <listitem>
        <para>
         neutron-openvswitch-agent
        </para>
       </listitem>
       <listitem>
        <para>
         neutron-l3-agent
        </para>
       </listitem>
       <listitem>
        <para>
         neutron-dhcp-agent
        </para>
       </listitem>
       <listitem>
        <para>
         neutron-metadata-agent
        </para>
       </listitem>
       <listitem>
        <para>
         neutron-server
        </para>
       </listitem>
       <listitem>
        <para>
         neutron-lbaas-agent
        </para>
       </listitem>
       <listitem>
        <para>
         neutron-lbaasv2-agent
        </para>
       </listitem>
       <listitem>
        <para>
         neutron-vpn-agent
        </para>
       </listitem>
      </itemizedlist>
     </entry>
     <entry>Process crashed.</entry>
     <entry>
      <para>
       Restart the process on the affected node using these steps:
      </para>
      <orderedlist xml:id="ol_fdb_dzg_qv">
       <listitem>
        <para>
         Log in to the &lcm;.
        </para>
       </listitem>
       <listitem>
        <para>
         Check the status of the networking status:
        </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts neutron-status.yml</screen>
       </listitem>
       <listitem>
        <para>
         Make note of the failed service names and the affected hosts which you
         will use to review the logs later.
        </para>
       </listitem>
       <listitem>
        <para>
         Using the affected hostname(s) from the previous output, run the
         Neutron start playbook to restart the services:
        </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts neutron-start.yml --limit &lt;hostname&gt;</screen>
        <note>
         <para>
          You can pass multiple hostnames with
          <literal>--limit</literal> option by separating them with a colon
          <literal>:</literal>.
         </para>
        </note>
       </listitem>
       <listitem>
        <para>
         Check the status of the networking service again:
        </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts neutron-status.yml</screen>
       </listitem>
       <listitem>
        <para>
         Once all services are back up, you can SSH to the affected host(s) and
         review the logs in the location below for any errors around the time
         that the alarm triggered:
        </para>
<screen>/var/log/neutron/&lt;service_name&gt;</screen>
       </listitem>
      </orderedlist>
     </entry>
    </row>
    <row>
     <entry>Process Check</entry>
     <entry>
      <para>
       Alarms when the specified process is not running.
      </para>
<screen>process_name = neutron-rootwrap</screen>
     </entry>
     <entry>Process crashed.</entry>
     <entry>
      <para>
       Currently <literal>neutron-rootwrap</literal> is only used to run
       <literal>ovsdb-client</literal>. To restart this process, use these
       steps:
      </para>
      <orderedlist xml:id="ol_ark_zzg_qv">
       <listitem>
        <para>
         SSH to the affected host(s).
        </para>
       </listitem>
       <listitem>
        <para>
         Restart the process:
        </para>
<screen>sudo systemctl restart neutron-openvswitch-agent</screen>
       </listitem>
       <listitem>
        <para>
         Review the logs at the location below for errors:
        </para>
<screen>/var/log/neutron/neutron-openvswitch-agent.log</screen>
       </listitem>
      </orderedlist>
     </entry>
    </row>
    <row>
     <entry>HTTP Status</entry>
     <entry>neutron api health check</entry>
     <entry>Process is stuck if the <literal>neutron-server</literal> Process Check is
            not OK.</entry>
     <entry>
      <orderedlist xml:id="ol_zc4_z1h_qv">
       <listitem>
        <para>
         SSH to the affected host(s).
        </para>
       </listitem>
       <listitem>
        <para>
         Run this command to restart the <literal>neutron-server</literal>
         process:
        </para>
<screen>sudo systemctl restart neutron-server</screen>
       </listitem>
       <listitem>
        <para>
         Review the logs at the location below for errors:
        </para>
<screen>/var/log/neutron/neutron-server.log</screen>
       </listitem>
      </orderedlist>
     </entry>
    </row>
    <row>
     <entry>HTTP Status</entry>
     <entry>neutron api health check</entry>
     <entry>The node crashed. Alternatively, only connectivity might have been lost if the
            local node HTTP Status is OK or UNKNOWN.</entry>
     <entry>Reboot the node if it crashed or diagnose the networking connectivity failures
            between the local and remote nodes. Review the logs.</entry>
    </row>
    <row>
     <entry>Service Directory Log Size</entry>
     <entry>Service log directory consuming more disk than its quota.</entry>
     <entry>This could be due to a service set to <literal>DEBUG</literal> instead of
              <literal>INFO</literal> level. Another reason could be due to a repeating error
            message filling up the log files. Finally, it could be due to log rotate not configured
            properly so old log files are not being deleted properly.</entry>
     <entry>Find the service that is consuming too much disk space. Look at the logs. If
              <literal>DEBUG</literal> log entries exist, set the logging level to
              <literal>INFO</literal>. If the logs are repeatedly logging an error message, do what
            is needed to resolve the error. If old log files exist, configure log rotate to remove
            them. You could also choose to remove old log files by hand after backing them up if
            needed.</entry>
    </row>
    <row>
     <entry morerows="6">dns</entry>
     <entry>Process Check</entry>
     <entry>
      <para>
       Alarms when the specified process is not running.
      </para>
<screen>process_name = designate-zone-manager</screen>
     </entry>
     <entry>Process crashed.</entry>
     <entry>
      <para>
       Restart the process on the affected node using these steps:
      </para>
      <orderedlist xml:id="ol_b11_gzp_mx">
       <listitem>
        <para>
         Log in to the &lcm;.
        </para>
       </listitem>
       <listitem>
        <para>
         Use the Designate start playbook against the affected node:
        </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts designate-start.yml --limit 'DES-ZMG'</screen>
       </listitem>
      </orderedlist>
      <para>
       Review the log located at:
      </para>
<screen>/var/log/designate/designate-zone-manager.log</screen>
     </entry>
    </row>
    <row>
     <entry>Process Check</entry>
     <entry>
      <para>
       Alarms when the specified process is not running.
      </para>
<screen>process_name = designate-pool-manager</screen>
     </entry>
     <entry>Process crashed.</entry>
     <entry>
      <para>
       Restart the process on the affected node using these steps:
      </para>
      <orderedlist xml:id="ol_c11_gzp_mx">
       <listitem>
        <para>
         Log in to the &lcm;.
        </para>
       </listitem>
       <listitem>
        <para>
         Use the Designate start playbook against the affected node:
        </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts designate-start.yml --limit 'DES-PMG'</screen>
       </listitem>
      </orderedlist>
      <para>
       Review the log located at:
      </para>
<screen>/var/log/designate/designate-pool-manager.log</screen>
     </entry>
    </row>
    <row>
     <entry>Process Check</entry>
     <entry>
      <para>
       Alarms when the specified process is not running.
      </para>
<screen>process_name = designate-central</screen>
     </entry>
     <entry>Process crashed</entry>
     <entry>
      <para>
       Restart the process on the affected node using these steps:
      </para>
      <orderedlist xml:id="ol_d11_gzp_mx">
       <listitem>
        <para>
         Log in to the &lcm;.
        </para>
       </listitem>
       <listitem>
        <para>
         Use the Designate start playbook against the affected node:
        </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts designate-start.yml --limit 'DES-CEN'</screen>
       </listitem>
      </orderedlist>
      <para>
       Review the log located at:
      </para>
<screen>/var/log/designate/designate-central.log</screen>
     </entry>
    </row>
    <row>
     <entry>Process Check</entry>
     <entry>
      <para>
       Alarms when the specified process is not running.
      </para>
<screen>process_name = designate-api</screen>
     </entry>
     <entry>Process crashed.</entry>
     <entry>
      <para>
       Restart the process on the affected node using these steps:
      </para>
      <orderedlist xml:id="ol_e11_gzp_mx">
       <listitem>
        <para>
         Log in to the &lcm;.
        </para>
       </listitem>
       <listitem>
        <para>
         Use the Designate start playbook against the affected node:
        </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts designate-start.yml --limit 'DES-API'</screen>
       </listitem>
      </orderedlist>
      <para>
       Review the log located at:
      </para>
<screen>/var/log/designate/designate-api.log</screen>
     </entry>
    </row>
    <row>
     <entry>Process Check</entry>
     <entry>
      <para>
       Alarms when the specified process is not running.
      </para>
<screen>process_name = designate-mdns</screen>
     </entry>
     <entry>Process crashed.</entry>
     <entry>
      <para>
       Restart the process on the affected node using these steps:
      </para>
      <orderedlist xml:id="ol_f11_gzp_mx">
       <listitem>
        <para>
         Log in to the &lcm;.
        </para>
       </listitem>
       <listitem>
        <para>
         Use the Designate start playbook against the affected node:
        </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts designate-start.yml --limit 'DES-MDN'</screen>
       </listitem>
      </orderedlist>
      <para>
       Review the log located at:
      </para>
<screen>/var/log/designate/designate-mdns.log</screen>
     </entry>
    </row>
    <row>
     <entry>HTTP Status</entry>
     <entry>
      <para>
       component = designate-api
      </para>
      <para>
       This alarm will also have the <literal>api_endpoint</literal> and
       <literal>monitored_host_types</literal> dimensions defined. The likely
       cause and mitigation steps are the same for both.
      </para>
     </entry>
     <entry>The API is unresponsive.</entry>
     <entry>
      <para>
       Restart the process on the affected node using these steps:
      </para>
      <orderedlist xml:id="ol_g11_gzp_mx">
       <listitem>
        <para>
         Log in to the &lcm;.
        </para>
       </listitem>
       <listitem>
        <para>
         Use the Designate start playbook against the affected node:
        </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts designate-start.yml --limit 'DES-API,DES-CEN'</screen>
       </listitem>
      </orderedlist>
      <para>
       Review the logs located at:
      </para>
<screen>/var/log/designate/designate-api.log
/var/log/designate/designate-central.log</screen>
     </entry>
    </row>
    <row>
     <entry>Service Directory Log Size</entry>
     <entry>Service log directory consuming more disk than its quota.</entry>
     <entry>This could be due to a service set to <literal>DEBUG</literal> instead of
              <literal>INFO</literal> level. Another reason could be due to a repeating error
            message filling up the log files. Finally, it could be due to log rotate not configured
            properly so old log files are not being deleted properly.</entry>
     <entry>Find the service that is consuming too much disk space. Look at the logs. If
              <literal>DEBUG</literal> log entries exist, set the logging level to
              <literal>INFO</literal>. If the logs are repeatedly logging an error message, do what
            is needed to resolve the error. If old log files exist, configure log rotate to remove
            them. You could also choose to remove old log files by hand after backing them up if
            needed.</entry>
    </row>
    <row>
     <entry>powerdns</entry>
     <entry>Process Check</entry>
     <entry>
      <para>
       Alarms when the specified process is not running.
      </para>
<screen>process_name = pdns_server</screen>
     </entry>
     <entry>Process crashed.</entry>
     <entry>
      <para>
       Restart the process on the affected node using these steps:
      </para>
      <orderedlist xml:id="ol_h11_gzp_mx">
       <listitem>
        <para>
         Log in to the &lcm;.
        </para>
       </listitem>
       <listitem>
        <para>
         Use the PowerDNS start playbook against the affected node:
        </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts powerdns-start.yml</screen>
       </listitem>
      </orderedlist>
      <para>
       Review the log located at, querying against <literal>process =
       pdns_server</literal>:
      </para>
<screen>/var/log/syslog</screen>
     </entry>
    </row>
    <row>
     <entry>bind</entry>
     <entry>Process Check</entry>
     <entry>
      <para>
       Alarms when the specified process is not running.
      </para>
<screen>process_name = named</screen>
     </entry>
     <entry>Process Crashed</entry>
     <entry>
      <para>
       Restart the process on the affected node using these steps:
      </para>
      <orderedlist xml:id="ol_i11_gzp_mx">
       <listitem>
        <para>
         Log in to the &lcm;.
        </para>
       </listitem>
       <listitem>
        <para>
         Use the Bind start playbook against the affected node:
        </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts bind-start.yml</screen>
       </listitem>
      </orderedlist>
      <para>
       Review the log located at, querying against <literal>process =
       named</literal>:
      </para>
<screen>/var/log/syslog</screen>
     </entry>
    </row>
   </tbody>
  </tgroup>
 </informaltable>
</section>
