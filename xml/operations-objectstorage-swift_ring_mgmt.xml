<?xml version="1.0"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE section [
 <!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="swift_ansible_playbooks">
 <title>Managing Rings Using Swift Playbooks</title>
 <para>
  The following table describes how playbooks relate to ring management.
 </para>
 <para>
  All of these playbooks will be run from the &lcm; from the
  <literal>~/scratch/ansible/next/ardana/ansible</literal> directory.
 </para>
 <informaltable colsep="1" rowsep="1">
  <tgroup cols="3">
   <colspec colname="c1" colnum="1"/>
   <colspec colname="c2" colnum="2"/>
   <colspec colname="c3" colnum="3"/>
   <thead>
    <row>
     <entry>Playbook</entry>
     <entry>Description</entry>
     <entry>Notes</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry><literal>swift-update-from-model-rebalance-rings.yml</literal>
     </entry>
     <entry>
      <para>
       There are two steps in this playbook:
      </para>
      <itemizedlist>
       <listitem>
        <para>
         Make delta
        </para>
        <para>
         It processes the input model and compares it against the existing
         rings. After comparison, it produces a list of differences between
         the input model and the existing rings. This is called the ring
         delta. The ring delta covers drives being added, drives being
         removed, weight changes, and replica count changes.
        </para>
       </listitem>
      </itemizedlist>
      <itemizedlist>
       <listitem>
        <para>
         Rebalance
        </para>
        <para>
         The ring delta is then converted into a series of commands (such as
         <literal>add</literal>) to the swift-ring-builder program. Finally,
         the <literal>rebalance</literal> command is issued to the
         swift-ring-builder program.
        </para>
       </listitem>
      </itemizedlist>
     </entry>
     <entry>
      <para>
       This playbook performs its actions on the first node running the
       swift-proxy service. (For more information, see
       <xref linkend="topic_rtc_s3t_mt"/>.) However, it also scans all Swift
       nodes to find the size of disk drives.
      </para>
      <para>
       If there are no changes in the ring delta, the
       <literal>rebalance</literal> command is still executed to rebalance the
       rings. If <literal>min-part-hours</literal> has not yet elapsed or if
       no partitions need to be moved, new rings are not written.
      </para>
     </entry>
    </row>
    <row>
     <entry><literal>swift-compare-model-rings.yml</literal>
     </entry>
     <entry>
      <para>
       There are two steps in this playbook:
      </para>
      <itemizedlist>
       <listitem>
        <para>
         Make delta
        </para>
        <para>
         This is the same as described for
         <literal>swift-update-from-model-rebalance-rings.yml</literal>.
        </para>
       </listitem>
      </itemizedlist>
      <itemizedlist>
       <listitem>
        <para>
         Report
        </para>
        <para>
         This prints a summary of the proposed changes that will be made to
         the rings (that is, what would happen if you rebalanced).
        </para>
       </listitem>
      </itemizedlist>
      <para>
       The playbook reports any issues or problems it finds with the input
       model.
      </para>
      <para>
       This playbook can be useful to confirm that there are no errors in the
       input model. It also allows you to check that when you change the input
       model, that the proposed ring changes are as expected. For example, if
       you have added a server to the input model, but this playbook reports
       that no drives are being added, you should determine the cause.
      </para>
     </entry>
     <entry>
      <para>
       There is troubleshooting information related to the information that
       you receive in this report that you can view on this page:
       <xref linkend="sec.input-swift.error"/>.
      </para>
     </entry>
    </row>
    <row>
     <entry><literal>swift-deploy.yml</literal>
     </entry>
     <entry>
      <para>
       <literal>swift-deploy.yml</literal> is responsible for installing
       software and configuring Swift on nodes. As part of installing and
       configuring, it runs the
       <literal>swift-update-from-model-rebalance-rings.yml</literal> and
       <literal>swift-reconfigure.yml</literal> playbooks.
      </para>
     </entry>
     <entry>
      <para>
       This playbook is included in the <literal>ardana-deploy.yml</literal> and
       <literal>site.yml</literal> playbooks, so if you run either of those
       playbooks, the <literal>swift-deploy.yml</literal> playbook is also
       run.
      </para>
     </entry>
    </row>
    <row>
     <entry><literal>swift-reconfigure.yml</literal>
     </entry>
     <entry>
      <para>
       <literal>swift-reconfigure.yml</literal> takes rings that the
       <literal>swift-update-from-model-rebalance-rings.yml</literal>
       playbook has changed and copies those rings to all Swift nodes.
      </para>
     </entry>
     <entry>
      <para>
       Every time that you directly use the
       <literal>swift-update-from-model-rebalance-rings.yml</literal>
       playbook, you must copy these rings to the system using the
       <literal>swift-reconfigure.yml</literal> playbook. If you forget and
       run <literal>swift-update-from-model-rebalance-rings.yml</literal>
       twice, the process may move two replicates of some partitions at the
       same time.
      </para>
     </entry>
    </row>
   </tbody>
  </tgroup>
 </informaltable>
 <section xml:id="variables">
  <title>Optional Ansible variables related to ring management</title>
  <para>
   The following optional variables may be specified when running the playbooks
   outlined above. They are specified using the <literal>--extra-vars</literal>
   option.
  </para>
  <informaltable colsep="1" rowsep="1">
   <tgroup cols="2">
    <colspec colname="c1" colnum="1"/>
    <colspec colname="c2" colnum="2"/>
    <thead>
     <row>
      <entry>Variable</entry>
      <entry>Description and Use</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><literal>limit_ring</literal>
      </entry>
      <entry>
       <para>
        Limit changes to the named ring. Other rings will not be examined or
        updated. This option may be used with any of the Swift playbooks. For
        example, to only update the <literal>object-1</literal> ring, use the
        following command:
       </para>
<screen>&prompt.ardana;ansible-playbook -i hosts/verb_hosts swift-update-from-model-rebalance-rings.yml --extra-vars "limit-ring=object-1"</screen>
      </entry>
     </row>
     <row>
      <entry>drive_detail</entry>
      <entry>
       <para>
        Used only with the swift-compare-model-rings.yml playbook. The playbook
        will include details of changes to every drive where the model and
        existing rings differ. If you omit the drive_detail variable, only
        summary information is provided. The following shows how to use the
        drive_detail variable:
       </para>
<screen>&prompt.ardana;ansible-playbook -i hosts/verb_hosts swift-compare-model-rings.yml --extra-vars "drive_detail=yes"</screen>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </section>
 <section>
  <title>Interpreting the report from the swift-compare-model-rings.yml playbook</title>
  <para>
   The <literal>swift-compare-model-rings.yml</literal> playbook compares the
   existing Swift rings with the input model and prints a report telling you
   how the rings and the model differ. Specifically, it will tell you what
   actions will take place when you next run the
   <literal>swift-update-from-model-rebalance-rings.yml</literal> playbook (or
   a playbook such as <literal>ardana-deploy.yml</literal> that runs
   <literal>swift-update-from-model-rebalance-rings.yml</literal>).
  </para>
  <para>
   The <literal>swift-compare-model-rings.yml</literal> playbook will make no
   changes, but is just an advisory report.
  </para>
  <para>
   Here is an example output from the playbook. The report is between
   "report.stdout_lines" and "PLAY RECAP":
  </para>
<screen>TASK: [swiftlm-ring-supervisor | validate-input-model | Print report] *********
ok: [ardana-cp1-c1-m1-mgmt] =&gt; {
    "var": {
        "report.stdout_lines": [
            "Rings:",
            "  ACCOUNT:",
            "    ring exists (minimum time to next rebalance: 8:07:33)",
            "    will remove 1 devices (18.00GB)",
            "    ring will be rebalanced",
            "  CONTAINER:",
            "    ring exists (minimum time to next rebalance: 8:07:35)",
            "    no device changes",
            "    ring will be rebalanced",
            "  OBJECT-0:",
            "    ring exists (minimum time to next rebalance: 8:07:34)",
            "    no device changes",
            "    ring will be rebalanced"
        ]
    }
}</screen>
  <para>
   The following describes the report in more detail:
  </para>
  <informaltable colsep="1" rowsep="1">
   <tgroup cols="2">
    <colspec colname="c1" colnum="1"/>
    <colspec colname="c2" colnum="2"/>
    <thead>
     <row>
      <entry>Message</entry>
      <entry>Description</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>
       <para>
        ring exists
       </para>
      </entry>
      <entry>
       <para>
        The ring already exists on the system.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        ring will be created
       </para>
      </entry>
      <entry>
       <para>
        The ring does not yet exist on the system.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        no device changes
       </para>
      </entry>
      <entry>
       <para>
        The devices in the ring exactly match the input model. There are no
        servers being added or removed and the weights are appropriate for the
        size of the drives.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        minimum time to next rebalance
       </para>
      </entry>
      <entry>
       <para>
        If this time is <literal>0:00:00</literal>, if you run one of the Swift
        playbooks that update rings, the ring will be rebalanced.
       </para>
       <para>
        If the time is non-zero, it means that not enough time has elapsed
        since the ring was last rebalanced. Even if you run a Swift playbook
        that attempts to change the ring, the ring will not actually
        rebalance. This time is determined by the
        <literal>min-part-hours</literal> attribute.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        set-weight ardana-ccp-c1-m1-mgmt:disk0:/dev/sdc 8.00 &gt; 12.00 &gt; 18.63
       </para>
      </entry>
      <entry>
       <para>
        The weight of disk0 (mounted on /dev/sdc) on server
        <literal>ardana-ccp-c1-m1-mgmt</literal> is currently set to 8.0 but
        should be 18.83 given the size of the drive. However, in this example,
        we cannot go directly from 8.0 to 18.63 because of the weight-step
        attribute. Hence, the proposed weight change is from 8.0 to 12.0.
       </para>
       <para>
        This information is only shown when you the
        <literal>drive_detail=yes</literal> argument when running the playbook.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        will change weight on 12 devices (6.00TB)
       </para>
      </entry>
      <entry>
       <para>
        The weight of 12 devices will be increased. This might happen for
        example, if a server had been added in a prior ring update. However,
        with use of the <literal>weight-step</literal> attribute, the system
        gradually increases the weight of these new devices. In this example,
        the change in weight represents 6TB of total available storage. For
        example, if your system currently has 100TB of available storage, when
        the weight of these devices is changed, there will be 106TB of
        available storage. If your system is 50% utilized, this means that when
        the ring is rebalanced, up to 3TB of data may be moved by the
        replication process. This is an estimate - in practice, because only
        one copy of a given replica is moved in any given rebalance, it may not
        be possible to move this amount of data in a single ring rebalance.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        add: ardana-ccp-c1-m1-mgmt:disk0:/dev/sdc
       </para>
      </entry>
      <entry>
       <para>
        The disk0 device will be added to the ardana-ccp-c1-m1-mgmt server. This
        happens when a server is added to the input model or if a disk model is
        changed to add additional devices.
       </para>
       <para>
        This information is only shown when you the
        <literal>drive_detail=yes</literal> argument when running the
        playbook.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        remove: ardana-ccp-c1-m1-mgmt:disk0:/dev/sdc
       </para>
      </entry>
      <entry>
       <para>
        The device is no longer in the input model and will be removed from the
        ring. This happens if a server is removed from the model, a disk drive
        is removed from a disk model or the server is marked for removal using
        the pass-through feature.
       </para>
       <para>
        This information is only shown when you the
        <literal>drive_detail=yes</literal> argument when running the
        playbook.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        will add 12 devices (6TB)
       </para>
      </entry>
      <entry>
       <para>
        There are 12 devices in the input model that have not yet been added to
        the ring. Usually this is because one or more servers have been added.
        In this example, this could be one server with 12 drives or two
        servers, each with 6 drives. The size in the report is the change in
        total available capacity. When the weight-step attribute is used, this
        may be a fraction of the total size of the disk drives. In this
        example, 6TB of capacity is being added. For example, if your system
        currently has 100TB of available storage, when these devices are added,
        there will be 106TB of available storage. If your system is 50%
        utilized, this means that when the ring is rebalanced, up to 3TB of
        data may be moved by the replication process. This is an estimate - in
        practice, because only one copy of a given replica is moved in any
        given rebalance, it may not be possible to move this amount of data in
        a single ring rebalance.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        will remove 12 devices (6TB)
       </para>
      </entry>
      <entry>
       <para>
        There are 12 devices in rings that no longer appear in the input model.
        Usually this is because one or more servers have been removed. In this
        example, this could be one server with 12 drives or two servers, each
        with 6 drives. The size in the report is the change in total removed
        capacity. In this example, 6TB of capacity is being removed. For
        example, if your system currently has 100TB of available storage, when
        these devices are removed, there will be 94TB of available storage. If
        your system is 50% utilized, this means that when the ring is
        rebalanced, approximately 3TB of data must be moved by the replication
        process.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        min-part-hours will be changed
       </para>
      </entry>
      <entry>
       <para>
        The <literal>min-part-hours</literal> attribute has been changed in the
        ring specification in the input model.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        replica-count will be changed
       </para>
      </entry>
      <entry>
       <para>
        The <literal>replica-count</literal> attribute has been changed in the
        ring specification in the input model.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        ring will be rebalanced
       </para>
      </entry>
      <entry>
       <para>
        This is always reported. Every time the
        <literal>swift-update-from-model-rebalance-rings.yml</literal> playbook
        is run, it will execute the swift-ring-builder rebalance command. This
        happens even if there were no input model changes. If the ring is
        already well balanced, the swift-ring-builder will not rewrite the
        ring.
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </section>
</section>
