<?xml version="1.0"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE section [
 <!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="topic_jsc_qps_qt">
 <title>Enabling Default Backups of the Control Plane to an SSH Target</title>
 <para>
  This topic describes how you can set up an external server as a backup server
  in case you lose access to your cloud servers that store the default backups.
 </para>
 <section>
  <title>Default Backup and Restore</title>
  <para>
   As part of the installation procedure in &kw-hos;, automatic
   backup/restore jobs are set up to back up to Swift via the Freezer scheduler
   component of the backup and restore service. The backup jobs perform
   scheduled backups of &productname; control plane data
   (files/directories/db). The restore jobs can be used to restore appropriate
   control plane data. Additional automatic jobs can be added to backup/restore
   from the secure shell (SSH) server that you set up/designate. It is
   recommended that you set up SSH backups so that in the event that you lose
   all of your control plane nodes at once, you have a backup on remote servers
   that you can use to restore the control plane nodes. Note that you do not
   have to restore from the SSH location if only one or two control plane nodes
   are lost. In that case, they can be recovered from the data on the remaining
   control plane node following the restore procedures in
   <xref linkend="recovering_controller_nodes"/>. That document also explains
   how to recover using your remote server SSH backups.
  </para>
  <para>
   While control plane backups to Swift are set up automatically, you must use
   the following procedure to set up SSH backups.
  </para>
 </section>
 <section>
  <title>Setting up SSH backups</title>
  <para>
   By default, during &kw-hos-phrase; deployment, backup jobs are automatically
   deployed to Swift, the MySQL database, the &lcm;, and Swift
   rings. Restore jobs are also deployed for convenience. It is more secure to
   store those backups also outside of the &productname; infrastructure. If you
   provide all the values required in the following file, jobs will also be
   deployed to backup and restore to/from an SSH server of your choice:
  </para>
<screen>~/openstack/my_cloud/config/freezer/ssh_credentials.yml</screen>
 </section>
 <section>
  <title>Backing up your &productname; control plane to an SSH server</title>
  <para>
   You must provide the following connection information to this server:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     The SSH server's IP address
    </para>
   </listitem>
   <listitem>
    <para>
     The SSH server's port to connect to (usually port 22). You may want to
     confirm how to open the port on the &productname; firewall.
    </para>
   </listitem>
   <listitem>
    <para>
     The user to connect to the SSH server as
    </para>
   </listitem>
   <listitem>
    <para>
     The SSH private key authorized to connect to that user (see below for
     details of how to set up one if it is not already done)
    </para>
   </listitem>
   <listitem>
    <para>
     The directory where you wish to store the backup on that server
    </para>
   </listitem>
  </itemizedlist>
 </section>
 <section>
  <title>Setting up SSH for backups before deployment</title>
  <para>
   Before running the configuration processor, edit the following file:
  </para>
<screen>~/openstack/my_cloud/config/freezer/ssh_credentials.yml</screen>
  <para>
   Please be advised that all parameters are mandatory, and take care in
   providing the SSH private key.
  </para>
 </section>
 <section>
  <title>Setting up SSH for backups after deployment</title>
  <para>
   If you already deployed your cloud and forgot to configure SSH backups, or
   if you wish to modify the settings for where the backups are stored, follow
   the following instructions:
  </para>
  <orderedlist>
   <listitem>
    <para>
     Edit the following file:
    </para>
<screen>~/openstack/my_cloud/config/freezer/ssh_credentials.yml</screen>
    <para>
     Please be advised that all parameters are mandatory, and take care in
     providing the SSH private key.
    </para>
   </listitem>
   <listitem>
    <para>
     Run the following commands:
    </para>
<screen>&prompt.ardana;cd ~/openstack
&prompt.ardana;git add -A
&prompt.ardana;git commit -m "My config"
&prompt.ardana;cd ~/openstack/ardana/ansible/
&prompt.ardana;ansible-playbook -i hosts/localhost config-processor-run.yml
&prompt.ardana;ansible-playbook -i hosts/localhost ready-deployment.yml
&prompt.ardana;cd ~/scratch/ansible/next/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/verb_hosts _freezer_manage_jobs.yml</screen>
    <para>
     This will deploy the SSH key and configure SSH backup and restore jobs for
     you. It may take some time before the backups occur.
    </para>
   </listitem>
  </orderedlist>
 </section>
 <section>
  <title>Preparing the server that will store the backup</title>
  <para>
   In this example, the information is as follows:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     IP: 192.168.100.42
    </para>
   </listitem>
   <listitem>
    <para>
     Port: 22
    </para>
   </listitem>
   <listitem>
    <para>
     User: backupuser
    </para>
   </listitem>
   <listitem>
    <para>
     Target directory for backups: /mnt/backups/
    </para>
   </listitem>
  </itemizedlist>
  <para>
   Please replace these values to meet your own requirements, as appropriate.
  </para>
  <orderedlist>
   <listitem>
    <para>
     Connect to the server:
    </para>
<screen>&prompt.ardana;ssh -p 22 root@192.168.100.42</screen>
   </listitem>
   <listitem>
    <para>
     Create the user:
    </para>
<screen>&prompt.sudo;useradd backupuser --create-home --home-dir /mnt/backups/</screen>
   </listitem>
   <listitem>
    <para>
     Switch to that user:
    </para>
<screen>su backupuser</screen>
   </listitem>
   <listitem>
    <para>
     Create the SSH keypair:
    </para>
<screen><prompt xmlns='http://docbook.org/ns/docbook'>backupuser &gt; </prompt>ssh-keygen -t rsa
# Just leave the default for the first question and do not set any passphrase
&gt; Generating public/private rsa key pair.
&gt; Enter file in which to save the key (/mnt/backups//.ssh/id_rsa):
&gt; Created directory '/mnt/backups//.ssh'.
&gt; Enter passphrase (empty for no passphrase):
&gt; Enter same passphrase again:
&gt; Your identification has been saved in /mnt/backups//.ssh/id_rsa
&gt; Your public key has been saved in /mnt/backups//.ssh/id_rsa.pub
&gt; The key fingerprint is:
&gt; a9:08:ae:ee:3c:57:62:31:d2:52:77:a7:4e:37:d1:28 backupuser@padawan-ccp-c0-m1-mgmt
&gt; The key's randomart image is:
&gt; +---[RSA 2048]----+
&gt; |          o      |
&gt; |   . . E + .     |
&gt; |  o . . + .      |
&gt; | o +   o +       |
&gt; |  + o o S .      |
&gt; | . + o o         |
&gt; |  o + .          |
&gt; |.o .             |
&gt; |++o              |
&gt; +-----------------+</screen>
   </listitem>
   <listitem>
    <para>
     Add the public key to the list of the keys authorized to connect to that
     user on this server:
    </para>
<screen><prompt xmlns='http://docbook.org/ns/docbook'>backupuser &gt; </prompt>cat /mnt/backups/.ssh/id_rsa.pub &gt;&gt; /mnt/backups/.ssh/authorized_keys</screen>
   </listitem>
   <listitem>
    <para>
     View the private key. This is what you will use for the backup
     configuration:
    </para>
<screen><prompt xmlns='http://docbook.org/ns/docbook'>backupuser &gt; </prompt>cat /mnt/backups/.ssh/id_rsa
-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEAvjwKu6f940IVGHpUj3ffl3eKXACgVr3L5s9UJnb15+zV3K5L
BZuor8MLvwtskSkgdXNrpPZhNCsWSkryJff5I335Jhr/e5o03Yy+RqIMrJAIa0X5
...
iBKVKGPhOnn4ve3dDqy3q7fS5sivTqCrpaYtByJmPrcJNjb2K7VMLNvgLamK/AbL
qpSTZjicKZCCl+J2+8lrKAaDWqWtIjSUs29kCL78QmaPOgEvfsw=
-----END RSA PRIVATE KEY-----</screen>
   </listitem>
  </orderedlist>
  <para>
   You server is now ready to receive backups. If you wish, you can check our
   advice on how to secure it.
  </para>
 </section>
 <section>
  <title>Opening ports in the cloud firewall</title>
  <para>
   There is a strict policy of firewalling deployed with &kw-hos;. If you use a
   non-standard SSH port, you may need to specifically open it by using the
   following process:
  </para>
  <orderedlist>
   <listitem>
    <para>
     When creating your model, edit the following file:
    </para>
<screen>~/openstack/my_cloud/definition/data/firewall_rules.yml</screen>
   </listitem>
   <listitem>
    <para>
     You must add a new element in the firewall-rules list, such as:
    </para>
<screen>
- name: BACKUP
  # network-groups is a list of all the network group names
  # that the rules apply to
  network-groups:
  - MANAGEMENT
  rules:
  - type: allow
    # range of remote addresses in CIDR format that this
    # rule applies to
    remote-ip-prefix:
    port-range-min:
    port-range-max:
    # protocol must be one of: null, tcp, udp or icmp
    protocol: tcp</screen>
   </listitem>
  </orderedlist>
 </section>
 <section>
  <title>Securing your SSH backup server</title>
  <para>
   You can do the following to harden an SSH server (these techniques are well
   documented on the internet):
  </para>
  <itemizedlist>
   <listitem>
    <para>
     Disable root login
    </para>
   </listitem>
   <listitem>
    <para>
     Move SSH to a non-default port (that is, something other than 22)
    </para>
   </listitem>
   <listitem>
    <para>
     Disable password login (only allow RSA keys)
    </para>
   </listitem>
   <listitem>
    <para>
     Disable SSH v1
    </para>
   </listitem>
   <listitem>
    <para>
     Authorize Secure File Transfer Protocol (SFTP) only for that user (disable
     SSH shell)
    </para>
   </listitem>
   <listitem>
    <para>
     Firewall SSH traffic to ensure it comes from the &kw-hos; address range
    </para>
   </listitem>
   <listitem>
    <para>
     Install a Fail2Ban solution
    </para>
   </listitem>
   <listitem>
    <para>
     Restrict users that are allowed to SSH
    </para>
   </listitem>
  </itemizedlist>
  <para>
   Remove the key pair generated earlier on the backup server: the only thing
   needed is the .ssh/authorized_keys. You can remove the .ssh/id_rsa and
   .ssh/id_rsa.pub files. Be sure to save a backup of them somewhere.
  </para>
 </section>
 <section>
  <title>General tips</title>
  <itemizedlist>
   <listitem>
    <para>
     Take care when sizing the directory that will receive the backup.
    </para>
   </listitem>
   <listitem>
    <para>
     Monitor the space left on that directory.
    </para>
   </listitem>
   <listitem>
    <para>
     Keep the system up to date on that server.
    </para>
   </listitem>
  </itemizedlist>
 </section>
</section>
