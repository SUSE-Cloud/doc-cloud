<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE appendix
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<!-- Converted by suse-upgrade version 1.1 -->
<appendix xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="app.deploy.cisco">
 <title>Using Cisco Nexus Switches with &o_netw;</title>
 <info>
<dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
    <dm:maintainer>fs</dm:maintainer>
    <dm:status>editing</dm:status>
    <dm:deadline/>
    <dm:priority/>
    <dm:translation>no</dm:translation>
    <dm:languages/>
</dm:docmanager>
</info>
<para/>
 <sect1 xml:id="app.deploy.cisco.requirements">
  <title>Requirements</title>

  <para>
   The following requirements must be met to use Cisco Nexus switches with
   &o_netw;:
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     Cisco Nexus series 3000, 5000 or 7000
    </para>
   </listitem>
   <listitem>
    <para>
     All &compnode;s must be equipped with at least two network cards.
    </para>
   </listitem>
   <listitem>
    <para>
     The switch needs to have the XML management interface enabled. SSH
     access to the management interface must be enabled (refer to the
     switch's documentation for details).
    </para>
   </listitem>
   <listitem>
    <para>
     Enable VLAN trunking for all &o_netw; managed VLANs on the switch
     port to which the controller node running &o_netw; is connected to.
    </para>
   </listitem>
   <listitem>
    <para>
     If VLAN configurations for &o_netw; managed VLANs already exist on
     the switch (for example from a previous &cloud; deployment), you
     need to delete them via the switch's management interface prior to
     deploying &o_netw;.
    </para>
   </listitem>
   <listitem>
    <para>
     When using the Cisco plugin, &o_netw; reconfigures the VLAN trunk
     configuration on all ports used for the <literal>nova-fixed</literal>
     traffic (the traffic between the &vmguest;s). This requires to
     configure separate network interfaces exclusively used by
     <literal>nova-fixed</literal>. This can be achieved by adjusting
     <filename>/etc/crowbar/network.json</filename> (refer to
     <xref linkend="app.deploy.network_json"/>). The following example shows
     an appropriate configuration for dual mode, where
     <guimenu>nova-fixed</guimenu> has bee mapped to conduit
     <guimenu>intf1</guimenu> and all other networks to other conduits.
     Configuration attributes not relevant in this context have been
     replaced with <literal>...</literal>.
    </para>
    <example>
     <title>Exclusively Mapping <guimenu>nova-fixed</guimenu> to conduit <guimenu>intf1</guimenu> in dual mode</title>
<screen>{
   "attributes" : {
      "network" : {
         "conduit_map" : [
            <replaceable>...</replaceable>
         ],
         "mode" : "single",
         "networks" : {
            "nova_fixed" : {
              <replaceable>...</replaceable>,
              "conduit" : "intf1"
            },
            "nova_floating" : {
              <replaceable>...</replaceable>,
              "conduit" : "intf0"
            },
            "public" : {
              <replaceable>...</replaceable>,
              "conduit" : "intf0"
            },
            "storage" : {
              <replaceable>...</replaceable>,
              "conduit" : "intf0"
            },
            "os_sdn" : {
              <replaceable>...</replaceable>,
              "conduit" : "intf0"
            },
            "admin" : {
              <replaceable>...</replaceable>,
              "conduit" : "intf0"
            },
            "bmc" : {
              <replaceable>...</replaceable>,
              "conduit" : "bmc"
            },
            "bmc_vlan" : {
              <replaceable>...</replaceable>,
              "conduit" : "intf2"
            },
         },
         <replaceable>...</replaceable>,
      },
   }
}</screen>
    </example>
   </listitem>
   <listitem>
    <para>
     Make a note of all switch ports to which the interfaces using the
     <literal>nova-fixed</literal> network on the &compnode;s are
     connected. This information will be needed when deploying &o_netw;.
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 xml:id="app.deploy.cisco.deploy">
  <title>Deploying &o_netw; with the Cisco Plugin</title>

  <procedure>
   <step>
    <para>
     Create a &o_netw; &barcl; proposal in the &crow; Web
     interface.
    </para>
   </step>
   <step>
    <para>
     Select <guimenu>cisco</guimenu> as the <guimenu>Plugin</guimenu> and
     <guimenu>vlan</guimenu> for <guimenu>Mode</guimenu>.
    </para>
   </step>
   <step>
    <para>
     The <guimenu>Cisco Switch Credentials</guimenu> table will be faded
     out. Enter the <guimenu>IP Address</guimenu>, the SSH
     <guimenu>Port</guimenu> number and the login credentials for the
     switch's management interface. If you have multiple switches, open a
     new row in the table by clicking <guimenu>Add</guimenu> and enter the
     data for another switch.
    </para>
    <figure>
     <title>The &o_netw; &barcl;: Cisco Plugin</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="depl_barclamp_network_cisco.png" width="100%" format="png"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="depl_barclamp_network_cisco.png" width="75%" format="png"/>
      </imageobject>
     </mediaobject>
    </figure>
   </step>
   <step>
    <para>
     Choose whether to encrypt public communication
     (<guimenu>HTTPS</guimenu>) or not (<guimenu>HTTP</guimenu>). If
     choosing <guimenu>HTTPS</guimenu>, refer to
     <xref linkend="sec.depl.ostack.keystone.ssl"/> for configuration
     details.
    </para>
   </step>
   <step>
    <para>
     Choose a node for deployment and <guimenu>Apply</guimenu> the proposal.
    </para>
   </step>
   <step>
    <para>
     Deploy &o_comp; (see <xref linkend="sec.depl.ostack.nova"/>),
     &o_dash; (see <xref linkend="sec.depl.ostack.dash"/> and all other
     remaining &barcl;s.
    </para>
   </step>
   <step>
    <para>
     When all &barcl;s have been deployed, return to the &o_netw;
     &barcl; by choosing <menuchoice> <guimenu>Barclamps</guimenu>
     <guimenu>OpenStack</guimenu> <guimenu>Neutron</guimenu>
     <guimenu>Edit</guimenu> </menuchoice>. The proposal now contains an
     additional table named <guimenu>Assign Switch Ports</guimenu>, listing
     all &compnode;s.
    </para>
    <para>
     For each &compnode; enter the switch it is connected to and the port
     number from the notes you took earlier. The values need to be entered
     like the following: <literal>1/13</literal> or
     <literal>Eth1/20</literal>.
    </para>
   </step>
   <step>
    <para>
     When you have entered the data for all &compnode;s, re-apply the
     proposal.
    </para>
    <important>
     <title>Deploying Additional &compnode;s</title>
     <para>
      Whenever you deploy additional &compnode;s to an active &cloud;
      deployment using the Cisco plugin with &o_netw;, you need to update
      the &o_netw; &barcl; proposal by entering their port data as
      described in the previous step.
     </para>
    </important>
   </step>
  </procedure>

  <note>
   <title>Verifying the Setup</title>
   <para>
    To verify if &o_netw; was correctly deployed, do the following:
   </para>
   <orderedlist spacing="normal">
    <listitem>
     <para>
      Launch an &vmguest; (refer to the &clouduser;, chapter
      <citetitle>Launch instances</citetitle>
<!--<xref linkend="sec.user.dash.inst.launch"/>-->
      for instructions).
     </para>
    </listitem>
    <listitem>
     <para>
      Find out which VLAN was assigned to the network by running the command
      <command>neutron net-show fixed</command>. The result lists a
      <guimenu>segmentation_id</guimenu> matching the VLAN.
     </para>
    </listitem>
    <listitem>
     <para>
      Log in to the switch's management interface and list the VLAN
      configuration. If the setup was deployed correctly, the port of the
      &compnode; the &vmguest; is running on, is in trunk mode for the
      matching VLAN.
     </para>
    </listitem>
   </orderedlist>
  </note>
 </sect1>
</appendix>
