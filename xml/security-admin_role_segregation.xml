<?xml version="1.0"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE chapter [
 <!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="roleSegregation">
 <title>&kw-hos-tm;: Service Admin Role Segregation in the Identity Service</title>
 <section xml:id="idg-all-security-admin_role_segregation-xml-6">
  <title>Overview</title>
  <para>
   Under the default &ostack; user policies, a user can have either member
   privilege or admin privilege. Admin privilege is assigned by creating a user
   account with the role of admin. However, the default admin role is too broad
   and often grants users more privilege than they need, giving them access to
   additional tasks and resources that they should not have.
  </para>
  <para>
   Ideally, each user account should only be assigned privileges necessary to
   perform tasks they are required to perform. According to the widely accepted
   principle of least privilege, a user who needs to perform administrative
   tasks should have a user account with the privileges required to perform
   only those administrative tasks and no others. This prevents the granting of
   too much privilege while retaining the individual accountability of the
   user.
  </para>
  <para>
   Service Administrator Roles is an alternative to the current
   one-size-fits-all admin role model and can help you institute different
   privileges for different administrators.
  </para>
 </section>
 <section>
  <title>Pre-Installed Service Admin Role Components</title>
  <para>
   The main components of Service Administrator Roles are:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     <literal>nova_admin</literal> role in the identity service (&o_ident;) and
     support in <filename>nova_policy.json</filename>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>neutron_admin</literal> role in the identity service and support
     in <filename>neutron_policy.json</filename>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>cinder_admin</literal> role in the identity service and support
     in <filename>cinder_policy.json</filename>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>swiftoperator</literal> role in the identity service, defined in
     the <literal>keystoneauth</literal> section of the
     <filename>proxy-server.conf</filename> file.
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>glance_admin</literal> role in the identity service and support
     in <filename>glance_policy.json</filename>
    </para>
    <warning>
     <title>
      Changing <filename>glance_policy.json</filename> may Introduce a
      Security Issue
     </title>
     <para>
      A security issue is described in the OpenStack Security Note OSSN-0075
      <link xlink:href="https://wiki.openstack.org/wiki/OSSN/OSSN-0075"/>. It
      refers to a scenario where a malicious tenant is able to reuse deleted
      &o_img; image IDs to share malicious images with other tenants in a
      manner that is undetectable to the victim tenant.
     </para>
     <para>
      The default policy <filename>glance_policy.json</filename> that is
      shipped with &productname; prevents this by ensuring only admins can
      deactivate/reactivate images:
     </para>
     <screen>"deactivate": "role:admin"
"reactivate": "role:admin"</screen>
     <para>
      It is suggested to <emphasis>not</emphasis> change these settings. If you
      do change them, please refer to the OSSN-0075 <link
      xlink:href="https://wiki.openstack.org/wiki/OSSN/OSSN-0075"/>. This
      reference has details about on the exact scope of the security issue.
     </para>
    </warning>
    <para>
     The &ostack; <literal>admin</literal> user has broad capabilities to
     administer the cloud, including &o_comp;, &o_netw;, &o_blockstore;,
     &o_objstore;, and &o_img;. This is maintained to ensure backwards
     compatilibity, but if separation of duties is desired among administrative
     staff then the &ostack; roles may be partitioned across different
     administrators. For example, it is possible to have a set of network
     administrators with the <literal>neutron_admin</literal> role, a set of
     storage administrators with the <literal>cinder_admin</literal> and/or
     <literal>swiftoperator</literal> roles, and a set of compute
     administrators with the <literal>nova_admin</literal> and
     <literal>glance_admin</literal> roles.
    </para>
   </listitem>
  </itemizedlist>
 </section>
 <section>
  <title>Features and Benefits</title>
  <para>
   Service Administrator Roles offer the following features and benefits:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     Support separation of duties through more granular roles
    </para>
   </listitem>
   <listitem>
    <para>
     Are enabled by default
    </para>
   </listitem>
   <listitem>
    <para>
     Are backwards compatible
    </para>
   </listitem>
   <listitem>
    <para>
     Have predefined service administrator roles in the identity service
    </para>
   </listitem>
   <listitem>
    <para>
     Have predefined <filename>policy.json</filename> files with corresponding
     service admin roles to facilitate quick and easy deployment
    </para>
   </listitem>
  </itemizedlist>
 </section>
 <section>
  <title>Roles</title>
  <para>
   The following are the roles defined in &kw-hos-phrase;. These roles serve as
   a way to group common administrative needs at the &ostack; service level.
   Each role represents administrative privilege into each service. Multiple
   roles can be assigned to a user. You can assign a Service Admin Role to a
   user once you have determined that the user is authorized to perform
   administrative actions and access resources in that service.
  </para>
  <para>
   <emphasis role="bold">Pre-Installed Service Admin Roles</emphasis>
  </para>
  <para>
   The following service admin roles exist by default:
  </para>
  <variablelist>
   <varlistentry>
    <term>nova_admin role</term>
    <listitem>
     <para>
      Assign this role to users whose job function it is to perform &o_comp;
      compute-related administrative tasks.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>neutron_admin role</term>
    <listitem>
     <para>
      Assign this role to users whose job function it is to perform &o_netw;
      networking-related administrative tasks.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>cinder_admin role</term>
    <listitem>
     <para>
      Assign this role to users whose job function it is to perform &o_blockstore;
      storage-related administrative tasks.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>glance_admin role</term>
    <listitem>
     <para>
      Assign this role to users whose job function it is to perform &o_img;
      image service-related administrative tasks.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   For configuration steps, see
   <xref linkend="CreateCloudAdmin"/>.
  </para>
 </section>
</chapter>
