<?xml version="1.0"?>
<!DOCTYPE section [
 <!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<!---->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="central_log_manage"><title>&kw-hos-tm; &kw-hos-version-50;: Managing the Centralized Logging Feature</title>
    <sidebar xml:id="running_overview"><para>No specific configuration tasks are required to use Centralized Logging, as it is enabled
        by default after installation. However, you can configure the individual components as
        needed for your environment. 
      </para>
</sidebar>
    
    <sidebar xml:id="CL_stop_start"><title>How Do I Stop and Start the Logging Service?</title><para>Although you might not need to stop and start the logging service very often, you may need
        to if, for example, one of the logging services is not behaving as expected or not working. </para>
<para>You cannot enable or disable centralized logging across all services unless you stop all
        centralized logging. Instead, it is recommended that you enable or disable individual log
        files in the &lt;service&gt;-clr.yml files and then reconfigure logging. You would enable
        centralized logging for a file when you want to make sure you are able to monitor those logs
        in Kibana.</para>
<para><emphasis role="bold">NEW in 4.0</emphasis>: In &kw-hos-phrase; the logging-ansible restart
        playbook has been updated to manage the start,stop, and restart of the Centralized Logging
        Service in a specific way. This change was made to ensure the proper stop, start, and
        restart of Elasticsearch. </para>
<important><para>It is recommended that you only use the
          logging playbooks to perform the start, stop, and restart of the Centralized Logging
          Service. Manually mixing the start, stop, and restart operations with the logging
          playbooks will result in complex failures.</para>
</important>
<para>The steps in this section only impact centralized logging. Logrotate is an essential
        feature that keeps the service log files from filling the disk and will not be affected.
          </para>
<important><para>These playbooks must be run from the &kw-hos;
          lifecycle manager.</para>
</important>
<para><emphasis role="bold">To stop the Logging service:</emphasis></para>
<orderedlist>
        <listitem><para>To change to the directory containing the ansible playbook, run
          </para>
<screen>cd ~/scratch/ansible/next/hos/ansible</screen></listitem>
        <listitem><para>To run the ansible playbook that will stop the logging service, run:
          </para>
<screen>ansible-playbook -i hosts/verb_hosts logging-stop.yml</screen></listitem>
      </orderedlist><para><emphasis role="bold">To start the Logging service:</emphasis></para>
<orderedlist>
        <listitem><para>To change to the directory containing the ansible playbook, run
          </para>
<screen>cd ~/scratch/ansible/next/hos/ansible</screen></listitem>
        <listitem><para>To run the ansible playbook that will stop the logging service, run:
          </para>
<screen>ansible-playbook -i hosts/verb_hosts logging-start.yml</screen></listitem>
      </orderedlist></sidebar>
    <literallayout class="normal">
  
  </literallayout>
    <sidebar xml:id="CL_disable"><title>How Do I Enable or Disable Centralized Logging For a Service?</title><para>To enable or disable Centralized Logging for a service you need to modify the configuration
        for the service, set the <emphasis role="bold">enabled</emphasis> flag to <emphasis role="bold">true</emphasis> or <emphasis role="bold">false</emphasis>, and then
        reconfigure logging.</para>
<important><para>There are consequences if you enable too many logging files for a
        service. If there isn’t enough storage to support the increased logging, the retention
        period of logs in Elasticsearch is decreased. Alternatively, if you wanted to increase the
        retention period of log files or if you didn’t want those logs to show up in Kibana, you
        would disable centralized logging for a file. </para>
</important><para>To enable Centralized Logging for a service:</para>
<orderedlist>
        <listitem><para>Use the documentation provided with the service to ensure it is not configured for
          logging.</para>
</listitem>
        <listitem><para>To find the &kw-hos; file to edit, run:
          </para>
<screen>find ~/helion/my_cloud/config/logging/vars/ -name "*&lt;service-name&gt;*"</screen></listitem>
        <listitem><para>Edit the file for the service for which you want to enable logging.</para>
</listitem>
        <listitem><para>To enable Centralized Logging, find the following code and change the enabled flag to
            <emphasis role="bold">true</emphasis>, to disable, change the enabled flag to <emphasis role="bold">false</emphasis>:
          </para>
<screen>logging_options:
 - centralized_logging:
        enabled: true
        format: json</screen></listitem>
        <listitem><para>Save the changes to the file.</para>
</listitem>
        <listitem><para>To commit the changes to your local git repository:
          </para>
<screen>cd ~/helion/hos/ansible
git add -A 
git commit -m "My config or other commit message"</screen></listitem>
        <listitem><para>To reconfigure logging, run:
          </para>
<screen>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts kronos-reconfigure.yml
cd ~/helion/hos/ansible/
ansible-playbook -i hosts/localhost config-processor-run.yml
ansible-playbook -i hosts/localhost ready-deployment.yml</screen></listitem>
      </orderedlist><para>Sample of a Freezer file enabled for Centralized logging:
        </para>
<screen >---
sub_service:
   hosts: FRE-AGN
   name: freezer-agent
   service: freezer
   monitoring:
      enabled: true
      external_name: backup
      logging_dir: /var/log/freezer-agent
   logging_options:
     - files:
        - /var/log/freezer-agent/freezer-agent.log
        - /var/log/freezer-agent/freezer-scheduler.log
        - centralized_logging:
           enabled: true
           format: json</screen>
</sidebar>

  </section>
