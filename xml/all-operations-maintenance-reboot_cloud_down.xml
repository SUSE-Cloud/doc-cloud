<?xml version="1.0"?>
<!DOCTYPE section [
 <!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<!---->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="stop_restart"><title>&kw-hos-tm; &kw-hos-version-50;: Bringing Down Your Cloud: Services Down
    Method</title><abstract><para><para>If you have a planned maintenance and need to bring
      down your entire cloud follow the steps below to safely do so. Be mindful that this method
      will bring down all of your services.</para></para>
</abstract>
    <!---->
    <para><para xml:id="idg-all-operations-maintenance-reboot_cloud_down-xml-4"><phrase><phrase/></phrase></para></para>

    <sidebar xml:id="idg-all-operations-maintenance-reboot_cloud_down-xml-6"><para>If you have a planned maintenance and need to bring down your entire cloud, follow the
        steps below to safely do so. Be mindful that this method will bring down all of your
        services. If you wish to use a method utilizing rolling reboots where your cloud services
        will continue running then see <xref linkend="rebootNodes"/>.</para>
<para>If you wish to do any backups prior to these steps, visit the backup and restore pages
        first at <xref linkend="bura_overview"/>.</para>
</sidebar>
    <sidebar xml:id="idg-all-operations-maintenance-reboot_cloud_down-xml-7"><title>Gracefully Bringing Down and Restarting Your Cloud
        Environment</title><para>You will do the following steps from your lifecycle manager.</para>
<orderedlist>
        <listitem><para>Log in to your lifecycle manager.</para>
</listitem>
        <listitem><para>Gracefully shut down your cloud by running the <literal>hlm-stop.yml</literal> playbook:
          </para>
<screen>cd ~/scratch/ansible/next/hos/ansible
            ansible-playbook -i hosts/verb_hosts hlm-stop.yml</screen></listitem>
        <listitem><para>Shut down your nodes. You should shut down your controller nodes last and bring them up
          first after the maintenance. </para>
<para>There are multiple ways you can do this:</para>
<orderedlist>
            <listitem><para>You can SSH to each node and use <literal>sudo reboot -f</literal> to reboot the
              node.</para>
</listitem>
            <listitem><para>From the lifecycle manager, you can use the <literal>bm-power-down.yml</literal> and
                <literal>bm-power-up.yml</literal> playbooks.</para>
</listitem>
            <listitem><para>You can shutdown the nodes and then physically restart them either via a power
              button or the iLO.</para>
</listitem>
          </orderedlist></listitem>
        <listitem><para>Perform the necessary maintenance.</para>
</listitem>
        <listitem><para>After the maintenance is complete, power your lifecycle manager back up and then SSH to
          it.</para>
</listitem>
        <listitem><para>Determine the current power status of the nodes in your environment:
          </para>
<screen>cd ~/scratch/ansible/next/hos/ansible
            ansible-playbook -i hosts/verb_hosts bm-power-status.yml</screen></listitem>
        <listitem><para>If necessary, power up any nodes that aren't already powered up, ensuring that you power
          up your controller nodes first. You can target specific nodes with the <literal>-e
            nodelist=&lt;node_name&gt;</literal>
            switch.</para>
<screen>cd ~/scratch/ansible/next/hos/ansible
            ansible-playbook -i hosts/verb_hosts bm-power-up.yml [-e nodelist=&lt;node_name&gt;]</screen></listitem>
        <listitem><para>Bring the databases back up:
          </para>
<screen>cd ~/scratch/ansible/next/hos/ansible
            ansible-playbook -i hosts/verb_hosts percona-bootstrap.yml</screen></listitem>
        <listitem><para>Gracefully bring up your cloud services by running the <literal>hlm-start.yml</literal>
          playbook:</para>
<screen>cd ~/scratch/ansible/next/hos/ansible
            ansible-playbook -i hosts/verb_hosts hlm-start.yml</screen></listitem>
        <listitem><para>Pause for a few minutes and give the cloud environment time to come up completely and
          then verify the status of the individual services using this
          playbook:</para>
<screen>cd ~/scratch/ansible/next/hos/ansible
            ansible-playbook -i hosts/verb_hosts hlm-status.yml</screen></listitem>
        <listitem><para>If any services did not start properly, you can run playbooks for the specific services
          having issues. </para>
<para>For example:</para>
<para>If RabbitMQ fails,
            run:</para>
<screen>cd ~/scratch/ansible/next/hos/ansible
              ansible-playbook -i hosts/verb_hosts rabbitmq-start.yml</screen><para>You
            can check the status of RabbitMQ afterwards with
            this:</para>
<screen>cd ~/scratch/ansible/next/hos/ansible
                  ansible-playbook -i hosts/verb_hosts rabbitmq-status.yml</screen><para>If
            the recovery had failed, you can
            run:</para>
<screen>cd ~/scratch/ansible/next/hos/ansible
                      ansible-playbook -i hosts/verb_hosts rabbitmq-disaster-recovery.yml</screen><para>Each
            of the other services have playbooks in the
              <literal>~/scratch/ansible/next/hos/ansible</literal> directory in the format of
              <literal>&lt;service&gt;-start.yml</literal> that you can run. One example, for the compute
            service, is <literal>nova-start.yml</literal>.</para>
</listitem>
        <listitem><para>Continue checking the status of your &kw-hos-phrase; cloud services
          until there are no more failed or unreachable nodes:
          </para>
<screen>cd ~/scratch/ansible/next/hos/ansible
            ansible-playbook -i hosts/verb_hosts hlm-status.yml</screen></listitem>
      </orderedlist></sidebar>
  </section>
