<?xml version="1.0"?>
<!DOCTYPE section [
 <!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<!---->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="Quickstart_Guide"><title>&kw-hos-tm; &kw-hos-version-50;: &kw-hos; Quickstart
        Guide</title>
        <sidebar><title>Introduction</title><para>This document provides simplified
                instructions
                 for
                installing and setting up a &kw-hos; cloud. Use this quickstart
                guide to build testing, demonstration, and lab-type environments, rather than
                production installations. When you complete this quickstart process, you will have a
                fully functioning &kw-hos; demo environment.</para>
</sidebar>
        <sidebar><title>Overview of components</title><para>The following are short descriptions of the components that &kw-hos; employs when installing and deploying your cloud.</para>
<para><emphasis role="bold">Ansible</emphasis><para>Ansible is a powerful configuration mangament tool used by
                        &kw-hos; to manage nearly all aspects of your cloud
                    infrastructure. Most commands in this quickstart guide execute Ansible scripts,
                    known as playbooks. You will run playbooks that install packages, edit
                    configuration files, manage network settings, and take care of the general
                    administration tasks required to get your cloud up and running. </para><para>Get more
                    information on Ansible at <link xlink:href="https://www.ansible.com/"/>.</para><para/><emphasis role="bold">Cobbler</emphasis><para>Cobbler is another third-party tool used by Helion
                    OpenStack to deploy operating systems across the physical servers that make up
                    your cloud. Find more info at <link xlink:href="http://cobbler.github.io/"/>.</para><para/><emphasis role="bold">Git</emphasis><para>Git is the version control system used to manage the
                    configuration files that define your cloud. Any changes made to your cloud
                    configuration files must be committed to the locally hosted git repository to
                    take effect. Read more information on Git at <link xlink:href="https://git-scm.com/"/>.</para><para/><para/></para>
</sidebar>
        <sidebar><title>Preparation</title><para>Successfully deploying a &kw-hos; cloud environment is a large but
                not complicated endeavor. For a successful deployment, you must put a number of
                components
                in place before rolling out your cloud. Most importantly, a basic &kw-hos; cloud requires the proper network infrastrucure. Because
                    &kw-hos; segregates the network traffic of many of its
                elements, if the necessary networks, routes,
                and firewall access rules aren't in place, communication required
                for a successful deployment will not occur.</para>
</sidebar>
        <sidebar xml:id="section_v5g_dvv_xw"><title>Getting started</title><para>When your network infrastructure is in place, go ahead and set up the lifecycle
                manager. This is the server that will orchestrate the deployment of the rest of your
                cloud. It's also the server you will run most of your deployment and management
                commands on.</para>
<para><emphasis role="bold">Set up the lifecycle manager</emphasis><para/><emphasis role="bold">Step 1: Download the installation
                    media</emphasis><para>Obtain
                    a copy of the &kw-hos; installation
                    media,
                    and
                    make sure that it's accessible by the server that you're installing it on. Your
                    method of doing this may vary. For instance, some may choose to load the
                    installation ISO on a USB drive and physically attach it to the server, while
                    others may run the HPE iLO Remote Console and attach the ISO to a virtual disc
                    drive.</para><para/><para/><para/><emphasis role="bold">Step 2: Install the operating system</emphasis><para><orderedlist xml:id="ol_jrw_fsj_fx">
                        <listitem><para>Boot your server, using the installation media as the boot source.</para></listitem>
                        <listitem><para>Choose "install" from the list of options and choose your preferred
                            keyboard layout, location, language, and other settings.</para></listitem>
                        <listitem><para>Set the address, netmask, and gateway for the primary network
                            interface.</para></listitem>
                        <listitem><para>Create a root user account.</para></listitem>
                    </orderedlist></para><para/><para>Proceed with the OS
                    installation. After the installation is complete and the server has rebooted
                    into the new OS, log in with the user account you created.
                        </para><para/><para/><para/><para><emphasis role="bold">Step 3: Configure the new server</emphasis></para><para><orderedlist xml:id="ol_fxr_ksj_fx">
                        <listitem><para>SSH to your new server, and set a valid DNS nameserver in the
                                <literal>/etc/resolv.conf</literal> file.</para></listitem>
                        <listitem><para>Set the environment variable
                            <literal>LC_ALL</literal>:</para><screen>export LC_ALL=C</screen></listitem>
                    </orderedlist></para><para/><para/><para>You now have a server running Linux for HPE Helion. The next step is
                    to configure this machine as a lifecycle manager.</para><para/><para/><para/><para><emphasis role="bold">Step 4:
                        Configure the lifecycle manager</emphasis></para><para>The installation media you used to
                    install the OS on the server also has the files that will configure your cloud. You
                    need
                    to mount this installation media on your new server
                    in
                    order to use these files. </para><para><orderedlist xml:id="ol_lsd_qsj_fx">
                        <listitem><para>Using the URL that you obtained the &kw-hos;
                            installation media from, run <literal>wget</literal> to download the ISO
                            file to your
                            server:</para><screen>wget &lt;URL for &kw-hos; installation ISO&gt;</screen></listitem>
                        <listitem><para>Now mount the ISO
                            in
                            the <literal>/media/cdrom/</literal> directory
                            (substitute
                            HelionOpenStack-x.x-iso
                            with
                            the name of the ISO file you just
                            downloaded):</para><screen>sudo mount HelionOpenStack-x.x-iso /media/cdrom/</screen></listitem>
                        <listitem><para>Next, 
                            unpack the tar
                            file
                            found in the <literal>/media/cdrom/hos/</literal>
                            directory that
                            you
                            just mounted the
                            ISO:</para><screen>tar xvf /media/cdrom/hos/hos-x.x.x-x.tar</screen></listitem>
                        <listitem><para>Now
                            you'll
                            install
                            and
                            configure all the
                            componentsneeded
                            to turn this server into a lifecycle manager. Run the
                                <literal>hos-init.bash</literal> script from the uncompressed tar
                                file:</para><screen>~/hos-x.x.x/hos-init.bash</screen><para/><para>The
                                    <literal>hos-init.bash</literal> script prompts you to enter an
                                optional SSH passphrase. This passphrase protects the RSA key used
                                to SSH to the other cloud nodes. This is an optional passphrase, and
                                you can skip it by pressing Enter at the prompt.</para><para>The
                                    <literal>hos-init.bash</literal> script automatically installs and
                                configures everything needed to set up this server as the lifecycle
                                manager for your cloud.</para><para>When the script has finished running,
                                you can proceed to the next step, editing your input files.</para></listitem>
                    </orderedlist></para><para/><para/><para/><emphasis role="bold">Step 5: Edit your input files</emphasis><para>Your Helion
                        OpenStack input files are where you define
                        
                        your cloud
                        infrastructure
                        and how it runs. The input files define options such as which servers are
                        included in your cloud, the type of disks the servers use, and their network
                        
                        configuration. The input files also define which services your cloud will
                        provide and use, the network architecture, and the storage backends for your
                        cloud.</para><para/><para/><para>HPE provides a number of example configurations, which
                        you can find on
                        your
                        lifecycle manager in the <literal>~/helion/examples/</literal> directory. </para><para><orderedlist xml:id="ol_kyd_ctj_fx">
                            <listitem><para>The simplest way to set up your cloud is to copy the contents of one
                                of these example configurations to your
                                    <literal>~/helion/mycloud/definition/</literal> directory. You can
                                then edit the copied files and define your
                                cloud.</para><para/><screen>cp -r ~/helion/examples/&lt;your_chosen_example&gt;/* ~/helion/my_cloud/definition/</screen></listitem>
                            <listitem><para>Edit the files in your
                                    <literal>~/helion/my_cloud/definition/</literal> directory to
                                define
                                your cloud.</para></listitem>
                        </orderedlist></para><para/><para/><para/><para><emphasis role="bold">Step
                            6: Commit your changes</emphasis></para><para><literallayout class="normal">Now  commit your changes to the local Git repository.  
</literallayout></para></para>
<orderedlist xml:id="ol_byq_ktj_fx">
                        <listitem><para>When you're finished editing the necessary input files, stage them, and
                            then commit the changes to the local
                            repository:</para>
<screen>cd ~/helion/hos/ansible
git add -A
git commit -m "My commit message"</screen></listitem>
                    </orderedlist>
<para><para/><para/><para/><emphasis role="bold">Step
                            7:
                            Image your servers</emphasis><para>Now that you've finished editing your input
                            files, you can deploy the configuration to the servers that will
                            comprise your cloud.</para><para/><para/><para><orderedlist xml:id="ol_hns_mtj_fx">
                                <listitem><para>First, you need to image the servers. You will install the
                                    hLinux (Linux for HPE) operating system across all the servers
                                    in your cloud, using Ansible playbooks to trigger the
                                    process.</para></listitem>
                                <listitem><literallayout class="normal">The following playbook confirms that your servers are accessible over their iLO ports, which is a prerequisite for the imaging process:</literallayout><screen>ansible-playbook -i hosts/localhost bm-power-status.yml</screen></listitem>
                                <listitem><para>Now validate that your cloud configuration files have proper
                                    YAML
                                    syntax
                                    by running
                                    
                                    the <literal>config-processor-run.yml</literal> playbook:</para><para><screen>ansible-playbook -i hosts/localhost config-processor-run.yml</screen></para><para/><para>If you receive an error when running the preceeding
                                        playbook, one or more of your configuration files has an
                                        issue. Refer to the output of the Ansible playbook, and look
                                        for clues in the Ansible log file, found at
                                            <literal>~/.ansible/ansible.log</literal>.</para></listitem>
                                <listitem><para>The next step is to prepare your imaging system, Cobbler, to
                                    deploy operating systems to all your cloud
                                    nodes:</para><screen>ansible-playbook -i hosts/localhost cobbler-deploy.yml</screen></listitem>
                                <listitem><para>Now you can image your cloud nodes. You will use an Ansible
                                    playbook to trigger Cobbler to deploy operating systems to all
                                    the nodes you specified in your input files:</para><screen>ansible-playbook -i hosts/localhost bm-reimage.yml</screen><para/><para>The
                                        <literal>bm-reimage.yml</literal>
                                        playbook performs the following
                                            operations:<orderedlist xml:id="ol_zdt_l2c_yw">
                                            <listitem><para>Powers down the servers.</para></listitem>
                                            
                                            <listitem><para>Sets
                                                the servers to boot from a network interface.</para></listitem>
                                            <listitem><para>Powers on the servers and performs a PXE OS
                                                installation.</para></listitem>
                                            <listitem><para>Waits for the servers to power themselves down as
                                                part of a successful OS installation. This can take
                                                some time.</para></listitem>
                                            <listitem><para>Sets
                                                the
                                                servers
                                                to boot from
                                                their
                                                local hard
                                                disks
                                                and powers on the servers.</para></listitem>
                                            <listitem><para>Waits for the SSH service to start on the servers
                                                and verifies that they have the expected host-key
                                                signature.</para></listitem>
                                        </orderedlist></para></listitem>
                            </orderedlist></para><para/><para/><para/><emphasis role="bold">Step
                            8:
                            Deploy your cloud</emphasis><para>Now that your servers are running the hLinux
                            operating system, it's time to configure them for the roles they'll play
                            in your new cloud. </para><para/><para/><para><orderedlist xml:id="ol_xyk_wtj_fx">
                                <listitem><para>First, prepare the lifecycle manager to deploy your cloud
                                    configuration to all the nodes:</para><screen>ansible-playbook -i hosts/localhost ready-deployment.yml</screen><para/><para>NOTE:
                                        The
                                        preceding playbook creates a new directory,
                                            <literal>~/scratch/ansible/next/hos/ansible/</literal>,
                                        from which you will run many of the following
                                    commands.</para></listitem>
                                <listitem><para>[Optional] If you're reusing servers or disks to run your cloud,
                                    you can wipe the disks of your newly imaged servers by running
                                    the <literal>wipe_disks.yml</literal> playbook: </para><para><screen>cd ~/scratch/ansible/next/hos/ansible/
ansible-playbook -i hosts/verb_hosts wipe_disks.yml</screen></para><para/><para>The <literal>wipe_disks.yml</literal> playbook removes
                                        any existing data from the drives on your new servers. This
                                        can be helpful if you're reusing servers or disks. This
                                        action will not affect the OS partitions on the
                                    servers.</para></listitem>
                                <listitem><para>Now it's time to deploy your cloud. Do this by running the
                                        <literal>site.yml</literal> playbook, which pushes the
                                    configuration you defined in the input files out to all the
                                    servers that will host your cloud.</para><para><screen>cd ~/scratch/ansible/next/hos/ansible/
ansible-playbook -i hosts/verb_hosts site.yml</screen></para><para/><para>The <literal>site.yml</literal> playbook installs
                                        packages, starts services, configures network interface
                                        settings, sets
                                        iptables
                                        firewall rules, and more. Upon successful completion of this
                                        playbook, your &kw-hos; cloud will be in
                                        place and in a running state. This playbook can take up to
                                        six hours to complete, so
                                        sit
                                        back, relax,
                                        and
                                        pat yourself on the back!</para></listitem>
                            </orderedlist></para><para/><para/><para/><emphasis role="bold">Step
                    9:
                    SSH to your nodes</emphasis><para>Now that you've successfully run
                        <literal>site.yml</literal>, your cloud will be up and running. You can verify
                    connectivity to your nodes by connecting to each one by using SSH. You can find
                    the IP addresses of your nodes by viewing the <literal>/etc/hosts</literal>
                    file.</para><para/><para/><para>Note that, for security reasons, you can only SSH to your
                    nodes from the lifecycle manager. SSH connections from any machine other than
                    the lifecycle manager will be refused by the nodes.</para><para/><para/><para><orderedlist xml:id="ol_pmp_f5j_fx">
                        <listitem><para>From the lifecycle manager, SSH to your nodes:</para><para><screen>ssh &lt;management IP address of node&gt;</screen></para></listitem>
                    </orderedlist></para><para/><para>Also note that SSH is limited to your cloud's management network. Each
                    node has an address on the management network, and you can find this address by
                    reading the <literal>/etc/hosts</literal> or <literal>server_info.yml</literal>
                    file.</para></para>
</sidebar>
    </section>
