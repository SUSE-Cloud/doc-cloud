<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter
[
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="sec.depl.adm_inst.crowbar">
 <info>
  <title>&crow; Setup</title>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:maintainer>fs</dm:maintainer>
   <dm:status>editing</dm:status>
   <dm:deadline/>
   <dm:priority/>
   <dm:translation>no</dm:translation>
   <dm:languages/>
  </dm:docmanager>
  <abstract>
   <para>
    The &yast; &crow; module enables you to configure all networks within the
    cloud, to set up additional repositories, and to manage the &crow; users.
    This module should be launched before starting the &inst_crow;. To start
    this module, either run <command>yast crowbar</command> or <menuchoice>
    <guimenu>&yast;</guimenu> <guimenu>Miscellaneous</guimenu>
    <guimenu>Crowbar</guimenu> </menuchoice>.
   </para>
  </abstract>
 </info>
 <sect1 xml:id="sec.depl.adm_inst.crowbar.user">
  <title><guimenu>User Settings</guimenu></title>

  <para>
   In this section, you can manage users for the &crow; Web interface. The user
   <systemitem class="username">crowbar</systemitem> (password
   <literal>crowbar</literal>) is preconfigured. Use the
   <guimenu>Add</guimenu>, <guimenu>Edit</guimenu>, and
   <guimenu>Delete</guimenu> buttons to manage user accounts. Users configured
   here have no relation to existing system users on the &admserv;.
  </para>

  <figure>
   <title>&yast; &crow; Setup: User Settings</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="yast_crowbar_user.png" format="png" width="100%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="yast_crowbar_user.png" format="png"/>
    </imageobject>
   </mediaobject>
  </figure>
 </sect1>
 <sect1 xml:id="sec.depl.adm_inst.crowbar.network">
  <title><guimenu>Networks</guimenu></title>

  <para>
   Use the <guimenu>Networks</guimenu> tab to change the default network setup
   (described in <xref linkend="sec.depl.req.network"/>). Change the IP address
   assignment for each network under <guimenu>Edit Ranges</guimenu>. You may
   also add a bridge (<guimenu>Add Bridge</guimenu>) or a VLAN (<guimenu>Use
   VLAN</guimenu>, <guimenu>VLAN ID</guimenu>) to a network. Only change the
   latter two settings if you really know what you require; we recommend
   sticking with the defaults.
  </para>

  <figure>
   <title>&yast; &crow; Setup: Network Settings</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="yast_crowbar_networks.png" format="png" width="100%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="yast_crowbar_networks.png" format="png"/>
    </imageobject>
   </mediaobject>
  </figure>

  <warning>
   <title>No Network Changes After Completing the &inst_crow;</title>
   <para>
    After you have completed the &inst_crow;, you cannot change the network
    setup. If you do need to change it, you must completely set up the
    &admserv; again.
   </para>
  </warning>

  <important>
   <title>VLAN Settings</title>
   <para>
    As of &productname; &productnumber;, using a VLAN for the admin network is
    only supported on a native/untagged VLAN. If you need VLAN support for the
    admin network, it must be handled at switch level.
   </para>
   <para>
    When changing the network configuration with &yast; or by editing
    <filename>/etc/crowbar/network.json</filename>, you can define VLAN
    settings for each network. For the networks <literal>nova-fixed</literal>
    and <literal>nova-floating</literal>, however, special rules apply:
   </para>
   <para>
    <emphasis role="bold">nova-fixed</emphasis>: The <guimenu>USE
    VLAN</guimenu> setting will be ignored. However, VLANs will automatically
    be used if deploying &o_netw; with VLAN support (using the drivers
    linuxbridge, openvswitch plus VLAN, or cisco_nexus). In this case, you need
    to specify a correct <guimenu>VLAN ID</guimenu> for this network.
   </para>
   <para>
    <emphasis role="bold">nova-floating</emphasis>: When using a VLAN for
    <literal>nova-floating</literal> (which is the default), the <guimenu>USE
    VLAN</guimenu> and <guimenu>VLAN ID</guimenu> settings for
    <guimenu>nova-floating</guimenu> and <guimenu>public</guimenu> default to
    the same.
   </para>
   <para>
    You have the option of separating public and floating networks with a
    custom configuration. Configure your own separate floating network (not as
    a subnet of the public network), and give the floating network its own
    router. For example, define <literal>nova-floating</literal> as part of an
    external network with a custom <literal>bridge-name</literal>. When you are
    using different networks and OpenVSwitch is configured, the pre-defined
    <literal>bridge-name</literal> won't work.
   </para>
  </important>

  <para>
   Other, more flexible network mode setups, can be configured by manually
   editing the &crow; network configuration files. See
   <xref linkend="sec.depl.inst.admserv.post.network"/> for more information.
   &suse; or a partner can assist you in creating a custom setup within the
   scope of a consulting services agreement. See
   <link xlink:href="http://www.suse.com/consulting/"/> for more information on
   &suse; consulting.
  </para>

  <sect2 xml:id="sec.depl.adm_inst.crowbar.network.bmc">
   <title>Separating the Admin and the BMC Network</title>
   <para>
    If you want to separate the admin and the BMC network, you must change the
    settings for the networks <guimenu>bmc</guimenu> and
    <guimenu>bmc_vlan</guimenu>. The <guimenu>bmc_vlan</guimenu> is used to
    generate a VLAN tagged interface on the &admserv; that can access the
    <guimenu>bmc</guimenu> network. The <guimenu>bmc_vlan</guimenu> needs to be
    in the same ranges as <guimenu>bmc</guimenu>, and <guimenu>bmc</guimenu>
    needs to have <guimenu>VLAN</guimenu> enabled.
   </para>
   <table>
    <title>Separate BMC Network Example Configuration</title>
    <tgroup cols="3">
     <colspec colnum="1" colname="1" colwidth="20*"/>
     <colspec colnum="2" colname="2" colwidth="40*"/>
     <colspec colnum="3" colname="3" colwidth="40*"/>
     <thead>
      <row>
       <entry>
        <para/>
       </entry>
       <entry align="center">
        <para>
         bmc
        </para>
       </entry>
       <entry align="center">
        <para>
         bmc_vlan
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>
        <para>
         Subnet
        </para>
       </entry>
       <entry namest="2" nameend="3" align="center">
        <para>
         <systemitem class="etheraddress">192.168.128.0</systemitem>
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Netmask
        </para>
       </entry>
       <entry namest="2" nameend="3" align="center">
        <para>
         <systemitem class="etheraddress">255.255.255.0</systemitem>
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Router
        </para>
       </entry>
       <entry namest="2" nameend="3" align="center">
        <para>
         <systemitem class="etheraddress">192.168.128.1</systemitem>
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Broadcast
        </para>
       </entry>
       <entry namest="2" nameend="3" align="center">
        <para>
         <systemitem class="etheraddress">192.168.128.255</systemitem>
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Host Range
        </para>
       </entry>
       <entry>
        <para>
         <systemitem class="etheraddress">192.168.128.10</systemitem> -
         <systemitem class="etheraddress">192.168.128.100</systemitem>
        </para>
       </entry>
       <entry>
        <para>
         <systemitem class="etheraddress">192.168.128.101</systemitem> -
         <systemitem class="etheraddress">192.168.128.101</systemitem>
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         VLAN
        </para>
       </entry>
       <entry namest="2" nameend="3" align="center">
        <para>
         yes
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         VLAN ID
        </para>
       </entry>
       <entry namest="2" nameend="3" align="center">
        <para>
         100
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Bridge
        </para>
       </entry>
       <entry namest="2" nameend="3" align="center">
        <para>
         no
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
   <figure>
    <title>&yast; &crow; Setup: Network Settings for the BMC Network</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="yast_crowbar_networks_bmc.png" format="png" width="100%"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="yast_crowbar_networks_bmc.png" format="png"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>
 </sect1>
 <sect1 xml:id="sec.depl.adm_inst.crowbar.mode">
  <title><guimenu>Network Mode</guimenu></title>

  <para>
   On the <guimenu>Network Mode</guimenu> tab you can choose between
   <guimenu>single</guimenu>, <guimenu>dual</guimenu>, and
   <guimenu>team</guimenu>. In single mode, all traffic is handled by a single
   Ethernet card. Dual mode requires two Ethernet cards and separates traffic
   for private and public networks. See
   <xref
   linkend="sec.depl.req.network.modes"/> for details.
  </para>

  <para>
   Team mode is similar to single mode, except that you combine several
   Ethernet cards to a “bond”. It is required for an &hasetup; of &cloud;.
   When choosing this mode, you also need to specify a <guimenu>Bonding
   Policy</guimenu>. This option lets you define whether to focus on
   reliability (fault tolerance), performance (load balancing), or a
   combination of both. You can choose from the following modes:
  </para>

  <variablelist>
   <varlistentry>
    <term><guimenu>0</guimenu> (balance-rr)</term>
    <listitem>
     <para>
      Default mode in &productname;. Packets are transmitted in round-robin
      fashion from the first to the last available interface. Provides fault
      tolerance and load balancing.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>1</guimenu> (active-backup)</term>
    <listitem>
     <para>
      Only one network interface is active. If it fails, a different interface
      becomes active. This setting is the default for &cloud;. Provides fault
      tolerance.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>2</guimenu> (balance-xor)</term>
    <listitem>
     <para>
      Traffic is split between all available interfaces based on the following
      policy: <literal>[(source MAC address XOR'd with destination MAC address
      XOR packet type ID) modulo slave count]</literal> Requires support from
      the switch. Provides fault tolerance and load balancing.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>3</guimenu> (broadcast)</term>
    <listitem>
     <para>
      All traffic is broadcast on all interfaces. Requires support from the
      switch. Provides fault tolerance.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>4</guimenu> (802.3ad)</term>
    <listitem>
     <para>
      Aggregates interfaces into groups that share the same speed and duplex
      settings. Requires <command>ethtool</command> support in the interface
      drivers, and a switch that supports and is configured for IEEE 802.3ad
      Dynamic link aggregation. Provides fault tolerance and load balancing.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>5</guimenu> (balance-tlb)</term>
    <listitem>
     <para>
      Adaptive transmit load balancing. Requires <command>ethtool</command>
      support in the interface drivers but no switch support. Provides fault
      tolerance and load balancing.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>6</guimenu> (balance-alb)</term>
    <listitem>
     <para>
      Adaptive load balancing. Requires <command>ethtool</command> support in
      the interface drivers but no switch support. Provides fault tolerance and
      load balancing.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   For a more detailed description of the modes, see
   <link
   xlink:href="https://www.kernel.org/doc/Documentation/networking/bonding.txt"/>.
  </para>

  <sect2 xml:id="sec.depl.adm_inst.crowbar.mode.bastion">
   <title>Setting Up a Bastion Network</title>
   <para>
    The <guimenu>Network Mode</guimenu> tab of the &yast; &crow; module also
    lets you set up a Bastion network. As outlined in
    <xref linkend="sec.depl.req.network"/>, one way to access the &admserv;
    from a defined external network is via a Bastion network and a second
    network card (as opposed to providing an external gateway).
   </para>
   <para>
    To set up the Bastion network, you need to have a static IP address for the
    &admserv; from the external network. The example configuration used below
    assumes that the external network from which to access the admin network
    has the following addresses. Adjust them according to your needs.
   </para>
   <table>
    <title>Example Addresses for a Bastion Network</title>
    <tgroup cols="2">
     <colspec colnum="1" colname="1" colwidth="60*"/>
     <colspec colnum="2" colname="2" colwidth="40*"/>
     <tbody>
      <row>
       <entry>
        <para>
         Subnet
        </para>
       </entry>
       <entry>
        <para>
         <systemitem class="etheraddress">10.10.1.0</systemitem>
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Netmask
        </para>
       </entry>
       <entry>
        <para>
         <systemitem class="etheraddress">255.255.255.0</systemitem>
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Broadcast
        </para>
       </entry>
       <entry>
        <para>
         <systemitem class="etheraddress">10.10.1.255</systemitem>
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Gateway
        </para>
       </entry>
       <entry>
        <para>
         <systemitem class="etheraddress">10.10.1.1</systemitem>
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         Static &admserv; address
        </para>
       </entry>
       <entry>
        <para>
         <systemitem class="etheraddress">10.10.1.125</systemitem>
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
   <para>
    In addition to the values above, you need to enter the <guimenu>Physical
    Interface Mapping</guimenu>. With this value you specify the Ethernet card
    that is used for the bastion network. See
    <xref linkend="sec.deploy.network_json.conduits"/> for details on the
    syntax. The default value <literal>?1g2</literal> matches the second
    interface (<quote>eth1</quote>) of the system.
   </para>
   <figure>
    <title>&yast; &crow; Setup: Network Settings for the Bastion Network</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="yast_crowbar_networks_bastion.png" format="png" width="100%"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="yast_crowbar_networks_bastion.png" format="png"/>
     </imageobject>
    </mediaobject>
   </figure>
   <warning>
    <title>No Network Changes After Completing the &inst_crow;</title>
    <para>
     After you have completed the &inst_crow;, you cannot change the network
     setup. If you do need to change it, you must completely set up the
     &admserv; again.
    </para>
   </warning>
   <important>
    <title>Accessing Nodes From Outside the Bastion Network</title>
    <para>
     The example configuration from above allows access to the &cloud; nodes
     from <emphasis>within</emphasis> the bastion network. If you want to
     access nodes from outside the bastion network, make the router for the
     bastion network the default router for the &admserv;. This is achieved by
     setting the value for the bastion network's <guimenu>Router
     preference</guimenu> entry to a lower value than the corresponding entry
     for the admin network. By default no router preference is set for the
     &admserv;&mdash;in this case, set the preference for the bastion network
     to <literal>5</literal>.
    </para>
    <para>
     If you use a Linux gateway between the outside and the bastion network,
     you also need to disable route verification (rp_filter) on the &admserv;.
     Do so by running the following command on the &admserv;:
    </para>
<screen>echo 0 &gt; /proc/sys/net/ipv4/conf/all/rp_filter</screen>
    <para>
     That command disables route verification for the current session, so the
     setting will not survive a reboot. Make it permanent by editing
     <filename>/etc/sysctl.conf</filename> and setting the value for
     <guimenu>net.ipv4.conf.all.rp_filter</guimenu> to <literal>0</literal>.
    </para>
   </important>
  </sect2>
 </sect1>
 <sect1 xml:id="sec.depl.adm_inst.crowbar.repos">
  <title><guimenu>Repositories</guimenu></title>

  <para>
   This dialog lets you announce the locations of the product, pool, and update
   repositories (see <xref linkend="cha.depl.repo_conf"/> for details). You can
   choose between four alternatives:
  </para>

  <variablelist>
   <varlistentry>
    <term><guimenu>Local SMT Server</guimenu>
    </term>
    <listitem>
     <para>
      If you have an &smt; server installed on the &admserv; as explained in
      <xref linkend="app.deploy.smt"/>, choose this option. The repository
      details do not need to be provided as they will be configured
      automatically. This option will be applied by default if the repository
      configuration has not been changed manually.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>Remote SMT Server</guimenu>
    </term>
    <listitem>
     <para>
      If you use a remote &smt; for <emphasis>all</emphasis> repositories,
      choose this option and provide the <guimenu>Sever URL</guimenu> (in the
      form of <literal>http://smt.&exampledomain;</literal>). The repository
      details do not need to be provided, they will be configured
      automatically.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>SUSE Manager Server</guimenu>
    </term>
    <listitem>
     <para>
      If you use a remote &susemgr; server for <emphasis>all</emphasis>
      repositories, choose this option and provide the <guimenu>Sever
      URL</guimenu> (in the form of
      <literal>http://manager.&exampledomain;</literal>).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Custom</term>
    <listitem>
     <para>
      If you use different sources for your repositories or are using
      non-standard locations, choose this option and manually provide a
      location for each repository. This can either be a local directory
      (<filename>/srv/tftpboot/suse-12.3/x86_64/repos/SLES12-SP3-Pool/</filename>)
      or a remote location
      (<literal>http://manager.example.com/ks/dist/child/sles12-sp3-updates-x86_64/sles12-sp3-x86_64/</literal>).
      Activating <guimenu>Ask On Error</guimenu> ensures that you will be
      informed if a repository is not available during node deployment,
      otherwise errors will be silently ignored.
     </para>
     <para>
      The <guimenu>Add Repository</guimenu> dialog allows adding additional
      repositories. See
      <xref
      linkend="q.depl.trouble.faq.admin.custom_repos"/> for
      instructions.
     </para>
     <tip>
      <title>Default Locations</title>
      <para>
       If you have made the repositories available in the default locations on
       the &admserv; (see
       <xref
       linkend="tab.depl.adm_conf.local-repos"/> for a list),
       choose <guimenu>Custom</guimenu> and leave the <guimenu>Repository
       URL</guimenu> empty (default). The repositories will automatically be
       detected.
      </para>
     </tip>
    </listitem>
   </varlistentry>
  </variablelist>

  <figure>
   <title>&yast; &crow; Setup: Repository Settings</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="yast_crowbar_repos.png" format="png" width="100%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="yast_crowbar_repos.png" format="png"/>
    </imageobject>
   </mediaobject>
  </figure>
 </sect1>
 <sect1 xml:id="sec.depl.inst.admserv.post.network">
  <title>Custom Network Configuration</title>

  <para>
   To adjust the pre-defined network setup of &cloud; beyond the scope of
   changing IP address assignments (as described in
   <xref
   linkend="sec.depl.adm_inst.crowbar"/>), modify the network &barcl;
   template.
  </para>

  <para>
   The &crow; network &barcl; provides two functions for the system. The first
   is a common role to instantiate network interfaces on the &crow; managed
   systems. The other function is address pool management. While the addresses
   can be managed with the &yast; &crow; module, complex network setups require
   to manually edit the network &barcl; template file
   <filename>/etc/crowbar/network.json</filename>. This section explains the
   file in detail. Settings in this file are applied to all nodes in &cloud;.
   (See <xref
   linkend="sec.network.json.resolve"/> to learn how to verify
   your correct network interface names.)
  </para>

  <warning>
   <title>No Network Changes After Completing the &inst_crow;</title>
   <para>
    After you have completed the &inst_crow; installation, you cannot change
    the network setup. If you do need to change it, you must completely set up
    the &admserv; again.
   </para>
   <para>
    The only exception to this rule is the interface map, which can be changed
    after setup. See <xref linkend="sec.deploy.network_json.interface_map"/>
    for details.
   </para>
  </warning>

  <sect2 xml:id="sec.deploy.network_json.edit">
   <title>Editing <filename>network.json</filename></title>
   <para>
    The <filename>network.json</filename> file is located in
    <filename>/etc/crowbar/</filename>. The template has the following general
    structure:
   </para>
<screen>{
   "attributes" : {
      "network" : {
         "mode" : "<replaceable>VALUE</replaceable>",
         "start_up_delay" : <replaceable>VALUE</replaceable>,
         "teaming" : { "mode": <replaceable>VALUE</replaceable> },<co xml:id="structure.general"/>
         "enable_tx_offloading" : <replaceable>VALUE</replaceable>,
         "enable_rx_offloading" : <replaceable>VALUE</replaceable>,
         "interface_map"<co xml:id="structure.interface_map"/> : [
            ...
         ],
         "conduit_map"<co xml:id="structure.conduit"/> : [
            ...
         ],
         "networks"<co xml:id="structure.networks"/> : {
            ...
         },
      }
   }
}</screen>
   <calloutlist>
    <callout arearefs="structure.general">
     <para>
      General attributes. Refer to
      <xref linkend="sec.deploy.network_json.global"/> for details.
     </para>
    </callout>
    <callout arearefs="structure.interface_map">
     <para>
      Interface map section. Defines the order in which the physical network
      interfaces are to be used. Refer to
      <xref linkend="sec.deploy.network_json.interface_map"/> for details.
     </para>
    </callout>
    <callout arearefs="structure.conduit">
     <para>
      Network conduit section defining the network modes and the network
      interface usage. Refer to
      <xref linkend="sec.deploy.network_json.conduits"/> for details.
     </para>
    </callout>
    <callout arearefs="structure.networks">
     <para>
      Network definition section. Refer to
      <xref linkend="sec.deploy.network_json.networks"/> for details.
     </para>
    </callout>
   </calloutlist>
   <note>
    <title>Order of Elements</title>
    <para>
     The order in which the entries in the <filename>network.json</filename>
     file appear may differ from the one listed above. Use your editor's search
     function to find certain entries.
    </para>
   </note>
  </sect2>

  <sect2 xml:id="sec.deploy.network_json.global">
   <title>Global Attributes</title>
   <para>
    The most important options to define in the global attributes section are
    the default values for the network and bonding modes. The following global
    attributes exist:
   </para>
<screen>{
   "attributes" : {
      "network" : {
         "mode" : "single",<co xml:id="global.mode"/>
         "start_up_delay" : 30,<co xml:id="global.startup"/>
         "teaming" : { "mode": 5 },<co xml:id="global.bonding"/>
         "enable_tx_offloading" : true, <co xml:id="global.tx"/>
         "enable_rx_offloading" : true, <xref linkend="global.tx"/>
         "interface_map" : [
            ...
         ],
         "conduit_map" : [
            ...
         ],
         "networks" : {
            ...
         },
      }
   }
}</screen>
   <calloutlist>
    <callout arearefs="global.mode">
     <para>
      Network mode. Defines the configuration name (or name space) to be used
      from the conduit_map (see
      <xref linkend="sec.deploy.network_json.conduits"/>). Your choices are
      single, dual, or team.
     </para>
    </callout>
    <callout arearefs="global.startup">
     <para>
      Time (in seconds) the &chef;-client waits for the network interfaces to
      come online before timing out.
     </para>
    </callout>
    <callout arearefs="global.bonding">
     <para>
      Default bonding mode. For a list of available modes, see
      <xref linkend="sec.depl.adm_inst.crowbar.mode"/>.
     </para>
    </callout>
    <callout arearefs="global.tx">
     <para>
      Turn on/off TX and RX checksum offloading. If set to
      <literal>false</literal>, disable offloading by running <command>ethtool
      -K</command> and adding the setting to the respective ifcfg configuration
      file. If set to <literal>true</literal>, use the defaults of the network
      driver. If the network driver supports TX and/or RX checksum offloading
      and enables it by default, it will be used.
     </para>
     <para>
      Checksum offloading is set to <literal>true</literal> in
      <filename>network.json</filename> by default. It is recommended to keep
      this setting. If you experience problems, such as package losses, try
      disabling this feature by setting the value to <literal>false</literal>.
     </para>
     <important>
      <title>Change of the Default Value</title>
      <para>
       Starting with &productname;, the default value for TX and RX checksum
       offloading changed from <literal>false</literal> to
       <literal>true</literal>.
      </para>
     </important>
     <para>
      To check which defaults a network driver uses, run <command>ethtool
      -k</command>, for example:
     </para>
<screen>&prompt.user;sudo ethtool -k eth0 | grep checksumming
rx-checksumming: on
tx-checksumming: on</screen>
     <para>
      Note that if the output shows a value marked as
      <literal>[fixed]</literal>, this value cannot be changed. For more
      information on TX and RX checksum offloading refer to your hardware
      vendor's documentation. Detailed technical information can also be
      obtained from
      <link
     xlink:href="https://www.kernel.org/doc/Documentation/networking/checksum-offloads.txt"/>.
     </para>
    </callout>
   </calloutlist>
  </sect2>

  <sect2 xml:id="sec.deploy.network_json.interface_map">
   <title>Interface Map</title>
   <para>
    By default, physical network interfaces are used in the order they appear
    under <filename>/sys/class/net/</filename>. If you want to apply a
    different order, you need to create an interface map where you can specify
    a custom order of the bus IDs. Interface maps are created for specific
    hardware configurations and are applied to all machines matching this
    configuration.
   </para>
<screen>{
   "attributes" : {
      "network" : {
         "mode" : "single",
         "start_up_delay" : 30,
         "teaming" : { "mode": 5 },
         "enable_tx_offloading" : true ,
         "enable_rx_offloading" : true ,
         "interface_map" : [
            {
              "pattern" : "PowerEdge R610"<co xml:id="interface.pattern"/>,
              "serial_number" : "0x02159F8E"<co xml:id="interface.serial"/>,
              "bus_order" : [<co xml:id="interface.bus"/>
                "0000:00/0000:00:01",
                "0000:00/0000:00:03"
              ]
            }
            ...
         ],
         "conduit_map" : [
            ...
         ],
         "networks" : {
            ...
         },
      }
   }
}</screen>
   <calloutlist>
    <callout arearefs="interface.pattern">
     <para>
      Hardware specific identifier. This identifier can be obtained by running
      the command <command>dmidecode</command> <option>-s
      system-product-name</option> on the machine you want to identify. You can
      log in to a node during the hardware discovery phase (when booting the
      SLEShammer image) via the &admserv;.
     </para>
    </callout>
    <callout arearefs="interface.serial">
     <para>
      Additional hardware specific identifier. This identifier can be used in
      case two machines have the same value for <guimenu>pattern</guimenu>, but
      different interface maps are needed. Specifying this parameter is
      optional (it is not included in the default
      <filename>network.json</filename> file). The serial number of a machine
      can be obtained by running the command <command>dmidecode</command>
      <option>-s system-serial-number</option> on the machine you want to
      identify.
     </para>
    </callout>
    <callout arearefs="interface.bus">
     <para>
      Bus IDs of the interfaces. The order in which they are listed here
      defines the order in which &chef; addresses the interfaces. The IDs can
      be obtained by listing the contents of
      <filename>/sys/class/net/</filename>.
     </para>
    </callout>
   </calloutlist>
   <important>
    <title>PXE Boot Interface Must be Listed First</title>
    <para>
     The physical interface used to boot the node via PXE must always be listed
     first.
    </para>
   </important>
   <note>
    <title>Interface Map Changes Allowed After Having Completed the &cloud; &crow; Installation</title>
    <para>
     Contrary to all other sections in <filename>network.json</filename>, you
     can change interface maps after completing the &inst_crow;. However, nodes
     that are already deployed and affected by these changes must be deployed
     again. Therefore, we do not recommend making changes to the interface map
     that affect active nodes.
    </para>
    <para>
     If you change the interface mappings after completing the &inst_crow; you
     <emphasis>must not</emphasis> make your changes by editing
     <filename>network.json</filename>. You must rather use the &crow; Web
     interface and open <menuchoice> <guimenu>Barclamps</guimenu>
     <guimenu>&crow;</guimenu> <guimenu>Network</guimenu>
     <guimenu>Edit</guimenu></menuchoice>. Activate your changes by clicking
     <guimenu>Apply</guimenu>.
    </para>
   </note>
  </sect2>

  <sect2 xml:id="sec.deploy.network_json.interface_map.examples">
   <title>Interface Map Example</title>
   <para/>
   <example xml:id="interface_map.example">
    <title>Changing the Network Interface Order on a Machine with four NICs</title>
    <orderedlist spacing="normal">
     <listitem>
      <para>
       Get the machine identifier by running the following command on the
       machine to which the map should be applied:
      </para>
<screen>~ # dmidecode -s system-product-name
AS 2003R
</screen>
      <para>
       The resulting string needs to be entered on the
       <guimenu>pattern</guimenu> line of the map. It is interpreted as a Ruby
       regular expression (see
       <link xlink:href="http://www.ruby-doc.org/core-2.0/Regexp.html"/> for a
       reference). Unless the pattern starts with <literal>^</literal> and ends
       with <literal>$</literal>, a substring match is performed against the
       name returned from the above commands.
      </para>
     </listitem>
     <listitem>
      <para>
       List the interface devices in <filename>/sys/class/net</filename> to get
       the current order and the bus ID of each interface:
      </para>
<screen><?dbsuse-fo font-size="6pt"?>~ # ls -lgG /sys/class/net/ | grep eth
lrwxrwxrwx 1 0 Jun 19 08:43 eth0 -&gt; ../../devices/pci0000:00/0000:00:1c.0/0000:09:00.0/net/eth0
lrwxrwxrwx 1 0 Jun 19 08:43 eth1 -&gt; ../../devices/pci0000:00/0000:00:1c.0/0000:09:00.1/net/eth1
lrwxrwxrwx 1 0 Jun 19 08:43 eth2 -&gt; ../../devices/pci0000:00/0000:00:1c.0/0000:09:00.2/net/eth2
lrwxrwxrwx 1 0 Jun 19 08:43 eth3 -&gt; ../../devices/pci0000:00/0000:00:1c.0/0000:09:00.3/net/eth3
</screen>
      <para>
       The bus ID is included in the path of the link target&mdash;it is the
       following string: <filename>../../devices/pci<replaceable>BUS
       ID</replaceable>/net/eth0</filename>
      </para>
     </listitem>
     <listitem>
      <para>
       Create an interface map with the bus ID listed in the order the
       interfaces should be used. Keep in mind that the interface from which
       the node is booted using PXE must be listed first. In the following
       example the default interface order has been changed to
       <systemitem class="resource">eth0</systemitem>,
       <systemitem class="resource">eth2</systemitem>,
       <systemitem class="resource">eth1</systemitem> and
       <systemitem class="resource">eth3</systemitem>.
      </para>
<screen>{
   "attributes" : {
      "network" : {
         "mode" : "single",
         "start_up_delay" : 30,
         "teaming" : { "mode": 5 },
         "enable_tx_offloading" : true,
         "enable_rx_offloading" : true,
         "interface_map" : [
            {
              "pattern" : "AS 2003R",
              "bus_order" : [
                "0000:00/0000:00:1c.0/0000:09:00.0",
                "0000:00/0000:00:1c.0/0000:09:00.2",
                "0000:00/0000:00:1c.0/0000:09:00.1",
                "0000:00/0000:00:1c.0/0000:09:00.3"
              ]
            }
            ...
         ],
         "conduit_map" : [
            ...
         ],
         "networks" : {
            ...
         },
      }
   }
}</screen>
     </listitem>
    </orderedlist>
   </example>
  </sect2>

  <sect2 xml:id="sec.deploy.network_json.conduits">
   <title>Network Conduits</title>
   <para>
    Network conduits define mappings for logical interfaces&mdash;one or more
    physical interfaces bonded together. Each conduit can be identified by a
    unique name, the <guimenu>pattern</guimenu>. This pattern is also called
    <quote>Network Mode</quote> in this document.
   </para>
   <para>
    Three network modes are available:
   </para>
   <simplelist>
    <member><emphasis role="bold">single</emphasis>: Only use the first interface for
    all networks. VLANs will be added on top of this single interface.
   </member>
    <member><emphasis role="bold">dual</emphasis>: Use the first interface as the admin
    interface and the second one for all other networks. VLANs will be added
    on top of the second interface.
   </member>
    <member><emphasis role="bold">team</emphasis>: Bond the first two or more
    interfaces. VLANs will be added on top of the bond.
   </member>
   </simplelist>
   <para>
    See <xref linkend="sec.depl.req.network.modes"/> for detailed descriptions.
    Apart from these modes a fallback mode <literal>".*/.*/.*"</literal> is
    also pre-defined&mdash;it is applied in case no other mode matches the one
    specified in the global attributes section. These modes can be adjusted
    according to your needs. It is also possible to customize modes, but mode
    names must be either <literal>single</literal>, <literal>dual</literal>, or
    <literal>team</literal>. 
   </para>
   <para>
    The mode name that is specified with <literal>mode</literal> in the global
    attributes section is deployed on all nodes in &cloud;. It is not possible
    to use a different mode for a certain node. However, you can define
    <quote>sub</quote> modes with the same name that only match the following
    machines:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Machines with a certain number of physical network interfaces.
     </para>
    </listitem>
    <listitem>
     <para>
      Machines with certain roles (all &compnode;s for example).
     </para>
    </listitem>
   </itemizedlist>
<screen>{
   "attributes" : {
      "network" : {
         "mode" : "single",
         "start_up_delay" : 30,
         "teaming" : { "mode": 5 },
         "enable_tx_offloading" : true,
         "enable_rx_offloading" : true,
         "interface_map" : [
            ...
         ],
         "conduit_map" : [
            {
              "pattern" : "single/.*/.*"<co xml:id="conduit.pattern"/>,
              "conduit_list" : {
                "intf2"<co xml:id="conduit.name"/> : {
                  "if_list" : ["1g1","1g2"]<co xml:id="conduit.interface"/>,
                  "team_mode" : 5<co xml:id="conduit.bonding"/>
                },
                "intf1" : {
                  "if_list" : ["1g1","1g2"],
                  "team_mode" : 5
                },
                "intf0" : {
                  "if_list" : ["1g1","1g2"],
                  "team_mode" : 5
                }
              }
            },
         ...
         ],
         "networks" : {
            ...
         },
      }
   }
}</screen>
   <calloutlist>
    <callout arearefs="conduit.pattern">
     <para>
      This line contains the pattern definition for the
      <systemitem>conduit_map</systemitem>. The value for pattern must have the
      following form:
     </para>
<screen><replaceable>MODE_NAME</replaceable>/<replaceable>NUMBER_OF_NICS</replaceable>/<replaceable>NODE_ROLE</replaceable></screen>
     <para>
      Each field in the pattern is interpreted as a Ruby regular expression
      (see <link xlink:href="http://www.ruby-doc.org/core-2.0/Regexp.html"/>
      for a reference).
     </para>
     <variablelist>
      <varlistentry>
       <term>mode_name
      </term>
       <listitem>
        <para>
         Name of the network mode. This string is used to reference the mode
         from the general attributes section.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>number_of_nics
      </term>
       <listitem>
        <para>
         Normally it is not possible to apply different network modes to
         different roles&mdash;you can only specify one mode in the global
         attributes section. However, it does not make sense to apply a network
         mode that bonds three interfaces on a machine with only two physical
         network interfaces. This option enables you to create modes for nodes
         with a given number of interfaces.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>node_role
      </term>
       <listitem>
        <para>
         This part of the pattern lets you create matches for a certain node
         role. This enables you to create network modes for certain roles, for
         example the &compnode;s (role: <guimenu>nova-compute</guimenu>) or the
         &swift; nodes (role: <guimenu>swift-storage</guimenu>). See
         <xref linkend="ex.conduits.role"/> for the full list of roles.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </callout>
    <callout arearefs="conduit.name">
     <para>
      The logical network interface definition. Each conduit list must contain
      at least one such definition. This line defines the name of the logical
      interface. This identifier must be unique and will also be referenced in
      the network definition section. We recommend sticking with the
      pre-defined naming scheme: <literal>intf0</literal> for <quote>Interface
      0</quote>, <literal>intf1</literal> for <quote>Interface 1</quote>, etc.
      If you change the name (not recommended), you also need to change all
      references in the network definition section.
     </para>
    </callout>
    <callout arearefs="conduit.interface">
     <para>
      This line maps one or more <emphasis>physical</emphasis> interfaces to
      the logical interface. Each entry represents a physical interface. If
      more than one entry exists, the interfaces are bonded&mdash;either with
      the mode defined in the <guimenu>team_mode</guimenu> attribute of this
      conduit section. Or, if that is not present, by the globally defined
      <guimenu>teaming</guimenu> attribute.
     </para>
     <para>
      The physical interfaces definition needs to fit the following pattern:
     </para>
<screen>[Quantifier][Speed][Order]</screen>
     <para>
      Valid examples are <literal>+1g2</literal>, <literal>10g1</literal> or
      <literal>?1g2</literal>.
     </para>
     <variablelist>
      <varlistentry>
       <term>Quantifier</term>
       <listitem>
        <para>
         Specifying the quantifier is optional. The following values may be
         entered:
        </para>
        <simplelist>
         <member><literal>+</literal>: at least the speed specified afterwards
        (specified value or higher)</member>
         <member><literal>-</literal>: at most the speed specified afterwards
        (specified value or lower)</member>
         <member><literal>?</literal>: any speed (speed specified afterwards is
        ignored)</member>
        </simplelist>
        <para>
         If no quantifier is specified, the exact speed specified is used.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>Speed</term>
       <listitem>
        <para>
         Specifying the interface speed is mandatory (even if using the
         <literal>?</literal> quantifier). The following values may be entered:
        </para>
        <simplelist>
         <member><literal>10m</literal>: 10 Mbit</member>
         <member><literal>100m</literal>: 100 Mbit</member>
         <member><literal>1g</literal>: 1 Gbit</member>
         <member><literal>10g</literal>: 10 Gbit</member>
         <member><literal>20g</literal>: 20 Gbit</member>
         <member><literal>40g</literal>: 40 Gbit</member>
         <member><literal>56g</literal>: 56 Gbit</member>
        </simplelist>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>Order</term>
       <listitem>
        <para>
         Position in the interface order. Specifying this value is mandatory.
         The interface order is defined by the order in which the interfaces
         appear in <filename>/sys/class/net</filename> (default) or, if it
         exists, by an interface map. The order is also linked to the speed in
         this context:
        </para>
        <simplelist>
         <member><literal>1g1</literal>: the first 1Gbit interface</member>
         <member><literal>+1g1</literal>: the first 1Gbit or 10Gbit
        interface. &crow; will take the first 1Gbit interface. Only if such an
        interface does not exist, it will take the first 10Gbit interface
        available.</member>
         <member><literal>?1g3</literal>: the third 1Gbit, 10Gbit, 100Mbit or
        10Mbit interface. &crow; will take the third 1Gbit interface. Only if
        such an interface does not exist, it will take the third 10Gbit
        interface, then the third 100Mbit or 10Mbit interface.</member>
        </simplelist>
        <note>
         <title>Ordering Numbers</title>
         <para>
          Ordering numbers start with <literal>1</literal> rather than with
          <literal>0</literal>.
         </para>
         <para>
          Each interfaces that supports multiple speeds is referenced by
          multiple names&mdash;one for each speed it supports. A 10Gbit
          interface is therefore represented by four names:
          <literal>10g<replaceable>X</replaceable></literal>,
          <literal>1g<replaceable>X</replaceable></literal>,
          <literal>100m<replaceable>X</replaceable></literal>,
          <literal>10m<replaceable>X</replaceable></literal>, where
          <replaceable>X</replaceable> is the ordering number.
         </para>
         <para>
          Ordering numbers always start with <literal>1</literal> and are
          assigned ascending for each speed, for example
          <literal>1g1</literal>, <literal>1g2</literal>, and
          <literal>1g3</literal>. Numbering starts with the first physical
          interface. On systems with network interfaces supporting different
          maximum speeds, ordering numbers for the individual speeds differ, as
          the following example shows:
         </para>
         <simplelist>
          <member>
          100Mbit (first interface): <literal>100m1</literal>,
          <literal>10m1</literal>
          </member>
          <member>
          1Gbit (second interface): <literal>1g1</literal>,
          <literal>100m2</literal>, <literal>10m2</literal>
          </member>
          <member>
          10Gbit (third interface): <literal>10g1</literal>,
          <literal>1g2</literal>, <literal>100m3</literal>,
          <literal>10m3</literal>
          </member>
         </simplelist>
         <para>
          In this example the pattern <literal>?1g3</literal> would match
          <literal>100m3</literal>, since no third 1Gbit or 10Gbit interface
          exist.
         </para>
        </note>
       </listitem>
      </varlistentry>
     </variablelist>
    </callout>
    <callout arearefs="conduit.bonding">
     <para>
      The bonding mode to be used for this logical interface. Overwrites the
      default set in the global attributes section <emphasis>for this
      interface</emphasis>. See
      <link xlink:href="https://www.kernel.org/doc/Documentation/networking/bonding.txt"/>
      for a list of available modes. Specifying this option is
      optional&mdash;if not specified here, the global setting applies.
     </para>
    </callout>
   </calloutlist>
  </sect2>

  <sect2 xml:id="sec.deploy.network_json.conduits.examples">
   <title>Network Conduit Examples</title>
   <para/>
   <example xml:id="ex.conduits.nic_number">
    <title>Network Modes for Different NIC Numbers</title>
    <para>
     The following example defines a team network mode for nodes with 6, 3, and
     an arbitrary number of network interfaces. Since the first mode that
     matches is applied, it is important that the specific modes (for 6 and 3
     NICs) are listed before the general mode:
    </para>
<screen>{
   "attributes" : {
      "network" : {
         "mode" : "single",
         "start_up_delay" : 30,
         "teaming" : { "mode": 5 },
         "enable_tx_offloading" : true,
         "enable_rx_offloading" : true,
         "interface_map" : [
            ...
         ],
         "conduit_map" : [
           {
              "pattern" : "single/6/.*",
              "conduit_list" : {
                ...
              }
            },
            {
              "pattern" : "single/3/.*",
              "conduit_list" : {
                ...
              }
            },
            {
              "pattern" : "single/.*/.*",
              "conduit_list" : {
                ...
              }
            },
            ...
         ],
         "networks" : {
            ...
         },
      }
   }
}</screen>
   </example>
   <example xml:id="ex.conduits.role">
    <title>Network Modes for Certain Roles</title>
    <para>
     The following example defines network modes for &compnode;s with four
     physical interfaces, the &admserv; (role <literal>crowbar</literal>), the
     &contrnode;, and a general mode applying to all other nodes.
    </para>
<screen>{
   "attributes" : {
      "network" : {
         "mode" : "team",
         "start_up_delay" : 30,
         "teaming" : { "mode": 5 },
         "enable_tx_offloading" : true,
         "enable_rx_offloading" : true,
         "interface_map" : [
            ...
         ],
         "conduit_map" : [
          {
            "pattern" : "team/4/nova-compute",
            "conduit_list" : {
              ...
            }
            },
            {
              "pattern" : "team/.*/^crowbar$",
              "conduit_list" : {
                ...
              }
            },
            {
              "pattern" : "team/.*/nova-controller",
              "conduit_list" : {
                ...
              }
            },
            {
              "pattern" : "team/.*/.*",
              "conduit_list" : {
                ...
              }
            },
            ...
         ],
         "networks" : {
            ...
         },
      }
   }
}</screen>
    <para>
     The following values for <literal>node_role</literal> can be used:
    </para>
    <simplelist>
     <member><literal>ceilometer-polling</literal>
     </member>
     <member><literal>ceilometer-server</literal>
     </member>
     <member><literal>ceph-calamari</literal>
     </member>
     <member><literal>ceph-mon</literal>
     </member>
     <member><literal>ceph-osd</literal>
     </member>
     <member><literal>ceph-radosgw</literal>
     </member>
     <member><literal>cinder-controller</literal>
     </member>
     <member><literal>cinder-volume</literal>
     </member>
     <member><literal>crowbar</literal>
     </member>
     <member><literal>database-server</literal>
     </member>
     <member><literal>glance-server</literal>
     </member>
     <member><literal>heat-server</literal>
     </member>
     <member><literal>horizon-server</literal>
     </member>
     <member><literal>keystone-server</literal>
     </member>
     <member><literal>manila-server</literal>
     </member>
     <member><literal>manila-share</literal>
     </member>
     <member><literal>monasca-agent</literal>
     </member>
     <member><literal>monasca-log-agent</literal>
     </member>
     <member><literal>monasca-master</literal>
     </member>
     <member><literal>monasca-server</literal>
     </member>
     <member><literal>neutron-network</literal>
     </member>
     <member><literal>neutron-server</literal>
     </member>
     <member><literal>nova-controller</literal>
     </member>
     <member><literal>nova-compute-*</literal>
     </member>
     <member><literal>rabbitmq-server</literal>
     </member>
     <member><literal>trove-server</literal>
     </member>
     <member><literal>swift-dispersion</literal>
     </member>
     <member><literal>swift-proxy</literal>
     </member>
     <member><literal>swift-ring-compute</literal>
     </member>
     <member><literal>swift-storage</literal>
     </member>
    </simplelist>
    <para>
     The role <literal>crowbar</literal> refers to the &admserv;.
    </para>
   </example>

   <warning>
    <title>The <literal>crowbar</literal> and Pattern Matching</title>
    <para>
     As explained in <xref linkend="ex.conduits.machine"/>, each node has an
     additional, unique role named <literal>crowbar-<replaceable>FULLY
     QUALIFIED HOSTNAME</replaceable></literal>.
    </para>
    <para>
     All three elements of the value of the <literal>pattern</literal> line
     are read as regular expressions. Therefore using the pattern
     <literal><replaceable>mode-name</replaceable>/.*/crowbar</literal> will
     match all nodes in your installation. <literal>crowbar</literal> is
     considered a substring and therefore will also match all strings
     <literal>crowbar-<replaceable>FULLY QUALIFIED
     HOSTNAME</replaceable></literal>. As a consequence, all subsequent map
     definitions will be ignored. To make sure this does not happen, you must
     use the proper regular expression <literal>^crowbar$</literal>:
     <literal><replaceable>mode-name</replaceable>/.*/^crowbar$</literal>.
    </para>
   </warning>

   <example xml:id="ex.conduits.machine">
    <title>Network Modes for Certain Machines</title>
    <para>
     Apart from the roles listed under <xref linkend="ex.conduits.role"/>, each
     node in &cloud; has a unique role, which lets you create modes matching
     exactly one node. Each node can be addressed by its unique role name in
     the <literal>pattern</literal> entry of the
     <literal>conduit_map</literal>.
    </para>
    <para>
     The role name depends on the fully qualified host name (FQHN) of the
     respective machine. The role is named after the scheme
     <literal>crowbar-<replaceable>FULLY QUALIFIED
     HOSTNAME</replaceable></literal> where colons are replaced with dashes,
     and periods are replaced with underscores. The FQHN depends on whether the
     respective node was booted via PXE or not.
    </para>
    <para>
     To determine the host name of a node, log in to the &crow; &wi; and got to
     <menuchoice> <guimenu>Nodes</guimenu> <guimenu>Dashboard</guimenu>
     </menuchoice>. Click the respective node name to get detailed data for the
     node. The FQHN is listed first under <guimenu>Full Name</guimenu>.
    </para>
    <variablelist>
     <varlistentry>
      <term>Role Names for Nodes Booted via PXE</term>
      <listitem>
       <para>
        The <replaceable>FULLY QUALIFIED HOSTNAME</replaceable> for nodes
        booted via PXE is composed of the following: a prefix 'd', the MAC
        address of the network interface used to boot the node via PXE, and the
        domain name as configured on the &admserv;. A machine with the fully
        qualified host name
        <literal>d1a-12-05-1e-35-49.cloud.example.com</literal> would get the
        following role name:
       </para>
<screen>crowbar-d1a-12-05-1e-35-49_cloud_example_com</screen>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Role Names for the &admserv; and Nodes Added Manually</term>
      <listitem>
       <para>
        The fully qualified hostnames of the &admserv; and all nodes added
        manually (as described in
        <xref
        linkend="sec.depl.inst.nodes.install.external"/>) are
        defined by the system administrator. They typically have the form
        hostname+domain, for example
        <replaceable>admin.cloud.&exampledomain;</replaceable>, which would
        result in the following role name:
       </para>
<screen>crowbar-admin_cloud_example_com</screen>
      </listitem>
     </varlistentry>
    </variablelist>
    <para>
     Network mode definitions for certain machines must be listed first in the
     conduit map. This prevents other, general rules which would also map from
     being applied.
    </para>
<screen>{
   "attributes" : {
      "network" : {
         "mode" : "dual",
         "start_up_delay" : 30,
         "teaming" : { "mode": 5 },
         "enable_tx_offloading" : true,
         "enable_rx_offloading" : true,
         "interface_map" : [
            ...
         ],
         "conduit_map" : [
          {
            "pattern" : "dual/.*/crowbar-d1a-12-05-1e-35-49_cloud_example_com",
            "conduit_list" : {
               ...
            }
          },
            ...
         ],
         "networks" : {
            ...
         },
      }
   }
}</screen>
   </example>
<!--
    More and complex examples with conduit lists needed
   -->
  </sect2>

  <sect2 xml:id="sec.deploy.network_json.networks">
   <title>Network Definitions</title>
   <para>
    The network definitions contain IP address assignments, the bridge and VLAN
    setup, and settings for the router preference. Each network is also
    assigned to a logical interface defined in the network conduit section. In
    the following the network definition is explained using the example of the
    admin network definition:
   </para>
<screen>{
   "attributes" : {
      "network" : {
         "mode" : "single",
         "start_up_delay" : 30,
         "teaming" : { "mode": 5 },
         "enable_tx_offloading" : true,
         "enable_rx_offloading" : true,
         "interface_map" : [
            ...
         ],
         "conduit_map" : [
             ...
         ],
         "networks" : {
           "admin" : {
             "conduit" : "intf0"<co xml:id="network.conduit"/>,
             "add_bridge" : false<co xml:id="network.bridge"/>,
             "use_vlan" : false<co xml:id="network.vlan"/>,
             "vlan" : 100<co xml:id="network.vlanid"/>,
             "router_pref" : 10<co xml:id="network.routerpref"/>,
             "subnet" : "192.168.124.0"<co xml:id="network.addresses"/>,
             "netmask" : "255.255.255.0",
             "router" : "192.168.124.1",
             "broadcast" : "192.168.124.255",
             "ranges" : {
               "admin" : {
                 "start" : "192.168.124.10",
                 "end" : "192.168.124.11"
               },
               "switch" : {
                 "start" : "192.168.124.241",
                 "end" : "192.168.124.250"
               },
               "dhcp" : {
                 "start" : "192.168.124.21",
                 "end" : "192.168.124.80"
               },
               "host" : {
                 "start" : "192.168.124.81",
                 "end" : "192.168.124.160"
               }
             }
           },
           "nova_floating": {
             "add_ovs_bridge": false<co xml:id="network.ovs-bridge"/>,
             "bridge_name": "br-public"<co xml:id="network.ovs-bridge-name"/>,
             ....
           }
         ...
         },
      }
   }
}</screen>
   <calloutlist>
    <callout arearefs="network.conduit">
     <para>
      Logical interface assignment. The interface must be defined in the
      network conduit section and must be part of the active network mode.
     </para>
    </callout>
    <callout arearefs="network.bridge">
     <para>
      Bridge setup. Do not touch. Should be <literal>false</literal> for all
      networks.
     </para>
    </callout>
    <callout arearefs="network.vlan">
     <para>
      Create a VLAN for this network. Changing this setting is not recommended.
     </para>
    </callout>
    <callout arearefs="network.vlanid">
     <para>
      ID of the VLAN. Change this to the VLAN ID you intend to use for the
      specific network, if required. This setting can also be changed using the
      YaST Crowbar interface. The VLAN ID for the
      <literal>nova-floating</literal> network must always match the ID for the
      <literal>public network</literal>.
     </para>
    </callout>
    <callout arearefs="network.routerpref">
     <para>
      Router preference, used to set the default route. On nodes hosting
      multiple networks the router with the lowest
      <literal>router_pref</literal> becomes the default gateway. Changing this
      setting is not recommended.
     </para>
    </callout>
    <callout arearefs="network.addresses">
     <para>
      Network address assignments. These values can also be changed by using
      the &yast; &crow; interface.
     </para>
    </callout>
    <callout arearefs="network.ovs-bridge">
     <para>
      Openvswitch virtual switch setup. This attribute is maintained by &crow;
      on a per-node level and should not be changed manually.
     </para>
    </callout>
    <callout arearefs="network.ovs-bridge-name">
     <para>
      Name of the openvswitch virtual switch. This attribute is maintained by
      &crow; on a per-node level and should not be changed manually.
     </para>
    </callout>
   </calloutlist>
   <important>
    <title>VLAN Settings</title>
    <para>
     As of &productname; &productnumber;, using a VLAN for the admin network is
     only supported on a native/untagged VLAN. If you need VLAN support for the
     admin network, it must be handled at switch level.
    </para>
    <para>
     When changing the network configuration with &yast; or by editing
     <filename>/etc/crowbar/network.json</filename>, you can define VLAN
     settings for each network. For the networks <literal>nova-fixed</literal>
     and <literal>nova-floating</literal>, however, special rules apply:
    </para>
    <para>
     <emphasis role="bold">nova-fixed</emphasis>: The <guimenu>USE
     VLAN</guimenu> setting will be ignored. However, VLANs will automatically
     be used if deploying &o_netw; with VLAN support (using the plugins
     linuxbridge, openvswitch plus VLAN, or cisco plus VLAN). In this case, you
     need to specify a correct <guimenu>VLAN ID</guimenu> for this network.
    </para>
    <para>
     <emphasis role="bold">nova-floating</emphasis>: When using a VLAN for
     <literal>nova-floating</literal> (which is the default), the <guimenu>USE
     VLAN</guimenu> and <guimenu>VLAN ID</guimenu> settings for
     <guimenu>nova-floating</guimenu> and <guimenu>public</guimenu> default to
     the same.
    </para>
    <para>
     You have the option of separating public and floating networks with a
     custom configuration. Configure your own separate floating network (not as
     a subnet of the public network), and give the floating network its own
     router. For example, define <literal>nova-floating</literal> as part of an
     external network with a custom <literal>bridge-name</literal>. When you
     are using different networks and OpenVSwitch is configured, the
     pre-defined <literal>bridge-name</literal> won't work.
    </para>
   </important>
  </sect2>

  <sect2 xml:id="sec.depl.inst.admserv.post.network.external">
   <title>Providing Access to External Networks</title>
   <para>
    By default, external networks cannot be reached from nodes in the &cloud;.
    To access external services such as a &susemgr; server, an &smt; server, or
    a SAN, you need to make the external network(s) known to &cloud;. Do so by
    adding a network definition for each external network to
    <filename>/etc/crowbar/network.json</filename>. Refer to
    <xref linkend="sec.depl.inst.admserv.post.network"/> for setup
    instructions.
   </para>
   <example>
    <title>Example Network Definition for the External Network 192.168.150.0/16</title>
<screen>            "external" : {
               "add_bridge" : false,
               "vlan" : <replaceable>XXX</replaceable>,
               "ranges" : {
                  "host" : {
                     "start" : "192.168.150.1",
                     "end" : "192.168.150.254"
                  }
               },
               "broadcast" : "192.168.150.255",
               "netmask" : "255.255.255.0",
               "conduit" : "intf1",
               "subnet" : "192.168.150.0",
               "use_vlan" : true
            }</screen>
   </example>
   <para>
    Replace the value <replaceable>XXX</replaceable> for the VLAN by a value
    not used within the &cloud; network and not used by &o_netw;. By default,
    the following VLANs are already used:
   </para>
   <table>
    <title>VLANs used by the &cloud; Default Network Setup</title>
    <tgroup cols="2">
     <colspec colnum="1" colname="1" colwidth="20*"/>
     <colspec colnum="2" colname="2" colwidth="80*"/>
     <thead>
      <row>
       <entry>
        <para>
         VLAN ID
        </para>
       </entry>
       <entry>
        <para>
         Used by
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>
        <para>
         100
        </para>
       </entry>
       <entry>
        <para>
         BMC VLAN (bmc_vlan)
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         200
        </para>
       </entry>
       <entry>
        <para>
         Storage Network
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         300
        </para>
       </entry>
       <entry>
        <para>
         Public Network (nova-floating, public)
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         400
        </para>
       </entry>
       <entry>
        <para>
         Software-defined network (os_sdn)
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         500
        </para>
       </entry>
       <entry>
        <para>
         Private Network (nova-fixed)
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         501 - 2500
        </para>
       </entry>
       <entry>
        <para>
         &o_netw; (value of nova-fixed plus 2000)
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </sect2>

  <sect2 xml:id="sec.depl.inst.admserv.post.network.split">
   <title>Split Public and Floating Networks on Different VLANs</title>
   <para>
    For custom setups, the public and floating networks can be separated.
    Configure your own separate floating network (not as a subnet of the public
    network), and give the floating network its own router. For example, define
    <literal>nova-floating</literal> as part of an external network with a
    custom <literal>bridge-name</literal>. When you are using different
    networks and OpenVSwitch is configured, the pre-defined
    <literal>bridge-name</literal> won't work.
   </para>
  </sect2>

  <sect2 xml:id="sec.depl.inst.admserv.post.network.mtu">
   <title>Adjusting the Maximum Transmission Unit for the Admin and Storage Network</title>
   <para>
    If you need to adjust the Maximum Transmission Unit (MTU) for the Admin
    and/or Storage Network, adjust
    <filename>/etc/crowbar/network.json</filename> as shown below. You can also
    enable jumbo frames this way by setting the MTU to 9000. The following
    example enables jumbo frames for both, the storage and the admin network by
    setting <literal>"mtu": 9000</literal>.
   </para>
<screen>        "admin": {
          "add_bridge": false,
          "broadcast": "192.168.124.255",
          "conduit": "intf0",
          "mtu": 9000,
          "netmask": "255.255.255.0",
          "ranges": {
            "admin": {
              "end": "192.168.124.11",
              "start": "192.168.124.10"
            },
            "dhcp": {
              "end": "192.168.124.80",
              "start": "192.168.124.21"
            },
            "host": {
              "end": "192.168.124.160",
              "start": "192.168.124.81"
            },
            "switch": {
              "end": "192.168.124.250",
              "start": "192.168.124.241"
            }
          },
          "router": "192.168.124.1",
          "router_pref": 10,
          "subnet": "192.168.124.0",
          "use_vlan": false,
          "vlan": 100
        },
        "storage": {
          "add_bridge": false,
          "broadcast": "192.168.125.255",
          "conduit": "intf1",
          "mtu": 9000,
          "netmask": "255.255.255.0",
          "ranges": {
            "host": {
              "end": "192.168.125.239",
              "start": "192.168.125.10"
            }
          },
          "subnet": "192.168.125.0",
          "use_vlan": true,
          "vlan": 200
        },</screen>
   <warning>
    <title>No Network Changes After Completing the &inst_crow;</title>
    <para>
     After you have completed the &inst_crow;, you cannot change the network
     setup, and you cannot change the MTU size.
    </para>
   </warning>
  </sect2>

  <sect2 xml:id="sec.network.json.resolve">
   <title>Matching Logical and Physical Interface Names with network-json-resolve</title>
   <para>
    &cloud; includes a new script, <filename>network-json-resolve</filename>,
    which matches the physical and logical names of network interfaces, and
    prints them to stdout. Use this to verify that you are using the correct
    interface names in <filename>network.json</filename>. Note that it will
    only work if &ostack; nodes have been deployed. The following command
    prints a help menu:
   </para>
<screen><command>sudo /opt/dell/bin/network-json-resolve -h</command>
  </screen>
   <para>
    <filename>network-json-resolve</filename> reads your deployed
    <filename>network.json</filename> file. To use a different
    <filename>network.json</filename> file, specify its full path with the
    <command>--network-json</command> option. The following example shows how
    to use a different <filename>network.json</filename> file, and prints the
    interface mappings of a single node:
   </para>
<screen><command>sudo /opt/dell/bin/network-json-resolve --network-json /opt/configs/network.json aliases compute1</command>
 eth0: 0g1, 1g1
 eth1: 0g1, 1g1
</screen>
   <para>
    You may query the mappings of a specific network interface:
   </para>
<screen><command>sudo /opt/dell/bin/network-json-resolve aliases compute1 eth0</command>
 eth0: 0g1, 1g1
</screen>
   <para>
    Print the bus ID order on a node. This returns <literal>no bus order
    defined for <replaceable>node</replaceable></literal> if you did not
    configure any bus ID mappings:
   </para>
<screen><command>sudo /opt/dell/bin/network-json-resolve bus_order compute1</command>
    <!---needs example output -->
</screen>
   <para>
    Print the defined conduit map for the node:
   </para>
<screen><command>sudo /opt/dell/bin/network-json-resolve conduit_map compute1</command>
bastion: ?1g1
intf0: ?1g1
intf1: ?1g1
intf2: ?1g1
</screen>
   <para>
    Resolve conduits to the standard interface names:
   </para>
<screen><command>sudo /opt/dell/bin/network-json-resolve conduits compute1</command>
bastion:
intf0: eth0
intf1: eth0
intf2: eth0
</screen>
   <para>
    Resolve the configured networks on a node to the standard interface names:
   </para>
<screen><command>sudo /opt/dell/bin/network-json-resolve networks compute1</command>
bastion:
bmc_vlan:  eth0
nova_fixed: eth0
nova_floating: eth0
os_sdn: eth0
public: eth0
storage: eth0
</screen>
   <para>
    Resolve the specified network to the standard interface name(s):
   </para>
<screen><command>sudo /opt/dell/bin/network-json-resolve networks compute1 public</command>
   public: eth0
</screen>
   <para>
    Resolve a <filename>network.json</filename>-style interface to its standard
    interface name(s):
   </para>
<screen><command>sudo /opt/dell/bin/network-json-resolve resolve compute1 1g1</command>
 eth0
</screen>
  </sect2>
 </sect1>
</chapter>
