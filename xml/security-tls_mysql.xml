<?xml version="1.0"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE section [
 <!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="TLS_MySQL">
 <title>Enabling TLS for MySQL Traffic</title>
 <para>
  MySQL traffic can be encrypted using TLS. For completely new &kw-hos;
  deployments using the supplied input model example files, you will have to
  uncomment the commented entries for
  <literal>tls-component-endpoints:</literal>. For upgrades from a previous
  version, you will have to add the entries to your input model files if you
  have not already done so. This topic explains how to do both.
 </para>
 <section xml:id="client">
  <title>Enabling TLS on the database server for client access</title>
  <procedure xml:id="start">
   <step>
    <para>
     Edit <literal>network_groups.yml</literal> to either add mysql under
     tls-component-endpoints in your existing file from a previous version, or
     uncomment it if installing from scratch.
    </para>
<screen>tls-component-endpoints:
  - mysql</screen>
   </step>
   <step xml:id="deployReconfig">
    <para>
     After making the necessary changes, commit the changed file to git and run
     the config-processor-run and reconfigure Ansible playbooks:
    </para>
<screen>cd ~/openstack
git add -A
git commit -m "My changed config"
cd ~/openstack/ardana/ansible/
ansible-playbook -i hosts/localhost config-processor-run.yml -e encrypt="&lt;encryption key&gt;" -e rekey=""
ansible-playbook -i hosts/localhost ready-deployment.yml
cd ~/scratch/ansible/next/ardana/ansible</screen>
   </step>
   <step>
    <para>
     Next, either run <filename>site.yml</filename> if you are installing a
     new system:
    </para>
<screen>ansible-playbook -i hosts/verb_hosts site.yml</screen>
   </step>
   <step>
    <para>
     or ardana-reconfigure if you are reconfiguring an existing one:
    </para>
<screen>ansible-playbook -i hosts/verb_hosts ardana-reconfigure.yml</screen>
   </step>
  </procedure>
 </section>
 <section>
  <title>MySQL replication over TLS</title>
  <para>
   MySQL replication over TLS is disabled. This is true even if you followed
   the instruction to turn on Mysql TLS in the previous section. Those steps
   turn on the service interactions to the database.
  </para>
  <para>
   <emphasis role="bold">Turning on MySQL replication over TLS</emphasis>
  </para>
  <note>
   <para>
    Using TLS connections for MySQL replication will incur a performance cost.
   </para>
  </note>
  <para>
   You should have already enabled TLS for MySQL client interactions in the
   previous section. If not, read <xref linkend="client"/>.
  </para>
  <para>
   TLS for MySQL replication is not turned on by default. Therefore, you will
   need to follow a manual process. Again, the steps are different for new
   systems and upgrades.
  </para>
 </section>
 <section xml:id="replicationNew">
  <title>Enabling TLS for MySQL replication on a new deployment</title>
  <procedure>
   <step>
    <para>
     Log in to the &lcm; node and before running the config
     processor, edit the
     <literal>~/openstack/my_cloud/config/mariadb/defaults.yml</literal> file.
    </para>
   </step>
   <step>
    <para>
     Search for mysql_gcomms_bind_tls. You should find this section:
    </para>
<screen># TLS disabled for cluster
#mysql_gcomms_bind_tls: "{{ host.bind['FND_MDB'].mysql_gcomms.tls }}"
mysql_gcomms_bind_tls: False</screen>
   </step>
   <step>
    <para>
     Uncomment the appropriate line so the file looks like this:
    </para>
<screen># TLS disabled for cluster
mysql_gcomms_bind_tls: "{{ host.bind['FND_MDB'].mysql_gcomms.tls }}"
#mysql_gcomms_bind_tls: False</screen>
   </step>
   <step>
    <para>
     Follow the steps to deploy or reconfigure your cloud:
     <xref linkend="deployReconfig"/> in <xref linkend="client"/>.
    </para>
   </step>
  </procedure>
 </section>
 <section>
  <title>Enabling TLS for MySQL replication on an existing system</title>
  <para>
   If your cluster is already up, perform these steps to enable MySQL
   replication over TLS:
  </para>
  <procedure>
   <step>
    <para>
     Edit the following two files:
     <literal>~/openstack/my_cloud/config/mariadb/defaults.yml</literal> and
     <literal>~/scratch/ansible/next/ardana/ansible/roles/FND-MDB/defaults/main.yml</literal>.
     Note that these files are identical. The first is a master file and the
     second is a scratch version that is used for the current deployment. Make
     the same changes as explained in <xref linkend="replicationNew"/>.
    </para>
   </step>
   <step>
    <para>
     Then run the following command:
    </para>
<screen>ansible-playbook -i hosts/verb_hosts tls-percona-reconfigure.yml</screen>
    <para>
     After this your MySQL should come up and replicate over TLS. You need to
     follow this section again if you ever want to switch TLS off for MySQL
     replication. You also must repeat these steps if any lifecycle operation
     changes the mysql_gcomms_bind_tls option.
    </para>
   </step>
  </procedure>
 </section>
 <section>
  <title>Testing whether a service is using TLS</title>
  <para>
   Almost all services that have a database are able to communicate over TLS.
   You can test whether a service, in this example the Identity service
   (Keystone), is communicating with MySQL over TLS by executing the following
   steps:
  </para>
  <orderedlist>
   <listitem>
    <para>
     Log into the &lcm; as root and run the mysql command.
    </para>
<screen>root@&lt;server&gt;:~# mysql</screen>
    <para>
     Type 'help;' or '\h' for help. Type '\c' to clear the current input
     statement.
    </para>
   </listitem>
   <listitem>
    <para>
     Run:
    </para>
<screen>mysql> select * from information_schema.user_statistics where user='keystone'\G</screen>
   </listitem>
   <listitem>
    <para>
     Note the results. TOTAL_SSL_CONNECTIONS should not be zero:
    </para>
<screen>*************************** 1. row ***************************
                  USER: keystone
     TOTAL_CONNECTIONS: 316
CONCURRENT_CONNECTIONS: 0
        CONNECTED_TIME: 905790
             BUSY_TIME: 205
              CPU_TIME: 141
        BYTES_RECEIVED: 197137617
            BYTES_SENT: 801964
  BINLOG_BYTES_WRITTEN: 0
          ROWS_FETCHED: 972421
          ROWS_UPDATED: 6893
       TABLE_ROWS_READ: 1025866
       SELECT_COMMANDS: 660209
       UPDATE_COMMANDS: 3039
        OTHER_COMMANDS: 299746
   COMMIT_TRANSACTIONS: 0
 ROLLBACK_TRANSACTIONS: 295200
    DENIED_CONNECTIONS: 0
      LOST_CONNECTIONS: 83
         ACCESS_DENIED: 0
         EMPTY_QUERIES: 71778
 TOTAL_SSL_CONNECTIONS: 298
1 row in set (0.00 sec)

mysql></screen>
   </listitem>
  </orderedlist>
 </section>
</section>
