<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<!-- Converted by suse-upgrade version 1.1 -->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.hpe.inst.support">
 <title><!-- Troubleshooting and -->Support</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
    <dm:maintainer>fs</dm:maintainer>
    <dm:status>editing</dm:status>
    <dm:deadline/>
    <dm:priority/>
    <dm:translation>no</dm:translation>
    <dm:languages/>
  </dm:docmanager>
 </info>
 <para>
  Find solutions for common pitfalls and technical details for requesting
  &productname; support.
 </para>
 <sect1 xml:id="sec.hpe.depl.trouble.faq">
  <title>FAQ</title>
  <para/>
  <qandaset defaultlabel="qanda">
   <qandadiv>
    <title>Node Deployment</title>
    <qandaentry>
     <!-- fs 2018-06-18: bsc 1088502 -->
     <question>
      <para>
       How to Disable the &yast; Installer Self-Update when deploying nodes?
      </para>
     </question>
     <answer>
      <para>
       Prior to starting an installation, the &yast; installer can update
       itself if respective updates are available. By default this feature is
       enabled. In case of problems with this feature, disable it as follows:
      </para>
      <procedure>
       <step>
        <para>
         Open
         <filename>~/openstack/ardana/ansible/roles/cobbler/templates/sles.grub.j2</filename>
         with an editor and add <literal>self_update=0</literal> to the line
         starting with <literal>linuxefi</literal>. The results needs to look
         like the following:
        </para>
        <screen>linuxefi images/{{ sles_profile_name }}-x86_64/linux ifcfg={{ item[0] }}=dhcp install=http://{{ cobbler_server_ip_addr }}:79/cblr/ks_mirror/{{ sles_profile_name }} self_update=0 AutoYaST2=http://{{ cobbler_server_ip_addr }}:79/cblr/svc/op/ks/system/{{ item[1] }}</screen>
       </step>
       <step>
        <para>
         Commit your changes:
        </para>
        <screen>&prompt.ardana;git commit -m "Disable Yast Self Update feature" \
~/openstack/ardana/ansible/roles/cobbler/templates/sles.grub.j2</screen>
       </step>
       <step>
        <para>
         If you need to reenable the installer self-update, remove
         <literal>self_update=0</literal> and commit the changes.
        </para>
       </step>
      </procedure>
     </answer>
    </qandaentry>
   </qandadiv>
  </qandaset>
 </sect1>
 <sect1 xml:id="sec.hpe.installation.trouble.support">
  <title>Support</title>
   <para>
   Before contacting support to help you with a problem on your cloud, it is
   strongly recommended that you gather as much information about your system
   and the problem as possible. For this purpose, &productname; ships with a
   tool called <command>supportconfig</command>. It gathers system information
   such as the current kernel version being used, the hardware, RPM database,
   partitions, and other items.  <command>supportconfig</command> also collects
   the most important log files, making it easier for the supporters to
   identify and solve your problem.
  </para>
  <para>
   It is recommended to always run <command>supportconfig</command> on the
   CLM Server and on the &contrnode;(s). If a &compnode; or a
   &stornode; is part of the problem, run
   <command>supportconfig</command> on the affected node as well. For
   details on how to run <command>supportconfig</command>, see
   <link xlink:href="&suse-onlinedoc;/sles-12/book_sle_admin/data/cha_adm_support.html"/>.
  </para>

  <sect2 xml:id="hpe.inst.support.ptf">
   <title>
    Applying PTFs (Program Temporary Fixes) Provided in Support Contract
   </title>
   <para>
    Under certain circumstances, PTFs may be provided RPM packages. To make
    them available on all nodes in your cloud, proceed as follows. (If you
    prefer to test them first on a single node, see <xref
    linkend="hpe.inst.support.ptf_test"/>.)
   </para>
   <procedure>
    <step>
     <para>
      Download the packages from the location indicated by your support provider to
      a temporary location on the CLM Server.
     </para>
    </step>
    <step>
     <para>
      Move the packages from the temporary download location to the
      following directories on the CLM Server:
     </para>
     <variablelist>
      <varlistentry>
       <term>
        <quote>noarch</quote> packages (<filename>*.noarch.rpm</filename>):
       </term>
       <listitem>
        <para>
         <filename>/srv/www/suse-12.2/x86_64/repos/PTF/rpm/noarch/</filename>
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <quote>x86_64</quote> packages (<filename>*.x86_64.rpm</filename>)
       </term>
       <listitem>
        <para>
         <filename>/srv/www/suse-12.2/x86_64/repos/PTF/rpm/x86_64/</filename>
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </step>
    <step>
     <para>
      Create or update the repository metadata:
     </para>
<screen>&prompt.ardana;createrepo-cloud-ptf</screen>
    </step>
    <step>
     <para>
      To deploy the updates, proceed as described in <xref
      linkend="maintenance_update"/> and refresh the PTF repository before
      installing package updates on a node:
     </para>
     <screen>&prompt.ardana;zypper refresh -fr PTF</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="hpe.inst.support.ptf_test">
   <title>
    Testing PTFs (Program Temporary Fixes) on a Single Node
   </title>
   <para>
    If you want to test a PTF (Program Temporary Fix) before deploying it on
    all nodes, or if you want to verify that it fixes a certain issue, you can
    manually install the PTF on a single node.
   </para>
    <para>
     In the following procedure, a PTF named
     <filename>venv-openstack-nova-x86_64-ptf.rpm</filename>, containing a fix
     for &o_comp;, is installed on the &compnode; 01.
    </para>
    <procedure>
     <title>Testing a Fix for &o_comp;</title>
     <step>
      <para>
       Check the version number of the package(s) that will be upgraded with
       the PTF. Run the following command on the deployer node:
      </para>
      <screen>&prompt.ardana;rpm -q venv-openstack-nova-x86_64</screen>
     </step>
     <step>
      <para>
       Install the PTF on the deployer node:
      </para>
      <screen>&prompt.sudo;zypper up ./venv-openstack-nova-x86_64-ptf.rpm</screen>
      <para>
       This will install a new TAR archive in
       <filename>/opt/ardana_packager/ardana-8/sles_venv/x86_64/</filename>.
      </para>
     </step>
     <step>
      <para>
       Register the TAR archive with the indexer:
      </para>
      <screen>&prompt.sudo;create_index --dir \
      /opt/ardana_packager/ardana-8/sles_venv/x86_64</screen>
      <para>
       This will update the indexer
       <filename>/opt/ardana_packager/ardana-8/sles_venv/x86_64/packages</filename>.
      </para>
     </step>
     <step>
      <para>
       Deploy the fix on &compnode; 01:
      </para>
      <substeps>
       <step>
        <para>
         Check whether the fix can be deployed on a single &compnode; without
         updating the &contrnode;s:
        </para>
        <screen>&prompt.ardana;cd ~/scratch/ansible/next/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/verb_hosts nova-upgrade.yml \
--limit=inputmodel-ccp-compute0001-mgmt --list-hosts</screen>
       </step>
       <step>
        <para>
         If the previous test passes, install the fix:
        </para>
        <screen>&prompt.ardana;ansible-playbook -i hosts/verb_hosts nova-upgrade.yml \
--limit=inputmodel-ccp-compute0001-mgmt</screen>
       </step>
      </substeps>
     </step>
     <step>
      <para>
       Validate the fix, for example by logging in to the &compnode; to check
       the log files:
      </para>
      <screen>&prompt.ardana;ssh ardana@inputmodel-ccp-compute0001-mgmt</screen>
     </step>
     <step>
      <para>
       If your tests are positive, install the PTF on all nodes as described in
       <xref linkend="hpe.inst.support.ptf"/>.
      </para>
      <para>
       If the tests are negative, uninstall the fix and restore the previous
       state of the &compnode; by running the following commands on the
       deployer node;
      </para>
      <screen>&prompt.sudo;zypper install --force venv-openstack-nova-x86_64-<replaceable>OLD-VERSION</replaceable>
&prompt.ardana;cd ~/scratch/ansible/next/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/verb_hosts nova-upgrade.yml \
--limit=inputmodel-ccp-compute0001-mgmt</screen>
      <para>
       Make sure to replace <replaceable>OLD-VERSION</replaceable> with the
       version number you checked in the first step.
      </para>
     </step>
    </procedure>
  </sect2>
  </sect1>
</chapter>
