<?xml version="1.0"?>
<!DOCTYPE section [
 <!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<!---->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="upgrade_patch"><title>&kw-hos-tm; &kw-hos-version-50;: Delta Upgrades</title><!---->
        <para><para xml:id="idg-all-upgrade-upgrade_deltas-xml-4"><phrase><phrase/></phrase></para></para>

        
        
        <sidebar xml:id="idg-all-upgrade-upgrade_deltas-xml-6"><para>It is now possible to apply minor, patch and hot-fix updates using <literal>delta</literal> kits. These 
                <literal>delta</literal> kits contain only the set of changes directly related to the update, so they are 
                smaller in size, and more importantly, they reduce the impact of the update on a running cloud, by
                only modifying the services that have  changed in that release.
            </para>
<para>A full &kw-hos; kit contains the following elements:</para>
<itemizedlist>
                <listitem><para>A set of packages: hlinux debs and RHEL rpms.</para>
</listitem>
                <listitem><para>A set of python virtual environments (one per service/distro combination).</para>
</listitem>
                <listitem><para>A set of Ansible playbooks for both lifecycle manager  setup and carrying out lifecycle operations 
                    for an OpenStack cloud (deploy, upgrade, etc.)</para>
</listitem>
                <listitem><para> A set of input model yaml files, which contains both &kw-hos;
                    service definitions and example sets of cloud model files.</para>
</listitem>
                <listitem><para>A set of config file symlinks, which determines the configuration files that are exposed for 
                    customer modification in the <literal>my_cloud</literal> area on the lifecycle manager.</para>
</listitem>                
            </itemizedlist><para>A patch kit will contain only the venvs that have changed (relative to the prior release). So in comparison to the full kit, a patch kit will have:</para>
<orderedlist>
                <listitem><para>The set of new or modified venvs relative to the previous release.</para>
</listitem>
                <listitem><para>A complete set of Ansible playbooks, input model yml file and config file  symlinks. Regardless of the changes being 
                    supplied in a minor/patch update kit, these will always be supplied in full. This size of these artefacts 
                    is insignificant in comparison with hlinux/RHEL packages and service venvs.</para>
</listitem>
            </orderedlist><para>
            There are a number of considerations to take into account when using delta upgrades:    
            </para>
<orderedlist>
               <listitem><para>The use of a patch kit does not simplify the operations needed to upgrade your
                    cloud - the same upgrade procedure will be followed whether using a patch kit or
                    a full kit.</para>
</listitem>
               <listitem><para>A minor, patch or hotfix release can only be applied on top of a cloud running with the immediately preceding release, for example:
               </para>
<orderedlist>
                  
                   <listitem><para>2.1.5 delta update can be applied on top of a 2.1.4 cloud</para>
</listitem>
                   <listitem><para>2.1.5 delta update cannot be applied on top of a 2.1.3 cloud</para>
</listitem>
                   
               </orderedlist></listitem>
               
               <listitem><para>The delta update process will not support major upgrades, e.g. 2.x to  3.0, or any upgrade involving a change in OpenStack release.</para>
</listitem>
               <listitem><para>The individual service venvs in a patch kit are complete venvs, not patches for
                    the venvs.</para>
</listitem>
           </orderedlist></sidebar>
    </section>
