<?xml version="1.0"?>
<!DOCTYPE section [
 <!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<section xml:id="ironic-node-cleaning"
 xmlns="http://docbook.org/ns/docbook" version="5.1"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Node Cleaning</title>
 <para>
  Cleaning is the process by which data is removed after a previous tenant has
  used the node. Cleaning requires use of ironic's agent_ drivers. It is
  extremely important to note that if the pxe_ drivers are utilized, no node
  cleaning operations will occur, and a previous tenant's data could be found
  on the node. The same risk of a previous tenant's data possibly can occur if
  cleaning is explicitly disabled as part of the installation.
 </para>
 <para>
  By default, cleaning attempts to utilize ATA secure erase to wipe the
  contents of the disk. If secure erase is unavailable, the cleaning
  functionality built into the Ironic Python Agent falls back to an operation
  referred to as "shred" where random data is written over the contents of the
  disk, and then followed up by writing "0"s across the disk. This can be a
  time-consuming process.
 </para>
 <para>
  An additional feature of cleaning is the ability to update firmware or
  potentially assert new hardware configuration, however, this is an advanced
  feature that must be built into the Ironic Python Agent image. Due to the
  complex nature of such operations, and the fact that no one size fits all,
  this requires a custom Ironic Python Agent image to be constructed with an
  appropriate hardware manager. For more information on hardware managers, see
  <link xlink:href="http://docs.openstack.org/developer/ironic-python-agent/#hardware-managers"/>
 </para>
 <para>
  Ironic's upstream documentation for cleaning may be found here:
  <link xlink:href="http://docs.openstack.org/developer/ironic/deploy/cleaning.html"/>
 </para>
 <section>
  <title>Setup</title>
  <para>
   Cleaning is enabled by default in ironic when installed via the &clm;.
   You can verify this by examining the ironic-conductor.conf file.
   Look for:
  </para>
<screen>
[conductor]
clean_nodes=true
</screen>
 </section>
 <section>
  <title>In use</title>
  <para>
   When enabled, cleaning will be run automatically when nodes go from active
   to available state or from manageable to available. To monitor what step of
   cleaning the node is in, run <literal>ironic node-show</literal>:
  </para>
<screen>
<?dbsuse-fo font-size="0.70em"?>
stack@ardana-cp1-c1-m1-mgmt:~$ ironic node-show 4e6d4273-2535-4830-a826-7f67e71783ed
+------------------------+-----------------------------------------------------------------------+
| Property               | Value                                                                 |
+------------------------+-----------------------------------------------------------------------+
| target_power_state     | None                                                                  |
| extra                  | {}                                                                    |
| last_error             | None                                                                  |
| updated_at             | 2016-04-15T09:33:16+00:00                                             |
| maintenance_reason     | None                                                                  |
| provision_state        | cleaning                                                              |
| clean_step             | {}                                                                    |
| uuid                   | 4e6d4273-2535-4830-a826-7f67e71783ed                                  |
| console_enabled        | False                                                                 |
| target_provision_state | available                                                             |
| provision_updated_at   | 2016-04-15T09:33:16+00:00                                             |
| maintenance            | False                                                                 |
| inspection_started_at  | None                                                                  |
| inspection_finished_at | None                                                                  |
| power_state            | power off                                                             |
| driver                 | agent_ilo                                                             |
| reservation            | ardana-cp1-c1-m1-mgmt                                                 |
| properties             | {u'memory_mb': 4096, u'cpu_arch': u'amd64', u'local_gb': 80,          |
|                        | u'cpus': 2, u'capabilities': u'boot_mode:uefi,boot_option:local'}     |
| instance_uuid          | None                                                                  |
| name                   | None                                                                  |
| driver_info            | {u'ilo_deploy_iso': u'249bf095-e741-441d-bc28-0f44a9b8cd80',          |
|                        | u'ipmi_username': u'Administrator', u'deploy_kernel':                 |
|                        | u'3a78c0a9-3d8d-4764-9300-3e9c00e167a1', u'ilo_address':              |
|                        | u'10.1.196.113', u'ipmi_address': u'10.1.196.113', u'deploy_ramdisk': |
|                        | u'd02c811c-e521-4926-9f26-0c88bbd2ee6d', u'ipmi_password': u'******', |
|                        | u'ilo_password': u'******', u'ilo_username': u'Administrator'}        |
| created_at             | 2016-04-14T08:30:08+00:00                                             |
| driver_internal_info   | {<emphasis role="bold">u'clean_steps': None</emphasis>,                      |
|                        | u'hardware_manager_version': {u'generic_hardware_manager': u'1.0'},   |
|                        | u'is_whole_disk_image': True, u'agent_erase_devices_iterations': 1,   |
|                        | u'agent_url': u'http://192.168.246.245:9999',                         |
|                        | u'agent_last_heartbeat': 1460633166}                                  |
| chassis_uuid           |                                                                       |
| instance_info          | {}                                                                    |
+------------------------+-----------------------------------------------------------------------+

</screen>
  <para>
   The status will be in the <literal>driver_internal_info</literal> field. You
   will also be able to see the <literal>clean_steps</literal> list there.
  </para>
 </section>
 <section>
  <title>Troubleshooting</title>
  <para>
   If an error occurs during the cleaning process, the node will enter the
   clean failed state so that it is not deployed. The node remains powered on
   for debugging purposes. The node can be moved to the manageable state to
   attempt a fix using the following command:
  </para>
<screen>
ironic node-set-provision-state &lt;node id&gt; manage
</screen>
  <para>
   Once you have identified and fixed the issue, you can return the node to
   available state by executing the following commands:
  </para>
<screen>
ironic node-set-maintenance &lt;node id&gt; false
ironic node-set-provision-state &lt;node id&gt; provide
</screen>
  <para>
   This will retry the cleaning steps and set the node to available state upon
   their successful completion.
  </para>
 </section>
 <section>
  <title>Disabling Node Cleaning</title>
  <para>
   To disable node cleaning, edit
   <literal>~/openstack/my_cloud/definition/data/ironic/ironic_config.yml</literal>
   and set <literal>enable_node_cleaning</literal> to <literal>false</literal>.
  </para>
  <para>
   Commit your changes:
  </para>
<screen>
cd ~/openstack/ardana/ansible
git add -A
git commit -m "disable node cleaning"
</screen>
  <para>
   Deploy these changes by re-running the configuration processor and
   reconfigure the ironic installation:
  </para>
<screen>
cd ~/openstack/ardana/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml
ansible-playbook -i hosts/localhost ready-deployment.yml
cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts ironic-reconfigure.yml
</screen>
 </section>
</section>
