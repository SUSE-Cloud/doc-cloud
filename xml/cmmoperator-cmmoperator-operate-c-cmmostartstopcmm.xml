<?xml version="1.0"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [ <!ENTITY % entities SYSTEM "entities.ent"> %entities; ]>
<!-- Copyright FUJITSU LIMITED 2017 -->
<section id="idg-cmmoperator-cmmoperator-operate-c-cmmostartstopcmm-xml-1">
 <title>Starting and Stopping Agents and Services</title>
 <para>
  The <phrase>CMM</phrase> installation package contains a script that you can
  use to start, stop, and view the status of the <phrase>CMM</phrase> agents
  and services. <phrase>CMM</phrase> consists of:
 </para>
 <para id="concept_conbody_section_1_p">
  <informaltable colsep="1" frame="all" rowsep="1">
   <tgroup cols="3">
    <colspec colname="c1" colnum="1" colwidth="1*"/>
    <colspec colname="c2" colnum="2" colwidth="9.00*"/>
    <colspec colname="c3" colnum="3" colwidth="11.00*"/>
    <thead>
     <row>
      <entry>#</entry>
      <entry>Service Name</entry>
      <entry>Description</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>1</entry>
      <entry><literal>zookeeper</literal>
      </entry>
      <entry>Centralized service for maintaining configuration information, naming, providing distributed synchronization, and providing group services.</entry>
     </row>
     <row>
      <entry>2</entry>
      <entry><literal>storm-nimbus</literal>
      </entry>
      <entry>Storm is a distributed real-time computation system for processing large volumes of high-velocity data. The Storm Nimbus daemon is responsible for distributing code around a cluster, assigning tasks to machines, and monitoring for failures. </entry>
     </row>
     <row>
      <entry>3</entry>
      <entry><literal>storm-supervisor</literal>
      </entry>
      <entry>The Storm supervisor listens for work assigned to its machine and starts and stops worker processes as necessary based on what Nimbus has assigned to it.</entry>
     </row>
     <row>
      <entry>4</entry>
      <entry><literal>mariadb</literal>
      </entry>
      <entry>MariaDB database service. <phrase>CMM</phrase> stores configuration information in this database. </entry>
     </row>
     <row>
      <entry>5</entry>
      <entry><literal>kafka</literal>
      </entry>
      <entry>Message queue service.</entry>
     </row>
     <row>
      <entry>6</entry>
      <entry><literal>influxdb</literal>
      </entry>
      <entry>InfluxDB database service. <phrase>CMM</phrase> stores metrics and alarms in this database.</entry>
     </row>
     <row>
      <entry>7</entry>
      <entry><literal>elasticsearch</literal>
      </entry>
      <entry>Elasticsearch database service. <phrase>CMM</phrase> stores the log data in this database.</entry>
     </row>
     <row>
      <entry>8</entry>
      <entry><literal>memcached</literal>
      </entry>
      <entry>Memcached service. <phrase>CMM</phrase> uses it for caching authentication and authorization information required for the communication between the Log API and OpenStack Keystone.</entry>
     </row>
     <row>
      <entry>9</entry>
      <entry><literal>openstack-monasca-notification</literal>
      </entry>
      <entry>Notification Engine. </entry>
     </row>
     <row>
      <entry>10</entry>
      <entry><literal>openstack-monasca-thresh</literal>
      </entry>
      <entry>Threshold Engine. </entry>
     </row>
     <row>
      <entry>11</entry>
      <entry><literal>openstack-monasca-log-transformer</literal>
      </entry>
      <entry>Log Transformer. </entry>
     </row>
     <row>
      <entry>12</entry>
      <entry><literal>openstack-monasca-log-api</literal>
      </entry>
      <entry>Log API.</entry>
     </row>
     <row>
      <entry>13</entry>
      <entry><literal>openstack-monasca-persister </literal>
      </entry>
      <entry>Persister. </entry>
     </row>
     <row>
      <entry>14</entry>
      <entry><literal>openstack-monasca-api</literal>
      </entry>
      <entry>Monitoring API.</entry>
     </row>
     <row>
      <entry>15</entry>
      <entry><literal>openstack-monasca-agent</literal>
      </entry>
      <entry>Metrics Agent.</entry>
     </row>
     <row>
      <entry>16</entry>
      <entry><literal>kibana</literal>
      </entry>
      <entry>Kibana server.</entry>
     </row>
     <row>
      <entry>17</entry>
      <entry><literal>openstack-monasca-log-persister</literal>
      </entry>
      <entry>Log Persister. </entry>
     </row>
     <row>
      <entry>18</entry>
      <entry><literal>openstack-monasca-log-metrics</literal>
      </entry>
      <entry>Log Metrics.</entry>
     </row>
     <row>
      <entry>19</entry>
      <entry><literal>openstack-monasca-log-agent</literal>
      </entry>
      <entry>Log Agent.</entry>
     </row>
<!--row>
                                <entry>18</entry>
                                <entry><codeph>monasca-log-metrics</codeph></entry>
                                <entry>Log Guard.</entry>
                            </row -->
    </tbody>
   </tgroup>
  </informaltable>
 </para>
 <bridgehead renderas="sect4">Configuration</bridgehead>
 <para>
  For starting and stopping agents and services, the script must be configured
  in the <literal>services.yml</literal> file. This file is contained in the
  installation package for <phrase>CMM</phrase>,
  <literal>CMM-Service-1.1.0.tar.gz</literal>, which you have extracted to
  <literal>/opt/FJSVsvcmm</literal> on the Control Machine.
 </para>
 <para>
  In the configuration file, specify the <phrase>CMM</phrase> host where the
  <phrase>CMM</phrase> services and agents are installed. To do this, proceed,
  for example, as follows:
 </para>
 <para>
<screen>cd /opt/FJSVsvcmm
vim services.yml</screen>
 </para>
 <para>
  <literal>- hosts: monasca-node</literal> defines the host where
  <phrase>CMM</phrase> is installed. The host name must match the host name
  specified for the <phrase>CMM</phrase> host in the
  <literal>/etc/ansible/hosts</literal> file on the Ansible Master, for
  example:
 </para>
 <para>
<screen># Monasca Hosts
[monasca_group]
monasca-node        ansible_ssh_host=192.168.10.4 ansible_ssh_user=administrator</screen>
 </para>
 <note>
  <para>
   Do not change the sequence of the services defined in the
   <literal>services.yml</literal> file.
  </para>
 </note>
 <bridgehead renderas="sect4">Usage</bridgehead>
 <para>
  Proceed as follows to run the script:
 </para>
 <para>
  <orderedlist>
   <listitem>
    <para>
     Log in to the <phrase>CMM</phrase> host.
    </para>
   </listitem>
   <listitem>
    <para>
     Connect to the Control Machine via SSH.
    </para>
   </listitem>
   <listitem>
    <para>
     Go to the directory where the <phrase>CMM</phrase> installation package is
     located.
    </para>
    <para>
     Example:
    </para>
    <para>
<screen>cd /opt/FJSVsvcmm</screen>
    </para>
   </listitem>
   <listitem>
    <para>
     Execute the script with the appropriate options:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       To display help information:
      </para>
      <para>
<screen>./services.sh --help</screen>
      </para>
     </listitem>
     <listitem>
      <para>
       To start all <phrase>CMM</phrase> agents and services:
      </para>
      <para>
<screen>./services.sh start -i /etc/ansible/hosts</screen>
      </para>
     </listitem>
     <listitem>
      <para>
       To stop all <phrase>CMM</phrase> agents and services:
      </para>
      <para>
<screen>./services.sh stop -i /etc/ansible/hosts</screen>
      </para>
     </listitem>
     <listitem>
      <para>
       To view the status of all <phrase>CMM</phrase> agents and services:
      </para>
      <para>
<screen>./services.sh status -i /etc/ansible/hosts</screen>
      </para>
     </listitem>
    </itemizedlist>
   </listitem>
  </orderedlist>
 </para>
 <bridgehead renderas="sect4">Starting and Stopping Individual Agents and Services</bridgehead>
 <para>
  You can start or stop the <phrase>CMM</phrase> agents and services
  individually. When doing so, you need to stick to the following sequence:
 </para>
 <para id="zookeeper_concept_conbody_section_4_p">
  <orderedlist>
   <listitem>
    <para>
     <literal>zookeeper</literal>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>storm-nimbus</literal>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>storm-supervisor</literal>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>mariadb</literal>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>kafka</literal>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>influxdb</literal>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>elasticsearch</literal>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>memcached</literal>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>openstack-monasca-notification</literal>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>openstack-monasca-thresh</literal>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>openstack-monasca-log-transformer</literal>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>openstack-monasca-log-api</literal>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>openstack-monasca-persister </literal>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>openstack-monasca-api</literal>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>openstack-monasca-agent</literal>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>kibana</literal>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>openstack-monasca-log-persister</literal>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>openstack-monasca-log-metrics</literal>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>openstack-monasca-log-agent</literal>
    </para>
   </listitem>
  </orderedlist>
 </para>
 <para>
  When stopping individual services, proceed in the reverse order.
 </para>
 <para>
  Use the following command to start an individual service:
 </para>
 <para>
<screen>sudo systemctl start &lt;service&gt;</screen>
 </para>
 <para>
  Example:
 </para>
 <para>
<screen>sudo systemctl start openstack-monasca-api</screen>
 </para>
 <para>
  Use the following command to stop an individual service:
 </para>
 <para>
<screen>sudo systemctl stop &lt;service&gt;</screen>
 </para>
 <para>
  Example:
 </para>
 <para>
<screen>sudo systemctl stop openstack-monasca-api</screen>
 </para>
 <para>
  Use the following command to view the status of an individual service:
 </para>
 <para>
<screen>sudo systemctl status &lt;service&gt;</screen>
 </para>
 <para>
  Example:
 </para>
 <para>
<screen>sudo systemctl status openstack-monasca-api</screen>
 </para>
</section>
