<?xml version="1.0"?>
<!DOCTYPE section [
 <!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<!--Edit status: not edited-->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
        xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="concept_controlplanes_regions"
        version="5.1">
        <title>Control Planes and Regions</title>


        <para>A region in OpenStack terms is a collection of URLs that together provide a consistent
                set of services (Nova, Neutron, Swift, etc). Regions are represented in the Keystone
                identity service catalog and clients can decide which region they want to
                use.</para>
        <para>For the owner of a cloud, regions provide a way of segmenting resources for scale,
                resilience, and
                isolation.<!-- However, each region needs some resources for its
        <uicontrol>control-plane</uicontrol>.--></para>

        <para> Regions don't have to be disjointed; for example, you can have a Swift service shared
                across more than one region, in which case the Swift URL for both regions will be
                the same and any region-specific services will use the same Swift instance. However,
                not all services can be shared in this way. For example, a Neutron service cannot be
                used by more than one Nova and so these will generally be deployed as region
                specific services, provided from separate control-planes. Equally in &kw-hos;,
                Mysql and RabbitMQ cannot be shared by more than one instance of the same service
                (for example a single mysql cluster cannot be used by two different instances of
                Nova, and so these are also deployed on a per-control basis. </para>

        <para> In the input model, each region is defined as a set of services drawn from one or
                more control-planes. All of the following are valid mappings of control-planes to
                regions:</para>

        <mediaobject>
                <imageobject role="fo">
                        <imagedata fileref="media-inputmodel-multi-region.png" width="75%"
                                format="PNG"/>
                </imageobject>
                <imageobject role="html">
                        <imagedata fileref="media-inputmodel-multi-region.png.png"/>
                </imageobject>
        </mediaobject>


        <para>In a simple single control-plane cloud, there is no need for a separate region
                definition and the control-plane itself can define the region name.</para>


</section>
