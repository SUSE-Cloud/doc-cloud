<?xml version="1.0"?>
<!DOCTYPE section [
 <!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<section xml:id="DesignateInfoBlox"
 xmlns="http://docbook.org/ns/docbook" version="5.1"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <!--FIXME: comment from DITA original: "not tested"-->
 <title>Installing the DNS Service with InfoBlox</title>
 <para>
  &kw-hos; DNS service can be installed with the InfoBlox back-end instead of
  the default PowerDNS back-end. To use InfoBlox as the back-end, all
  prerequisites must be satisfied and the configuration of
  InfoBlox must be complete.
 </para>
 <note>
  <para>
   No DNS server will be deployed onto the &kw-hos; nodes. Instead, zones will
   be hosted on the InfoBlox servers.
  </para>
 </note>
 <important>
  <para>
   Before you enable and use InfoBlox in &productname;, review the
   <citetitle>InfoBlox OpenStack Drive Deployment Guide</citetitle> at
   <link xlink:href="https://www.infoblox.com/wp-content/uploads/infoblox-deployment-guide-infoblox-openstack-driver.pdf"/>.
   Address any questions with your InfoBlox support contact.
  </para>
 </important>
 <section xml:id="sec.infoblox.prerequisite">
  <title>Prerequisites</title>
  <orderedlist>
   <listitem>
    <para>
     An existing InfoBlox system deployed within your organization.
    </para>
   </listitem>
   <listitem>
    <para>
     IPs and other credentials required to access the InfoBlox WS API.
    </para>
   </listitem>
   <listitem>
    <para>
     Network connectivity to and from the cluster containing &desig; and the
     InfoBlox WS API.
    </para>
   </listitem>
  </orderedlist>
  <para>
   This information is available from your InfoBlox system administrator.
  </para>
 </section>
 <section xml:id="sec.infoblox.configure-back-end">
  <title>Configuring the Back-end</title>
  <para>
   If not already present, DNS service components must be placed on a cluster.
   Additionally, ensure the default <literal>bind</literal>
   component has been removed, and <literal>powerdns</literal> has
   not been added. Replace the <literal>designate-mdns</literal> component with
   the <literal>designate-mdns-external</literal> component.
  </para>
<screen>control-planes:
          - name: control-plane-1
            region-name: region1
              - lifecycle-manager-target

          clusters:
            - name: cluster1
              service-components:
              - lifecycle-manager
              - mariadb
              - ip-cluster
              - apache2
              - ...
              - designate-api
              - designate-central
              - designate-pool-manager
              - designate-zone-manager
              - designate-mdns-external
              - designate-client</screen>
  <para>
   You will need to provide DNS service information details on your InfoBlox
   deployment. Open the &desig; pool-manager configuration template:
  </para>
<screen>$ cd ~/openstack/my_cloud
$ nano config/designate/pool-manager.conf.j2</screen>
  <para>
   In the <filename>config/designate/pool-manager.conf.j2</filename>, find the
   following code block:
  </para>
<screen>  nameservers:
    - host: &lt;infoblox-server-ip&gt;
      port: &lt;infoblox-port-number&gt;
   ...
     also_notifies:
    - host: &lt;infoblox-server-ip&gt;
      port: &lt;infoblox-port-number&gt;</screen>
  <para>
   Make the following changes:
  </para>
  <procedure>
   <step>
    <para>
     Uncomment the block for <literal>infoblox</literal> and
     <literal>also_notifies</literal>. In Jinja2, this means
     replacing the <literal>{#</literal> and <literal>#}</literal> markers with
     <literal>{{</literal> and <literal>}}</literal>.
    </para>
   </step>
   <step>
    <para>
     Fill in the API URL, user name, password, and all remaining fields.
    </para>
   </step>
   <step>
    <para>
     Save the file.
    </para>
   </step>
  </procedure>
  <para>
   Once complete, the block should look like this:
  </para>
<screen>    - type: infoblox
      description: infoblox Cluster

      masters:
{% if DES_PMG.consumes_DES_MDN_EXT is defined %}
{% for mdn_member in DES_PMG.consumes_DES_MDN_EXT.members.private %}
        - host: {{ mdn_member.ip_address }}
          port: {{ mdn_member.port }}
{% endfor %}
{% endif %}

      options:
        wapi_url: https://&lt;infoblox-server-ip&gt;/wapi/v2.2.2/
        username: hos-designate
        password: MySecretPassword
        ns_group: designate
        sslverify: False
        dns_view: default
        network_view: default</screen>
  <para>
   You will need to inspect and commit the changes before proceeding with the
   deployment:
  </para>
<screen>$git diff ardana/ansible/roles/designate-pool-manager/templates/pools.yaml.j2
index 291c6c9..b7fb39c 100644
--- a/ardana/ansible/roles/designate-pool-manager/templates/pools.yaml.j2
+++ b/ardana/ansible/roles/designate-pool-manager/templates/pools.yaml.j2
@@ -28,6 +28,8 @@
       priority: 2

   nameservers:
+    - host: &lt;infoblox-server-ip&gt;
+      port: &lt;infoblox-port-number&gt;
 {% if DES_PMG.consumes_FND_PDN is defined %}
 {% for pdn_member in DES_PMG.consumes_FND_PDN.members.private %}
     - host: {{ pdn_member.ip_address }}
@@ -40,7 +42,9 @@
       port: {{ bnd_member.port }}
 {% endfor %}
 {% endif %}
-#  also_notifies:
+  also_notifies:
+    - host: &lt;infoblox-server-ip&gt;
+      port: &lt;infoblox-port-number&gt;
   targets:
 {% if DES_PMG.consumes_FND_PDN is defined %}
     - type: powerdns
@@ -89,27 +93,27 @@
 {% endfor %}
 {% endif %}

-#
-#    - type: infoblox
-#      description: infoblox Cluster
-#
-#      masters:
+
+    - type: infoblox
+      description: infoblox Cluster
+
+      masters:
 {% if DES_PMG.consumes_DES_MDN_EXT is defined %}
 {% for mdn_member in DES_PMG.consumes_DES_MDN_EXT.members.private %}
-#        - host: {{ mdn_member.ip_address }}
-#          port: {{ mdn_member.port }}
+        - host: {{ mdn_member.ip_address }}
+          port: {{ mdn_member.port }}
 {% endfor %}
 {% endif %}
-#
-#      options:
-#        wapi_url: https://127.0.0.1/wapi/v2.2.2/
-#        username: admin
-#        password: infoblox
-#        ns_group: designate
-#        sslverify: False
-#        dns_view: default
-#        network_view: default
-#
+
+      options:
+        wapi_url: https://127.0.0.1/wapi/v2.2.2/
+        username: admin
+        password: infoblox
+        ns_group: designate
+        sslverify: False
+        dns_view: default
        </screen>
  <para>
   <emphasis role="bold">SSL and CA Certificate</emphasis>
  </para>
  <para>
   To enable SSL Verify, edit the following file:
  </para>
<screen>$ cd ~/openstack/my_cloud
$ nano config/designate/pools.yaml.j2</screen>
  <para>
   In the <literal>infoblox</literal> section, set
   <literal>sslverify</literal> to <literal>True</literal>:
  </para>
<screen>sslverify: True</screen>
  <para>
   To generate a CA certificate for InfoBlox, follow these steps:
  </para>
  <procedure>
   <step>
    <para>
     Log in to the InfoBlox user interface.
    </para>
   </step>
   <step>
    <para>
     Generate a self-signed certificate by selecting:
     <menuchoice><guimenu>System</guimenu>
     <guimenu>Certificate</guimenu><guimenu>HTTP Cert</guimenu>
     <guimenu>Generate Self Signed Certificate</guimenu></menuchoice>
    </para>
   </step>
   <step>
    <para>
     Provide the host name as the InfoBlox server IP.
    </para>
   </step>
   <step>
    <para>
     Reload the InfoBlox user interface. The certificate will be loaded and can
     be verified through the browser.
    </para>
   </step>
   <step>
    <para>
     To download the certificate, select:
     <menuchoice><guimenu>System</guimenu><guimenu>Certificate</guimenu>
     <guimenu>HTTP Cert</guimenu><guimenu>Download the Certificate</guimenu>
     </menuchoice>.
    </para>
   </step>
   <step>
    <para>
     Copy the certificate file to
     <filename>~/openstack/my_cloud/config/tls/cacerts/</filename>.
    </para>
   </step>
  </procedure>
  <para>
   Commit the changes to Git:
  </para>
<screen>$ git commit -a -m "Configure Designate InfoBlox back-end"</screen>
 </section>
</section>
