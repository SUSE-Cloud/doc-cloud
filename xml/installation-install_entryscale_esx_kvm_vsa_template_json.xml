<?xml version="1.0"?>
<!DOCTYPE section [
 <!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<!---->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="topic4797cgikdjm"><title>&kw-hos-tm; &kw-hos-version-50;:  Sample activationtemplate.json File for ESX
        Compute</title><abstract><para><para>Sample activation template file and its
            parameters.</para></para>
</abstract>
    <para>The process for installing the &productname; Entry Scale ESX, KVM Model requires creating a
      sample network information template and modifying the details of the template. You will use
      the template to register the cloud network configuration for the vCenter.  The template is in
      the JSON format.</para>

        <para>Execute the following command to get the activation template.</para>

        <screen>eon get-activation-template [--filename &lt;Activate JSON&gt;] --type &lt;Type of the resource&gt; </screen>
        <para>For
            example:</para>
<screen>eon get-activation-template --filename activationtemplate.json --type esxcluster
---------------------------------------------------------------
Saved the sample network file in /home/user/activationtemplate.json
---------------------------------------------------------------</screen>

        <para>EON supports two network driver for ESX deployment. Based on your deployment of ESX
            cloud, the template (activationtemplate.json) is automatically pre-configured specific
            to the driver</para>
<orderedlist xml:id="ol_nbl_d13_px">
                <listitem><para>OVSvApp driver: For ESX with OVSvApp driver (default)</para>
</listitem>
                <listitem><para>NoOp driver: For ESX with DCN driver</para>
</listitem>
            </orderedlist>


        <para>A sample of <literal>activationtemplate.json</literal> file for OVSvApp driver (default)
            and NoOp are shown as follows. </para>
<warning><para>Update the sample template as per
                your environment. </para>
</warning>

        <itemizedlist xml:id="ul_elh_yfq_nx">
                <listitem><para><emphasis role="bold">OVSvApp template</emphasis></para>
</listitem>
            </itemizedlist>

        <para>A Sample json file for OVSvApp driver where networking solution is provided by OVSvApp
            appliances (default).</para>

        <screen>{
 "input_model": {
  "server_group": "RACK1"
 },
 "network_properties": {
  "switches": [
   {
    "type": "dvSwitch",
    "name": "MGMT-DVS",
    "physical_nics": "vmnic1",
    "mtu": "1500"
   },
   {
    "type": "dvSwitch",
    "name": "TRUNK-DVS",
    "physical_nics": "",
    "mtu": "1500"
   }
  ],
  "vm_config": [
   {
    "nics": [
     {
      "device": "eth0",
      "type": "vmxnet3",
      "pci_id": "",
      "portGroup": "ESX-CONF"
     },
     {
      "device": "eth1",
      "type": "vmxnet3",
      "pci_id": "",
      "portGroup": "MGMT"
     }
    ],
    "server_role": "ESX-COMPUTE-ROLE",
    "memory_in_mb": "4096",
    "cpu": "4"
   },
   {
    "nics": [
     {
      "device": "eth0",
      "type": "vmxnet3",
      "pci_id": "",
      "portGroup": "ESX-CONF"
     },
     {
      "device": "eth1",
      "type": "vmxnet3",
      "pci_id": "",
      "portGroup": "MGMT"
     },
     {
      "device": "eth2",
      "type": "vmxnet3",
      "pci_id": "",
      "portGroup": "GUEST"
     },
     {
      "device": "eth3",
      "type": "vmxnet3",
      "pci_id": "",
      "portGroup": "TRUNK"
     }
    ],
    "server_role": "OVSVAPP-ROLE",
    "memory_in_mb": "4096",
    "cpu": "4"
   }
  ],
  "portGroups": [
   {
    "nic_teaming": {
     "network_failover_detection": "1",
     "notify_switches": "yes",
     "load_balancing": "1",
     "active_nics": "vmnic1"
    },
    "vlan_type": "trunk",
    "vlan": "33",
    "name": "ESX-CONF",
    "switchName": "MGMT-DVS"
   },
   {
    "nic_teaming": {
     "network_failover_detection": "1",
     "notify_switches": "yes",
     "load_balancing": "1",
     "active_nics": "vmnic1"
    },
    "vlan_type": "none",
    "vlan": "",
    "name": "MGMT",
    "switchName": "MGMT-DVS"
   },
   {
    "vlan": "34",
    "name": "GUEST",
    "vlan_type": "trunk",
    "switchName": "MGMT-DVS",
    "nic_teaming": {
     "network_failover_detection": "1",
     "notify_switches": "yes",
     "load_balancing": "1",
     "active_nics": "vmnic1"
    },
    "cloud_network_type": "vxlan"
   },
   {
    "vlan_type": "trunk",
    "vlan": "1-4094",
    "name": "TRUNK",
    "switchName": "TRUNK-DVS"
   }
  ],
  "template_info": {
   "upload_to_cluster": false
  },
  "esx_conf_net": {
   "start_ip": "",
   "cidr": "10.20.18.0/23",
   "end_ip": "",
   "gateway": "10.20.18.1",
   "portGroup": "ESX-CONF"
  }
 }
}</screen>

        <itemizedlist xml:id="ul_e41_zfq_nx">
                <listitem><para><emphasis role="bold">NoOp template</emphasis></para>
</listitem>
            </itemizedlist>

        <para> A sample json file for NoOp driver where networking solution is provided by DCN.</para>

        <screen>{
 "input_model": {
  "server_group": "RACK1"
 },
 "network_properties": {
  "switches": [
   {
    "type": "dvSwitch",
    "name": "MGMT-DVS",
    "physical_nics": "vmnic1",
    "mtu": "1500"
   }
  ],
  "vm_config": [
   {
    "nics": [
     {
      "device": "eth0",
      "type": "vmxnet3",
      "pci_id": "",
      "portGroup": "ESX-CONF"
     },
     {
      "device": "eth1",
      "type": "vmxnet3",
      "pci_id": "",
      "portGroup": "MGMT"
     }
    ],
    "server_role": "ESX-COMPUTE-ROLE",
    "memory_in_mb": "4096",
    "cpu": "4"
   }
  ],
  "portGroups": [
   {
    "nic_teaming": {
     "network_failover_detection": "1",
     "notify_switches": "yes",
     "load_balancing": "1",
     "active_nics": "vmnic1"
    },
    "vlan_type": "trunk",
    "vlan": "33",
    "name": "ESX-CONF",
    "switchName": "MGMT-DVS"
   },
   {
    "nic_teaming": {
     "network_failover_detection": "1",
     "notify_switches": "yes",
     "load_balancing": "1",
     "active_nics": "vmnic1"
    },
    "vlan_type": "none",
    "vlan": "",
    "name": "MGMT",
    "switchName": "MGMT-DVS"
   }
  ],
  "template_info": {
   "upload_to_cluster": false
  },
  "esx_conf_net": {
   "start_ip": "",
   "cidr": "10.20.18.0/23",
   "end_ip": "",
   "gateway": "10.20.18.1",
   "portGroup": "ESX-CONF"
  }
 }
}</screen>

        <para>The above template consists of the following sections:</para>
<itemizedlist>
                <listitem><para>Input model</para>
<itemizedlist xml:id="ul_gf1_q3d_jw">
                        <listitem><para>Server group</para>
</listitem>
                    </itemizedlist></listitem>
                <listitem><para>Network properties</para>
<itemizedlist xml:id="ul_ezb_43d_jw">
                        <listitem><para>Port Groups to be created or reused</para>
</listitem>
                        <listitem><para>Distributed Virtual Switches to be created or reused</para>
</listitem>
                        <listitem><para>Template information</para>
</listitem>
                        <listitem><para>Virtual machine configuration (RAM, CPU and network interfaces)</para>
</listitem>
                        <listitem><para>Ansbile network</para>
</listitem>
                    </itemizedlist></listitem>
            </itemizedlist>
<para>The main purpose of the activation template is to create an environment to host
                <literal>nova-compute-proxy</literal> (in case of OVSvApp driver) or only
                <literal>nova-compute-proxy</literal> (in case of NoOp driver). The environment here
            refers to the required virtual networking (Distributed Virtual Switch (DVS) and port
            groups), VMs (RAM, CPU, NIC and associated server role) going to host the Neutron and
            Nova services.</para>

        <itemizedlist xml:id="ul_clh_5ps_hw">
            <listitem><para><emphasis role="bold">Input model</emphasis></para>
<para>It describes the configuration of each entities in the input
                    model. </para>
<para>In the following example we have specified the value of
                        <literal>server_group</literal> as RACK1.</para>
<screen>{
 "input_model": {
  "server_group": "RACK1"
 },</screen><itemizedlist xml:id="ul_ljd_1kd_jw">
                        <listitem><para><emphasis role="bold">Server group</emphasis></para>
<para>This key takes values specified in
                                    <literal>server_groups.yml</literal> file defined in the input
                                model. Default server groups defined in the input model are "RACK1",
                                "RACK2", and "RACK3" based on different network definitions. This
                                implies that all the member hosts in the cluster are part of the
                                same RACK.</para>
</listitem>
                    </itemizedlist>
</listitem>
            <listitem><para><emphasis role="bold">Network properties</emphasis></para>
<para>You must define and configure the following network
                    properties.</para>
<itemizedlist xml:id="ul_olz_s1r_jw">
                        <listitem><para><emphasis role="bold">Port Groups</emphasis></para>
<para>EON creates the portGroups (PGs) if the specified
                                PG is unavailable. The portGroups key contains a JSON list of one or
                                more entries. </para>
<para>You can set the tenant network type as VLAN or
                                VXLAN or both VLAN and VXLAN. The
                                    <literal>cloud_network_type</literal> must be set as per the
                                portGroup. </para>
<important><para>Do not modify the VLAN range for
                                    trunk PG. The value should remain as 1-4094</para>
</important>
<para>In the
                                following example there are three portGroups with a same tenant
                                network type with an active NIC. Also, if there is any failover in
                                the switches then it is notified as the value is set to <emphasis role="bold">yes</emphasis>
                                with the failover detection set to
                                1.</para>
<screen>"portGroups": [
   {
    "nic_teaming": {
     "network_failover_detection": "1",
     "notify_switches": "yes",
     "load_balancing": "1",
     "active_nics": "vmnic1"
    },
    "vlan_type": "trunk",
    "vlan": "33",
    "name": "ESX-CONF",
    "switchName": "MGMT-DVS"
   },
   {
    "nic_teaming": {
     "network_failover_detection": "1",
     "notify_switches": "yes",
     "load_balancing": "1",
     "active_nics": "vmnic1"
    },
    "vlan_type": "trunk",
    "vlan": "3307",
    "name": "MGMT",
    "switchName": "MGMT-DVS"
   },
   {
    "vlan": "3285",
    "name": "GUEST",
    "vlan_type": "trunk",
    "switchName": "MGMT-DVS",
    "nic_teaming": {
     "network_failover_detection": "1",
     "notify_switches": "yes",
     "load_balancing": "1",
     "active_nics": "vmnic1"
    },
    "cloud_network_type": "vxlan"
   }, </screen>
<para>In
                                the following example a portGroup <emphasis role="bold">GUEST</emphasis> has an active NIC and
                                    <emphasis role="bold">both</emphasis> tenant network types. Also, if there is any failover
                                in the switches then it is notified as the value is set to
                                    <emphasis role="bold">yes</emphasis> with the failover detection set to 1. you wnat only
                                tenant vlan u can define u can configure
                                this.</para>
<screen>"portGroups": [
   {
    "name": "GUEST",
    "vlan_type": "trunk",
    "vlan": "3285,3286-3290",
    "switchName": "MGMT-DVS",
    "nic_teaming": {
     "network_failover_detection": "1",
     "notify_switches": "yes",
     "load_balancing": "1",
     "active_nics": "vmnic1"
    }
    “cloud_network_type”: “vxlan, vlan”
  }
]  </screen>
<para>In
                                the following example a portGroup <emphasis role="bold">GUEST</emphasis> has an active NIC
                                with vlan as a tenant network type. Also, if there is any failover
                                in the switches then it is notified as the value is set to
                                    <emphasis role="bold">yes</emphasis> with the failover detection set to 1.
                                </para>
<screen>"portGroups": [
   {
    "name": "GUEST",
    "vlan_type": "trunk",
    "vlan": "3285-3290",
    "switchName": "MGMT-DVS",
    "nic_teaming": {
     "network_failover_detection": "1",
     "notify_switches": "yes",
     "load_balancing": "1",
     "active_nics": "vmnic1"
    }
    “cloud_network_type”: “vlan”
  }
]</screen>
<para>In
                                the following example a portGroup <emphasis role="bold">GUEST</emphasis> has an active NIC
                                with vxlan as a tenant network types. Also, if there is any failover
                                in the switches then it is notified as the value is set to
                                    <emphasis role="bold">yes</emphasis> with the failover detection set to
                                1.</para>
<screen>"portGroups": [
   {
    "name": "GUEST",
    "vlan_type": "trunk",
    "vlan": "3285",
    "switchName": "MGMT-DVS",
    "nic_teaming": {
     "network_failover_detection": "1",
     "notify_switches": "yes",
     "load_balancing": "1",
     "active_nics": "vmnic1"
    }
    “cloud_network_type”: “vxlan”
  }
]  </screen>
<para>The
                                following table provides the list of parameters that must be
                                configured.</para>
<informaltable xml:id="simpletable_cjv_wws_hw"><tgroup cols="2"><thead><row>
                                        <entry>Parameter</entry>
                                        <entry>Description</entry>
                                    </row></thead><tbody><row>
                                        <entry>name (String)</entry>
                                        <entry> Unique name for the portGroup to be created or
                                            used.</entry>
                                    </row><row>
                                        <entry>vlan_type (String)</entry>
                                        <entry> The following are acceptable VLAN types:<itemizedlist xml:id="ul_nxd_rct_hw">
                                                <listitem><para>none = Untagged port</para>
</listitem>
                                                <listitem><para>vlan = VLAN port and only the VLAN ID mentioned
                                                  in "VLAN" key is allowed</para>
</listitem>
                                                <listitem><para>trunk = Port allows multiple VLAN networks as
                                                  mentioned by "VLAN" Key </para>
</listitem>
                                            </itemizedlist></entry>
                                    </row><row>
                                        <entry>vlan</entry>
                                        <entry>Uplinks for the switch (comma separated string).
                                            The vlan is configured on the NIC. For example, “vlan” :
                                            “33” or “vlan” : “0,33-35” .<para>Example: Two uplinks --
                                                "vmnic0, vmnic1". Single uplink – 'vmnic0'. No
                                                uplinks – ''.</para>
</entry>
                                    </row><row>
                                        <entry>switchName (String)</entry>
                                        <entry>Name of the Distributed Virtual Switch (DVS) under
                                            which this port-group should be created. </entry>
                                    </row><row>
                                        <entry>load_balancing (Int)</entry>
                                        <entry>Specify how to choose an uplink. Acceptable values
                                            are 1 to 5. <orderedlist xml:id="ol_yg2_gdt_hw">
                                                <listitem><para>Route based on the originating virtual port</para>
</listitem>
                                                <listitem><para>Route based on IP hash</para>
</listitem>
                                                <listitem><para>Route based on source MAC hash</para>
</listitem>
                                                <listitem><para>Route based on physical NIC load</para>
</listitem>
                                                <listitem><para>Use explicit failover order</para>
</listitem>
                                            </orderedlist></entry>
                                    </row><row>
                                        <entry>notify_switches (Boolean)</entry>
                                        <entry>Select whether to notify switches in the case of
                                            failover. </entry>
                                    </row><row>
                                        <entry>network_failover_detection (Int)</entry>
                                        <entry>Specify the method to use for failover detection.
                                                <itemizedlist xml:id="ul_j21_kdt_hw">
                                                <listitem><para>Link Status only</para>
</listitem>
                                                <listitem><para>Beacon Probing</para>
</listitem>
                                            </itemizedlist></entry>
                                    </row><row>
                                        <entry>active_nics</entry>
                                        <entry>(Comma separated string) Specify the uplinks to be
                                            used.</entry>
                                    </row><row>
                                        <entry>cloud_network_type (Srting)</entry>
                                        <entry>(Optional) Specify the tenant network type ("vlan"
                                            or "vxlan", or both ("vlan", "vxlan"). In case of VLAN,
                                            the security policy for the port group is modified to
                                            enable 'Promiscuous Mode' and 'Forged transmits'.
                                        </entry>
                                    </row></tbody></tgroup></informaltable>
<para>Configuration of PG carrying Data in the single NIC VXLAN
                                model.</para>
<screen>+---------------------+-------------------------------+
|   Input model       |     Net_conf.json Vxlan       |
+---------------------+-------------------------------+
| tagged-vlan: true   | "vlan": "33",                 |
| vlanid: 33          |  "vlan_type":"trunk",         |
+---------------------+-------------------------------+
| tagged-vlan: false  |  "vlan": "",                  |
| vlanid:             |  "vlan_type":"none",          |
+---------------------+-------------------------------+
| tagged-vlan: false  |  If the physical uplink       |
| vlanid: 33          |  switch is tagged to          |
|                     |  particular vlan              |
|                     |  "vlan": "33",                |
|                     |  "vlan_type":"vlan",          |
+---------------------+-------------------------------+</screen>
<para>Configuration of PG carrying Data in the single NIC VLAN
                                model.</para>
<screen>+--------------------------+-------------------------------+
|   Input model            | Net_conf.json Vlan            |
+--------------------------+-------------------------------+
| tagged-vlan: false       | "vlan": "0, 1231-1331",       |
| vlanid:                  |                               |
| tenant-vlan-id:1231-1331 | "vlan_type":"trunk",          |
+--------------------------+-------------------------------+</screen>
</listitem>
                    </itemizedlist>
<itemizedlist xml:id="ul_wbj_3bj_nx">
                        <listitem><para><emphasis role="bold">Distributed Virtual Switches</emphasis></para>
<para>EON creates the virtual switch if
                                the specified switch does not exists in the vCenter. User needs to
                                provide the same kind of input required in creating one from the
                                vSphere web-client.
                                </para>
<para>When
                                2 networks ( PXE &amp; CLM) are using a single dvSwitch(DVS-MGMT)
                                and their MTU setting are different, the MTU setting of the network
                                which have higher value should be assigned to the dvSwitch(DVS-MGMT)
                                in the ESX
                                activation.json.</para>
<para><emphasis role="bold">OVSvApp</emphasis>:
                                A minimum of two switch entries are required. One for OVSvApp trunk
                                DVS with no physical_nics and other for management switch with
                                physical_nics. In the following example we have created two DVS with
                                a name MGMT-DVS (with vmnic1 as the uplink) and TRUNK-DVS (with no
                                uplink)</para>
<para>In the following example we have created two DVS with
                                a name MGMT-DVS and TRUNK-DVS and used <literal>vmnic1</literal> as
                                the uplink for the
                                switch.</para>
<screen>"switches": [
   {
    "type": "dvSwitch",
    "name": "MGMT-DVS",
    "physical_nics": "vmnic1",
    "mtu": "1500"
   },
   {
    "type": "dvSwitch",
    "name": "TRUNK-DVS",
    "physical_nics": "",
    "mtu": "1500"
   }</screen>
<para><emphasis role="bold">NoOp</emphasis>:
                                One management switch entry is required with physical_nics</para>
<para>In
                                the following example we have created a switch with a name MGMT-DVS
                                and used <literal>vmnic1</literal> as the uplink for the switch.</para>
<screen>"switches": [
   {
    "type": "dvSwitch",
    "name": "MGMT-DVS",
    "physical_nics": "vmnic1",
    "mtu": "1500"
   },
 ]</screen>
<para>The following table provides the list of parameters that must be
                                configured.</para>
<informaltable xml:id="simpletable_ec4_fkd_jw"><tgroup cols="2"><thead><row>
                                        <entry>Parameter</entry>
                                        <entry>Description</entry>
                                    </row></thead><tbody><row>
                                        <entry>type </entry>
                                        <entry>The category of switch. It can be Virtual Standard
                                            Switch (VSS) or Distributed Virtual Switch (DVS). The
                                            supported type of switch is DVS.</entry>
                                    </row><row>
                                        <entry>name (String)</entry>
                                        <entry>Unique name for the switch.</entry>
                                    </row><row>
                                        <entry>physical_nics</entry>
                                        <entry>Uplinks for the switch (comma separated string).
                                            Example: Two uplinks -- "vmnic0, vmnic1". Single uplink
                                            – 'vmnic0'. No uplinks – '' ".</entry>
                                    </row><row>
                                        <entry>MTU (Optional)</entry>
                                        <entry>Maximum Transmission Unit (MTU) packet size.
                                            Provide "mtu" value within the range of 1500 to 9000.
                                        </entry>
                                    </row></tbody></tgroup></informaltable>
</listitem>
                        <listitem><para><emphasis role="bold">Template information</emphasis></para>
<para>This key takes a dedicated boolen value
                                (true or false) for the parameter
                                <literal>upload_to_cluster</literal>. If the value is set to true,
                                every activation of a cluster will upload the OVA template to the
                                cluster. By default, it is set to false. In this case, the OVA is
                                uploaded to the first cluster which is being activated. The format
                                of the template name is
                                    <emphasis role="bold">hlm-shell-vm-&lt;hlm_version&gt;-&lt;dc-name&gt;</emphasis>, user given
                                "template_name" will not be considered. </para>
<screen>"template_info": {"upload_to_cluster": false}</screen>
</listitem>
                        <listitem><para><emphasis role="bold">Virtual machine configuration</emphasis></para>
<para>EON creates one
                                    <literal>nova-compute-proxy</literal> virtual machine and 'N'
                                number of OVSvApp virtual machines where N represents the number of
                                ESXi hosts participating in the cluster. In other words, a OVSvApp
                                VM will be deployed per host. </para>
<para>In the following example we
                                have mentioned the server role as <emphasis role="bold">ESX-Compute-Role</emphasis> and
                                    <emphasis role="bold">OVSVAPP-ROLE</emphasis>. These roles are defined in the
                                    <literal>server_role.yml</literal> file of the input model. We
                                require a template to create a virtual machine. 4 vCPU is configured
                                along with 4096 MB memory. The name of the network interfaces are
                                eth0, eth1, eth2, and eth3 and interface model is vmxnet3.</para>
<screen> "vm_config": [
   {
    "nics": [
     {
      "device": "eth0",
      "type": "vmxnet3",
      "pci_id": "",
      "portGroup": "ESX-CONF"
     },
     {
      "device": "eth1",
      "type": "vmxnet3",
      "pci_id": "",
      "portGroup": "MGMT"
     }
    ],
    "server_role": "ESX-COMPUTE-ROLE",
    "memory_in_mb": "4096",
    "cpu": "4"
   },
   {
    "nics": [
     {
      "device": "eth0",
      "type": "vmxnet3",
      "pci_id": "",
      "portGroup": "ESX-CONF"
     },
     {
      "device": "eth1",
      "type": "vmxnet3",
      "pci_id": "",
      "portGroup": "MGMT"
     },
     {
      "device": "eth2",
      "type": "vmxnet3",
      "pci_id": "",
      "portGroup": "GUEST"
     },
     {
      "device": "eth3",
      "type": "vmxnet3",
      "pci_id": "",
      "portGroup": "TRUNK"
     }
    ],
    "server_role": "OVSVAPP-ROLE",
    "memory_in_mb": "4096",
    "cpu": "4"
   }
  ], </screen>
<para>EON creates only one <literal>nova-compute-proxy</literal> virtual
                                machine for NoOp
                                driver.</para>
<screen> "vm_config": [
   {
    "nics": [
     {
      "device": "eth0",
      "type": "vmxnet3",
      "pci_id": "",
      "portGroup": "ESX-CONF"
     },
     {
      "device": "eth1",
      "type": "vmxnet3",
      "pci_id": "",
      "portGroup": "MGMT"
     }
    ],
    "server_role": "ESX-COMPUTE-ROLE",
    "memory_in_mb": "4096",
    "cpu": "4"
   }</screen>
<para>The
                                following table provides the list of parameters that must be
                                configured.</para>
<informaltable xml:id="simpletable_wfj_3bj_nx"><tgroup cols="2"><thead><row>
                                        <entry>Parameter</entry>
                                        <entry>Description</entry>
                                    </row></thead><tbody><row>
                                        <entry>server_role (String) </entry>
                                        <entry>Specify the role associated to this appliance in
                                            the cloud input model.</entry>
                                    </row><row>
                                        <entry>CPU (Int)</entry>
                                        <entry>Number of vCPUs to be configured.</entry>
                                    </row><row>
                                        <entry>memory_in_mb (Int)</entry>
                                        <entry>Amount of memory to be configured in MB.</entry>
                                    </row><row>
                                        <entry>Device (String) </entry>
                                        <entry>Network interface name. Generally in the format
                                            eth0, eth1… ethX.</entry>
                                    </row><row>
                                        <entry>portGroup (String) </entry>
                                        <entry>Name of the virtual network (port-group) to be
                                            attached to the interface .</entry>
                                    </row><row>
                                        <entry>type (String) </entry>
                                        <entry>Type of interface model. Supported models are
                                            'vmxnet3' and 'e1000'.</entry>
                                    </row><row>
                                        <entry>pci_id</entry>
                                        <entry>Device ID of the ESXi host when passthrough for a
                                            Network Device on the host is enabled.</entry>
                                    </row><row>
                                        <entry>nics</entry>
                                        <entry>List of network interfaces to be connected to the
                                            virtual machine.</entry>
                                    </row></tbody></tgroup></informaltable>
</listitem>
                        <listitem><para><emphasis role="bold">Ansbile network</emphasis></para>
<para>In ESX cloud, you require a separate network
                                for running ansible commands instead of sharing the management
                                network. IPAM is managed by EON and assigns IP addresses to virtual
                                machines from this network.</para>
<para>The following example provides a
                                network configuration that is defined under
                                    <literal>esx_conf_net</literal>.</para>
<screen>"esx_conf_net": {
   "start_ip": "",
   "cidr": "10.20.18.0/23",
   "end_ip": "",
   "gateway": "10.20.18.1",
   "portGroup": "ESX-CONF"
  }, </screen>
<para>The following table provides the list of parameters that must be
                                configured.</para>
<informaltable xml:id="simpletable_yc1_qbr_jw"><tgroup cols="2"><thead><row>
                                        <entry>Parameter</entry>
                                        <entry>Description</entry>
                                    </row></thead><tbody><row>
                                        <entry>portGroup (String) </entry>
                                        <entry>Name of the network interface for which IP address
                                            needs to be assigned.</entry>
                                    </row><row>
                                        <entry>CIDR (String) </entry>
                                        <entry>Classless Inter-Domain Routing of ESX Configuration
                                            Network.</entry>
                                    </row><row>
                                        <entry>Start_ip (String) </entry>
                                        <entry>First IPv4 allocation.</entry>
                                    </row><row>
                                        <entry>end_ip (String) </entry>
                                        <entry>Last IPv4 allocation.</entry>
                                    </row><row>
                                        <entry>Gateway (String) </entry>
                                        <entry>IPv4 address of the network gateway.</entry>
                                    </row></tbody></tgroup></informaltable>
</listitem>
                    </itemizedlist>
</listitem>
        </itemizedlist>
    <sidebar><para>Return to installing <xref linkend="install_esx"/>.</para>
</sidebar>
  </section>
