<?xml version="1.0"?>
<!DOCTYPE chapter [
 <!ENTITY % entities SYSTEM "entity-decl.ent"> %entities;
]>
<chapter xml:id="install-ardana-manila"
 xmlns="http://docbook.org/ns/docbook" version="5.1"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Installing &o_sharefs; and Creating &o_sharefs; Shares</title>
 <section>
  <title>Installing &o_sharefs;</title>
  <para>
   The &ostack; Shared File Systems service (&o_sharefs;) provides file storage
   to a virtual machine. The Shared File Systems service provides a storage
   provisioning control plane for shared or distributed file systems. The
   service enables management of share types and share snapshots if you have a
   driver that supports them.
  </para>
  <para>
   The &o_sharefs; service consists of the following components:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     manila-api
    </para>
   </listitem>
   <listitem>
    <para>
     manila-data
    </para>
   </listitem>
   <listitem>
    <para>
     manila-scheduler
    </para>
   </listitem>
   <listitem>
    <para>
     manila-share
    </para>
   </listitem>
   <listitem>
    <para>
     messaging queue
    </para>
   </listitem>
  </itemizedlist>
  <para>
   These &o_sharefs; components are included in example &productname; models
   based on &o_comp; KVM, such as <literal>entry-scale-kvm</literal>,
   <literal>entry-scale-kvm-mml</literal>, and
   <literal>mid-scale-kvm</literal>. General installation instructions are
   available at <xref linkend="install-kvm"/>.
  </para>
  <para>
   If you modify one of these cloud models to set up a dedicated &clm;, add
   <literal>manila-client</literal> item to the list of service components for
   the &clm; cluster.
  </para>
  <para>
   The following steps install &o_sharefs; if it is not already present in your
   cloud data model:
  </para>
  <procedure>
   <step>
    <para>
     Log in to the &clm;.
    </para>
   </step>
   <step>
    <para>
     Apply &o_sharefs; changes in <filename>control_plane.yml</filename>.
    </para>
<screen>&prompt.ardana;cd /var/lib/ardana/openstack/my_cloud/definition/data/</screen>
    <para>
     Add <literal>manila-client</literal> to the list of service components for
     &clm;, and <literal>manila-api</literal> to the &contrnode;.
    </para>
   </step>
   <step>
    <para>
     Run the Configuration Processor.
    </para>
<screen>&prompt.ardana;cd ~/openstack
&prompt.ardana;git add -A
&prompt.ardana;git commit -m "manila config"
&prompt.ardana;cd ~/openstack/ardana/ansible/
&prompt.ardana;ansible-playbook -i hosts/localhost config-processor-run.yml
&prompt.ardana;ansible-playbook -i hosts/localhost ready-deployment.yml</screen>
   </step>
   <step>
    <para>
     Deploy &o_sharefs;
    </para>
<screen>&prompt.ardana;cd ~/scratch/ansible/next/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/verb_hosts percona-deploy.yml
&prompt.ardana;ansible-playbook -i hosts/verb_hosts manila-deploy.yml</screen>
<screen>&prompt.ardana;cd ~/scratch/ansible/next/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/verb_hosts ardana-gen-hosts-file.yml
&prompt.ardana;ansible-playbook -i hosts/verb_hosts ardana-reconfigure.yml
&prompt.ardana;ansible-playbook -i hosts/verb_hosts clients-deploy.yml</screen>
    <para>
     If &o_sharefs; has already been installed and is being reconfigured, run
     the following for the changes to take effect:
    </para>
<screen>&prompt.ardana;ansible-playbook -i hosts/verb_hosts manila-stop.yml
&prompt.ardana;ansible-playbook -i hosts/verb_hosts manila-start.yml</screen>
   </step>
   <step>
    <para>
     Verify the &o_sharefs; installation
    </para>
<screen>&prompt.ardana;cd
&prompt.ardana;. manila.osrc
&prompt.ardana;. service.osrc
&prompt.ardana;manila api-version
&prompt.ardana;manila service-list</screen>
    <para>
     The &o_sharefs; CLI can be run from &clm; or controller nodes.
    </para>
   </step>
  </procedure>
  <note>
   <para>
    The <literal>manila-share</literal> service component is not started by the
    <filename>manila-deploy.yml</filename> playbook when run under default
    conditions. This component requires that a valid backend be configured,
    which is described in <xref linkend="configure-manila-backend"/>.
   </para>
  </note>
 </section>
 <section>
  <title>Adding &o_sharefs; to an Existing &productname; Environment</title>
  <para>
   Add &o_sharefs; to an existing &product; installation or as part of an
   upgrade with the following steps:
  </para>
  <procedure>
   <step>
    <para>
     Add the items listed below to the list of service components in
     <filename>~/openstack/my_cloud/definition/data/control_plane.yml</filename>.
     Add them to clusters that have <literal>server-role</literal> set to
     <literal>CONTROLLER-ROLE</literal> (applies to entry-scale models).
    </para>
    <itemizedlist>
     <listitem>
      <para>
       manila-client
      </para>
     </listitem>
     <listitem>
      <para>
       manila-api
      </para>
     </listitem>
    </itemizedlist>
   </step>
   <step>
    <para>
     If your environment uses a dedicated &clm;, add
     <literal>magnum-client</literal> to the list of service components for the
     &clm; in
     <filename>~/openstack/my_cloud/definition/data/control_plane.yml</filename>.
    </para>
   </step>
   <step>
    <para>
     Commit your configuration to the local git repo.
    </para>
<screen>&prompt.ardana;cd ~/openstack/ardana/ansible
&prompt.ardana;git add -A
&prompt.ardana;git commit -m "My config or other commit message"</screen>
   </step>
   <step>
    <para>
     Run the configuration processor.
    </para>
<screen>&prompt.ardana;cd ~/openstack/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/localhost config-processor-run.yml</screen>
   </step>
   <step>
    <para>
     Update deployment directory.
    </para>
<screen>&prompt.ardana;cd ~/openstack/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/localhost ready-deployment.yml</screen>
   </step>
   <step>
    <para>
     Deploy &o_sharefs;.
    </para>
<screen>&prompt.ardana;cd ~/scratch/ansible/next/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/verb_hosts percona-deploy.yml
&prompt.ardana;ansible-playbook -i hosts/verb_hosts manila-deploy.yml
&prompt.ardana;ansible-playbook -i hosts/verb_hosts ardana-gen-hosts-file.yml
&prompt.ardana;ansible-playbook -i hosts/verb_hosts ardana-reconfigure.yml
&prompt.ardana;ansible-playbook -i hosts/verb_hosts clients-deploy.yml</screen>
   </step>
   <step>
    <para>
     Verify the &o_sharefs; installation.
    </para>
<screen>&prompt.ardana;cd
&prompt.ardana;. manila.osrc
&prompt.ardana;. service.osrc
&prompt.ardana;manila api-version
&prompt.ardana;manila service-list</screen>
   </step>
  </procedure>
  <para>
   The &o_sharefs; CLI can be run from the &clm; or controller nodes.
  </para>
  <para>
   Proceed to <xref linkend="configure-manila-backend"/>.
  </para>
 </section>
 <section xml:id="configure-manila-backend">
  <title>Configure &o_sharefs; Backend</title>
  <section>
   <title>Configure NetaApp &o_sharefs; Back-end</title>
   <note>
    <para>
     An account with cluster administrator privileges must be used with the
     <literal>netapp_login</literal> option when using Share Server management.
     Share Server management creates Storage Virtual Machines (SVM), thus SVM
     administrator privileges are insufficient.
    </para>
    <para>
     There are two modes for the NetApp &o_sharefs; back-end:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       <literal>driver_handles_share_servers = True</literal>
      </para>
     </listitem>
     <listitem>
      <para>
       <literal>driver_handles_share_servers = False</literal> This value must
       be set to <literal>False</literal> if you want the driver to operate
       without managing share servers.
      </para>
     </listitem>
    </itemizedlist>
    <para>
     More information is available from
     <link
     xlink:href="https://netapp-openstack-dev.github.io/openstack-docs/rocky/manila/configuration/manila_config_files/section_unified-driver-without-share-server.html">NetApp
     OpenStack</link>
    </para>
   </note>
   <para>
    The steps to configure a NetApp &o_sharefs; back-end are:
   </para>
   <procedure>
    <step>
     <para>
      Configure a back-end in the &o_sharefs; configuration file, following the
      directions and comments in the file.
     </para>
<screen>&prompt.ardana;cd ~/openstack/my_cloud
&prompt.ardana;vi config/manila/manila.conf.j2</screen>
    </step>
    <step>
     <para>
      Commit your configuration to the local Git repo.
     </para>
<screen>&prompt.ardana;cd ~/openstack/ardana/ansible
&prompt.ardana;git add -A
&prompt.ardana;git commit -m "My config or other commit message"</screen>
    </step>
    <step>
     <para>
      Run the configuration processor.
     </para>
<screen>&prompt.ardana;cd ~/openstack/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/localhost config-processor-run.yml</screen>
    </step>
    <step>
     <para>
      Update deployment directory.
     </para>
<screen>&prompt.ardana;cd ~/openstack/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/localhost ready-deployment.yml</screen>
    </step>
    <step>
     <para>
      Run reconfiguration playbook.
     </para>
<screen>&prompt.ardana;cd ~/scratch/ansible/next/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/verb_hosts manila-reconfigure.yml</screen>
    </step>
    <step>
     <para>
      Restart &o_sharefs; services.
     </para>
<screen>&prompt.ardana;cd ~/scratch/ansible/next/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/verb_hosts manila-stop.yml
&prompt.ardana;ansible-playbook -i hosts/verb_hosts manila-start.yml</screen>
    </step>
   </procedure>
   <note>
    <para>
     After the <literal>manila-share</literal> service has been initialized
     with a backend, it can be controlled independently of
     <literal>manila-api</literal> by using the playbooks
     <filename>manila-share-start.yml</filename>,
     <filename>manila-share-stop.yml</filename>, and
     <filename>manila-share-status.yml</filename>.
    </para>
   </note>
  </section>
  <section>
   <title>Configure CephFS &o_sharefs; Backend</title>
   <para>
    Configure a back-end in the &o_sharefs; configuration file,
    <filename>~/openstack/my_cloud vi config/manila/manila.conf.j2</filename>.
   </para>
   <procedure>
    <step>
     <para>
      To define a CephFS native back-end, create a section like the following:
     </para>
<screen>[cephfsnative1]
driver_handles_share_servers = False
share_backend_name = CEPHFSNATIVE1
share_driver = manila.share.drivers.cephfs.driver.CephFSDriver
cephfs_conf_path = /etc/ceph/ceph.conf
cephfs_protocol_helper_type = CEPHFS
cephfs_auth_id = manila
cephfs_cluster_name = ceph
cephfs_enable_snapshots = False</screen>
    </step>
    <step>
     <para>
      Add CephFS to <literal>enabled_share_protocols</literal>:
     </para>
<screen>enabled_share_protocols = NFS,CIFS,CEPHFS</screen>
    </step>
    <step>
     <para>
      Edit the <literal>enabled_share_backends</literal> option in the
      <literal>DEFAULT</literal> section to point to the driver’s back-end
      section name.
     </para>
    </step>
    <step>
     <para>
      According to the environment, modify back-end specific lines in
      <filename>~/openstack/my_cloud vi
      config/manila/manila.conf.j2</filename>.
     </para>
    </step>
    <step>
     <para>
      Commit your configuration to the local Git repo.
     </para>
<screen>&prompt.ardana;cd ~/openstack/ardana/ansible
&prompt.ardana;git add -A
&prompt.ardana;git commit -m "My config or other commit message"</screen>
    </step>
    <step>
     <para>
      Run the configuration processor.
     </para>
<screen>&prompt.ardana;cd ~/openstack/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/localhost config-processor-run.yml</screen>
    </step>
    <step>
     <para>
      Update deployment directory.
     </para>
<screen>&prompt.ardana;cd ~/openstack/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/localhost ready-deployment.yml</screen>
    </step>
    <step>
     <para>
      Run reconfiguration playbook.
     </para>
<screen>&prompt.ardana;cd ~/scratch/ansible/next/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/verb_hosts manila-reconfigure.yml</screen>
    </step>
    <step>
     <para>
      Restart &o_sharefs; services.
     </para>
<screen>&prompt.ardana;cd ~/scratch/ansible/next/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/verb_hosts manila-stop.yml
&prompt.ardana;ansible-playbook -i hosts/verb_hosts manila-start.yml</screen>
    </step>
   </procedure>
   <note>
    <para>
     After the <literal>manila-share</literal> service has been initialized
     with a back-end, it can be controlled independently of
     <literal>manila-api</literal> by using the playbooks
     <filename>manila-share-start.yml</filename>,
     <filename>manila-share-stop.yml</filename>, and
     <filename>manila-share-status.yml</filename>.
    </para>
   </note>
   <para>
    For more details of the CephFS &o_sharefs; back-end, see
    <link
    xlink:href="https://docs.openstack.org/manila/rocky/admin/cephfs_driver.html">OpenStack
    CephFS driver</link>.
   </para>
  </section>
 </section>
 <section>
  <title>Creating &o_sharefs; Shares</title>
  <para>
   &o_sharefs; can support two modes, with and without the handling of share
   servers. The mode depends on driver support.
  </para>
  <para>
   Mode 1: The back-end is a generic driver,
   <literal>driver_handles_share_servers = False</literal> (DHSS is disabled).
   The following example creates a VM using &o_sharefs; share image.
  </para>
  <procedure>
   <step>
<screen>&prompt.ardana;wget http://tarballs.openstack.org/manila-image-elements/images/manila-service-image-master.qcow2
&prompt.ardana;. service.osrc;openstack image create --name
"manila-service-image-new" \
--file manila-service-image-master.qcow2 --disk-format qcow2 \
--container-format bare --visibility public --progress
&prompt.ardana;openstack image list (verify manila image)
&prompt.ardana;openstack security group create manila-security-group \
--description "Allows web and NFS traffic to manila server."
&prompt.ardana;openstack security group rule create manila-security-group \
--protocol tcp --dst-port 2049
&prompt.ardana;openstack security group rule create manila-security-group \
--protocol udp --dst-port 2049
&prompt.ardana;openstack security group rule create manila-security-group \
--protocol tcp --dst-port 22
&prompt.ardana;openstack security group rule create manila-security-group \
--protocol icmp
&prompt.ardana;openstack security group rule list manila-security-group (verify manila security group)
&prompt.ardana;openstack keypair create --public-key ~/.ssh/id_rsa.pub mykey
&prompt.ardana;openstack network create n1
&prompt.ardana;openstack subnet create s1 --network n1 <replaceable>--subnet-range 11.11.11.0/24</replaceable>
&prompt.ardana;openstack router create r1
&prompt.ardana;openstack router add subnet r1 s1
&prompt.ardana;openstack router set r1 ext-net
&prompt.ardana;openstack network list
&prompt.ardana;openstack server create manila-vm --flavor m1.small \
--image IMAGE_ID --nic net-id=N1_ID --security-group manila-security-group \
--key-name myKey
&prompt.ardana;oenstack floating ip create <replaceable>EXT-NET_ID</replaceable>
&prompt.ardana;openstack server add floating ip manila-vm <replaceable>EXT-NET_ID</replaceable></screen>
   </step>
   <step>
    <para>
     Validate your ability to ping or connect by SSH to
     <literal>manila-vm</literal> with credentials
     <literal>manila/manila</literal>.
    </para>
   </step>
   <step>
    <para>
     Modify the configuration:
    </para>
<screen>&prompt.ardana;vi
    /etc/manila/manila.conf.d/100-manila.conf</screen>
    <para>
     Make changes in [generic1] section
    </para>
<screen>service_instance_name_or_id = <replaceable>MANILA_VM_ID</replaceable>
service_net_name_or_ip = <replaceable>MANILA_VM_FLOATING_IP</replaceable>
tenant_net_name_or_ip = <replaceable>MANILA_VM_FLOATING_IP</replaceable></screen>
   </step>
   <step>
    <para>
     Create a share type. OpenStack docs has
     <link
     xlink:href="https://docs.openstack.org/manila/rocky/install/post-install.html">detailed
     instructions</link>. Use the instructions for <literal>manila type-create
     default_share_type False</literal>
    </para>
   </step>
   <step>
    <para>
     Restart &o_sharefs; services and verify they are up.
    </para>
<screen>&prompt.ardana;systemctl restart openstack-manila-api \
openstack-manila-share openstack-manila-scheduler
&prompt.ardana;manila service-list</screen>
   </step>
   <step>
    <para>
     Continue creating a share
    </para>
<screen>&prompt.ardana;manila create NFS 1 --name <replaceable>SHARE</replaceable>
&prompt.ardana;manila list (status will change from  creating to available)
&prompt.ardana;manila show share1
&prompt.ardana;manila access-allow <replaceable>SHARE</replaceable> ip <replaceable>INSTANCE_IP</replaceable></screen>
   </step>
   <step>
    <para>
     Mount the share on a Compute instance
    </para>
<screen>&prompt.ardana;mkdir ~/test_directory
&prompt.sudo;mount -vt nfs <replaceable>EXT-NET_ID</replaceable>:/shares/<replaceable>SHARE-SHARE-ID</replaceable> ~/test_folder</screen>
   </step>
  </procedure>
  <para>
   Mode 2: The back-end is <literal>NetApp</literal>,
   <literal>driver_handles_share_servers = True</literal> (DHSS is enabled).
   Procedure for driver_handles_share_servers = False is similar to Mode 1.
  </para>
  <procedure>
   <step>
    <para>
     Modify the configuration
    </para>
<screen>&prompt.ardana;vi /etc/manila/manila.conf.d/100-manila.conf</screen>
    <para>
     Add a <literal>backendNetApp</literal> section
    </para>
<screen>share_driver = manila.share.drivers.netapp.common.NetAppDriver
driver_handles_share_servers = True
share_backend_name=backendNetApp
netapp_login=<replaceable>NetApp_USERNAME</replaceable>
netapp_password=<replaceable>NetApp_PASSWORD</replaceable>
netapp_server_hostname=<replaceable>NETAPP_HOSTNAME</replaceable>
netapp_root_volume_aggregate=<replaceable>AGGREGATE_NAME</replaceable></screen>
    <para>
     Add to [DEFAULT] section
    </para>
<screen>enabled_share_backends = backendNetApp
default_share_type = default1</screen>
   </step>
   <step>
    <para>
     Create a &o_sharefs; share image and verify it
    </para>
<screen>&prompt.ardana;wget http://tarballs.openstack.org/manila-image-elements/images/manila-service-image-master.qcow2
&prompt.ardana;. service.osrc;openstack image create <literal>manila-service-image-new</literal> \
--file manila-service-image-master.qcow2 --disk-format qcow2 \
--container-format bare --visibility public --progress
&prompt.ardana;openstack image list (verify a &o_sharefs; image)</screen>
   </step>
   <step>
    <para>
     Create a share type. OpenStack docs has
     <link
     xlink:href="https://docs.openstack.org/manila/rocky/install/post-install.html">detailed
     instructions</link>. Use the instructions for <literal>manila type-create
     default_share_type True</literal> .
    </para>
   </step>
   <step>
    <para>
     Restart services
    </para>
<screen>&prompt.ardana;systemctl restart openstack-manila-api openstack-manila-share \openstack-manila-scheduler
&prompt.ardana;manila service-list (verify services are up)</screen>
   </step>
   <step>
    <para>
     Continue creating a share. <literal>OCTAVIA-MGMT-NET</literal> can be used
     as <replaceable>PRIVATE_NETWORK</replaceable> in this example.
    </para>
<screen>&prompt.ardana;manila share-network-create --name demo-share-network1 \
--neutron-net-id PRIVATE_NETWORK_ID --neutron-subnet-id PRIVATE_NETWORK_SUBNET_ID
&prompt.ardana;manila create NFS 1 --name share2 --share-network demo-share-network1</screen>
   </step>
  </procedure>
 </section>
 <section>
  <title>Troubleshooting</title>
  <para>
   If manila-list shows share status in error, use <literal>storage aggregate
   show</literal> to list available aggregates. Errors may be found in
   <filename>/var/log/manila/manila-share.log</filename>
  </para>
  <para>
   if the compute nodes do not have access to &o_sharefs; back-end server, use
   the <literal>manila-share</literal> service on controller nodes instead. You
   can do so by either running <literal>sudo systemctl stop
   openstack-manila-share</literal> on compute to turn off its share service or
   skipping adding "manila-share" to compute hosts in the input-model
   (<filename>control_plane.yml</filename> in
   <filename>/var/lib/ardana/openstack/my_cloud/definition/data</filename>).
  </para>
 </section>
</chapter>
