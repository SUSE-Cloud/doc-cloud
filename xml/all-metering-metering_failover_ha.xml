<?xml version="1.0"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE section [
 <!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<!---->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="topic_zx2_mmd_5t">
 <title>Ceilometer Metering Failover HA Support</title>
<!---->
  <para>
   In the &kw-hos; environment, the Ceilometer metering service supports native
   Active-Active high-availability (HA) for the notification and polling
   agents. Implementing HA support includes workload-balancing,
   workload-distribution and failover.
  </para>
  <para>
   Tooz is the coordination engine that is used to coordinate workload among
   multiple active agent instances. It also maintains the knowledge of
   active-instance-to-handle failover and group membership using hearbeats
   (pings).
  </para>
  <para>
   Zookeeper is used as the coordination backend. Zookeeper uses Tooz to expose
   the APIs that manage group membership and retrieve workload specific to each
   agent.
  </para>
  <para>
   The following section in the configuration file is used to implement
   high-availability (HA):
  </para>
<screen>[coordination]
backend_url = &lt;IP address of Zookeeper host: port&gt; (port is usually 2181 as a zookeeper default)
heartbeat = 1.0
check_watchers = 10.0</screen>
  <para>
   For the notification agent to be configured in HA mode, additional
   configuration is needed in the configuration file:
  </para>
<screen>[notification]
workload_partitioning = true</screen>
  <para>
   The HA notification agent distributes workload among multiple queues that
   are created based on the number of unique source:sink combinations. The
   combinations are configured in the notification agent pipeline configuration
   file. If there are additional services to be metered using notifications,
   then the recommendation is to use a separate source for those events. This
   is recommended especially if the expected load of data from that source is
   considered high. Implementing HA support should lead to better workload
   balancing among multiple active notification agents.
  </para>
  <para>
   Ceilometer-expirer is also an Active-Active HA. Tooz is used to pick an
   expirer process that acquires a lock when there are multiple contenders and
   the winning process runs. There is no failover support, as expirer is not a
   daemon and is scheduled to run at pre-determined intervals.
  </para>
  <important>
   <para>
    You must ensure that a single expirer process runs when multiple processes
    are scheduled to run at the same time. This must be done using cron-based
    scheduling. on multiple controller nodes
   </para>
  </important>
  <para>
   The following configuration is needed to enable expirer HA:
  </para>
<screen>[coordination]
backend_url = &lt;IP address of Zookeeper host: port&gt; (port is usually 2181 as a zookeeper default)
heartbeat = 1.0
check_watchers = 10.0
</screen>
  <para>
   The notification agent HA support is mainly designed to coordinate among
   notification agents so that correlated samples can be handled by the same
   agent. This happens when samples get transformed from other samples. The
   Helion Ceilometer pipeline has no transformers, so this task of coordination
   and workload partitioning does not need to be enabled. The notification
   agent is deployed on multiple controller nodes and they distribute workload
   among themselves by randomly fetching the data from the queue.
  </para>
  <para>
   To disable coordination and workload partitioning by OpenStack, set the
   following value in the configuration file:
  </para>
<screen>

        [notification]
        workload_partitioning = False</screen>
  <important>
   <para>
    When a configuration change is made to an API running under the HA Proxy,
    that change needs to be replicated in <emphasis role="bold">all</emphasis>
    controllers.
   </para>
  </important>
 </section>
