<?xml version="1.0"?>
<!DOCTYPE section [
<!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<!---->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="swift_filesystem_ts">
 <title>Swift 文件系统使用问题疑难解答</title>
 <!---->
 <para>
  如果您已经回收环境进行重新安装，并且在此过程中未运行 <literal>wipe_disks.yml</literal> 脚本，则可能会遇到以下问题：即使您没有向 Swift 系统添加任何文件，文件系统使用率也会呈指数级增长。这可能是因为隔离目录被填满了。您可以在 <literal>/srv/node/disk0/quarantined</literal> 中找到此目录。
 </para>
 <para>
  您可以按照以下步骤解决此问题：
 </para>
 <procedure>
  <step>
   <para>
    SSH 到每个 Swift 节点并停止每个节点上的复制过程。必须在每个 Swift 节点上执行以下命令。记下您执行此操作的时间，因为您将在第 3 步中引用它。
   </para>
   <screen>sudo systemctl stop swift-account-replicator
    sudo systemctl stop swift-container-replicator
    sudo systemctl stop swift-object-replicator</screen>
  </step>
  <step>
   <para>
    取样 <literal>/var/log/swift/swift.log</literal> 文件并查找指示审计进程启动和完成审计周期的事件。有关更多详细信息，请参见 <xref linkend="swift_filesystem_ts"/>。
<!-- Example?? ERROR -->
   </para>
  </step>
  <step>
   <para>
    等到自从停止复制过程（从第一步）开始，审计进程已完成两个完整周期。您必须检查每个 Swift 节点，在最近安装的轻载系统上，这应该花费不到两个小时。
   </para>
  </step>
  <step>
   <para>
    此时您应该注意到隔离目录已停止增长。您现在可以删除每个节点上该目录中的文件。
   </para>
  </step>
  <step>
   <para>
    使用 Swift 脚本重新启动复制过程：
   </para>
   <substeps>
    <step>
     <para>
      登入 &lcm;.
     </para>
    </step>
    <step>
     <para>
      运行 Swift 启动脚本：
     </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
      ansible-playbook -i hosts/verb_hosts swift-start.yml</screen>
    </step>
   </substeps>
  </step>
 </procedure>
 <section xml:id="swift_log">
  <title>检查 Swift 日志中的审计事件周期</title>
  <para>
   以下是 <literal>object-server</literal> 开始和结束周期详细信息的示例。它们是在 Swift 节点上使用以下命令获取的：
  </para>
  <screen>sudo grep object-auditor /var/log/swift/swift.log|grep ALL</screen>
  <para>
   输出示例：
  </para>
  <screen>$ sudo grep object-auditor /var/log/swift/swift.log|grep ALL
   ...
   Apr  1 13:31:18 padawan-ccp-c1-m1-mgmt object-auditor: Begin object audit "forever" mode (ALL)
   Apr  1 13:31:18 padawan-ccp-c1-m1-mgmt object-auditor: Object audit (ALL). Since Fri Apr  1 13:31:18 2016: Locally: 0 passed, 0 quarantined, 0 errors files/sec: 0.00 , bytes/sec: 0.00, Total time: 0.00, Auditing time: 0.00, Rate: 0.00
   Apr  1 13:51:32 padawan-ccp-c1-m1-mgmt object-auditor: Object audit (ALL) "forever" mode completed: 1213.78s. Total quarantined: 0, Total errors: 0, Total files/sec: 7.02, Total bytes/sec: 9999722.38, Auditing time: 1213.07, Rate: 1.00</screen>
  <para>
   在这个例子中，审计进程在 <literal>13:31</literal> 开始并在 <literal>13:51</literal> 结束。
  </para>
  <para>
   在下一个示例中，<literal>account-auditor</literal> 和 <literal>container-auditor</literal> 使用类似的消息结构，因此我们只显示容器审计进程。您也可以将 <literal>container</literal> 替换为 <literal>account</literal>：
  </para>
  <screen>$ sudo grep container-auditor /var/log/swift/swift.log
   ...
   Apr  1 14:07:00 padawan-ccp-c1-m1-mgmt container-auditor: Begin container audit pass.
   Apr  1 14:07:00 padawan-ccp-c1-m1-mgmt container-auditor: Since Fri Apr  1 13:07:00 2016: Container audits: 42 passed audit, 0 failed audit
   Apr  1 14:37:00 padawan-ccp-c1-m1-mgmt container-auditor: Container audit pass completed: 0.10s</screen>
  <para>
   在这个例子中，容器审计进程在 <literal>14:07</literal> 开始了一个周期并在 <literal>14:37</literal> 结束。
  </para>
 </section>
</section>
