<?xml version="1.0"?>
<!DOCTYPE section [
<!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="neutron_troubleshooting">
 <title>网络服务故障排除</title>
 <para>
  网络服务的故障排除场景和解决办法。
 </para>
 <section xml:id="network.fail.troublshoot">
  <title>解决网络故障</title>
  <para>
   <emphasis role="bold">CVR HA - Split-brain result of failover of L3 agent
    when master comes back up</emphasis> 这个情况发生在当 L3 HA 被配置并且正在运行 
   l3 agent 的节点发生网络故障时。L3 HA 设计上为 l3-agent 崩溃、运行 l3-agent 的节点
   崩溃或重启时提供 HA。当网络故障将活跃的 l3 agent 隔离时，待机的 l3-agent 会接管控制。
   但是，当网络故障被修复后，去往 VM 的流量会被两个活跃的 L3 agent 打乱，重启原来的主 
   L3-agent 即可解决。
  </para>
  <para>
   <emphasis role="bold">OVSvApp 丢失了与 vCenter 集群的连接</emphasis> 
   如果 OVSvApp 丢失了与 vCenter 集群的连接，您将收到以下错误信息：
  </para>
  <procedure>
   <step>
    <para>
     OVSvApp VM 将进入 ERROR 状态
    </para>
   </step>
   <step>
    <para>
     OVSvApp VM 不会获取 IP 地址
    </para>
   </step>
  </procedure>
  <para>
   当您看到这些状况：
  </para>
  <procedure>
   <step>
    <para>
     重启 OVSvApp VM 上的 OVSvApp agent。
    </para>
   </step>
   <step>
    <para>
     用以下命令重启网络（Neutron）服务：
    </para>
    <screen>sudo service neutron-ovsvapp-agent restart</screen>
   </step>
  </procedure>
  <!---->
  <para>
   <emphasis role="bold">因为节点不可用而故障转移一个普通的 CVR 路由器：</emphasis>
  </para>
  <procedure>
   <step>
    <para>
     列出 l3 agent 的 UUID, 以便在下面的命令中使用
    </para>
    <screen> neutron agent-list | grep l3 </screen>
   </step>
   <step>
    <para>
     查看当前主机
    </para>
    <screen> neutron l3-agent-list-hosting-router &lt;router uuid&gt; </screen>
   </step>
   <step>
    <para>
     从当前主机移除路由器
    </para>
    <screen>neutron l3-agent-router-remove &lt;current l3 agent uuid&gt; &lt;router uuid&gt;</screen>
   </step>
   <step>
    <para>
     将路由器添加的新的主机
    </para>
    <screen>neutron l3-agent-router-add &lt;new l3 agent uuid&gt; &lt;router uuid&gt; </screen>
   </step>
  </procedure>
  <para>
   <emphasis role="bold">无法设置最大传输单元（MTU）</emphasis> <xref linkend="configureMTU"/>
  </para>
  <para>
   <emphasis role="bold">DVR 路由网络中为 allowed_address_pair 分配浮动 IP</emphasis> <literal>allowed_address_pair</literal>
  </para>
  <para>
   <emphasis role="bold">您可能注意到：</emphasis> 如果您有一个与多个 虚拟机（VM）
   端口关联的 <literal>allowed_address_pair</literal>，如果全部 VM 端口 都是 
   ACTIVE，那么 <literal>allowed_address_pair</literal> 端口将会绑定到最后一个
   ACTIVE VM 绑定的主机上。
  </para>
  <para>
   <emphasis role="bold">bingq，您还可能注意到</emphasis>如果给绑定到多个 ACTIVE VM 的
   <literal>allowed_address_pair</literal> 分配浮动 IP，虽然集中式的路由器可以处理浮动 IP 
   关联未绑定的 <literal>allowed_address_pair</literal> 端口，浮动 IP 不会与 DVR 路由器
   工作。
  </para>
  <para>
   目前我们支持仅有一个 ACTIVE 端口的 <literal>allowed_address_pair</literal> 端口与开启
   浮动 IP 的 DVR 工作。
  </para>
  <para>
   使用命令行，您可跟随以下的步骤：
  </para>
  <procedure>
   <step>
    <para>
     创建一个用来添加主机的网络：
    </para>
    <screen>$ neutron net-create vrrp-net</screen>
   </step>
   <step>
    <para>
     向网络连接一个定义了 allocation-pool 范围的子网：
    </para>
    <screen>$ neutron subnet-create  --name vrrp-subnet --allocation-pool start=10.0.0.2,end=10.0.0.200 vrrp-net 10.0.0.0/24</screen>
   </step>
   <step>
    <para>
     创建一个路由器，上行设为 vrrp-subnet，并将其连接到叫 public 的上游网络:
    </para>
    <screen>$ neutron router-create router1
     $ neutron router-interface-add router1 vrrp-subnet
     $ neutron router-gateway-set router1 public</screen>
    <para>
     创建一个叫 vrrp-sec-group 的安全组并添加入栈规则来允许 ICMP 和 TCP 连接 端口 80 和 22：
    </para>
    <screen>$ neutron security-group-create vrrp-sec-group
     $ neutron security-group-rule-create  --protocol icmp vrrp-sec-group
     $ neutron security-group-rule-create  --protocol tcp  --port-range-min80 --port-range-max80 vrrp-sec-group
     $ neutron security-group-rule-create  --protocol tcp  --port-range-min22 --port-range-max22 vrrp-sec-group</screen>
   </step>
   <step>
    <para>
     接下来，启动两个实例：
    </para>
    <screen>$ nova boot --num-instances 2 --image ubuntu-12.04 --flavor 1 --nic net-id=24e92ee1-8ae4-4c23-90af-accb3919f4d1 vrrp-node --security_groups vrrp-sec-group</screen>
   </step>
   <step>
    <para>
     当您创建两个实例时，在关联 <literal>allowed_address_pair</literal> 之前请确保他们不都是 ACTIVE 状态。如下：
    </para>
    <screen>$ nova list
     +--------------------------------------+-------------------------------------------------+--------+------------+-------------+--------------------------------------------------------+
     | ID                                   | Name                                            | Status | Task State | Power State | Networks                                               |
     +--------------------------------------+-------------------------------------------------+--------+------------+-------------+--------------------------------------------------------+
     | 15b70af7-2628-4906-a877-39753082f84f | vrrp-node-15b70af7-2628-4906-a877-39753082f84f | ACTIVE  | -          | Running     | vrrp-net=10.0.0.3                                      |
     | e683e9d1-7eea-48dd-9d3a-a54cf9d9b7d6 | vrrp-node-e683e9d1-7eea-48dd-9d3a-a54cf9d9b7d6 | DOWN    | -          | Running     | vrrp-net=10.0.0.4                                      |
     +--------------------------------------+-------------------------------------------------+--------+------------+-------------+--------------------------------------------------------+    </screen>
   </step>
   <step>
    <para>
     创建一个在 VRRP IP 范围内 ip-allocation 范围外的端口：
    </para>
    <screen>$ neutron port-create --fixed-ip ip_address=10.0.0.201 --security-group vrrp-sec-group vrrp-net
     Created a new port:
     +-----------------------+-----------------------------------------------------------------------------------+
     | Field                 | Value                                                                             |
     +-----------------------+-----------------------------------------------------------------------------------+
     | admin_state_up        | True                                                                              |
     | allowed_address_pairs |                                                                                   |
     | device_id             |                                                                                   |
     | device_owner          |                                                                                   |
     | fixed_ips             | {"subnet_id": "94a0c371-d37c-4796-821e-57c2a8ec65ae", "ip_address": "10.0.0.201"} |
     | id                    | 6239f501-e902-4b02-8d5c-69062896a2dd                                              |
     | mac_address           | fa:16:3e:20:67:9f                                                                 |
     | name                  |                                                                                   |
     | network_id            | 24e92ee1-8ae4-4c23-90af-accb3919f4d1                                              |
     | port_security_enabled | True                                                                              |
     | security_groups       | 36c8131f-d504-4bcc-b708-f330c9f6b67a                                              |
     | status                | DOWN                                                                              |
     | tenant_id             | d4e4332d5f8c4a8eab9fcb1345406cb0                                                  |
     +-----------------------+-----------------------------------------------------------------------------------+</screen>
   </step>
   <step>
    <para>
     在关联 allowed_address_pair 端口与 VM 端口之后应该检查的是 
     <literal>allowed_address_pair</literal> 端口应该继承了 VM 绑定的主机：
    </para>
    <screen>$ neutron --os-username admin --os-password ZIy9xitH55 --os-tenant-name admin port-show f5a252b2-701f-40e9-a314-59ef9b5ed7de
     +-----------------------+--------------------------------------------------------------------------------------------------------+
     | Field                 | Value                                                                                                  |
     +-----------------------+--------------------------------------------------------------------------------------------------------+
     | admin_state_up        | True                                                                                                   |
     | allowed_address_pairs |                                                                                                        |
     | {color:red}binding:host_id{color} | hlm201-cp1-comp0001-mgmt                                                                   |
     | binding:profile       | {}                                                                                                     |
     | binding:vif_details   | {"port_filter": true, "ovs_hybrid_plug": true}                                                         |
     | binding:vif_type      | ovs                                                                                                    |
     | binding:vnic_type     | normal                                                                                                 |
     | device_id             |                                                                                                        |
     | device_owner          | compute:None                                                                                           |
     | dns_assignment        | {"hostname": "host-10-0-0-201", "ip_address": "10.0.0.201", "fqdn": "host-10-0-0-201.openstacklocal."} |
     | dns_name              |                                                                                                        |
     | extra_dhcp_opts       |                                                                                                        |
     | fixed_ips             | {"subnet_id": "94a0c371-d37c-4796-821e-57c2a8ec65ae", "ip_address": "10.0.0.201"}                      |
     | id                    | 6239f501-e902-4b02-8d5c-69062896a2dd                                                                   |
     | mac_address           | fa:16:3e:20:67:9f                                                                                      |
     | name                  |                                                                                                        |
     | network_id            | 24e92ee1-8ae4-4c23-90af-accb3919f4d1                                                                   |
     | port_security_enabled | True                                                                                                   |
     | security_groups       | 36c8131f-d504-4bcc-b708-f330c9f6b67a                                                                   |
     | status                | DOWN                                                                                                   |
     | tenant_id             | d4e4332d5f8c4a8eab9fcb1345406cb0                                                                       |
     +-----------------------+--------------------------------------------------------------------------------------------------------+</screen>
   </step>
   <step>
    <para>
     注意 IP 地址 10.0.0.201 按照要求被分配了一个端口。接下来，为了能公共的访问它，请为该端口关联一个浮动 IP：
    </para>
    <screen>$ neutron floatingip-create --port-id=6239f501-e902-4b02-8d5c-69062896a2dd public
     Created a new floatingip:
     +---------------------+--------------------------------------+
     | Field               | Value                                |
     +---------------------+--------------------------------------+
     | fixed_ip_address    | 10.0.0.201                           |
     | floating_ip_address | 10.36.12.139                         |
     | floating_network_id | 3696c581-9474-4c57-aaa0-b6c70f2529b0 |
     | id                  | a26931de-bc94-4fd8-a8b9-c5d4031667e9 |
     | port_id             | 6239f501-e902-4b02-8d5c-69062896a2dd |
     | router_id           | 178fde65-e9e7-4d84-a218-b1cc7c7b09c7 |
     | tenant_id           | d4e4332d5f8c4a8eab9fcb1345406cb0     |
     +---------------------+--------------------------------------+</screen>
   </step>
   <step>
    <para>
     接下来更新连接到您的 VRRP 实例的端口，使其包含这个 IP 作为 allowed-address-pair，这样它们才能从这个地址发出流量。首先，找到绑定到这些实例的端口：
    </para>
    <screen>$ neutron port-list -- --network_id=24e92ee1-8ae4-4c23-90af-accb3919f4d1
     +--------------------------------------+------+-------------------+-----------------------------------------------------------------------------------+
     | id                                   | name | mac_address       | fixed_ips                                                                         |
     +--------------------------------------+------+-------------------+-----------------------------------------------------------------------------------+
     | 12bf9ea4-4845-4e2c-b511-3b8b1ad7291d |      | fa:16:3e:7a:7b:18 | {"subnet_id": "94a0c371-d37c-4796-821e-57c2a8ec65ae", "ip_address": "10.0.0.4"}   |
     | 14f57a85-35af-4edb-8bec-6f81beb9db88 |      | fa:16:3e:2f:7e:ee | {"subnet_id": "94a0c371-d37c-4796-821e-57c2a8ec65ae", "ip_address": "10.0.0.2"}   |
     | 6239f501-e902-4b02-8d5c-69062896a2dd |      | fa:16:3e:20:67:9f | {"subnet_id": "94a0c371-d37c-4796-821e-57c2a8ec65ae", "ip_address": "10.0.0.201"} |
     | 87094048-3832-472e-a100-7f9b45829da5 |      | fa:16:3e:b3:38:30 | {"subnet_id": "94a0c371-d37c-4796-821e-57c2a8ec65ae", "ip_address": "10.0.0.1"}   |
     | c080dbeb-491e-46e2-ab7e-192e7627d050 |      | fa:16:3e:88:2e:e2 | {"subnet_id": "94a0c371-d37c-4796-821e-57c2a8ec65ae", "ip_address": "10.0.0.3"}   |
     +--------------------------------------+------+-------------------+-----------------------------------------------------------------------------------+</screen>
   </step>
   <step>
    <para>
     把这个地址添加到端口 c080dbeb-491e-46e2-ab7e-192e7627d050 和
     12bf9ea4-4845-4e2c-b511-3b8b1ad7291d，IP 地址为 10.0.0.3 和 10.0.0.4（您的 vrrp 节点）：
    </para>
    <screen>$ neutron port-update  c080dbeb-491e-46e2-ab7e-192e7627d050 --allowed_address_pairs list=truetype=dict ip_address=10.0.0.201
     $ neutron port-update  12bf9ea4-4845-4e2c-b511-3b8b1ad7291d --allowed_address_pairs list=truetype=dict ip_address=10.0.0.201</screen>
   </step>
   <step>
    <para>
     现在端口上能看到 allowed-address-pair 10.0.0.201：
    </para>
    <screen>$ neutron port-show12bf9ea4-4845-4e2c-b511-3b8b1ad7291d
     +-----------------------+---------------------------------------------------------------------------------+
     | Field                 | Value                                                                           |
     +-----------------------+---------------------------------------------------------------------------------+
     | admin_state_up        | True                                                                            |
     | allowed_address_pairs | {"ip_address": "10.0.0.201", "mac_address": "fa:16:3e:7a:7b:18"}                |
     | device_id             | e683e9d1-7eea-48dd-9d3a-a54cf9d9b7d6                                            |
     | device_owner          | compute:None                                                                    |
     | fixed_ips             | {"subnet_id": "94a0c371-d37c-4796-821e-57c2a8ec65ae", "ip_address": "10.0.0.4"} |
     | id                    | 12bf9ea4-4845-4e2c-b511-3b8b1ad7291d                                            |
     | mac_address           | fa:16:3e:7a:7b:18                                                               |
     | name                  |                                                                                 |
     | network_id            | 24e92ee1-8ae4-4c23-90af-accb3919f4d1                                            |
     | port_security_enabled | True                                                                            |
     | security_groups       | 36c8131f-d504-4bcc-b708-f330c9f6b67a                                            |
     | status                | ACTIVE                                                                          |
     | tenant_id             | d4e4332d5f8c4a8eab9fcb1345406cb0                                                | </screen>
   </step>
  </procedure>
  <!---->
  <para>
   <emphasis role="bold">使用 HPE 5930 交换机时 必须经过 VXLAN 隧道的 OpenStack 流量丢失</emphasis> 
   原因：UDP 目标端口 4789 与 OpenStack VXLAN 流量冲突。
  </para>
  <para>
   在交换机的配置中您可以设置 HPN kit 为其 VXLAN 隧道使用的端口。把它设置为 Neutron 默认的端口（4789）之外的端口可以保证 HPN kit 与 Neutron 的 VXLAN 流量不冲突。
   具体来说：
  </para>
  <para>
   <emphasis role="bold">参数：</emphasis>
  </para>
  <para>
   端口数：指定一个在 1-65535 之间的 UDP 端口。为避免与常用端口冲突，您应该选择 1024-65535 之间的端口。
  </para>
  <para>
   <emphasis role="bold">使用指南：</emphasis>
  </para>
  <para>
   您必须配置 VXLAN 内的 VTEP 全部使用同一个 UDP 端口。
  </para>
  <para>
   例子
  </para>
  <screen># Set the destination UDP port number to 6666 for VXLAN packets.
   &lt;Sysname&gt; system-view
   [Sysname] vxlan udp-port 6666</screen>
  <para>
   使用 vxlan udp-port 来设置 VXLAN 包的目标 UDP 端口。所有 VXLAN 包都必须注明一个 UDP 端口，默认为 4789。
  </para>
  <para>
   可以配置 OVS 自己使用不同的端口：
  </para>
  <screen># (IntOpt) The port number to utilize if tunnel_types includes 'vxlan'. By
   # default, this will make use of the Open vSwitch default value of '4789' if
   # not specified.
   #
   # vxlan_udp_port =
   # Example: vxlan_udp_port = 8472
   # </screen>
  <section xml:id="DOCS-3584">
   <title>问题：PCI-PT 虚拟机在启动时卡住</title>
   <para>
    如果您使用的机器使用 Intel NIC，并且 PCI-PT 虚拟机在启动时卡住，启动代理应该被禁用。
   </para>
   <para>
    When Intel cards are used for PCI-PT, sometimes the tenant virtual machine
    gets stuck at boot. If this happens, you should download Intel bootutils
    and use it to disable the bootagent.
   </para>
   <para>
    Use the following steps:
   </para>
   <procedure>
    <step>
     <para>
      Download <literal>preebot.tar.gz</literal> from the
      <link
       xlink:href="https://downloadcenter.intel.com/download/19186/Intel-Ethernet-Connections-Boot-Utility-Preboot-Images-and-EFI-Drivers"
       >Intel
       website</link>.
     </para>
    </step>
    <step>
     <para>
      Untar the <literal>preboot.tar.gz</literal> file on the compute host
      where the PCI-PT virtual machine is to be hosted.
     </para>
    </step>
    <step>
     <para>
      Go to path <literal>~/APPS/BootUtil/Linux_x64</literal> and then run
      following command:
     </para>
     <screen>./bootutil64e -BOOTENABLE disable -all</screen>
    </step>
    <step>
     <para>
      Now boot the PCI-PT virtual machine and it should boot without getting
      stuck.
     </para>
    </step>
   </procedure>
  </section>
 </section>
</section>
