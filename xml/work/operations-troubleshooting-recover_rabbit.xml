<?xml version="1.0"?>
<!DOCTYPE section [
<!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="recoverrabbit">
 <title>故障后理解和恢复 RabbitMQ</title>
 <para>
  RabbitMQ 是在每个控制器节点上运行的消息队列服务，并且代理在 &kw-hos-phrase; 云环境中的多个服务之间的通信。云管理员必须了解 RabbitMQ 相关的不同的故障排除方案，以便最大限度地减少环境中的停机时间。我们将讨论多个场景以及它如何影响 RabbitMQ。我们还将解释如何从问题中恢复。
 </para>
 <!---->
 <section xml:id="idg-all-operations-troubleshooting-recover_rabbit-xml-6">
  <title>关于 RabbitMQ</title>
  <para>
   RabbitMQ 是在每个控制器节点上运行的消息队列服务，并且代理在 &kw-hos-phrase; 云环境中的多个服务之间的通信。云管理员必须了解 RabbitMQ 相关的不同的故障排除方案，以便最大限度地减少环境中的停机时间。我们将讨论多个场景以及它如何影响 RabbitMQ。我们还将解释如何从问题中恢复。
  </para>
 </section>
 <section xml:id="idg-all-operations-troubleshooting-recover_rabbit-xml-7">
  <title>升级如何影响 RabbitMQ</title>
  <para>
   &kw-hos; 有两种类型的升级 - 主要和次要。升级过程对 RabbitMQ 的影响取决于这些类型。
  </para>
  <para>
   主要升级是 RabbitMQ 的 erlang 更改或主要版本升级。次要升级是 RabbitMQ 保持在同一版本内的升级，例如 v3.4.3 到 v.3.4.6。
  </para>
  <para>
   在两种类型的升级期间，随着帐户的重新创建，客户端服务的身份验证过程中可能会出现轻微的问题。
  </para>
  <para>
   <emphasis role="bold">RabbitMQ 主要升级时</emphasis>
  </para>
  <para>
   执行升级时将发生 RabbitMQ 服务中断。
  </para>
  <para>
   在升级过程中，高可用一致性会被破坏 - 主节点以外的所有节点都将关闭并被重置，这意味着它们的数据库副本将被删除。主节点在最后一步之前不会关闭，然后被升级。此过程保持用户和权限数据库。然后其他节点回到集群并重新同步。
  </para>
  <para>
   <emphasis role="bold">RabbitMQ 次要升级时</emphasis>
  </para>
  <para>
   次要升级是逐个节点执行的。这种“轮替”过程意味着不应该存在整体服务中断，因为每个节点依次从其集群中退出，其数据库被重置，然后将其添加回集群并重新同步。
  </para>
 </section>
 <section xml:id="idg-all-operations-troubleshooting-recover_rabbit-xml-8">
  <title>RabbitMQ 如何受到其他运行操作的影响</title>
  <para>
   有一些操作任务，例如 <xref linkend="stop_restart"/>，当您使用 <literal>ardana-stop.yml</literal> 和 <literal>ardana-start.yml</literal> 来重新启动您的云。如果您使用这些脚本，并且没有任何与之相关的错误迫使您进一步排除故障，那么 RabbitMQ 会被重新启动。RabbitMQ 在这些正常的操作过程中没有什么特别需要注意的地方。
  </para>
  <para>
   但是，还有当其他一些场景没有正常关机时，理解 RabbitMQ 很重要。
  </para>
  <para>
   以下这些示例假设您正在使用一个入门级模型，其中 RabbitMQ 托管在您的控制器节点集群上。如果您使用的是中型模型或 RabbitMQ 存在与一个独立集群上，则可能需要相应地更改步骤。要确定 RabbitMQ 所在的节点，您可以使用 &lcm; 中的 rabbit-status.yml 脚本。
  </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
   ansible-playbook -i hosts/verb_hosts rabbitmq-status.yml</screen>
  <para>
   <emphasis role="bold">您的整个控制平面集群都已下线</emphasis>
  </para>
  <para>
   如果您的所有控制器节点都已下线，无论是手动还是其他原因（例如断电），那么了解 RabbitMQ 应如何重新启动非常重要。在这些情况下，请按照以下步骤在控制器节点集群上恢复 RabbitMQ：
  </para>
  <procedure>
   <step>
    <para>
     节点关闭的顺序是关键。找到最后一个关闭的节点，因为这将在重新启动 RabbitMQ 集群时被用作主节点。您可以查看 <literal>/var/log/rabbitmq</literal> 日志文件中的时间戳，以确定最后一个节点是哪个。
    </para>
    <note>
     <para>
      节点的“primary”状态是暂时的，仅在此进程运行期间有效。集群中的任何节点之间没有长期区别。主节点只是拥有将在集群同步中的被同步的 RabbitMQ 配置数据库的节点。
     </para>
    </note>
   </step>
   <step>
    <para>
     运行的 <literal>ardana-start.yml</literal> 脚本，并指定主节点（也就是在第一步中确定的最后一个节点）：
    </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
     ansible-playbook -i hosts/verb_hosts ardana-start.yml -e rabbit_primary_hostname=&lt;hostname&gt;</screen>
    <note>
     <para>
      <literal>&lt;hostname&gt;</literal> 值是节点的“短名称”，如 <literal>/etc/hosts</literal> 文件中所示。
     </para>
    </note>
   </step>
  </procedure>
  <para>
   <emphasis role="bold">如果其中一个控制器节点下线</emphasis>
  </para>
  <para>
   这里的第一步是确定下线的控制器是否是主 RabbitMQ 主机。主主机是 &lcm; 下面文件中 FND-RMQ 组中的第一个主机成员：
  </para>
<screen>~/scratch/ansible/next/ardana/ansible/hosts/verb_hosts</screen>
  <para>
   在下面的这个例子中，<literal>ardana-cp1-c1-m1-mgmt</literal> 是主主机：
  </para>
  <screen>[FND-RMQ-ccp-cluster1:children]
   ardana-cp1-c1-m1-mgmt
   ardana-cp1-c1-m2-mgmt
   ardana-cp1-c1-m3-mgmt</screen>
  <para>
   如果您的主 RabbitMQ 控制器节点已下线并且您需要将其重新启动，则可以按照以下步骤操作。在此脚本中，您使用 <literal>rabbit_primary_hostname</literal> 参数指定托管 RabbitMQ 的环境中其中一个控制器节点的主机名，作为恢复中的主节点。您还将使用 <literal>--limit</literal> 参数指定您尝试重新启动的控制器节点。
  </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
   ansible-playbook -i hosts/verb_hosts ardana-start.yml -e rabbit_primary_hostname=&lt;new_primary_hostname&gt; --limit &lt;hostname_of_node_you_are_bringing_up&gt;</screen>
  <para>
   如果您需要启动的节点<emphasis role="bold">不是</emphasis>主 RabbitMQ 节点，那么您可以使用 <literal>--limit</literal> 参数运行 <literal>ardana-start.yml</literal> 脚本，这样您的节点应该会恢复：
  </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
   ansible-playbook -i hosts/verb_hosts ardana-start.yml --limit &lt;hostname_of_node_you_are_bringing_up&gt;</screen>
  <para>
   <emphasis role="bold">如果要替换一个或多个控制器节点</emphasis>
  </para>
  <para>
   如果要删除或替换一个或多个控制器节点，一般使用与上述大致相同的过程。
  </para>
  <para>
   如果您的节点需要较小的硬件修复，但不需要用新节点替换，则应使用带有 <literal>--limit</literal> 参数的 <literal>ardana-stop.yml</literal> 脚本在从集群中移除节点之前停止该节点上的服务。
  </para>
  <procedure>
   <step>
    <para>
     登录 &lcm;。
    </para>
   </step>
   <step>
    <para>
     运行 <literal>rabbitmq-stop.yml</literal> 脚本，指定要删除的节点的主机名，这将从 RabbitMQ 集群中删除该节点：
    </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
     ansible-playbook -i hosts/verb_hosts rabbitmq-stop.yml --limit &lt;hostname_of_node_you_are_removing&gt;</screen>
   </step>
   <step>
    <para>
     运行 <literal>ardana-stop.yml</literal> 脚本，再次指定要删除的节点的主机名，这将停止其余服务并准备将其删除：
    </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
     ansible-playbook -i hosts/verb_hosts ardana-stop.yml --limit &lt;hostname_of_node_you_are_removing&gt;</screen>
   </step>
  </procedure>
  <para>
   如果您的节点无法修复并需要用另一个裸机节点替换，则 RabbitMQ 集群需要删除其对该节点的任何引用。这是因为 RabbitMQ 将集群中的每个节点与部分由硬件派生的 cookie 相关联。更换节点中的硬盘应该没问题，但更换的主板或完全用另一个节点替换它可能会导致破损。在这些情况下，必须使用以下步骤从正在运行的 RabbitMQ 节点编辑正在运行的 RabbitMQ 集群：
  </para>
  <procedure>
   <step>
    <para>
     SSH 连接一个正在运行的 RabbitMQ 集群节点。
    </para>
   </step>
   <step>
    <para>
     用这个指令强制集群忘记您想移除的节点，这会移除所有对该节点的引用：
    </para>
    <screen>sudo rabbitmqctl forget_cluster_node rabbit@&lt;hostname_of_node_you_are_removing&gt;</screen>
   </step>
   <step>
    <para>
     接下来您可以用以下命令确认该节点已被移除：
    </para>
    <screen>sudo rabbitmqctl cluster_status</screen>
   </step>
  </procedure>
  <para>
   如果您移除或替换的是主主机，那么您需要确保在添加主机时指定新的主主机，如下：
  </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts ardana-start.yml -e rabbit_primary_hostname=&lt;new_primary_hostname&gt; --limit &lt;hostname_of_node_you_are_adding&gt;</screen>
  <para>
   如果您移除或替换的不是主主机，您可以用以下命令添加：
  </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts ardana-start.yml --limit &lt;hostname_of_node_you_are_adding&gt;</screen>
  <para>
   <emphasis role="bold">如果一个控制节点重启或暂时断电</emphasis>
  </para>
  <para>
   在一次重启之后，RabbitMQ 不会自动重新启动。这是为了保护您的 RabbitMQ 集群而设计的。要重启 RabbitMQ，您应该遵循以下的步骤：
  </para>
  <para>
   如果重启的是您的主 RabbitMQ 主机，您需要指定集群中一个不同的节点作为主主机：
  </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts ardana-start.yml -e rabbit_primary_hostname=&lt;new_primary_hostname&gt; --limit &lt;hostname_of_node_that_rebooted&gt;</screen>
  <para>
   如果重启的节点不是主 RabbitMQ 主机，那么您可以直接用这个脚本重新启动它：
  </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts ardana-start.yml --limit &lt;hostname_of_node_that_rebooted&gt;</screen>
 </section>
 <section xml:id="recovery">
  <title>恢复 RabbitMQ</title>
  <para>
   本章节中我们会向您展示如何检查 RabbitMQ 的状态以及如何进行各种灾难恢复程序。
  </para>
  <para>
   <emphasis role="bold">检查 RabbitMQ 的状态</emphasis>
  </para>
  <para>
   您可以在您的控制节点上用以下的步骤来检查 RabbitMQ 的状态：
  </para>
  <procedure>
   <step>
    <para>
     登录 &lcm;.
    </para>
   </step>
   <step>
    <para>
     运行 <literal>rabbitmq-status.yml</literal> 脚本：
    </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
     ansible-playbook -i hosts/verb_hosts rabbitmq-status.yml</screen>
   </step>
   <step>
    <para>
     如果一切正常，您应该看到类似于以下内容的输出：
    </para>
    <screen>PLAY RECAP ********************************************************************
     rabbitmq | status | Check RabbitMQ running hosts in cluster ------------- 2.12s
     rabbitmq | status | Check RabbitMQ service running ---------------------- 1.69s
     rabbitmq | status | Report status of RabbitMQ --------------------------- 0.32s
     -------------------------------------------------------------------------------
     Total: ------------------------------------------------------------------ 4.36s
     ardana-cp1-c1-m1-mgmt  : ok=2    changed=0    unreachable=0    failed=0
     ardana-cp1-c1-m2-mgmt  : ok=2    changed=0    unreachable=0    failed=0
     ardana-cp1-c1-m3-mgmt  : ok=2    changed=0    unreachable=0    failed=0</screen>
   </step>
  </procedure>
  <para>
   如果您的一些控制节点有 RabbitMQ 问题，请继续阅读，寻找与您的情况最符合的场景。
  </para>
  <para>
   <emphasis role="bold">小规模断网后的 RabbitMQ 恢复</emphasis>
  </para>
  <para>
   在短时间网络中断的情况下，&kw-hos-phrase; 附带的 RabbitMQ 版本可能会自动恢复，无需任何进一步的操作。但是，如果您的没有，并且 <literal>rabbitmq-status.yml</literal> 脚本报告问题，那么请使用以下方案解决您的问题。
  </para>
  <para>
   <emphasis role="bold">所有控制器节点都已下线，并且使用其他方法未将 RabbitMQ 重新启动</emphasis>
  </para>
  <para>
   如果您的 RabbitMQ 集群无法恢复，并且您需要快速恢复服务，因为其他方法无法解决问题，或者您没有时间研究更细微的方法，那么我们提供灾难恢复脚本供您使用。该脚本将拆除并重置所有 RabbitMQ 服务。这会对您的服务产生极大影响。但该过程将确保重新创建 RabbitMQ 集群。
  </para>
  <procedure>
   <step>
    <para>
     登录 &lcm;。
    </para>
   </step>
   <step>
    <para>
     运行 RabbitMQ 灾难恢复脚本。这通常会花费大约两分钟。
    </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
     ansible-playbook -i hosts/verb_hosts rabbitmq-disaster-recovery.yml</screen>
   </step>
   <step>
    <para>
     运行 Cinder（块存储）和 Heat（编配）的重配置脚本，如果您的云有这些服务。当扇出队列没有正确恢复时这些服务会被影响。重新配置通常需要大约五分钟。
    </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
     ansible-playbook -i hosts/verb_hosts cinder-reconfigure.yml
     ansible-playbook -i hosts/verb_hosts heat-reconfigure.yml
     ansible-playbook -i hosts/verb_hosts logging-server-configure.yml</screen>
   </step>
   <step>
    <para>
     如果您需要安全的恢复您的环境中的所有服务，您可以使用这个脚本。鉴于所有服务都要被检查，这可能会花费更多时间。
    </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
ansible-playbook -i hosts/verb_hosts ardana-reconfigure.yml</screen>
   </step>
  </procedure>
  <para>
   <emphasis role="bold">一个控制器节点下线，并且使用其他方法未将 RabbitMQ 重新启动</emphasis>
  </para>
  <para>
   此灾难恢复过程与前一个过程具有相同的注意事项，但步骤不同。
  </para>
  <para>
   如果您的主 RabbitMQ 控制器节点已下线并且您需要执行灾难恢复，请使用 &lcm; 中的此脚本：
  </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
   ansible-playbook -i hosts/verb_hosts rabbitmq-disaster-recovery.yml -e rabbit_primary_hostname=&lt;new_primary_hostname&gt; --limit &lt;hostname_of_node_that_needs_recovered&gt;</screen>
  <para>
   如果该节点不是主 RabbitMQ 控制器节点，请使用此脚本：
  </para>
<screen>cd ~/scratch/ansible/next/ardana/ansible
   ansible-playbook -i hosts/verb_hosts rabbitmq-disaster-recovery.yml --limit &lt;hostname_of_node_that_needs_recovered&gt;</screen>
  <para>
   不需要运行重配置脚本，因为所有扇出交换都由 RabbitMQ 集群正在运行的成员维护。
  </para>
 </section>
</section>
