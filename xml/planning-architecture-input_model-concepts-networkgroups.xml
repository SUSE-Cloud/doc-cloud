<?xml version="1.0"?>
<!DOCTYPE section [
 <!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<!--Edit status: not edited-->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="concept_networkgroups" version="5.1">
    <title>Network Groups</title>




    <para>
        <emphasis>Service endpoints attach to <guilabel>networks</guilabel> in a specific
                <guilabel>network-group</guilabel>.</emphasis>
    </para>

    <para>
        <emphasis><guilabel>Network-groups</guilabel> can define routes to other
                <guilabel>networks</guilabel>.</emphasis>
    </para>

    <para>
        <emphasis><guilabel>Network-groups</guilabel> encapsulate the configuration for
                <guilabel>services</guilabel> via <guilabel>network-tags</guilabel></emphasis>
    </para>

    <para>A <guilabel>network-group</guilabel> defines the traffic separation model and all of the
        properties that are common to the set of L3 networks that carry each type of traffic. They
        define where services are attached to the network model and the routing within that
        model.</para>

    <para>In terms of <guilabel>service</guilabel> connectivity, all that has to be captured in the
            <guilabel>network-groups</guilabel> definition is the same service-component names that
        are used when defining <guilabel>control-planes</guilabel>. &kw-hos; also allows a
        default attachment to be used to specify "all service-components" that aren't explicitly
        connected to another <guilabel>network-group</guilabel>. So, for example, to isolate Swift
        traffic, the swift-account, swift-container, and swift-object service components are
        attached to an "Object" <guilabel>network-group</guilabel> and all other services are
        connected to "Management" <guilabel>network-group</guilabel> via the default
        relationship.</para>

    <para>The details of how each service connects, such as what port it uses, if it should be
        behind a load balancer, if and how it should be registered in Keystone, and so forth, are
        defined in the service definition files provided by &kw-hos;.</para>

    <para>In any configuration with multiple networks, controlling the routing is a major
        consideration. In &kw-hos;, routing is controlled at the
            <guilabel>network-group</guilabel> level. First, all <guilabel>networks</guilabel> are
        configured to provide the route to any other <guilabel>networks</guilabel> in the same
            <guilabel>network-group</guilabel>. In addition, a <guilabel>network-group</guilabel>
        may be configured to provide the route any other <guilabel>networks</guilabel> in the same
            <guilabel>network-group</guilabel>; for example, if the internal APIs are in a dedicated
            <guilabel>network-group</guilabel> (a common configuration in a complex network because
        a network group with load balancers cannot be segmented) then other
            <guilabel>network-groups</guilabel> may need to include a route to the internal API
            <guilabel>network-group</guilabel> so that services can access the internal API
        endpoints. Routes may also be required to define how to access an external storage network
        or to define a general default route.</para>

    <para>As part of the &kw-hos; deployment, networks are configured to act as the default
        route for all traffic that was received via that network (so that response packets always
        return via the network the request came from).</para>

    <para>Note that &kw-hos; will configure the routing rules on the servers it deploys and will
        validate that the routes between services exist in the model, but ensuring that gateways can
        provide the required routes is the responsibility of your network configuration. The
        configuration processor provides information about the routes it is expecting to be
        configured.</para>

    <para>For a detailed description of how the configuration processor validates routes, refer to
        <xref linkend="networkroutevalidation"/>.</para>

    <xi:include href="planning-architecture-input_model-concepts-loadbalancers.xml"/>
    <xi:include href="planning-architecture-input_model-concepts-endpoints.xml"/>
    <xi:include href="planning-architecture-input_model-concepts-networktags.xml"/>

</section>
