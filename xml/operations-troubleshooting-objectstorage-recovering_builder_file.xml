<?xml version="1.0"?>
<!DOCTYPE section [
 <!ENTITY % entities SYSTEM "entity-decl.ent"> %entities;
]>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="topic_gbz_13t_mt">
 <title>Recovering &swift; Builder Files</title>
 <para>
  When you execute the deploy process for a system, the builder files are stored
  on the primary ring builder node, as well as on all nodes in the ring,
  in the location
  <literal>/etc/swiftlm/<replaceable>CLOUD_NAME</replaceable>/<replaceable>CONTROL_PLANE_NAME</replaceable>/builder_dir/</literal>.
 </para>
 <para>
  If these builder files are found on the primary &swift; ring building node
  (to identify which node is the primary ring building node, see
  <xref linkend="topic_rtc_s3t_mt"/>) in the directory
  <literal>/etc/swiftlm/<replaceable>CLOUD_NAME</replaceable>/<replaceable>CONTROL_PLANE_NAME</replaceable>/builder_dir</literal>,
  then no further recover action is needed. If not, then you need to copy the
  files from an intact &swift; node onto the primary &swift; ring building node.
 </para>
 <para>
  If you have no intact <literal>/etc/swiftlm</literal> directory on any &swift;
  node, you may be able to restore from a backup. See
  <xref linkend="recovering_controller_nodes"/>.
 </para>
 <para>
  To restore builder files on the primary ring builder node from a backup stored
  on another member of the ring, use the following process:
 </para>
 <procedure>
  <step>
   <para>
    Log in to the &swift; ring building server (To identify the &swift; ring
    building server, see <xref linkend="topic_rtc_s3t_mt"/>).
   </para>
  </step>
  <step>
   <para>
    Create the <literal>/etc/swiftlm/<replaceable>CLOUD_NAME</replaceable>/<replaceable>CONTROL_PLANE_NAME</replaceable>/builder_dir</literal>
    directory structure with these commands:
   </para>
   <para>
    Replace <replaceable>CLOUD_NAME</replaceable> with the name of your cloud
    and <replaceable>CONTROL_PLANE_NAME</replaceable> with the name of your
    control plane.
   </para>
<screen>&prompt.sudo;mkdir -p /etc/swiftlm/<replaceable>CLOUD_NAME</replaceable>/<replaceable>CONTROL_PLANE_NAME</replaceable>/builder_dir/
&prompt.sudo;chown -R ardana.ardana /etc/swiftlm/</screen>
  </step>
  <step>
   <para>
    Log in to a &swift; node where an intact
    <literal>/etc/swiftlm/deploy_dir</literal> directory exists.
   </para>
  </step>
  <step>
   <para>
    Copy the builder files to the &swift; ring building node. In the example
    below we use scp to transfer the files, where
    <literal>swpac-c1-m2-mgmt</literal> is the node where the files can be
    found, <literal>cloud1</literal> is the cloud, and <literal>cp1</literal>
    is the control plane name:
   </para>
<screen>&prompt.sudo;mkdir -p /etc/swiftlm/cloud1/cp1/builder_dir
&prompt.sudo;cd /etc/swiftlm/cloud1/cp1/builder_dir
&prompt.sudo;scp -r ardana@swpac-ccp-c1-m1-mgmt:/etc/swiftlm/cloud1/cp1/builder_dir/* ./
&prompt.sudo;chown -R swift:swift /etc/swiftlm</screen>
  </step>
  <step>
   <para>
    (Any permissions errors related to files in the <literal>backups</literal>
    directory can be ignored.) If you are only recovering the ring builder
    files onto an existing controller node, and not restoring the node itself
    along with the entire software stack, then log in to the &clm; and run the
    following playbook to replicate the builder files across all &swift; nodes:
   </para>
<screen>&prompt.ardana;cd ~/scratch/ansible/next/ardana/ansible
&prompt.ardana;ansible-playbook -i hosts/verb_hosts swift-reconfigure.yml</screen>
   <para>
    Otherwise, this step will take place automatically as you continue with
    the restoration of your controller node.
   </para>
  </step>
 </procedure>
</section>
