<?xml version="1.0"?>
<!DOCTYPE chapter [
 <!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<chapter xml:id="install_gui"
 xmlns="http://docbook.org/ns/docbook" version="5.1"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Installing with the &install_ui;</title>
 <para>
 </para>
 <para>
  &productname; comes with a GUI-based installation wizard for first-time cloud
  installations. It will guide you through the configuration process and deploy
  your cloud based on the custom configuration you provide.  The &install_ui;
  will start with a set of example cloud configurations for you to choose
  from. Based on your cloud choice, you can refine your configuration to match
  your needs using &install_ui; widgets. You can also directly edit your model
  configuration files.
 </para>
 <note>
  <para>
   The &install_ui; is only for initial deployments. It will not function
   properly after your cloud has been deployed successfully, whether it was
   from the CLI or with the &install_ui;.
  </para>
 </note>
 <para>
  When you are satisfied with your configuration and the &install_ui; has
  validated your configuration successfully, you can then deploy the cloud into
  your environment. Deploying the cloud will version-control your configuration
  into a git repository and provide you with live progress of your deployment.
 </para>
 <para>
  With the &install_ui;, you have the option of provisioning &sle_repo; to
  IPMI-capable machines described in your configuration files. Provisioning
  machines with the &install_ui; will also properly configure them for Ansible
  access.
 </para>
 <para>
  The &install_ui; is designed to make the initial installation process
  simpler, more accurate, and faster than manual installation.
 </para>
 <xi:include xpointer="element(/1/3)" href="installation-kvm_xpointer.xml"/>
 <section>
  <title>Preparing to Run the &install_ui;</title>
  <para>
   Before you launch the &install_ui; to install your cloud, do the following:
  </para>
  <procedure>
   <step>
    <para>
     Gather the following details from the servers that will make up your
     cloud:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       Server names
      </para>
     </listitem>
     <listitem>
      <para>
       IP addresses
      </para>
     </listitem>
     <listitem>
      <para>
       Server roles
      </para>
     </listitem>
     <listitem>
      <para>
       PXE MAC addresses
      </para>
     </listitem>
     <listitem>
      <para>
       PXE IP addresses
      </para>
     </listitem>
     <listitem>
      <para>
       PXE interfaces
      </para>
     </listitem>
     <listitem>
      <para>
       IPMI IP address, username, password
      </para>
     </listitem>
    </itemizedlist>
   </step>
   <step>
    <para>
     Choose an input model from <xref linkend="example_configurations"/>. No
     action other than an understanding of your needs is necessary at this
     point. In the &install_ui; you will indicate which input model you wish to
     deploy.
    </para>
   </step>
   <step>
    <para>
     Before you use the &install_ui; to install your cloud, you may install the
     operating system, &hlinux;, on your nodes (servers) if you choose.
     Otherwise, the &install_ui; will install it for you.
    </para>
    <para> If you are installing the operating system on all nodes yourself,
    you must do so using the &hlinux; image included in the &kw-hos-phrase;
    package.
    </para>
   </step>
  </procedure>
   <para>
  In &kw-hos-phrase;, a local git repository is used to track configuration
  changes; the Configuration Processor (CP) uses this repository. Use of a git
  workflow means that your configuration history is maintained, making
  rollbacks easier and keeping a record of previous configuration settings. The
  git repository also provides a way for you to merge changes that you pull down as
  <quote>upstream</quote> updates (that is, updates from &vendor;). It also
  allows you to manage your own configuration changes.
 </para>
 <para>
  The git repository is installed by the &lcm; on the &lcm; node.
 </para>
 <para>
  Using the &install_ui; does not require the use of the git repository. After
  the installation, it may be useful to know more about
  <xref linkend="using_git"/>.
 </para>
 </section>
 <section xml:id="create_csv_file">
  <title>Optional: Creating a CSV File to Import Server Data</title>
  <para>
   Before beginning the installation, you can create a CSV file with your
   server information to import directly into the &install_ui; to avoid
   entering it manually on the <guimenu>Assign Servers</guimenu> page.
  </para>
  <para>
   The following table shows the fields needed for your CSV file.
  </para>
  <informaltable>
   <tgroup cols="4">
    <colspec colnum="1" colname="col1" colwidth=".8*"/>
    <colspec colnum="2" colname="col2" colwidth=".6*" align="center" />
    <colspec colnum="3" colname="col3" colwidth=".8*" align="center" />
    <colspec colnum="4" colname="col4" colwidth="1*"/>
    <tbody>
     <row>
      <entry><emphasis role="bold">Field</emphasis>
      </entry>
      <entry><emphasis role="bold">Required</emphasis>
      </entry>
      <entry><emphasis role="bold">Required for OS Provisioning</emphasis>
      </entry>
      <entry><emphasis role="bold">Aliases</emphasis>
      </entry>
     </row>
     <row>
      <entry>Server ID</entry>
      <entry>Yes</entry>
      <entry>Yes</entry>
      <entry>server_id, id</entry>
     </row>
     <row>
      <entry>IP Address</entry>
      <entry>Yes</entry>
      <entry>Yes</entry>
      <entry>ip, ip_address, ip_addr</entry>
     </row>
     <row>
      <entry>MAC Address</entry>
      <entry>Yes</entry>
      <entry>Yes</entry>
      <entry>mac, mac_address, mac_addr</entry>
     </row>
     <row>
      <entry>IPMI IP Address</entry>
      <entry>No</entry>
      <entry>Yes</entry>
      <entry>ipmi_ip, ipmi_ip_address</entry>
     </row>
     <row>
      <entry>IPMI User</entry>
      <entry>No</entry>
      <entry>Yes</entry>
      <entry>ipmi_user, user</entry>
     </row>
     <row>
      <entry>IPMI Password</entry>
      <entry>No</entry>
      <entry>Yes</entry>
      <entry>ipmi_password, password</entry>
     </row>
     <row>
      <entry>Server Role</entry>
      <entry>No</entry>
      <entry>No</entry>
      <entry>server_role, role</entry>
     </row>
     <row>
      <entry>Server Group</entry>
      <entry>No</entry>
      <entry>No</entry>
      <entry>server_group, group</entry>
     </row>
     <row>
      <entry>NIC Mapping</entry>
      <entry>No</entry>
      <entry>No</entry>
      <entry>server_nic_map, nic_map, nic_mapping</entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
  <para>
   The aliases are all the valid names that can be used in the CSV file for the
   column header for a given field. Field names are not case sensitive. You can
   use either <literal> </literal> (space) or <literal>-</literal> (hyphen) in
   place of underscore for a field name.
  </para>
  <para>
   An example CSV file could be:
  </para>
<screen>
<?dbsuse-fo font-size="0.65em"?>
id,ip-addr,mac-address,server-group,nic-mapping,server-role,ipmi-ip,ipmi-user
controller1,192.168.110.3,b2:72:8d:ac:7c:6f,RACK1,HP-DL360-4PORT,CONTROLLER-ROLE,192.168.109.3,admin
myserver4,10.2.10.24,00:14:22:01:23:44,AZ1,,,,
</screen>
 </section>
 <section xml:id="discover_servers">
  <title>Optional: Importing Certificates for &susemgr; and &oneview;</title>
  <para>
   If you intend to use &susemgr; or &oneview; to add servers, certificates for
   those services must be accessible to the &install_ui;.
  </para>
  <para>
   Use the following steps to import a &susemgr; certificate.
  </para>
  <procedure>
   <step>
    <para>
     Retrieve the <filename>.pem</filename> file from the &susemgr;.
    </para>
<screen>curl -k https://<replaceable>SUSE_MANAGER_IP</replaceable>:<replaceable>PORT</replaceable>/pub/RHN-ORG-TRUSTED-SSL-CERT &gt; <replaceable>PEM_NAME</replaceable>.pem</screen>
   </step>
   <step>
    <para>
     Copy the <filename>.pem</filename> file to the proper location on the
     &lcm;.
    </para>
<screen>
cd /etc/pki/trust/anchors
sudo cp ~/<replaceable>PEM_NAME</replaceable>.pem .
</screen>
   </step>
   <step>
    <para>
     Install the certificate.
    </para>
<screen>
sudo update-ca-certificates
</screen>
   </step>
   <step>
    <para>
     Add <replaceable>&susemgr; host IP address</replaceable> if
     <replaceable>&susemgr;.test.domain</replaceable> is not reachable by DNS.
    </para>
<screen>
sudo vi /etc/hosts
</screen>
    <para>
     Add <replaceable>&susemgr; host IP address</replaceable>
     <replaceable>&susemgr;.test.domain</replaceable>. For example:
    </para>
<screen>
10.10.10.10 &susemgr;.test.domain
</screen>
   </step>
  </procedure>
  <para>
   Use the following steps to import an &oneview; certificate.
  </para>
  <procedure>
   <step xml:id="st.oneview.retrieve-id">
    <para>
     Retrieve the <literal>sessionID</literal>.
    </para>
<screen>curl -k -H "X-Api-Version:500" -H "Content-Type: application/json" \
-d '{"userName":<replaceable>ONEVIEW_USER</replaceable>, "password":<replaceable>ONEVIEW_PASSWORD</replaceable>, \
"loginMsgAck":"true"}' https://<replaceable>ONEVIEW_MANAGER_URL</replaceable>:<replaceable>PORT</replaceable>/rest/login-sessions</screen>
    <para>
     The response will be similar to:
    </para>
<screen>
{"partnerData":{},"sessionID":"LTYxNjA1O1NjkxMHcI1b2ypaGPscErUOHrl7At3-odHPmR"}
</screen>
   </step>
   <step>
    <para>
     Retrieve a Certificate Signing Request (CSR) using the
     <replaceable>sessionID</replaceable> from
     <xref linkend="st.oneview.retrieve-id"/>.
    </para>
<screen>curl -k -i -H "X-Api-Version:500" -H <replaceable>sessionID</replaceable> \
<replaceable>ONEVIEW_MANAGER_URL</replaceable>/rest/certificates/ca \
&gt; <replaceable>CA_NAME</replaceable>.csr</screen>
   </step>
   <step>
    <para>
     Follow instructions in the &oneview; User Guide to validate the CSR and
     obtain a signed certificate
     (<replaceable>CA_NAME</replaceable><filename>.crt</filename>).
    </para>
   </step>
   <step>
    <para>
     Copy the <filename>.crt</filename> file to the proper location on the
     &lcm;.
    </para>
<screen>
cd /etc/pki/trust/anchors
sudo cp ~/data/<replaceable>CA_NAME</replaceable>.crt .
</screen>
   </step>
   <step>
    <para>
     Install the certificate.
    </para>
<screen>
sudo update-ca-certificates
</screen>
   </step>
   <step>
    <para>
     Follow instructions in your &oneview; User Guide to import the
     <replaceable>CA_NAME</replaceable>.crt certificate into &oneview;.
    </para>
   </step>
   <step>
    <para>
     Add <replaceable>&oneview; host IP address</replaceable> if
     <replaceable>&oneview;.test.domain</replaceable> is not reachable by DNS.
    </para>
<screen>
sudo vi /etc/hosts
</screen>
    <para>
     Add <replaceable>&oneview; host IP address</replaceable>
     <replaceable>&oneview;.test.domain</replaceable> For example:
    </para>
<screen>
10.84.84.84  &oneview;.test.domain
</screen>
   </step>
  </procedure>
 </section>
 <section>
  <title>Running the &install_ui;</title>
  <important>
   <para>
    The &install_ui; must run continuously without stopping for authentication
    at any step. When using the &install_ui; it is required to launch the &lcm;
    with the following command:
   </para>
   <screen>ARDANA_INIT_AUTO=1 /usr/bin/ardana-init</screen>
  </important>
  <para>
   Deploying the cloud to your servers will reconfigure networking and firewall
   rules on your cloud servers. To avoid problems with these networking changes
   when using the &install_ui;, we recommend you run a browser directly on your
   &lcm; node and point it to <uri>http://localhost:2209</uri>.
  </para>
  <para>
   If you cannot run a browser on the &lcm; node to perform the install, you
   can run a browser from a Linux-based computer in your
   <emphasis role="bold">MANAGEMENT</emphasis> network. However, firewall rules
   applied during cloud deployment will block access to the &install_ui;. To
   avoid blocking the connection, you can use the &install_ui; via an SSH
   tunnel to the &lcm; server. This will allow SSH connections through the
   <emphasis role="bold">MANAGEMENT</emphasis> network when you reach the
   "Review Configuration Files" step of the install process.
  </para>
  <para>
   To open an SSH tunnel from your Linux-based computer in your
   <emphasis role="bold">MANAGEMENT</emphasis> network to the &lcm;:
  </para>
  <procedure>
   <step>
    <para>
     Open a new terminal and enter the following command:
    </para>
<screen>
ssh -N -L 8080:localhost:2209 ardana@<replaceable>MANAGEMENT IP address of &lcm;</replaceable>
</screen>
    <para>
     The user name and password should be what was set in
     <xref linkend="sec.depl.adm_inst.add_on"/>. There will be no prompt after
     you have logged in.
    </para>
   </step>
   <step>
    <para>
     Leave this terminal session open to keep the SSH tunnel open and running.
     This SSH tunnel will forward connections from your Linux-based computer
     directly to the &lcm;, bypassing firewall restrictions.
    </para>
   </step>
   <step>
    <para>
     On your local computer (the one you are tunneling from), point your
     browser to <uri>http://localhost:8080</uri>.
    </para>
   </step>
   <step>
    <para>
     If the connection is interrupted, refresh your browser.
    </para>
   </step>
  </procedure>
  <important>
   <para>
    If you use an SSH tunnel to connect to the &install_ui;, there is an
    important note in the "Review Configuration Files" step about modifying
    <filename>firewall_rules.yml</filename> to allow SSH connections on the
    <emphasis role="bold">MANAGEMENT</emphasis> network.
   </para>
  </important>
  <bridgehead renderas="sect4">Overview</bridgehead>
  <para>
   The first page of the &install_ui; shows the general installation process
   and a reminder to gather some information before beginning. Clicking the
   <guimenu>Next</guimenu> button brings up the <guimenu>Model
   Selection</guimenu> page.
  </para>
  <informalfigure vendor="hpe">
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="installer_ui_intro_oem_hpe.png" width="75%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="installer_ui_intro_oem_hpe.png"/>
    </imageobject>
   </mediaobject>
  </informalfigure>
  <informalfigure vendor="suse;suse-crow">
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="installer_ui_intro.png" width="75%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="installer_ui_intro.png"/>
    </imageobject>
   </mediaobject>
  </informalfigure>
  <bridgehead renderas="sect4">Choose an &ostack; Cloud Model</bridgehead>
  <para>
   The input model choices are displayed on this page. Details of each model
   can be seen on the right by clicking the model name on the left. If you have
   already decided some aspects of your cloud environment, models can be
   filtered using the dropdown selections. Narrowing a parameter affects the
   range of choices of models and changes other dropdown choices to only those
   that are compatible.
  </para>
  <para>
   Selecting a model will determine the base template from which the cloud will
   be deployed. Models can be adjusted later in the process, though selecting
   the closest match to your requirements reduces the effort required to deploy
   your cloud.
  </para>
  <warning>
   <para>
    If you select any ESX model, extra manual steps are required to avoid
    configuration failures. While installing an ESX model with the
    &install_ui;, you will be asked for interfaces related to ESX and
    OVSvApp. Those interfaces must be defined before being entered in the
    &install_ui;.  Instructions are available at <xref
    linkend="esxi_overview"/>.
   </para>
  </warning>
  <note>
   <para>
    <emphasis role="bold">Installing a Stand-alone Deployer</emphasis>
   </para>
   <para>
    If you are using the &install_ui; to install a stand-alone deployer, select
    that model, which was created previously in <xref
    linkend="preparing_standalone"/>.
   </para>
   <para>
    Continue with the remaining &install_ui; steps to finish installing the
    stand-alone deployer.
   </para>
  </note>
  <informalfigure>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="installer_ui_select_model.png" width="75%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="installer_ui_select_model.png"/>
    </imageobject>
   </mediaobject>
  </informalfigure>
  <bridgehead renderas="sect4">Cloud Model to Deploy</bridgehead>
  <para>
   Based on the cloud example selected on the previous page, more detail is
   shown about that cloud configuration and the components that will be
   deployed. If you go back and select a different model, the deployment
   process restarts from the beginning. Any configuration changes you have made
   will be deleted.
  </para>
  <itemizedlist>
   <listitem>
    <para>
     <emphasis>Mandatory components</emphasis> have assigned quantities. We
     strongly suggest not changing those quantities to avoid potential problems
     later in the installation process.
    </para>
   </listitem>
   <listitem>
    <para>
     <emphasis>Additional components</emphasis> can be adjusted within the
     parameters shown.
    </para>
   </listitem>
  </itemizedlist>
  <para>
   The number of nodes (servers) dedicated to each server role can be adjusted.
   Most input models are designed to support High Availability and to
   distribute &ostack; services appropriately.
  </para>
  <informalfigure vendor="hpe">
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="installer_ui_model_details_oem_hpe.png" width="75%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="installer_ui_model_details_oem_hpe.png"/>
    </imageobject>
   </mediaobject>
  </informalfigure>
  <informalfigure vendor="suse;suse-crow">
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="installer_ui_model_details.png" width="75%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="installer_ui_model_details.png"/>
    </imageobject>
   </mediaobject>
  </informalfigure>
  <bridgehead renderas="sect4">Adding Servers and Assigning Server Roles</bridgehead>
  <para>
   This page provides more detail about the number and assignment of each type
   of node based on the information from the previous page (any changes must be
   made there).
  </para>
  <para>
   Components that do not meet the required parameters will be shown in red in
   the accordion bar. Missing required fields and duplicate server names will
   also be red, as will the accordion bar. The <guimenu>Next</guimenu> button
   will be disabled.
  </para>
  <para>
   Servers may be discovered using &susemgr;, &oneview;, or both. Ensure that
   the certificates are accessible, as described in
   <xref linkend="discover_servers"/>. Clicking the <guimenu>Discover</guimenu>
   button will prompt for access credentials to the system management software
   to be used for discovery. Certificates can be verified by checking
   <guimenu>Verify SSL certificate</guimenu>. After validating credentials,
   Discovery will retrieve a list of known servers from &susemgr; and/or
   &oneview; and allow access to server details on those management platforms.
  </para>
  <para>
   You can drag and drop to move servers from the left to the right in order to
   assign server roles, from right to left, or up and down in the accordion
   bar.
  </para>
  <informalfigure>
<!-- FIXME: added screenshots without vendor identification; remove section when
change is accepted
   <mediaobject vendor="hpe">
    <imageobject role="fo">
     <imagedata fileref="installer_ui_assign_servers_oem_hpe.png" width="75%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="installer_ui_assign_servers_oem_hpe.png"/>
    </imageobject>
   </mediaobject>
  </informalfigure>
  <informalfigure vendor="suse;suse-crow"> -->
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="installer_ui_assign_servers.png" width="75%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="installer_ui_assign_servers.png"/>
    </imageobject>
   </mediaobject>
  </informalfigure>
  <informalfigure>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="installer_ui_discovery.png" width="75%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="installer_ui_discovery.png"/>
    </imageobject>
   </mediaobject>
  </informalfigure>
  <para>
   Server information may also be entered manually or imported via CSV in the
   <guimenu>Manual Entry</guimenu> tab. The format for CSV entry is described
   in <xref linkend="create_csv_file"/>. The server assignment list includes
   placeholder server details that can be edited to reflect real hardware, or
   can be removed and replaced with discovered or manually added systems.
  </para>
  <para>
   For more information about server roles, see
   <xref linkend="concept_serverroles"/>.
  </para>
  <informalfigure>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="installer_ui_add_servers_manually.png" width="75%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="installer_ui_add_servers_manually.png"/>
    </imageobject>
   </mediaobject>
  </informalfigure>
  <informalfigure>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="installer_ui_add_server_manually.png" width="75%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="installer_ui_add_server_manually.png"/>
    </imageobject>
   </mediaobject>
  </informalfigure>
  <para>
   Subnet and netmask values should be set on this page as they may impact the
   IP addresses being assigned to various servers.
  </para>
  <bridgehead renderas="sect4">Choose servers on which &hlinux; will be installed</bridgehead>
  <para>
   If an OS has not previously been installed on the servers that make up the
   cloud configuration, the OS installation page allows for Cobbler to deploy
   &hlinux; on servers in the cloud configuration. Enter password, select
   servers and click <guimenu>Install</guimenu> to deploy &hlinux; to these
   servers. An installation log and progress indicators will be displayed.
  </para>
  <informalfigure vendor="hpe">
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="installer_ui_install_os_oem_hpe.png" width="75%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="installer_ui_install_os_oem_hpe.png"/>
    </imageobject>
   </mediaobject>
  </informalfigure>
  <informalfigure vendor="suse;suse-crow">
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="installer_ui_install_os.png" width="75%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="installer_ui_install_os.png"/>
    </imageobject>
   </mediaobject>
  </informalfigure>
  <informalfigure vendor="hpe">
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="installer_ui_install_os_inprogress_oem_hpe.png" width="75%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="installer_ui_install_os_inprogress_oem_hpe.png"/>
    </imageobject>
   </mediaobject>
  </informalfigure>
  <informalfigure vendor="suse;suse-crow">
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="installer_ui_install_os_inprogress.png" width="75%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="installer_ui_install_os_inprogress.png"/>
    </imageobject>
   </mediaobject>
  </informalfigure>
  <bridgehead renderas="sect4">Server and Role Summary</bridgehead>
  <para>
   When the OS installation is complete, a Server and Server Role Summary page
   is displayed. It shows which servers have been assigned to each role, and
   provides an opportunity to edit the server configurations. Various cloud
   components can be configured by clicking on the <guimenu>Manage Cloud
   Settings</guimenu> button. Incorrect information will be shown in red.
  </para>
  <para>
   Below is the list of what can be changed within the &install_ui;, followed
   by a list of customizations that can only be changed by directly editing the
   files on the <guimenu>Review Configuration Files</guimenu> page. Anything
   changed directly in the files themselves during the &install_ui; process
   will be overwritten by values you have entered with the &install_ui;.
  </para>
  <para>
   Changes to the following items can be made:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     servers (including &hlinux; installation configuration)
    </para>
   </listitem>
   <listitem>
    <para>
     networks
    </para>
   </listitem>
   <listitem>
    <para>
     disk models
    </para>
   </listitem>
   <listitem>
    <para>
     interface models
    </para>
   </listitem>
   <listitem>
    <para>
     NIC mappings
    </para>
   </listitem>
   <listitem>
    <para>
     NTP servers
    </para>
   </listitem>
   <listitem>
    <para>
     name servers
    </para>
   </listitem>
   <listitem>
    <para>
     tags in network groups
    </para>
   </listitem>
  </itemizedlist>
  <para>
   Changes to the following items can only be made by manually editing the
   associated <filename>.yml</filename> files on the <guimenu>Review
   Configuration</guimenu> page of the &install_ui;:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     server groups
    </para>
   </listitem>
   <listitem>
    <para>
     server roles
    </para>
   </listitem>
   <listitem>
    <para>
     network groups
    </para>
   </listitem>
   <listitem>
    <para>
     firewall rules
    </para>
   </listitem>
   <listitem>
    <para>
     DNS, SMTP, firewall settings (<filename>cloudConfig.yml</filename>)
    </para>
   </listitem>
   <listitem>
    <para>
     control planes
    </para>
   </listitem>
  </itemizedlist>
  <important>
   <para>
    Directly changing files may cause the configuration to fail validation.
    During the process of installing with the &install_ui;, any changes should
    be made with the tools provided within the &install_ui;.
   </para>
  </important>
  <informalfigure vendor="hpe">
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="installer_ui_server_summary_oem_hpe.png" width="75%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="installer_ui_server_summary_oem_hpe.png"/>
    </imageobject>
   </mediaobject>
  </informalfigure>
  <informalfigure vendor="suse;suse-crow">
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="installer_ui_server_summary.png" width="75%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="installer_ui_server_summary.png"/>
    </imageobject>
   </mediaobject>
  </informalfigure>
  <informalfigure>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="installer_ui_edit_server.png" width="75%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="installer_ui_edit_server.png"/>
    </imageobject>
   </mediaobject>
  </informalfigure>
  <informalfigure>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="installer_ui_manage_cloud_settings.png" width="75%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="installer_ui_manage_cloud_settings.png"/>
    </imageobject>
   </mediaobject>
  </informalfigure>
  <bridgehead renderas="sect4">Review Configuration Files</bridgehead>
  <para>
   Advanced editing of the cloud configuration can be done on the
   <literal>Review Configuration Files</literal> page. Individual
   <filename>.yml</filename> and <filename>.j2</filename> files can be edited
   directly with the embedded editor in the <guimenu>Model</guimenu> and
   <guimenu>Templates and Services</guimenu> tabs. The
   <guimenu>Deployment</guimenu> tab contains the items <guimenu>Wipe Data
   Disks</guimenu>, <guimenu>Encryption Key</guimenu> and <guimenu>Verbosity
   Level</guimenu>.
  </para>
  <informalfigure>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="installer_ui_review_configuration.png" width="75%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="installer_ui_review_configuration.png"/>
    </imageobject>
   </mediaobject>
  </informalfigure>
  <important>
   <para>
    If you are using an SSH tunnel to connect to the &install_ui;, you will
    need to make an extra modification here to allow SSH connections through
    the firewall:
   </para>
   <procedure>
    <step>
     <para>
      While on the Review Configuration Files page, click on the
      <guimenu>Model</guimenu> tab.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Firewall Rules</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Uncomment the <literal>SSH</literal> section (remove the
      <literal>#</literal> at the beginning of the line for the <literal>-
      name: SSH</literal> section).
     </para>
    </step>
    <step>
     <para>
      If you do not have such a <literal>- name: SSH</literal> section,
      manually add the following under the <literal>firewall-rules:</literal>
      section:
     </para>
<screen>
name: SSH
network-groups:
- MANAGEMENT
rules:
- type: allow
  remote-ip-prefix: 0.0.0.0/0
  port-range-min: 22
  port-range-max: 22
  protocol: tcp
</screen>
    </step>
   </procedure>
  </important>
  <informalfigure>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="installer_ui_review_configuration_edit_yml.png" width="75%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="installer_ui_review_configuration_edit_yml.png"/>
    </imageobject>
   </mediaobject>
  </informalfigure>
<!-- FIXME: added screenshots without vendor identification; remove section when
change is accepted
  <informalfigure vendor="hpe">
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="installer_ui_review_configuration_edit_services_oem_hpe.png" width="75%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="installer_ui_review_configuration_edit_services_oem_hpe.png"/>
    </imageobject>
   </mediaobject>
  </informalfigure> -->
  <!-- vendor="suse;suse-crow" -->
  <informalfigure>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="installer_ui_review_configuration_edit_services.png" width="75%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="installer_ui_review_configuration_edit_services.png"/>
    </imageobject>
   </mediaobject>
  </informalfigure>
  <informalfigure>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="installer_ui_review_configuration_deployment.png" width="75%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="installer_ui_review_configuration_deployment.png"/>
    </imageobject>
   </mediaobject>
  </informalfigure>
  <important>
  <para>
   Manual edits to your configuration files outside of the &install_ui; may not
   be reflected in the &install_ui;. If you make changes to any files directly,
   refresh the browser to make sure changes are seen by the Install UI.
  </para>
  </important>
  <para>
   Before performing the deployment, the configuration must be validated by
   clicking the <guimenu>Validate</guimenu> button below the list of
   configuration files on the <guimenu>Model</guimenu> tab. This ensures the
   configuration will be successful <emphasis role="bold">before</emphasis> the
   actual configuration process runs and possibly fails. The
   <guimenu>Validate</guimenu> button also commits any changes. If there are
   issues with the validation, the configuration processor will provide
   detailed information about the causes. When validation completes
   successfully, a message will be displayed that the model is valid. If either
   validation or commit fail, the <guimenu>Next</guimenu> button is disabled.
  </para>
  <para>
   Clicking the <guimenu>Deploy</guimenu> button starts the actual deployment
   process.
  </para>
  <bridgehead renderas="sect4">Cloud Deployment in Progress</bridgehead>
  <para>
   General progress steps are shown on the left. Detailed activity is shown on
   the right.
  </para>
  <para>
   To start the deployment process, the &install_ui; runs scripts and playbooks
   based on the actual final configuration. Completed operations are green,
   black means in process, gray items are not started yet.
  </para>
  <para>
   The log stream on the right shows finished states. If there are any
   failures, the log stream will show the errors and the
   <guimenu>Next</guimenu> button will be disabled. The <guimenu>Back</guimenu>
   and <guimenu>Next</guimenu> buttons are disabled during the deployment
   process.
  </para>
  <para>
   The log files in <filename>~/ardana/.ansible/ansible.log</filename> and
   <filename>/var/cache/ardana_installer/</filename> have debugging
   information.
  </para>
  <itemizedlist>
   <listitem>
    <para>
     <filename>/var/cache/ardana_installer/log/ardana-service/ardana-service.log</filename>
     is created and used during the deployment step.
    </para>
   </listitem>
   <listitem>
    <para>
     Each of the time-stamped files in
     <filename>/var/cache/ardana_installer/log/ardana-service/logs/*.log</filename>
     shows the output of a single Ansible playbook run invoked during the UI
     installation process and the log output for each of those runs.
    </para>
   </listitem>
   <listitem>
    <para>
     The <filename>~/ardana/.ansible/ansible.log</filename> file is the output
     of all Ansible playbook runs. This includes the logs from
     <filename>/var/cache/ardana_installer/log/ardana-service/logs/*.log</filename>.
    </para>
   </listitem>
  </itemizedlist>
  <informalfigure>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="installer_ui_deploy_inprogress.png" width="75%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="installer_ui_deploy_inprogress.png"/>
    </imageobject>
   </mediaobject>
  </informalfigure>
  <para>
   When the deployment process is complete, all items on the left will be
   green. Some deployments will not include all steps shown if they do not apply
   to the selected input model. In such a situation, those unneeded steps will
   remain gray.
  </para>
  <para>
   The <guimenu>Next</guimenu> button will be enabled when deployment is
   successful.
  </para>
  <para>
   Clicking <guimenu>Next</guimenu> will display the <literal>Cloud Deployment
   Successful</literal> page with information about the deployment, including
   the chosen input model and links to cloud management tools.
  </para>
  <informalfigure>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="installer_ui_deploy_successful.png" width="75%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="installer_ui_deploy_successful.png"/>
    </imageobject>
   </mediaobject>
  </informalfigure>
  <para>
   After installation is complete, shutdown the &install_ui; by logging into
   the &lcm; and running the following commands:
  </para>
<screen>
cd ~/openstack/ardana/ansible
ansible-playbook -i hosts/localhost installui-stop.yml
</screen>
  <para>
   After deployment, continue to <xref linkend="cloud_verification"/> and
   <xref linkend="postinstall_checklist"/>.
  </para>
  <para>
   To understand cloud configuration more thoroughly and to learn how to make
   changes later, see:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     <xref linkend="cha.input-model-intro-concept"/>
    </para>
   </listitem>
   <listitem>
    <para>
     <xref linkend="using_git"/>
    </para>
   </listitem>
  </itemizedlist>
 </section>
</chapter>
