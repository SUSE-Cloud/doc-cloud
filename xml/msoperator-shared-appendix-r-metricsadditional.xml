<?xml version="1.0"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [ <!ENTITY % entities SYSTEM "entities.ent"> %entities; ]>
<!-- Copyright FUJITSU LIMITED 2017 -->
<section>
 <title>Additional Metrics</title>
 <para>
  In addition to the standard metrics, SUSE OpenStack Cloud Monitoring
  automatically adds the following additional metrics to the monasca agent
  configuration on the Monitoring Node.
 </para>

 <bridgehead renderas="sect4">elastic.yaml</bridgehead>
 <para>
  Elastic checks gather metrics for Elasticsearch databases, such as the Log
  Database of <phrase>SUSE OpenStack Cloud Monitoring</phrase>. The
  configuration file must specify the URL for HTTP requests. If basic
  authentication is used, for example,
  <literal>elasticsearch-http-basic</literal>, the configuration file must also
  specify the user name and password for every instance that requires
  authentication.
 </para>
 <para>
  The agent installer automatically creates the <literal>elastic.yaml</literal>
  configuration file in the <literal>/etc/monasca/agent/conf.d/</literal>
  directory. If there is an Elasticsearch database instance installed on the
  machine where the agent is installed, you have to specify the configuration
  information in the <literal>elastic.yaml</literal> file after the
  installation.
 </para>
 <para>
  Example configuration:
 </para>
<screen>init_config: null
instances:
- dimensions:
    component: elasticsearch
    service: monitoring
  url: http://localhost:9200
  username: username
  password: password</screen>

 <bridgehead renderas="sect4">http_check.yaml</bridgehead>
 <para>
  HTTP endpoint checks perform up/down checks on HTTP endpoints. Based on a
  list of URLs, the agent sends an HTTP request and reports success or failure
  to the Monitoring Service.
 </para>

 <para>
  Crowbar configures HTTP checks for the following services on the Monitoring Node:
 </para>
 <itemizedlist>
  <listitem>
   <para>
    monasca-api
   </para>
  </listitem>
  <listitem>
   <para>
    monasca-log-api
   </para>
  </listitem>
  <listitem>
   <para>
    Kibana
   </para>
  </listitem>
  <listitem>
   <para>
    Monasca Persister
   </para>
  </listitem>
 </itemizedlist>

 <bridgehead renderas="sect4">http_metrics.yaml</bridgehead>
 <para>
  HTTP metrics checks retrieve metrics from any URL that returns a JSON response.
  Based on a list of URLs, the agent can dispatch an HTTP request and parse the
  desired metrics from the JSON response.
 </para>
 <para>
  Crowbar configures a HTTP metrics check for the monasca-persister service
  running on the Monitoring Node.
 </para>

 <bridgehead renderas="sect4">kafka_consumer.yaml</bridgehead>
 <para>
  Kafka consumer checks gather metrics related to services consuming Kafka
  topics, such as the Persister or Notification Engine of <phrase>SUSE
  OpenStack Cloud Monitoring</phrase>.
 </para>
 <para>
  Crowbar configures Kafka consumer checks for the Kafka service running on
  the Monitoring Node.
 </para>

 <bridgehead renderas="sect4">kibana.yaml </bridgehead>
 <para>
  Kibana checks gather various statistics such as load, heap size and usage, and
  various request performance statistics from a Kibana server. The checks
  retrieve these statistics from Kibana's status endpoint.
 </para>
 <para>
  Crowbar configures Kibana checks for the Kibana service running on
  the Monitoring Node.
  </para>

 <bridgehead renderas="sect4">mysql.yaml</bridgehead>
 <para>
  MySQL checks gather various statistics such as buffer sizes and usage,
  reads/writes, network connections, etc. from a MySQL database server. MariaDB
  is also supported. The metrics are drawn MySQL from the server status
  variables.
  </para>
 <para>
  Crowbar configures the MySQL checks for the MariaDB database service running on
  the Monitoring Node.
 </para>

 <bridgehead renderas="sect4">ntp.yaml</bridgehead>
 <para>
  Network Time Protocol checks monitor the time offset between an NTP server and
  the machine the agent is running on.
 </para>
 <para>
  Crowbar configures the NTP check to monitor the offset between the Monitoring
  Node and the NTP server running on the Administration Server.
 </para>

 <bridgehead renderas="sect4">postfix.yaml</bridgehead>
 <para>
  Postfix checks monitor the queue sizes (incoming, active, deferred) on a
  Postfix mail server.
 </para>
 <para>
  Crowbar configures Postfix checks for the Postfix service running on the
  Monitoring Node.
 </para>

 <bridgehead renderas="sect4">zk.yaml</bridgehead>
 <para>
  ZooKeeper checks gather metrics on nodes and connections covered by
  ZooKeeper, a centralized service for maintaining configuration information,
  naming, providing distributed synchronization, and providing group services.
  The check parses the result of the ZooKeeper <literal>stat</literal> admin
  command.
 </para>
 <para>
  Crowbar configures ZooKeeper checks for the ZooKeeper instance running on the
  Monitoring Node.
 </para>
</section>
