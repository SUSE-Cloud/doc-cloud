<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.1">
  <title>Firewall-as-a-Service (FWaaS) v1 scenario</title>
  <section>
    <title>Enable FWaaS v1</title>
    <para>FWaaS management options are also available in the Dashboard.</para>
    <procedure>
      <step>
        <para>Enable the FWaaS plug-in in the <literal>/etc/neutron/neutron.conf</literal> file:</para>
        <screen language="ini"><?dbsuse-fo font-size="8pt"?>service_plugins = firewall

[service_providers]
# ...
service_provider = FIREWALL:Iptables:neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver:default

[fwaas]
driver = iptables
enabled = True</screen>
      </step>
      <step>
        <para>Configure the FWaaS plugin for the L3 agent.</para>
        <para>In the <literal>AGENT</literal> section of <literal>l3_agent.ini</literal>, make sure the FWaaS extension
                        is loaded:</para>
        <screen language="ini">[AGENT]
extensions = fwaas</screen>
        <para>Edit the FWaaS section in the <literal>/etc/neutron/neutron.conf</literal> file to indicate
                        the agent version and driver:</para>
        <screen language="ini">[fwaas]
agent_version = v1
driver = iptables
enabled = True
conntrack_driver = conntrack</screen>
      </step>
      <step>
        <para>Create the required tables in the database:</para>
        <screen language="console"># neutron-db-manage --subproject neutron-fwaas upgrade head</screen>
      </step>
      <step>
        <para>Enable the option in the <literal>local_settings.py</literal> file,
                        which is typically located on the controller node:</para>
        <screen language="python">OPENSTACK_NEUTRON_NETWORK = {
    # ...
    'enable_firewall' = True,
    # ...
}</screen>
        <note>
          <para>By default, <literal>enable_firewall</literal> option value is <literal>True</literal> in
                            <literal>local_settings.py</literal> file.</para>
        </note>
        <para>Apply the settings by restarting the web server.</para>
      </step>
      <step>
        <para>Restart the <literal>neutron-l3-agent</literal> and <literal>neutron-server</literal> services
                        to apply the settings.</para>
      </step>
    </procedure>
  </section>
  <section>
    <title>Configure Firewall-as-a-Service v1</title>
    <para>Create the firewall rules and create a policy that contains them.
                Then, create a firewall that applies the policy.</para>
    <procedure>
      <step>
        <para>Create a firewall rule:</para>
        <screen language="console">$ neutron firewall-rule-create --protocol {tcp,udp,icmp,any} \
  --source-ip-address SOURCE_IP_ADDRESS \
  --destination-ip-address DESTINATION_IP_ADDRESS \
  --source-port SOURCE_PORT_RANGE --destination-port DEST_PORT_RANGE \
  --action {allow,deny,reject}</screen>
        <para>The Networking client requires a protocol value.  If the rule is protocol
                        agnostic, you can use the <literal>any</literal> value.</para>
        <note>
          <para>When the source or destination IP address are not of the same IP
                            version (for example, IPv6), the command returns an error.</para>
        </note>
      </step>
      <step>
        <para>Create a firewall policy:</para>
        <screen language="console">$ neutron firewall-policy-create --firewall-rules \
  "FIREWALL_RULE_IDS_OR_NAMES" myfirewallpolicy</screen>
        <para>Separate firewall rule IDs or names with spaces. The order in which you
                        specify the rules is important.</para>
        <para>You can create a firewall policy without any rules and add rules later,
                        as follows:</para>
        <itemizedlist>
          <listitem>
            <para>To add multiple rules, use the update operation.</para>
          </listitem>
          <listitem>
            <para>To add a single rule, use the insert-rule operation.</para>
          </listitem>
        </itemizedlist>
        <para>For more details, see <link xlink:href="https://docs.openstack.org/cli-reference/neutron.html">Networking command-line client</link>
                        in the OpenStack Command-Line Interface Reference.</para>
        <note>
          <para>FWaaS always adds a default <literal>deny all</literal> rule at the lowest precedence
                            of each policy. Consequently, a firewall policy with no rules blocks
                            all traffic by default.</para>
        </note>
      </step>
      <step>
        <para>Create a firewall:</para>
        <screen language="console">$ neutron firewall-create FIREWALL_POLICY_UUID</screen>
        <note>
          <para>The firewall remains in PENDING_CREATE state until you create a
                            Networking router and attach an interface to it.</para>
        </note>
      </step>
    </procedure>
  </section>
</section>
