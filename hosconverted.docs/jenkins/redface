#!/bin/bash -li


FILELIST=`echo $@ | sed -e 's/\s\+/\n/g'`

#Delete any tempfiles left over from the last run and write introduction
rm checktmp > /dev/null 2>&1  
rm permalinklist.txt  > /dev/null 2>&1  
rm filepermalink.txt > /dev/null 2>&1  

echo " "
echo " "
echo  Checking  embarrassing strings and structural errors... 

 
echo " "
echo "===??============================="

echo "$FILELIST" |
while read FILE
do

if [[ -n "$(sed ':a;N;$!ba;s/\n/ /g'  "${FILE}" | sed 's|-->|-->\n|g' | sed 's|<!--.*-->||g' | grep  -H \?\? )" ]];
					then
						echo $i
					fi
 
echo 2

done

#Set Internal Field Separator to % (to preserve white space at the beginning and end of badstrings)
IFS='%'



echo 5

#Read badstrings and pipe into loop
cat ./jenkins/badstrings.txt |
while read BAD
do
     #Do a recursive grep on all md files for the badstring and assign result to RESULT
     echo "$FILELIST" |
     while read FILE
     do
     grep "t he" "$FILE"
     echo "${BAD}"
     echo $FILE
     echo $RESULT
     sleep 1
     
     #If RESULT is not empty, then write the bad string and the result to stout, and write 1 to the file checktmp
     if [ -z "$RESULT" ]
          then
          EXIT=""
     else
          echo ""
          echo "===$BAD============================="
          echo "$RESULT"
          echo "1" > checktmp
     fi

     echo 7
     done
     echo 8
done  
echo 9

     echo "$FILELIST" |
     while read FILE
     do
BADCHAR=`sed 's/\([\x80-\xFF]\)/ BAD CHAR\>\> \1 \<\<BAD CHAR/ ' "${FILE}" | grep "BAD CHAR"`
	      #If BADCHAR is not empty, then write the bad string and the result to stout, and write 1 to the file checktmp
     if [ -z "$BADCHAR" ]
          then
          EXIT=""
     else
          echo ""
          echo "===These files contain non-UTF8 characters (format filename:linenumber: line with bad character================="
          echo "$BADCHAR"
     fi
     done

#Read chcktemp and assign content to EXIT (indicating that at least one error was found)




