<?xml version="1.0" encoding="UTF-8"?>
<!--Edit status: not edited-->
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" >
<topic xml:lang="en-us" id="topic8087">
  <title>HPE Helion <tm tmtype="reg">OpenStack</tm> 1.1 and 1.1.1: Verifying the Install Using
    Embedded Tests</title>
  <titlealts>
    <searchtitle>HPE Helion Openstack 1.1: Verifying the Install Using Embedded Tests</searchtitle>
  </titlealts>
  <prolog>
    <metadata>
      <othermeta name="layout" content="default"/>
      <othermeta name="product-version" content="HPE Helion Openstack 1.1"/>
      <othermeta name="role" content="Storage Administrator"/>
      <othermeta name="role" content="Storage Architect"/>
      <othermeta name="role" content="Michael B, Andrea F,"/>
      <othermeta name="product-version1" content="HPE Helion Openstack 1.1"/>
    </metadata>
  </prolog>
  <body>
    <p>
      <!--PUBLISHED-->
      <!--./commercial/GA1/1.1commercial.install-GA-tempest-tests.md-->
      <!--permalink: /helion/openstack/1.1/install/tempest-tests/--></p>
    <p>
      <b>This document describes the installation process for HPE Helion OpenStack 1.1 and HPE
        Helion OpenStack 1.1.1.</b>
    </p>
    <p>(If you already have 1.1 installed, you can update Helion OpenStack from 1.1 to 1.1.1 by
      following the update procedures described in <xref
        href="../../commercial/GA1/1.1.1commercial.helion-update.dita">HPE Helion OpenStack 1.1.1
        Update Guide</xref>.)</p>
    <p>Tempest is a set of integration tests for OpenStack API validation, Scenarios, and other
      specific tests to be run against a live OpenStack cluster.</p>
    <p>A version of the upstream <xref href="http://docs.openstack.org/developer/tempest/"
        scope="external" format="html">Tempest</xref> integration tests is pre-deployed in the HPE
      Helion OpenStack undercloud.</p>
    <p>You can use these embedded tests to verify if the deployed overcloud is functional.</p>
    <ul>
      <li>
        <xref type="section" href="#topic8087/running">Running the tests</xref>
      </li>
      <li>
        <xref type="section" href="#topic8087/results">Viewing test results</xref>
      </li>
      <li>
        <xref type="section" href="#topic8087/custom">Customizing the test run</xref>
      </li>
      <li>
        <xref type="section" href="#topic8087/issues">Known issues</xref>
      </li>
      <li>
        <xref type="section" href="#topic8087/fail">Known failures</xref>
      </li>
    </ul>
    <p>For more information on running Tempest tests, see <xref
        href="https://git.openstack.org/cgit/openstack/tempest/tree/README.rst" scope="external"
        format="html">Tempest - The OpenStack Integration Test Suite</xref>. <b>Important:</b>
      Running the tests requires access the overcloud identity admin credentials; Tempest creates
      and deletes test accounts and test resources for test purposes.</p>
    <p>In certain cases Tempest might fail to clean-up some of test resources after a test is
      complete, for example in case of failed tests.</p>
    <section id="running">
      <title>Running the tests</title>
      <p>To run the default set of Tempest tests:</p>
      <ol>
        <li>
          <p>Login to the seed VM.</p>
        </li>
        <li>
          <p>SSH into the undercloud node:</p>
          <codeblock>
<codeph>ssh heat-admin@${UNDERCLOUD_IP}
sudo -i
</codeph>
</codeblock>
        </li>
        <li>
          <p>Source the overcloud admin credentials, activate the virtual environment and start the
            tests:</p>
          <codeblock>
<codeph>source ~root/overcloud.stackrc
source /opt/stack/venvs/openstack/bin/activate
run-tempest
</codeph>
</codeblock>
        </li>
      </ol>
      <p>Optionally, you can <xref type="section" href="#topic8087/custom">customize Tempest to run
          specific tests</xref>.</p>
    </section>
    <section id="results">
      <title>Viewing test results</title>
      <p>Tempest is deployed under <codeph>/opt/stack/tempest</codeph>. During a test run, test
        results are displayed on the console. A detailed log file is written to
          <codeph>/opt/stack/tempest/tempest.log</codeph>.</p>
      <p>The results are also stored in the <codeph>testrespository</codeph> database.</p>
      <p>To access the results after the run:</p>
      <ol>
        <li>
          <p>Login to the seed VM.</p>
        </li>
        <li>
          <p>SSH into the undercloud node:</p>
          <codeblock>
<codeph>ssh heat-admin@${UNDERCLOUD_IP}
sudo -i
</codeph>
</codeblock>
        </li>
        <li>
          <p>Change to the <codeph>tempest</codeph> directory and list test results:</p>
          <codeblock>
<codeph>cd /opt/stack/tempest
testr last
</codeph>
</codeblock>
        </li>
      </ol>
      <p>See <xref href="https://testrepository.readthedocs.org/en/latest/" scope="external"
          format="html">Test Repository users manual</xref> for more details on how to manage the
        test result repository.</p>
    </section>
    <section id="custom">
      <title>Customizing the test run</title>
      <p>There are several ways available to customize which tests will be executed.</p>
      <ul>
        <li>
          <xref type="section" href="#topic8087/service">Run tests for a specific service</xref>
        </li>
        <li>
          <xref type="section" href="#topic8087/services">Run tests for specific services and
            exclude specific features</xref>
        </li>
        <li>
          <xref type="section" href="#topic8087/list">Run tests matching a series of white and
            blacklists</xref>
        </li>
      </ul>
    </section>
    <section id="service">
      <title>Run tests for a specific service</title>
      <p>You can run tests against a specific service, such as Compute, Networking, or Identity.</p>
      <ol>
        <li>
          <p>Login to the seed VM.</p>
        </li>
        <li>
          <p>SSH into the undercloud node:</p>
          <codeblock>
<codeph>ssh heat-admin@${UNDERCLOUD_IP}
sudo -i
</codeph>
</codeblock>
        </li>
        <li>
          <p>Use the following command to specify that tests run on the a specific service.</p>
          <codeblock>
<codeph>OS_TESTPATH=./tempest/{service} run-tempest
</codeph>
</codeblock>
          <p>Where <codeph>{service}</codeph> is the name of the service, such as
              <codeph>api</codeph>, <codeph>compute</codeph>, <codeph>identity</codeph>, or
              <codeph>network</codeph>.</p>
          <p>For example, execute the following command to run the Tempest test against the Nova
            (Compute service) API:</p>
          <codeblock>
<codeph>OS_TESTPATH=./tempest/api/compute run-tempest
</codeph>
</codeblock>
        </li>
      </ol>
    </section>
    <section id="services">
      <title>Run tests for specific services and exclude specific features</title>
      <p>Tempest allow you to test specific services and features using
          <codeph>tempest.conf.sample</codeph> configuration file.</p>
      <p>A sample configuration file with inline documentation is deployed under
          <codeph>/opt/stack/tempest/etc/</codeph>.</p>
      <ol>
        <li>
          <p>Login to the seed VM.</p>
        </li>
        <li>
          <p>SSH into the undercloud node:</p>
          <codeblock>
<codeph>ssh heat-admin@${UNDERCLOUD_IP}
sudo -i
</codeph>
</codeblock>
        </li>
        <li>
          <p>Open the <codeph>/opt/stack/tempest/etc/tempest.conf.sample</codeph> file.</p>
        </li>
        <li>
          <p>To test specific service, edit the <codeph>[service_available]</codeph> section :</p>
          <p>Clear the comment character <codeph>#</codeph> and set a line to <codeph>true</codeph>
            to test that service or <codeph>false</codeph> to not test that service.</p>
          <p>
            <b>Example:</b>
          </p>
          <codeblock>
<codeph>cinder = true
neutron = false
</codeph>
</codeblock>
        </li>
        <li>
          <p>To test specific features, edit any of the <codeph>*_feature_enabled</codeph> sections
            to enable or disable tests on specific features of a specific service.</p>
          <p>[volume-feature-enabled] [compute-feature-enabled] [identity-feature-enabled]
            [image-feature-enabled] [network-feature-enabled] [object-storage-feature-enabled]</p>
          <p>Clear the comment character <codeph>#</codeph> and set a line to <codeph>true</codeph>
            to run a test or <codeph>false</codeph> to not run that test.</p>
          <p>
            <b>Example</b>
          </p>
          <codeblock>
<codeph>Is the v2 identity API enabled (boolean value)
api_v2 = true
Is the v3 identity API enabled (boolean value)
api_v3 = false
</codeph>
</codeblock>
        </li>
        <li>
          <p>Source the overcloud admin credentials, activate the virtual environment and start the
            tests:</p>
          <codeblock>
<codeph>source ~root/overcloud.stackrc
source /opt/stack/venvs/openstack/bin/activate
run-tempest
</codeph>
</codeblock>
        </li>
      </ol>
      <p>
        <note>You can exclude tests for <xref type="section" href="#topic8087/exclude">features that
            are not available and test not compatible</xref>.</note>
      </p>
    </section>
    <section id="list">
      <title>Run tests matching a series of white and blacklists</title>
      <p>You can run tests against specific scenarios by editing the <codeph>tests2skip.py</codeph>
        file.</p>
      <p>Use the <codeph>tests2skip.py</codeph> file to whitelist a test or blacklist a test:</p>
      <ul>
        <li>lines starting with # or empty are ignored</li>
        <li>lines starting with <codeph>+</codeph> are whitelisted</li>
        <li>lines starting with <codeph>-</codeph> are blacklisted</li>
        <li>lines not matching any of the above conditions are blacklisted</li>
      </ul>
      <p>If whitelist is empty, all available tests are fed to blacklist. If blacklist is empty, all
        tests from whitelist are returned.</p>
      <p>Whitelist is applied first. The blacklist is executed against the set of tests returned by
        the whitelist.</p>
      <p>To run whitelist and blacklist tests:</p>
      <ol>
        <li>
          <p>Login to the seed VM.</p>
        </li>
        <li>
          <p>SSH into the undercloud node:</p>
          <codeblock>
<codeph>ssh heat-admin@${UNDERCLOUD_IP}
sudo -i
</codeph>
</codeblock>
        </li>
        <li>
          <p>Edit the tests2skip.py file</p>
        </li>
      </ol>
      <p>Documentation on the format of white and black-lists is available at
        http://git.openstack.org/cgit/openstack/tripleo-image-elements/tree/elements/tempest/tests2skip.py#n24.</p>
      <p>
        <b>Example</b>
      </p>
      <p>The following entries run API tests, exclude tests that are less relevant for deployment
        validation, such as negative, admin, cli and thirdparty (EC2) tests:</p>
      <codeblock>
  <codeph>    +tempest\.api\.*
    *[Aa]dmin.*
    *[Nn]egative.*
    - tempest\.cli.*
    - tempest\.thirdparty\.*
</codeph>
</codeblock>
    </section>
    <section id="issues">
      <title>Known issues</title>
      <p>The following failing tests can be excluded from the test run by adding the following to
        the <codeph>tests2skip.txt file</codeph>:</p>
    </section>
    <section id="exclude">
      <title>Exclude tests for features that are not available and test not compatible</title>
      <codeblock>
  <codeph>tempest\.api\.compute\.certificates\.*
tempest\.api\.compute\.servers.test_disk_config\.*
tempest\.api\.network\.test_fwaas_extensions\.*
tempest\.api\.network\.test_vpnaas_extensions\.*
tempest\.api\.network\.test_load_balancer\.*
tempest\.api\.image\.v1\.test_image\.CreateRegisterImagesTest\.test_register_http_image
tempest\.api\.image\.v1\.test_images\.CreateRegisterImagesTest\.test_register_remote_image
tempest.api\.network\.test_metering_extensions\.MeteringTestJSON
tempest\.api\.network\.test_metering_extensions\.MeteringIpV6TestJSON
tempest\.api\.compute\.test_live_block_migration.LiveBlockMigrationTestJSON\.test_live_block_migration
tempest\.api\.compute\.floating_ips\.test_list_floating_ips\.FloatingIPDetailsTestJSON\.test_list_floating_ip_pools
</codeph>
</codeblock>
    </section>
    <section id="fail">
      <title>Known failures</title>
      <p>The following tests will result in failure using the installed Tempest library. These known
        failures can be fixed by installing the <codeph>tempest-lib&gt;=0.2.0</codeph> OpenStack
        Functional Testing Library.</p>
      <p>See <xref href="https://pypi.python.org/pypi/tempest-lib/0.2.0" scope="external"
          format="html">tempest-lib 0.2.0</xref> for information on downloading the library.</p>
      <codeblock>
  <codeph>tempest\.api\.object_storage\.test_container_staticweb\.StaticWebTest\.test_web_index      
tempest\.api\.object_storage\.test_container_staticweb\.StaticWebTest\.test_web_listing_css
tempest\.api\.object_storage\.test_container_services\.ContainerTest\.test_update_container_metadata_with_delete_metadata
tempest\.api\.object_storage\.test_container_services\.ContainerTest\.test_update_container_metadata_with_delete_metadata_key
tempest\.api\.object_storage\.test_object_slo\.ObjectSloTest\.test_upload_manifest
tempest\.api\.object_storage\.test_container_sync_middleware\.ContainerSyncMiddlewareTest\.test_container_synchronization
</codeph>
</codeblock>
      <!-- ===================== horizontal rule ===================== -->
    </section>
  </body>
</topic>
