<?xml version="1.0" encoding="UTF-8"?>
<!--Edit status: not edited-->
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" ><topic xml:lang="en-us" id="topic3521">
<title>HPE Helion <tm tmtype="reg">OpenStack</tm> 1.0: Stopping and Starting the Development Platform Services During the Upgrade Process</title>
<prolog>
<metadata>
<othermeta name="layout" content="default"/>
</metadata>
</prolog>
<body>
<p>
<!--PUBLISHED-->
 <!--./commercial/GA1/1.0commercial.update-101-devplat.stopstart.md-->
 <!--permalink: /helion/openstack/update/devplatstop/101/--></p>
<p>If you have installed the <xref href="../../devplatform/1.0devplatform.index.dita" >HPE Helion Development Platform</xref>, you need to take the service control plane down before performing updates on the overcloud.</p>
<p>Services must be stopped in the correct order before the overcloud compute nodes can be updated. After the update is complete, the control plane must be restarted with a command that ensures services are restarted in order.</p>
<section id="prerequisites"> <title>Prerequisites</title>
<ol>
<li>
<p>Before you begin, run a script to make sure all clusters are in a healthy state.</p>

<p>On the server where the Development Platform service is installed, run the following command, modified to include the correct value for the target service:</p>

<codeblock>
<codeph>ansible-playbook -vvvv --extra-vars dev_plat_service=trove --private-key &lt;path to SSH private key&gt; --ha_check=True -u heat-admin -i plugins/inventory/dev_platform_heat.py playbooks/dev-platform/dev_platform_pre_check.yml 
</codeph>
</codeblock>

<p>If this check fails, you must repair the cluster by manually logging into the target machines. Do not run any update commands on a failed cluster. Trying to update an unhealthy cluster may result in the Development Platform services becoming non-functional or non-recoverable after the overcloud update.</p>
</li>
<li>
<p>Set <codeph>ha_check=True</codeph> if you have installed the service control plane in HA mode. 
<b>Note:</b> For the Marketplace, leave the check set to FALSE (<codeph>ha_check=False</codeph>) as the Marketplace does not support HA mode.</p>
</li>
</ol>
</section>
<section id="stopping-services"> <title>Stopping Services</title>
<p>Use following command to stop the clusters. This command stops individual nodes in the cluster in a correct order.</p>
<p>
<b>Note:</b> Stopping the services will cause the corresponding service API to be unavailable until the services are restarted after the update on the overcloud is complete.</p>
<p>To stop each Development Platform service, run the following command:</p>
<codeblock>
  <codeph>ansible-playbook -vvvv --extra-vars dev_plat_service=trove --private-key &lt;path to SSH private key&gt; -u heat-admin -i plugins/inventory/dev_platform_heat.py playbooks/dev-platform/dev_platform_stop.yml
</codeph>
</codeblock>
<ul>
<li>
<i>private-key</i> is the full path to the SSH private key</li>
<li>
<i>dev_plat_service</i> is the name of the target service.</li>
</ul>
<table>
<tgroup cols="2">
<colspec colname="col1"/>
<colspec colname="col2"/>
<thead>
<row>
<entry>Service</entry>
<entry>Value of dev_plat_service</entry>
    </row>
</thead>
<tbody>
<row>
<entry>DBaaS</entry>
<entry>trove</entry>
    </row>
<row>
    <entry>Marketplace</entry>
    <entry>marketplace</entry>
  </row>
<row>
    <entry>DNSaaS</entry>
    <entry>dnsaas</entry>
  </row>
</tbody>
</tgroup>
</table>
</section>
<section id="starting-services"> <title>Starting Services</title>
<p>After the overcloud update is completed, use the following command to start each service in the cluster in the correct order. By successfully starting the clusters, you will be able to bring the corresponding Dev-Platform service into a functional state and the API can be used after this. 
Before running following command, set the correct value for dev_plat_service, depending upon the service that you are targeting.</p>
<codeblock>
  <codeph>    ansible-playbook -vvvv --extra-vars dev_plat_service=trove --private-key &lt;path to SSH private key&gt; -u heat-admin -i plugins/inventory/dev_platform_heat.py playbooks/dev-platform/dev_platform_start.yml
</codeph>
</codeblock>
<ul>
<li>
<i>dev_plat_service</i> is the service that you are targeting.</li>
</ul>
<table>
<tgroup cols="2">
<colspec colname="col1"/>
<colspec colname="col2"/>
<thead>
<row>
<entry>Service</entry>
<entry>Value of dev_plat_service</entry>
    </row>
</thead>
<tbody>
<row>
<entry>DBaaS</entry>
<entry>trove</entry>
    </row>
<row>
    <entry>Marketplace</entry>
    <entry>marketplace</entry>
  </row>
<row>
    <entry>DNSaaS</entry>
    <entry>dnsaas</entry>
  </row>
</tbody>
</tgroup>
</table>
<codeblock>
  <codeph>`private-key` is the full path to SSH private key
</codeph>
</codeblock>
<p>
  <xref href="#topic3521"> Return to Top </xref>
</p>
</section>
</body>
</topic>
