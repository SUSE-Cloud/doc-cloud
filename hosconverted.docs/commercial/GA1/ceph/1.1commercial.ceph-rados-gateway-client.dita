<?xml version="1.0" encoding="UTF-8"?>
<!--Edit status: not edited-->
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" ><topic xml:lang="en-us" id="topic3803">
<title>HPE Helion <tm tmtype="reg">OpenStack</tm> 1.1 and 1.1.1: Ceph RADOS Gateway - Client</title>
<titlealts>
<searchtitle>HPE Helion Openstack 1.1 Ceph RADOS Gateway - Client</searchtitle>
</titlealts>
<prolog>
<metadata>
<othermeta name="layout" content="default"/>
<othermeta name="product-version" content="HPE Helion Openstack"/>
<othermeta name="product-version" content="HPE Helion Openstack 1.1"/>
<othermeta name="role" content="Storage Engineer"/>
<othermeta name="role" content="Storage Architect"/>
<othermeta name="role" content="Storage Administrator"/>
<othermeta name="role" content="Storage Engineer"/>
<othermeta name="role" content="Service Developer"/>
<othermeta name="role" content="Cloud Administrator"/>
<othermeta name="role" content="Application Developer"/>
<othermeta name="role" content="Paul F, Binamra S"/>
<othermeta name="product-version1" content="HPE Helion Openstack"/>
<othermeta name="product-version2" content="HPE Helion Openstack 1.1"/>
</metadata>
</prolog>
<body>
<p>
<!--PUBLISHED-->
 <!--./commercial/GA1/ceph/1.1commercial.ceph-rados-gateway-client.md-->
 <!--permalink: /helion/openstack/1.1/ceph-rados-gateway-client/--></p>
<p>The use cases for leveraging Ceph as an Object Store range from user-driven archives of a small MySQL instance to a well-orchestrated LOB-scripted backup consistency group spanning multiple VMs and external machines. For applications and customers who do not have existing integrations to the Swift API and do not wish to leverage the existing Swift client, often a monitored mount point that auto-archives, is required. For this use case, HPE recommends Duplicity. Duplicity is an Open Source, bandwidth efficient, encrypted incremental backup tool that can be used with Swift API to archive, backup, and restore files. It archives directories by producing encrypted tar-format volumes and uploads them to the Swift API. Duplicity uses <codeph>librsync</codeph> and consequently the incremental archives are space efficient: only recording the parts of files that have changed since the last write. Duplicity uses GnuPG to encrypt and sign these archive files.</p>
<section id="installing-duplicity"> <title>Installing Duplicity</title>
<p>To install Duplicity on any of the client user VMs, run:</p>
<ul>
<li>
<p>
<codeph>apt-get install bzr</codeph>
</p>
</li>
<li>
<p>
<codeph>apt-get install duplicity</codeph>
</p>
</li>
<li>
<p>
<codeph>sudo apt-get install librsync-dev</codeph>
</p>
</li>
<li>
<p>
<codeph>sudo apt-get install python-dev</codeph>
</p>
</li>
<li>
<p>
<codeph>pip install python-swiftclient</codeph>
</p>
</li>
<li>
<p>
<codeph>pip install python-keystoneclient</codeph>
</p>
</li>
<li>
<p>
<codeph>cd swiftbackend &amp;&amp; sudo python dist/setup.py install</codeph>
</p>
</li>
<li>
<p>You can now use Duplicity to back up your files to the Rados Gateway using Swift. Define the environmental variables as discussed in the previous Rados section.</p>
</li>
</ul>
</section>
<section id="requirements"> <title>Requirements</title>
<ul>
<li>
<p>Python v2.4 or later</p>
</li>
<li>
<p>librsync v0.9.6 or later</p>
</li>
<li>
<p>GnuPG v1.x for encryption</p>
</li>
</ul>
<p>To use Duplicity with Swift, set the following four environment variables:</p>
<ol>
<li>SWIFT_USERNAME: your username, in the form tenant:user</li>
<li>SWIFT_PASSWORD: your password</li>
<li>SWIFT_AUTHURL: URL to the Keystone service.</li>
<li>SWIFT_AUTHVERSION: for keystone authentication, set it to 2.</li>
</ol>
</section>
<section id="example"> <title>Example:</title>
<codeblock><codeph>export SWIFT_USERNAME=admin:admin
export SWIFT_PASSWORD=c6ad5fa953d9e6b4e0593beea1bc9360c6ce3154
export SWIFT_AUTHURL=http://192.168.51.31:5000/v2.0
export SWIFT_AUTHVERSION=2
</codeph></codeblock>
<p>Make sure you also have the Swift or Rados Gateway credentials sourced on the Duplicity host system.</p>
</section>
<section id="mysql-archive-to-swift-api-use-case"> <title>MySQL Archive to Swift API use case</title>
<p>Perform the following steps:</p>
<ul>
<li>
<p>Create Ceph pool, Ceph user as in the previous section for backup &lt;<b>placeholder of the backup</b>&gt;. Note: for large deployments where hundreds of discrete users and pools will be created, managed, and audited, consider integrating the HPE Helion OpenStack Tenant Project user, Keystone, and the Ceph user and associated pool(s).</p>
</li>
<li>
<p>Install the Swift client (and other components as specified in the Ceph RADOSGW Client section) on the user client Virtual Machine.</p>
</li>
<li>
<p>The Fuse mount point is required.</p>
</li>
</ul>
<p>Filesystem in Userspace (FUSE) is a simple interface for userspace programs to export a virtual filesystem to the Linux kernel. It also provides a secure method for non-privileged users to create and mount their own file systems.
<codeph>fusermount</codeph> is a program to mount and unmount FUSE filesystems.</p>
</section>
<section id="snapshot-for-a-backed-up-and-restored-mysql-database"> <title>Snapshot for a backed up and restored MySQL database</title>
<p>The following snapshot shows how a MySQL database is backed up and restored. (This example utilizes the mySQL User Database Instance Glance)</p>
<p>
  <image href="../../../media/ceph-mysql-snapshot1.png" placement="break"/>
</p>
<p>
  <image href="../../../media/ceph-mysql-snapshot2.png" placement="break"/>
</p>
<p>
  <image href="../../../media/ceph-mysql-snapshot3.png" placement="break"/>
</p>
<p>MySQL database is archived using Duplicity.</p>
<p>
  <image href="../../../media/ceph-mysql-snapshot4.png" placement="break"/>
</p>
<p>Using restore script, mysql database archive checksum is validated, and then it is restored.</p>
<p>
  <image href="../../../media/ceph-mysql-snapshot5.png" placement="break"/>
</p>
<p>
  <image href="../../../media/ceph-mysql-snapshot6.png" placement="break"/>
</p>
<p>MySQL Database Instance is created and archive file is restored.</p>
<p>
  <image href="../../../media/ceph-mysql-snapshot7.png" placement="break"/>
</p>
<p>After restore, the mySQL Database is up.</p>
<p>
  <image href="../../../media/ceph-mysql-snapshot8.png" placement="break"/>
</p>
</section>
<section id="next-steps"> <title>Next Steps</title>
<p>
  <xref href="../../../commercial/GA1/ceph/1.1commercial.ceph-manual-install.dita" >Manual Validation</xref>
</p>
<p>
  <xref href="#topic3803"> Return to Top </xref>
</p>
</section>
</body>
</topic>
