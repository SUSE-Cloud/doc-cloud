<?xml version="1.0" encoding="UTF-8"?>
<!--Edit status: not edited-->
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd"><topic xml:lang="en-us" id="topic6223">
<title>HPE Helion <tm tmtype="reg">OpenStack</tm> 1.1: TLS Support</title>
<prolog>
<metadata>
<othermeta name="layout" content="default"/>
<othermeta name="product-version" content="HPE Helion Openstack"/>
<othermeta name="product-version" content="HPE Helion 1.1"/>
<othermeta name="role" content="Service Developer"/>
<othermeta name="role" content="Systems Administrator"/>
<othermeta name="role" content="Security Architect"/>
<othermeta name="role" content="Security Engineer"/>
<othermeta name="role" content="Application Developer"/>
<othermeta name="role" content="Network Administrator"/>
<othermeta name="role" content="ISV Developer"/>
<othermeta name="role" content="Application Architect"/>
<othermeta name="role" content="Thom L, Tom C, Nancy M"/>
<othermeta name="product-version1" content="HPE Helion Openstack"/>
<othermeta name="product-version2" content="HPE Helion 1.1"/>
</metadata>
</prolog>
<body>
<p>
<!--PUBLISHED-->
 <!--./commercial/GA1/1.1commcerical.install-TLS.md-->
 <!--permalink: /helion/openstack/1.1/tls/--></p>
<!-- IMPORTANT!!! The HW support Matrix should be approved by:
* Gavin Brebner for Helion QA support
* Lynne Christofanelli  for HW Support qualified with hLinux
* Marty Duey for third party HW support (IHV Support)
-->
<p>The Transport Layer Security (TLS) protocol, successor of SSL, provides the mechanisms to ensure authentication, non-repudiation, confidentiality, and integrity of user communications to the HPE Helion OpenStack services and between the HPE Helion OpenStack services themselves.</p>
<p>OpenStack endpoints are HTTP services providing APIs to other OpenStack services on the management network. All traffic to OpenStack services, both internal and external, are secured using  TLS connections.</p>
<p>The following secure service endpoints and their associated ports use TLS:</p>
<codeblock>
<codeph>ceilometer          8777
cinder              8776
glance-api          9292
glance-registry     9191
heat-api            8004
heat-cfn            8000
heat-cloudwatch     8003
horizon             443
keystone-admin      35357
keystone-public     5000
neutron             9696
nova-novncproxy     6080
nova-metadata       8775
nova-api            8774
sherpa              21131
swift-proxy         8080
</codeph>
</codeblock>
<p>The TLS connections are facilitated by providing each node with a signed certificate from an internal certificate authority server (Ephemeral CA server) that is built into HPE Helion OpenStack and installed on the Overcloud Controller nodes. These certificates are regenerated frequently - typically at least every 12 hours. The Helion Ephemeral certificate authority (CA) server uses a private key to sign these certificates provided to the OpenStack services, and an associated public certificate can be used to validate these newly signed certs. This key/cert pair can either be generated at installation time or be provided by the installer as an input to the installation process.  If you would like to use certificates from your own CA, please see <xref href="../../commercial/GA1/1.1.1commerical.services-customer-provided-certificates.dita">Configuring support for customer-provided certificates</xref>.</p>
<p>If the deployer does not wish to generate the key/cert pair, the installer software will generate this pair and place the generated key and certificate at /root/eca.key and /root/eca.crt, respectively, on the seed.</p>
<p>If the deployer wishes to provide an intermediary CA cert/key pair, they should be placed on the seed before deployment at /root/eca.key and /root/eca.crt by running the following copy commands:</p>
<codeblock>
<codeph>scp &lt;company-cacert.crt&gt; root@&lt;seed ip&gt;:/root/eca.crt

scp &lt;company-cacert.key&gt; root@&lt;seed ip&gt;:/root/eca.key
</codeph>
</codeblock>
<p>It is generally recommended that the deployer provide an intermediary CA key and certificate generated from a well-known certificate authority during the installation process, so trust can be established using the certificate chain. This can be either a specific certificate/key generated for this deployment, a general certificate/key that is used for test deployments by that organization, or a delegated signing certificate from another PKI to enable the use of existing trust relationships between users and that PKI. Either way, the deployer must provide the CA certificate to the Helion users, to enable secure TLS and prevent certificate errors and warnings.</p>
<p>The CA certificate/key pair must not be reused between deployments at different organizations, or in different deployments with differing levels of trust; for example, a public, untrusted Helion test system and an internal production system.</p>
<p>Alternatively there are two variables that can be exported to point to the key and cert: EPHEMERAL_CA_KEY_FILE and EPHEMERAL_CA_CERT_FILE.
Once the seed host is up, from the underseed or other node that can reach the seed, run these commands before continuing with the rest of the deployment according to the installation guide:</p>
<codeblock>
<codeph>scp &lt;company-cacert.crt&gt; root@&lt;seed ip&gt;:/root/
scp &lt;company-cacert.key&gt; root@&lt;seed ip&gt;:/root/

ssh root@&lt;seed ip&gt;
export EPHEMERAL_CA_KEY_FILE=/root/&lt;company-cacert.key&gt;
export EPHEMERAL_CA_CERT_FILE=/root/&lt;company-cacert.crt&gt;
</codeph>
</codeblock>
<p>If the deployer has not provided a key/cert pair, the self-signed certificate created during the installation process must be retrieved from the seed at /root/eca.crt after deployment. This certificate can then be used to authenticate the TLS connection when connecting to any of the overcloud OpenStack services in the HPE Helion OpenStack cloud. This can be retrieved using the following command:</p>
<codeblock>
<codeph>scp root@&lt;seed ip&gt;:/root/eca.crt ephemeralca.crt
</codeph>
</codeblock>
<p>If a self-signed certificate was created during the HPE Helion OpenStack installation, you must install the generated certificate in your browser as a trusted CA to prevent messages about insecure connections when connecting to the Horizon IP address. This can be done by importing the eca.crt file from the seed VM as a trusted CA into your browser software.</p>
<p>Each client must use this certificate to authenticate the connection. How you achieve this will depend on the client you are using. Below are some ways you can achieve this with the OpenStack command line tools using the 'nova list' command as an example. The easiest way to make sure the clients use this certificate is to set the environmental variable OS_CACERT to point to the EPHEMERAL_CA_CERT_FILE that was copied off the seed.</p>
<codeblock>
<codeph>export OS_CACERT=&lt;/path/to/ephemeralca.crt&gt;
</codeph>
</codeblock>
<p>Now when a service call is made, this cert will be used to authenticate the TLS connection:</p>
<codeblock>
<codeph>nova list
</codeph>
</codeblock>
<p>Another option supported by the clients is the --os-cacert argument:</p>
<codeblock>
<codeph>nova --os-cacert &lt;/path/to/ephemeralca.crt&gt; list
</codeph>
</codeblock>
<p>Another option is for the clients not to authenticate TLS connections. This is not advised as this will mean the identity of the server you are contacting will not be verified. However if you want to bypass this check you can use the --insecure option. A certificate is not needed then.</p>
<codeblock>
<codeph>nova --insecure list
</codeph>
</codeblock>
<p>
  <xref href="#topic6223"> Return to Top </xref>
</p>
<!-- ===================== horizontal rule ===================== -->
<!-- Sources:
http://docs.openstack.org/security-guide/content/introduction-to-ssl-tls.html
http://docs.openstack.org/security-guide/content/tls-proxies-and-http-services.html-->
<!-- Tom Cammann, Thom Leggett- SMEs Nova      -->
</body>
</topic>
