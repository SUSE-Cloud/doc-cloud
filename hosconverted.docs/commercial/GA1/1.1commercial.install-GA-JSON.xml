<?xml version="1.0" encoding="UTF-8"?>
<!--Edit status: not edited-->
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" ><topic xml:lang="en-us" id="topic20151">
<title>HPE Helion <tm tmtype="reg">OpenStack</tm> 1.1 and 1.1.1: Editing the Installation Configuration JSON File</title>
<titlealts>
<searchtitle>HPE Helion Openstack 1.1: Editing the Installation Configuration JSON File</searchtitle>
</titlealts>
<prolog>
<metadata>
<othermeta name="layout" content="default"/>
<othermeta name="product-version" content="HPE Helion Openstack 1.1"/>
<othermeta name="role" content="Storage Administrator"/>
<othermeta name="role" content="Storage Architect"/>
<othermeta name="role" content="Michael B,"/>
<othermeta name="product-version1" content="HPE Helion Openstack 1.1"/>
</metadata>
</prolog>
<body>
<p>
<!--PUBLISHED-->
 <!--./commercial/GA1/1.1commercial.install-GA-JSON.md-->
 <!--permalink: /helion/openstack/1.1/install/envars/--></p>
<p>
  <b>This document describes the installation process for HPE Helion OpenStack 1.1 and HPE Helion OpenStack 1.1.1.</b>
</p>
<p>(If you already have 1.1 installed, you can update Helion OpenStack from 1.1 to 1.1.1 by following the update procedures described in <xref href="../../commercial/GA1/1.1.1commercial.helion-update.dita" >HPE Helion OpenStack 1.1.1 Update Guide</xref>.)</p>
<p>The HPE Helion OpenStack Installation process requires various configuration parameters to be specified. This is achieved through environment variables.</p>
<p>A user who is installing HPE Helion OpenStack can enter all required environment variables using a JSON (JavaScript Object Notation) file that comes with the installation package.</p>
<p>This document contains the following information:</p>
<ul>
<li>
<xref type="section" href="#topic20151/about">About the JSON environment variables file</xref>
</li>
<li>
<xref type="section" href="#topic20151/edit">Editing the JSON file</xref>
</li>
<li>
<xref type="section" href="#topic20151/second">Configure a second network</xref>
</li>
<li>
<xref type="section" href="#topic20151/service">Configure the Service network</xref>
</li>
</ul>
<section id="about"> <title>About the Installation Configuration JSON File</title>
<p>This JSON configuration file is used to conduct operations such as adding or removing a node and integrating block storage. Make sure this file is preserved for future use.</p>
<p>You do not need to be able to create JSON files. They are merely text files that tell the consuming application what the variables are used for. JSON is human-readable format for storing information that can be used to transfer data between servers. 
After you modify a JSON file, you might want to validate the structure by running it through a validator such as <xref href="http://jsonlint.com/" scope="external" format="html" >JSONLint</xref> to be sure you haven't lost a comma or brace, etc. as that will cause the file to fail or have other undesired side effects.</p>
<p>The installation package contains a number of JSON template files. You need to be concerned with only one or two, depending upon your install environment: <codeph>kvm-custom-ips.json</codeph> or <codeph>esx-custom-ips.json</codeph> <codeph>esx-custom-ips-vlan.json</codeph>. The files are located in the <codeph>/tripleo/config</codeph> directory after the installation package is extracted.</p>
<p>Refer to <xref href="../../commercial/GA1/1.1commercial.install-GA-JSON-scenarios.dita" >Installation Configuration JSON File Deployment Scenarios</xref> to determine which template file is best for your environment.</p>
</section>
<section id="edit"> <title>Editing the JSON file</title>
<p>A template JSON file in included in the installation package. You need to edit the JSON file to add values appropriate for your deployment.</p>
<p>See <xref href="../../commercial/GA1/1.1commercial.install-GA-JSON-scenarios.dita" >JSON Environment File Deployment Scenarios</xref> for example JSON files.</p>
<p>To edit the JSON environment variables file:</p>
<ol>
<li>
<p>Log into your install system as root.</p>

<codeblock>
<codeph>sudo su -
</codeph>
</codeblock>
</li>
<li>
<p>Locate the appropriate file in the <codeph>/tripleo/configs</codeph> directory. This directory is created when the installation package is extracted.</p>

<ul>
<li>
<codeph>esx-custom-ips.json</codeph> - Use this file for installing HPE Helion OpenStack with ESX hypervisor support.</li>
<li>
<codeph>esx-custom-ips-vlan.json</codeph> - Use this file for installing HPE Helion OpenStack with ESX hypervisor support with a VLAN provider network.</li>
<li>
<codeph>kvm-custom-ips.json</codeph> - Use this file for installing HPE Helion OpenStack with KVM hypervisor support.</li>
</ul>
</li>
<li>
<p>Optionally, make a backup copy of the JSON file in case it is needed.</p>

<p>
<b>Example:</b>
</p>

<codeblock>
<codeph>cp esx-custom-ips.json esx-custom-ips.json-backup
</codeph>
</codeblock>
</li>
<li>
<p>Open the JSON file and edit the environment variable listed below.</p>
</li>
<li>
<p>Save the file on the seed cloud host.</p>
</li>
<li>
  <xref href="1.1commercial.install-GA-prereqs.dita#topic9786/csv">Return to HPE Helion OpenStack Installation Prerequisites</xref></li>
     </ol>
</section>
<section id="definition-of-environment-variables"> <title>Definition of Environment variables</title>
<p>The following is a list of the values that can be specified in the JSON environment variables file.</p>
<p>
<b>Important:</b> Some of these values are options. If a value is optional, enter a value, if needed. If you do not need to specify an optional value, delete the value from the JSON file. Do not set optional variables to empty strings, as this might override a default value with the empty strig.</p>
<p>
<codeph>node_min_disk</codeph> - Use this variable to set the global minimum acceptable disk size for the installation in GiB.</p>
  <p>The default disk sizes per role are set as defined in the <xref href="../../commercial/GA1/1.1commercial.install-GA-supportmatrix.dita#topic12282/baremetal" type="section">Support Matrix</xref>. You should only set this value to override those defaults. You should deploy with at least the recommended disk size in all cases.</p>
<p>
<codeph>controller_scale</codeph> - (optional) Specify the number of overcloud controllers.</p>
<p>
<b>Important</b> Set this value to <codeph>3</codeph> or remove this value from the JSON file.</p>
<p>
<codeph>bridge_interface</codeph> - Use this variable to specify the interface on the seed cloud host to use as the bridge interface, for example <codeph>em2</codeph> or <codeph>eth2</codeph>. This interface connects to the untagged management network and will be used to PXE boot undercloud and overcloud servers:</p>
<codeblock>
  <codeph>"bridge_interface": "em2",
</codeph>
</codeblock>
<p>
<codeph>customer_router_ip</codeph> - Use this value to set the interface IP on the external customer router needed for SVC network to function. The <codeph>customer_router_ip</codeph> will reside on the <codeph>bm_network</codeph>, facing undercloud server. In most of the cases it will be equal to <codeph>network_gateway</codeph>
</p>
<codeblock>
  <codeph>"customer_router_ip": "10.23.69.129",
</codeph>
</codeblock>
<p>
<codeph>virtual_interface</codeph> - Use this variable to set the interface that the overcloud virtual IP (used for accessing API services) will be assigned to. This value is required and the interface must exist on the three overcloud controller nodes.</p>
<codeblock>
  <codeph>"virtual_interface": "eth1",
</codeph>
</codeblock>
<p>
<codeph>fixed_range_cidr</codeph> - (Optional) Use this variable to set the address range of the default private network.</p>
<codeblock>
  <codeph>"fixed_range_cidr": "172.0.100.0/24",
</codeph>
</codeblock>
<p>
<codeph>compute_scale</codeph> - Use this variable to set the number of overcloud compute nodes to deploy.</p>
<codeblock>
  <codeph>"compute_scale": 4,
</codeph>
</codeblock>
<p>
<codeph>control_virtual_router_id</codeph> - Use this variable to set a unique idenitifier for the HPE Helion OpenStack installation.</p>
<p>HPE Helion OpenStack uses keepalived to manage virtual IPs. keepalived uses a unique id to synchronise its activities. If you plan to run multiple installations of HPE Helion OpenStack on the same network, each installation must be configured with a unique id by setting the environment variable <codeph>control_virtual_router_id</codeph> to a unique number (from 0 to 255) before running the installation. The default value, if unset, is 51.</p>
<codeblock>
  <codeph>"control_virtual_router_id": "202",
</codeph>
</codeblock>
<p>
<codeph>cloud_type</codeph> - Use this variable to specify whether the HPE Helion OpenStack will be installed with KVM or ESX hypervisor support.</p>
      <note> If set to <codeph>ESX</codeph>, the <codeph>compute_scale</codeph> variable and DVR
        variables are not required.</note>
<p>
<codeph>swift_scale</codeph> - (optional) Override the number of swift storage nodes. Note this is a different scale factor from the <codeph>scale out swift</codeph> factors.</p>
<p>
<codeph>vsa_scale</codeph> - Use this variable to specify the number of VSA nodes to deploy.</p>
<p>
<codeph>vsa_ao_scale</codeph> - Use this variable to specify the number of VSA AO nodes to deploy.</p>
<p>
<codeph>so_swift_storage_scale</codeph> - Use this variable to specify the number of scale out swift storage nodes to deploy. Note this is a different scale factor from the <codeph>swift storage scale</codeph> factor.</p>
<p>
<codeph>so_swift_proxy_scale</codeph> - Use this variable to specify the number of scale out swift proxy nodes to deploy. Note this is a different scale factor from the <codeph>swift storage scale</codeph> factor.</p>
<p>
  <b>VSA</b>
</p>
<p>The following values appear under <codeph>vsa</codeph> for configuring VSA storage:</p>
<p>
<codeph>/&lt;cluster&gt;/</codeph> - If the VSA section is present, there must be at least one cluster defined. Values for each cluster are just copied into the passthrough.</p>
<p>
<codeph>/DEFAULT/enabled_backends</codeph> - The enabled_backends values for all of the storage methods are combined into a single value.</p>
<p>
  <b>3par</b>
</p>
<p>The following values appear under <codeph>3par</codeph> for configuring 3Par storage:</p>
<p>
<codeph>/&lt;cluster&gt;/</codeph> - If the 3par section is present, there must be at least one cluster defined. Values for each cluster are just copied into the passthrough.</p>
<p>
<codeph>/DEFAULT/enabled_backends</codeph> - The enabled_backends values for all of the storage methods are combined into a single value.</p>
<p>
  <b>DNS</b>
</p>
<p>The following values appear under <codeph>dns</codeph>  for configuring your DNS servers:</p>
<p>
<codeph>seed_server</codeph> - Use this variable to specify the DNS server for the seed.</p>
<p>
<codeph>undercloud_server</codeph> - Use this variable to specify the DNS server for the undercloud.</p>
<p>
<codeph>overcloud_server</codeph> - Use this variable to specify the DNS server for the overcloud.</p>
<codeblock>
  <codeph>Do not copy these addresses they are only examples

"dns": {
    "seed_server": "19.65.175.150",
    "undercloud_server": "19.65.175.150",
    "overcloud_server": "19.65.175.150"
},
</codeph>
</codeblock>
<p>
  <b>NTP</b>
</p>
<p>The following values appear under <codeph>ntp</codeph>  for configuring the DNS name or IP address of your NTP servers. These values are required:</p>
      <note>If you do not have a DNS server, specify only an IP address; if you specify a DNS name
        you MUST specify valid DNS servers in the dns section.</note>
<p>
<codeph>seed_server</codeph> - Use this variable to set the DNS name or IP address of an NTP server accessible on the public interface for undercloud hosts. This is required.</p>
<p>
<codeph>undercloud_server</codeph> - Use this variable to set the DNS name or IP address of an NTP server accessible on the public interface for undercloud hosts. This is required.</p>
<p>
<codeph>overcloud_server</codeph> - Use this variable to set the DNS name or IP address of an NTP server accessible on the public interface for overcloud hosts. This is required.</p>
<codeblock>
  <codeph>**Example:**

The following example sets the NTP server addresses. Do not copy this address.

"ntp": {
    "seed_server": "19.111.135.123",
    "undercloud_server": "19.111.135.123",
    "overcloud_server": "19.111.135.123"
},
</codeph>
</codeblock>
<p>
  <b>Neutron</b>
</p>
<p>The following values appear under <codeph>neutron</codeph>  for configuring networking.</p>
<p>Use this variable to set the value of the name of the interface that carries the Networking Operations (Neutron) service external traffic on your VSA server. This is the physical interface associated with the <codeph>bm_network</codeph> networks.</p>
<p>If this value is the same a <codeph>virtual_interface</codeph> you do not need to set this variable.</p>
<p>
<codeph>undercloud_public_interface</codeph> - Use this variable to set the value of the name of the interface that carries the Networking Operations service (Neutron) external traffic on your undercloud. This is the physical interface associated with the <codeph>bm_network</codeph> networks. The default value is <codeph>eth2</codeph>. If this is correct you do not need to set this variable.</p>
<p>
<codeph>overcloud_public_interface</codeph> - Use this variable to set the value of the name of the interface that carries the Networking Operations service (Neutron) external traffic on your overcloud. This is the physical interface associated with the <codeph>bm_network</codeph> networks. The default value is <codeph>eth2</codeph>. If this is correct you do not need to set this variable.</p>
<p>
<codeph>vsa_public_interface</codeph> -  Use this variable to specify the physical interface used by a node which is hosting a VSA VM (for example: eth1).</p>
<p>
<codeph>public_interface_default_route</codeph> - Use this variable to set a custom default route for the <codeph>overcloud.neutron_public_interface</codeph>. See <xref type="section" href="#topic20151/second">Configure a second network</xref>.</p>
<p>
<codeph>public_interface_raw_device</codeph> - See <xref type="section" href="#topic20151/second">Configure a second network</xref>.</p>
<p>
<codeph>overcloud_dvr</codeph> - Use this variable if you are not using Distributed Virtual Routers (DVR). By default, the overcloud is configured for DVR  If this behaviour is not desirable, then set <codeph>overcloud_dvr</codeph>  to 'False'.</p>
      <note>For ESX hypervisors, set this to False.</note>
<codeblock>
  <codeph>**Example:**

"neutron": {
    "overcloud_public_interface": "eth2",
    "undercloud_public_interface": "eth2",
    "public_interface_default_route": "15.126.52.1",
    "public_interface_raw_device": "eth2",
    "overcloud_dvr":"false"
},
</codeph>
</codeblock>
<p>
  <b>SVC</b>
</p>
<p>The following values appear under <codeph>svc</codeph>.</p>
<p>These variables configure the required Service network. See <xref type="section" href="#topic20151/service">Configure the Service network</xref> at the end of this page.</p>
      <note>These variables are optional for the ESX cloud type.</note>
<p>
<codeph>interface</codeph> - Use this variable to specify the name of the VLAN that will be created for the SVN network.</p>
<p>
<codeph>interface_default_route</codeph> - Use this variable to specify the default route configured for use by the SVC VLAN.</p>
<p>
<codeph>allocate_start</codeph> - Use this variable to specify the first address in the range of addresses to be used by Neutron when assigning IP addresses on the SVC VLAN.</p>
<p>
<codeph>allocate_end</codeph> - Use this variable to specify the last address in the range of addresses to be used by Neutron when assigning IP addresses on the SVC VLAN.</p>
<p>
<codeph>allocate_cidr</codeph> - Use this variable to specify the CIDR value for the range of addresses to be used by Neutron when assigning IP addresses on the SVC VLAN.</p>
<p>
<codeph>overcloud_bridge_mappings</codeph> - Use this variable to specify  a comma-separated list of bridge mappings for the Networking (Neutron) service OpenvSwitch plugin. This variable must include <codeph>svcnet1:br-svc</codeph>.</p>
<p>
<codeph>overcloud_flat_networks</codeph> - Use this variable to specify the name of SVC network that the Networking (Neutron) service knows as of type flat. This variable must include <codeph>svcnet1</codeph>.</p>
<p>
<codeph>customer_router_ip</codeph> - Use this variable to specify the interfaces on the (customer supplied) router, adjacent to the cloud equipment, that links the SVC physical (provider) network with the Management network.</p>
<p>
  <b>Example</b>
</p>
<codeblock>
  <codeph>"svc": {
        "interface": "vlan102",
        "interface_default_route": "192.168.132.1",
        "allocate_start": "192.168.132.2",
        "allocate_end": "192.168.132.250",
        "allocate_cidr": "192.168.132.0/24",
        "customer_router_ip": "10.23.69.129",
        "overcloud_bridge_mappings": "svcnet1:br-svc",
        "overcloud_flat_networks": "svcnet1"
    },
</codeph>
</codeblock>
<p>
  <b>Hypervisor</b>
</p>
<p>The following values appear under <codeph>hypervisor</codeph>.</p>
<p>
<codeph>public_interface</codeph> - Use this variable to set the name of the interface that carries the Networking Operations (Neutron) service external traffic on your compute server. This is the physical interface associated with the <codeph>bm_network</codeph> networks.
If this is the same value as <codeph>neutron/overcloud_public_interface</codeph> you do not need to set this variable.</p>
<p>
  <b>ESX</b>
</p>
<p>The following values appear under <codeph>esx</codeph>.</p>
<p>
<codeph>vlan_range</codeph> - Use this variable to specify the ID numbers of VLAN ranges that could be used by tenant networks.</p>
<p>
<b>Important</b> This option is required for the ESX cloud type.</p>
<p>
<codeph>provider_network</codeph> - Use this variable to specify the management network of the ESX hypervisors. This is a required option for ESX cloud type.</p>
<p>
<codeph>external_vlan_id</codeph> - Use this variable to specify the ID of the external VLAN.</p>
<p>
<codeph>external_network_gateway</codeph> - Use this variable to specify the gateway to connect to the external network.</p>
<codeblock>
  <codeph>"esx": {
    "vlan_range": "500:1000",
    "provider_network": "192.168.10.0/24",
    "external_vlan_id": 1634,
    "external_network_gateway": "15.126.52.1"
},
</codeph>
</codeblock>
<p>
  <b>SSL</b>
</p>
<p>The following values appear under <codeph>ssl</codeph>. These parameters are optional, but must all be specified if any are specified.</p>
<p>
<codeph>ca_certs</codeph> - Use this variable to enter the string-encoded certificate data.</p>
<p>
<codeph>cluster_backend/certificate</codeph> - Use this variable to enter the string-encoded certificate data.</p>
<p>
<codeph>cluster_backend/key</codeph> - Use this variable to enter the string-encoded certificate data.</p>
<codeblock>
  <codeph>"ssl": {
    "ca_certs":
    "provider_network": "192.168.10.0/24",
    "external_vlan_id": 1634,
    "external_network_gateway": "15.126.52.1"
},
</codeph>
</codeblock>
<p>
  <b>HDN</b>
</p>
<p>The following values appear under <codeph>codn</codeph> and configure access to the Helion Download Network (Sherpa) service.</p>
<p>
<codeph>undercloud_http_proxy</codeph> and <codeph>undercloud_https_proxy</codeph> - Use these variables to set the IP address for the HDN service to download images for patches or other software packages available for purchase and download into the undercloud.</p>
<p>
<codeph>overcloud_http_proxy</codeph> and <codeph>overcloud_https_proxy</codeph> - Use these variables to set the IP address for the HDN service to download images for patches or other software packages available for purchase and download into the overcloud.</p>
<codeblock>
  <codeph>"codn": {
    "undercloud_http_proxy": "http://19.65.175.150:8080",
    "undercloud_https_proxy": "http://19.65.175.150:8080",
    "overcloud_http_proxy": "http://19.65.175.150:8080",
    "overcloud_https_proxy": "http://19.65.175.150:8080"
}
</codeph>
</codeblock>
<p>
  <b>Baremetal</b>
</p>
<p>The following values appear under <codeph>baremetal</codeph> for configuring your baremetal servers:</p>
<p>
<codeph>network_seed_ip</codeph>, <codeph>network_cidr</codeph> - Use these variables to specify a particular IP address for the seed VM, for example 192.168.130.0/24.</p>
<p>
<codeph>network_gateway</codeph> - Use this variable to specify a host other than the seed cloud host as the gateway, for example 192.168.130.1. Typically this IP will be the physical gateway of the network.</p>
<p>
<codeph>network_seed_range_start</codeph>, <codeph>network_seed_range_end</codeph> - Use these variables to specify an IP address range for the seed cloud host to administrate/manage the undercloud node(s), for example 192.168.130.4-192.168.130.22.</p>
      <note>The <codeph>network_seed_range</codeph> addresses must be on the subnet defined by the
          <codeph>network_seed_ip</codeph> and <codeph>network_cidr</codeph> values. All addresses
        must be on a common subnet.</note>
<p>
<codeph>network_undercloud_range_start</codeph>, <codeph>network_undercloud_range_end</codeph> - Use the variables to specify an IP address range for the undercloud to administrate/manage the overcloud node(s). The IPs assigned by this variable are for the undercloud to distribute among the overcloud nodes. Make sure you assign at least one IP address for each baremetal server in your environment and an additional IP used as a virtual IP for HA.</p>
      <note> The <codeph>network_undercloud_range</codeph> addresses must be on the subnet defined by
        the <codeph>network_seed_ip</codeph> and <codeph>network_cidr</codeph> values. All addresses
        must be on a common subnet.</note>
<codeblock>
  <codeph>"baremetal": {
    "network_seed_ip": "192.168.130.3",
    "network_cidr": "192.168.130.0/24",
    "network_gateway": "192.168.130.1",
    "network_seed_range_start": "192.168.130.4",
    "network_seed_range_end": "192.168.130.22",
    "network_undercloud_range_start": "192.168.130.23",
    "network_undercloud_range_end": "192.168.130.126"
},
</codeph>
</codeblock>
<p>
  <b>Floating_IP</b>
</p>
<p>The following values appear under <codeph>floatingip</codeph> for configuring floating IPs:</p>
<p>
<codeph>start</codeph>, <codeph>end</codeph>, <codeph>cidr</codeph> - Use these variables under <codeph>floating_ip</codeph> to control the range of IP addresses available for user VMs in the overcloud.  The defaults are currently set as below but can be changed, if needed.</p>
<codeblock>
  <codeph>"floating_ip": {
    "start": "192.168.131.2",
    "end": "192.168.131.245",
    "cidr": "192.168.131.0/24"
},
</codeph>
</codeblock>
      <note> The range defined by the variables <codeph>start</codeph>, <codeph>end</codeph>, and
          <codeph>cidr</codeph> to be in conflict with the address range of the default private
        network. By default the range of the default private network is between 10.0.0.1 and
        10.255.255.254 (CIDR 10.0.0.0/8).</note>
<p>Then the <codeph>start</codeph>, <codeph>end</codeph>, and <codeph>cidr</codeph> cannot be anything in the form of 10.x.y.z.  The address range of the default private network is defined by the variable <codeph>fixed_range_cidr</codeph>.</p>
</section>
<section id="second"> <title>Configure a second network</title>
<p>A second network can be configured for the floating ip pool by setting <codeph>overcloud_public_interface</codeph> to a physically configured VLAN. The vlan name used as the <codeph>overcloud_public_interface</codeph> is expected to be of the form "vlan" followed by the vlan id ( ex. vlan101 ).</p>
<p>For example:</p>
<codeblock>
  <codeph>"neutron": {
    "public_interface_raw_device": "eth0",
    "overcloud_public_interface": "vlan331"
        },

"floating_ip": {
    "start": "192.0.8.20",
    "end": "192.0.15.254",
    "cidr": "192.08.0/31"
},

"virtual_interface": "eth0",
</codeph>
</codeblock>
      <note>The overcloud neutron external network (ext-net) assumes the gateway IP is the lowest
        non-zero host IP address in the <codeph>cidr</codeph> range.</note>
</section>
<section id="service"> <title>Configure the Service network</title>
<p>Helion OpenStack requires a third VLAN network called as Service Network which connects trusted VMs in overcloud to communicate with cloud infrastructure components in undercloud. The purpose is to aggregate logs of PaaS components running on the VMs in the overcloud to the undercloud via this network.</p>
<p>This third network can be configured for the platform service guest instances to connect to undercloud controller by setting <codeph>NeutronSVCInterface</codeph> to a physically configured VLAN. The VLAN name used as the <codeph>NeutronSVCInterface</codeph> is expected to be of the form <codeph>vlan</codeph> followed by the VLAN id ( ex. vlan102 ).</p>
      <note> These variables are optional for the ESX cloud type.</note>
<p>For example:</p>
<codeblock>
  <codeph>"svc": {
            "interface": "vlan102",
            "interface_default_route": "192.168.132.1",
            "allocate_start": "192.168.132.2",
            "allocate_end": "192.168.132.250",
            "allocate_cidr": "192.168.132.0/24",
            "customer_router_ip": "10.23.69.129",
            "overcloud_bridge_mappings": "svcnet1:br-svc",
            "overcloud_flat_networks": "svcnet1"
        },
</codeph>
</codeblock>
<p>
  <xref href="1.1commercial.install-GA-prereqs.dita#topic9786/envars">Return to HPE Helion OpenStack Installation Prerequisites</xref></p>
<!-- ===================== horizontal rule ===================== -->
</section>
</body>
</topic>
