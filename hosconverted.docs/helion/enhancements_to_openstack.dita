<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="vsOpenStack">
  <title><ph conkeyref="HOS-conrefs/product-title"/>Enhancements to OpenStack</title>

  <body>
    <p conkeyref="HOS-conrefs/applies-to"/>
    <section><title>How does <keyword keyref="kw-hos"/> differ from a pure OpenStack cloud
        implementation?</title>There are a number of enhancements in <keyword keyref="kw-hos"/> that
      are not available natively with a pure OpenStack implementation. The enhancements include a
      streamlined, largely automated installation process that provides OpenStack service
      integration, with the same level of automation applied to operations, and maintenance.
      Integrated security features help secure your cloud externally, and between tenants and
      services.</section>
    <section>During installation of <keyword keyref="kw-hos"/>, the core OpenStack services, such as
      compute, networking, orchestration, storage, identity, etc. are installed automatically, and
      by default. These services are integrated and work together out of the box. Rather than
      configuring each service individually and configuring their interaction, the <keyword
        keyref="kw-hos"/> lifecycle manager, a collection of Ansible playbooks, script together
      those integrations for you. The playbooks read YAML files that describe your cloud
      configuration in human-readable text which you have entered or edited, and builds your cloud
      based on those configuration settings. In addition, these files, collectively referred to as
        <xref href="architecture/input_model/input_model.dita#input_model">the H<keyword
          keyref="kw-hos"/> input model</xref> are pre-populated as your starting point for a
      variety of cloud configurations.</section>
    <section><keyword keyref="kw-hos"/> lifecyle manager responsibilities go beyond installation and
      configuration, however. Ongoing management and reconfiguration, in many instances, can be
      achieved using the lifecycle manager rather than the OpenStack APIs as the Ansible playbooks
      themselves use the OpenStack APIs and abstract the tasks for you. Beginning with version 2.0,
      each release adds additional automation to management tasks.</section>
    <section>Granular monitoring of processes and services is integrated into <keyword
        keyref="kw-hos"/> as well using Monasca integration.</section>
    <section>Additionally, the following security features are built into <keyword keyref="kw-hos"
      />: <p>
        <ul>
          <li>Data at rest encryption capabilities including encrypted storage of passwords and
            sensitive data</li>
          <li>Reduction of surface vulnerabilities based on extensive years of experience running
            OpenStack in the HPE Public Cloud</li>
          <li>Centralized log management capabilities</li>
          <li>Threat monitoring with HPE ArcSight integration</li>
          <li>Security rules that close all unused ports </li>
          <li>AppArmor to provide an additional layer of automated protection against VM
            breakouts</li>
          <li>Role-based access control to control who and what can access services and
            resources</li>
          <li>Auditing of inter-service activities</li>
          <li>Barbican key management </li>
          <li>Web single sign-on</li>
        </ul>Finally some of the management features include:</p><ul>
        <li>Active health monitoring of the end-to-end cloud infrastructure </li>
        <li>Centralized logging all alerts and alarms for event correlation to root-cause analysis </li>
        <li>Telemetry / usage metering and internal usage reporting capabilities for
          showback/chargeback/and billing systems </li>
        <li>Identity management of Active Directory and other LDAP providers</li>
        <li>An integrated Operations Console for easy motoring and alarm creation</li>
      </ul></section>
  </body>
</topic>
