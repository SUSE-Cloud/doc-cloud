<?xml version="1.0" encoding="UTF-8"?>
<!--Edit status: not edited-->
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_gbz_13t_mt">
  <title><ph conkeyref="HOS-conrefs/product-title"/>Recovering Swift Builder Files</title>
  <body>
    <!--not tested-->
    <p conkeyref="HOS-conrefs/applies-to"/>
    <p>When you execute the deploy process for a system, a copy of the builder files are stored on
      the following nodes and directories:</p>
    <ul>
      <li>On the Swift ring building node, the primary reference copy is stored in the
          <codeph>/etc/swiftlm/&lt;cloud-name>/&lt;control-plane-name>/builder_dir/</codeph>
        directory.</li>
      <li>On the next node after the Swift ring building node, a backup copy is stored in the
          <codeph>/etc/swiftlm/&lt;cloud-name>/&lt;control-plane-name>/builder_dir/</codeph>
        directory.</li>
      <li>In addition, in the deploy process, the builder files are also copied to the
          <codeph>/etc/swiftlm/deploy_dir/&lt;cloud-name></codeph> directory on every Swift
        node.</li>
    </ul>
    <p>If a copy of the builder files are found in the
        <codeph>/etc/swiftlm/&lt;cloud-name>/&lt;control-plane-name>/builder_dir/</codeph> then no
      further recover action is needed. However, if all nodes running the Swift account (SWF-ACC)
      are lost, then you need to copy the files from the
        <codeph>/etc/swiftlm/deploy_dir/&lt;cloud-name></codeph> directory from an intact Swift node
      to the <codeph>/etc/swiftlm/&lt;cloud-name>/&lt;control-plane-name>/builder_dir/</codeph>
      directory on the primary Swift ring building node.</p>
    <p>If you have no intact <codeph>/etc/swiftlm</codeph> directory on any Swift node, you may be
      able to restore from Freezer. See <xref
        href="../../maintenance/controller/recovering_controller_nodes.dita"/>.</p>
    <p>To restore builder files from the <codeph>/etc/swiftlm/deploy_dir</codeph> directory, use the
      following process:</p>

    <ol>
      <li>Log in to the Swift ring building server. <note>To identify the Swift ring building
          server, see <xref href="identify_ring_builder.dita"/>.</note></li>
      <li>Create the <codeph>/etc/swiftlm/builder_dir</codeph> directory structure with these
        commands: <p>Replace <codeph>&lt;cloud-name></codeph> with the name of your cloud and
            <codeph>&lt;control-plane-name></codeph> with the name of your control
        plane.</p><codeblock>sudo mkdir -p /etc/swiftlm/&lt;cloud-name>/&lt;control-plane-name>/builder_dir/
sudo chown -R stack.stack /etc/swiftlm/</codeblock></li>
      <li>Log in to a Swift node where an intact <codeph>/etc/swiftlm/deploy_dir</codeph> directory
        exists.</li>
      <li>Copy the builder files to the Swift ring building node. In the example below we use scp to
        transfer the files, where <codeph>swpac-c1-m1-mgmt</codeph> is the ring building node,
          <codeph>cloud1</codeph> is the cloud, and <codeph>cp1</codeph> is the control plane name::
        <codeblock>scp /etc/swiftlm//cloud1/cp1/* swpac-ccp-c1-m1-mgmt:/etc/swiftlm/builder_dir/cloud1/cp1</codeblock></li>
      <li>Log in to the lifecycle manager.</li>
      <li>Run the Swift reconfigure playbook to make sure every Swift node has the same rings:
        <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts swift-reconfigure.yml</codeblock></li>
    </ol>

  </body>
</topic>
