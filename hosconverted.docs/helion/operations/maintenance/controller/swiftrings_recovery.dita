<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="swiftrings_recovery">
  <title><ph conkeyref="HOS-conrefs/product-title"/>Swift Rings Recovery</title>
  <abstract><shortdesc outputclass="hdphidden">To recover your Swift rings in the event of a
      disaster, follow the procedure that applies to your situation: either recover the rings from
      one Swift node if possible, or use the SSH backup that you have set up.</shortdesc></abstract>
  <body>
    <p>To recover your Swift rings in the event of a disaster, follow the procedure that applies to
      your situation: either recover the rings from one Swift node if possible, or use the SSH
      backup that you have set up.</p>
    <section>
      <title>Restore from the Swift deployment backup</title>
      <p>See <xref href="../../troubleshooting/objectstorage/recovering_builder_file.dita"/>.</p>
    </section>
    <section>
      <title>Restore from the SSH Freezer backup</title>
      <p>In the very specific use case where you lost all system disks of all object nodes, and
        Swift proxy nodes are corrupted, you can recover the rings because a copy of the Swift rings
        is stored in Freezer. This means that Swift data is still there (the disks used by Swift
        needs to be still accessible).</p>
      <p>Recover the rings with these steps.</p>
      <ol>
        <li>Log in to a node that has the freezer-agent installed.</li>
        <li>Become root: <codeblock>sudo su</codeblock></li>
        <li>Create the temporary directory to restore your files to:
          <codeblock>mkdir /tmp/swift_builder_dir_restore/</codeblock></li>
        <li>Create a restore file with the following content:
          <codeblock>cat &lt;&lt; EOF &gt; ./restore_config.ini
[default]
action = restore
storage = ssh
compression = bzip2
restore_abs_path = /tmp/swift_builder_dir_restore/
ssh_key = /etc/freezer/ssh_key
ssh_host = &lt;freezer_ssh_host&gt;
ssh_port = &lt;freezer_ssh_port&gt;
ssh_user name = &lt;freezer_ssh_user name&gt;
container = &lt;freezer_ssh_base_rid>/freezer_swift_backup_name = freezer_swift_builder_backup
hostname = &lt;hostname of the old first Swift-Proxy (SWF-PRX[0])&gt;
EOF</codeblock></li>
        <li>Edit the file and repave all &lt;tags&gt; with the right information.
          <codeblock>vim ./restore_config.ini</codeblock>You will also need to put the SSH key used
          to do the backups in /etc/freezer/ssh_key and remember to set the right permissions:
          600.</li>
        <li>Execute the restore
          job:<codeblock>freezer-agent --config ./restore_config.ini</codeblock>You now have the
          Swift rings in <codeph>/tmp/swift_builder_dir_restore/</codeph></li>
        <li>If the SWF-PRX[0] is already deployed, copy the contents of the restored directory
            (<codeph>/tmp/swift_builder_dir_restore/</codeph>) to
            <codeph>/etc/swiftlm/builder_dir/</codeph> on the SWF-PRX[0] Then from the lifecycle
          manager run:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts swift-reconfigure.yml</codeblock></li>
        <li>If the SWF-ACC[0] is<b> not </b>deployed, from the lifecycle manager run these
          playbooks:<codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts guard-deployment.yml
ansible-playbook -i hosts/verb_hosts osconfig-run.yml --limit &lt;SWF-ACC[0]-hostname&gt;</codeblock></li>
        <li>Copy the contents of the restored directory
            (<codeph>/tmp/swift_builder_dir_restore/</codeph>) to
            <codeph>/etc/swiftlm/builder_dir/</codeph> on the SWF-ACC[0] You will have to create the
          directories : <codeph>/etc/swiftlm/builder_dir/</codeph>
        </li>
        <li>From the lifecycle manager, run the <codeph>hlm-deploy.yml</codeph> playbook:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts hlm-deploy.yml</codeblock></li>
      </ol>
    </section>
  </body>
</topic>
