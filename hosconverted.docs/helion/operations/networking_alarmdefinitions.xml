<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="networking_alarmdefinitions">
  <title><ph conkeyref="HOS-conrefs/product-title"/>Networking Alarms</title>
  <body>
    <section>
      <p>These alarms show under the Networking section of the HPE Helion Ops Console.</p>
      <p>
        <table frame="all" rowsep="1" colsep="1" id="networking_alarms">
          <tgroup cols="5">
            <colspec colname="c1" colnum="1"/>
            <colspec colname="c2" colnum="2"/>
            <colspec colname="c3" colnum="3"/>
            <colspec colname="c4" colnum="4"/>
            <colspec colname="c5" colnum="5"/>
            <thead>
              <row>
                <entry>Service</entry>
                <entry>Alarm Name</entry>
                <entry>Description</entry>
                <entry>Likely Cause</entry>
                <entry>Mitigation Tasks to Perform</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry morerows="4">networking</entry>
                <entry>Process Check</entry>
                <entry>Alarms when the specified process is not running. <p>Separate alarms for each
                    of these Neutron services, specified by the <codeph>component</codeph>
                    dimension:</p>
                  <ul id="ul_a11_gzp_mx">
                    <li>ipsec/charon</li>
                    <li>neutron-openvswitch-agent</li>
                    <li>neutron-l3-agent</li>
                    <li>neutron-dhcp-agent</li>
                    <li>neutron-metadata-agent</li>
                    <li>neutron-server</li>
                    <li>neutron-lbaas-agent</li>
                    <li>neutron-lbaasv2-agent</li>
                    <li>neutron-vpn-agent</li>
                  </ul></entry>
                <entry>Process crashed.</entry>
                <entry>Restart the process on the affected node using these steps: <ol
                    id="ol_fdb_dzg_qv">
                    <li>Log in to the lifecycle manager.</li>
                    <li>Check the status of the networking
                      status:<codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts neutron-status.yml</codeblock></li>
                    <li>Make note of the failed service names and the affected hosts which you will
                      use to review the logs later.</li>
                    <li>Using the affected hostname(s) from the previous output, run the Neutron
                      start playbook to restart the services:<codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts neutron-start.yml --limit &lt;hostname></codeblock>
                      <note>You can pass multiple hostnames with <codeph>--limit</codeph> option by
                        separating them with a colon (:).</note></li>
                    <li>Check the status of the networking service again:
                      <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts neutron-status.yml</codeblock></li>
                    <li>Once all services are back up, you can SSH to the affected host(s) and
                      review the logs in the location below for any errors around the time that the
                      alarm triggered:
                      <codeblock>/var/log/neutron/&lt;service_name></codeblock></li>
                  </ol></entry>
              </row>
              <row>
                <entry>Process Check</entry>
                <entry>Alarms when the specified process is not running.
                  <codeblock>process_name = neutron-rootwrap</codeblock>
                </entry>
                <entry>Process crashed.</entry>
                <entry>Currently <codeph>neutron-rootwrap</codeph> is only used to run
                    <codeph>ovsdb-client</codeph>. To restart this process, use these steps:<ol
                    id="ol_ark_zzg_qv">
                    <li>SSH to the affected host(s).</li>
                    <li>Restart the
                      process:<codeblock>sudo systemctl restart neutron-openvswitch-agent</codeblock></li>
                    <li>Review the logs at the location below for
                      errors:<codeblock>/var/log/neutron/neutron-openvswitch-agent.log</codeblock></li>
                  </ol></entry>
              </row>
              <row>
                <entry>HTTP Status</entry>
                <entry>neutron api health check</entry>
                <entry>Process is stuck if the <codeph>neutron-server</codeph> Process Check is
                  OK.</entry>
                <entry>
                  <ol id="ol_zc4_z1h_qv">
                    <li>SSH to the affected host(s).</li>
                    <li>Run this command to restart the <codeph>neutron-server</codeph>
                      process:<codeblock>sudo systemctl restart neutron-server</codeblock></li>
                    <li>Review the logs at the location below for
                      errors:<codeblock>/var/log/neutron/neutron-server.log</codeblock></li>
                  </ol>
                </entry>
              </row>
              <row>
                <entry>HTTP Status</entry>
                <entry>neutron api health check</entry>
                <entry>The node crashed. Alternatively, only connectivity might have been lost if
                  the local node HTTP Status is OK or UNKNOWN.</entry>
                <entry>Reboot the node if it crashed or diagnose the networking connectivity
                  failures between the local and remote nodes. Review the logs.</entry>
              </row>
              <row>
                <entry>Service Directory Log Size</entry>
                <entry>Service log directory consuming more disk than its quota.</entry>
                <entry>This could be due to a service set to <codeph>DEBUG</codeph> instead of
                    <codeph>INFO</codeph> level. Another reason could be due to a repeating error
                  message filling up the log files. Finally, it could be due to log rotate not
                  configured properly so old log files are not being deleted properly.</entry>
                <entry>Find the service that is consuming too much disk space. Look at the logs. If
                    <codeph>DEBUG</codeph> log entries exist, set the logging level to
                    <codeph>INFO</codeph>. If the logs are repeatedly logging an error message, do
                  what is needed to resolve the error. If old log files exist, configure log rotate
                  to remove them. You could also choose to remove old log files by hand after
                  backing them up if needed.</entry>
              </row>
              <row>
                <entry morerows="6">dns</entry>
                <entry>Process Check</entry>
                <entry>Alarms when the specified process is not running.
                  <codeblock>process_name = designate-zone-manager</codeblock>
                </entry>
                <entry>Process crashed.</entry>
                <entry>Restart the process on the affected node using these steps: <ol
                    id="ol_b11_gzp_mx">
                    <li>Log in to the lifecycle manager.</li>
                    <li>Use the Designate start playbook against the affected node:
                      <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts designate-start.yml --limit 'DES-ZMG'</codeblock></li>
                  </ol>
                  <p>Review the log located at:</p>
                  <codeblock>/var/log/designate/designate-zone-manager.log</codeblock></entry>
              </row>
              <row>
                <entry>Process Check</entry>
                <entry>Alarms when the specified process is not running.
                  <codeblock>process_name = designate-pool-manager</codeblock>
                </entry>
                <entry>Process crashed.</entry>
                <entry>Restart the process on the affected node using these steps: <ol
                    id="ol_c11_gzp_mx">
                    <li>Log in to the lifecycle manager.</li>
                    <li>Use the Designate start playbook against the affected node:
                      <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts designate-start.yml --limit 'DES-PMG'</codeblock></li>
                  </ol>
                  <p>Review the log located at:</p>
                  <codeblock>/var/log/designate/designate-pool-manager.log</codeblock></entry>
              </row>
              <row>
                <entry>Process Check</entry>
                <entry>Alarms when the specified process is not running.
                  <codeblock>process_name = designate-central</codeblock>
                </entry>
                <entry>Process crashed</entry>
                <entry>Restart the process on the affected node using these steps: <ol
                    id="ol_d11_gzp_mx">
                    <li>Log in to the lifecycle manager.</li>
                    <li>Use the Designate start playbook against the affected node:
                      <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts designate-start.yml --limit 'DES-CEN'</codeblock></li>
                  </ol>
                  <p>Review the log located at:</p>
                  <codeblock>/var/log/designate/designate-central.log</codeblock></entry>
              </row>
              <row>
                <entry>Process Check</entry>
                <entry>Alarms when the specified process is not running.
                  <codeblock>process_name = designate-api</codeblock>
                </entry>
                <entry>Process crashed.</entry>
                <entry>Restart the process on the affected node using these steps: <ol
                    id="ol_e11_gzp_mx">
                    <li>Log in to the lifecycle manager.</li>
                    <li>Use the Designate start playbook against the affected node:
                      <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts designate-start.yml --limit 'DES-API'</codeblock></li>
                  </ol>
                  <p>Review the log located at:</p>
                  <codeblock>/var/log/designate/designate-api.log</codeblock></entry>
              </row>
              <row>
                <entry>Process Check</entry>
                <entry>Alarms when the specified process is not running.
                  <codeblock>process_name = designate-mdns</codeblock>
                </entry>
                <entry>Process crashed.</entry>
                <entry>Restart the process on the affected node using these steps: <ol
                    id="ol_f11_gzp_mx">
                    <li>Log in to the lifecycle manager.</li>
                    <li>Use the Designate start playbook against the affected node:
                      <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts designate-start.yml --limit 'DES-MDN'</codeblock></li>
                  </ol>
                  <p>Review the log located at:</p>
                  <codeblock>/var/log/designate/designate-mdns.log</codeblock></entry>
              </row>
              <row>
                <entry>HTTP Status</entry>
                <entry>component = designate-api<p>This alarm will also have the
                      <codeph>api_endpoint</codeph> and <codeph>monitored_host_types</codeph>
                    dimensions defined. The likely cause and mitigation steps are the same for
                    both.</p></entry>
                <entry>The API is unresponsive.</entry>
                <entry>Restart the process on the affected node using these steps: <ol
                    id="ol_g11_gzp_mx">
                    <li>Log in to the lifecycle manager.</li>
                    <li>Use the Designate start playbook against the affected node:
                      <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts designate-start.yml --limit 'DES-API,DES-CEN'</codeblock></li>
                  </ol>
                  <p>Review the logs located at:</p>
                  <codeblock>/var/log/designate/designate-api.log
/var/log/designate/designate-central.log</codeblock></entry>
              </row>
              <row>
                <entry>Service Directory Log Size</entry>
                <entry>Service log directory consuming more disk than its quota.</entry>
                <entry>This could be due to a service set to <codeph>DEBUG</codeph> instead of
                    <codeph>INFO</codeph> level. Another reason could be due to a repeating error
                  message filling up the log files. Finally, it could be due to log rotate not
                  configured properly so old log files are not being deleted properly.</entry>
                <entry>Find the service that is consuming too much disk space. Look at the logs. If
                    <codeph>DEBUG</codeph> log entries exist, set the logging level to
                    <codeph>INFO</codeph>. If the logs are repeatedly logging an error message, do
                  what is needed to resolve the error. If old log files exist, configure log rotate
                  to remove them. You could also choose to remove old log files by hand after
                  backing them up if needed.</entry>
              </row>
              <row>
                <entry>powerdns</entry>
                <entry>Process Check</entry>
                <entry>Alarms when the specified process is not running.
                  <codeblock>process_name = pdns_server</codeblock>
                </entry>
                <entry>Process crashed.</entry>
                <entry>Restart the process on the affected node using these steps: <ol
                    id="ol_h11_gzp_mx">
                    <li>Log in to the lifecycle manager.</li>
                    <li>Use the PowerDNS start playbook against the affected node:
                      <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts powerdns-start.yml</codeblock></li>
                  </ol>
                  <p>Review the log located at, querying against <codeph>process =
                      pdns_server</codeph>:</p>
                  <codeblock>/var/log/syslog</codeblock></entry>
              </row>
              <row>
                <entry>bind</entry>
                <entry>Process Check</entry>
                <entry>Alarms when the specified process is not running.
                  <codeblock>process_name = named</codeblock></entry>
                <entry>Process Crashed</entry>
                <entry>Restart the process on the affected node using these steps: <ol
                    id="ol_i11_gzp_mx">
                    <li>Log in to the lifecycle manager.</li>
                    <li>Use the Bind start playbook against the affected node:
                      <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts bind-start.yml</codeblock></li>
                  </ol>
                  <p>Review the log located at, querying against <codeph>process =
                    named</codeph>:</p>
                  <codeblock>/var/log/syslog</codeblock></entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>
    </section>
  </body>
</topic>
