<?xml version="1.0" encoding="UTF-8"?>
<!--Edit status: ready for edit (Nancy)-->
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_qtp_cn3_bt">
  <title><ph conkeyref="HOS-conrefs/product-title"/>Identity Service Notes and Limitations</title>
  <body>
    <!--not tested-->
    <p conkeyref="HOS-conrefs/applies-to"/>
    <section id="notes"> This topic describes limitations of and important notes pertaining to the
      identity service.<title>Notes</title>
      <b>Domains</b>
      <ul>
        <li>Domains can be created and managed by the Horizon web interface, Keystone API and
          OpenStackClient CLI.</li>
        <li>The configuration of external authentication systems requires the creation and usage of
          Domains.</li>
        <li>All configurations are managed by creating and editing specific configuration files. </li>
        <li>End users can authenticate to a particular project and domain via the Horizon web
          interface, Keystone API and OpenStackClient CLI.</li>
        <li>A new Horizon login page that requires a Domain entry is now installed by default.</li>
      </ul>
      <b>Keystone-to-Keystone Federation</b>
      <ul>
        <li>Keystone-to-Keystone (K2K) Federation provides the ability to authenticate once with one
          cloud and then use these credentials to access resources on other federated clouds.</li>
        <li>All configurations are managed by creating and editing specific configuration files.
        </li>
      </ul>
      <b>Multi-Factor Authentication (MFA)</b>
      <ul>
        <li>The Keystone architecture provides support for MFA deployments.</li>
        <li>MFA provides the ability to deploy non-password based authentication; for example: token
          providing hardware and text messages.</li>
      </ul>
      <b>Hierarchical Multitenancy</b>
      <ul>
        <li>Provides the ability to create sub-projects within a Domain-Project hierarchy.</li>
      </ul>
    </section>



    <section id="limitations">
      <title>Limitations</title><b>Authentication with external authentication systems (LDAP, Active
        Directory (AD) or Identity Providers)</b><ul id="ul_u52_jpd_bt">
        <li>No Horizon web portal support currently exists for the creation and management of
          external authentication system configurations.</li>
        <!--  <li>A new Domain Admin API has been included in the Kilo release of OpenStack but is
          currently an "experimental" function and is not recommended for production use until a
          future OpenStack release.</li>-->
      </ul>
      <b>Integration with LDAP services</b>
      <sectiondiv conref="identity_ldap.dita#ldap/ldapLimitations"/></section>
    <section>
      <b>Keystone-to-Keystone federation</b><ul
        conref="keystone_federation.dita#k2kfed/k2klimitations" id="ul_cpz_kn4_4v">
        <li/>
      </ul><ul id="ul_xw2_jpd_bt">
        <li>No Horizon web portal support currently exists for the creation and management of
          federation configurations.</li>
        <li>All end user authentication is available only via the Keystone API and OpenStackClient
          CLI.</li>
        <li>Additional information can be found at <xref
            href="http://docs.openstack.org"
            format="html" scope="external"
            >http://docs.openstack.org/</xref></li>
      </ul>
      <b>WebSSO</b><ul conref="websso.dita#websso/webssoLimitations" id="ul_v4j_5n4_4v">
        <li/>
      </ul>
      <b>Multi-factor authentication (MFA)</b>
      <ul id="ul_az2_jpd_bt">
        <li><keyword keyref="kw-hos"/> MFA support is a custom configuration requiring HPE
          Professional Services support.</li>
        <li>MFA drivers are not included with <keyword keyref="kw-hos"/> and need to be provided by
          a specific MFA vendor.</li>
        <li>Additional information can be found at <xref
            href="http://docs.openstack.org/security-guide/content/identity-authentication-methods.html#identity-authentication-methods-external-authentication-methods"
            format="html" scope="external"
            >http://docs.openstack.org/security-guide/content/identity-authentication-methods.html#identity-authentication-methods-external-authentication-methods</xref></li>
      </ul>
      <b>Hierarchical multitenancy</b>
      <ul id="ul_tbf_jpd_bt">
        <li>This function requires additional support from various OpenStack services to be
          functional. It is a non-core function in <keyword keyref="kw-hos"/> and is not ready for either
          proof of concept or production deployments.</li>
        <li>Additional information can be found at <xref
            href="http://specs.openstack.org/openstack/keystone-specs/specs/juno/hierarchical_multitenancy.html"
            format="html" scope="external"
            >http://specs.openstack.org/openstack/keystone-specs/specs/juno/hierarchical_multitenancy.html</xref>.</li>
      </ul>
      <b>Missing quota information for compute resources</b>
      <p>
        <note>An error message that will appear in the default Horizon page if you are running a
          Swift-only deployment (no Compute service). In this configuration, you will not see any
          quota information for Compute resources and will see the following error message: </note>
      </p>
      <i>The Compute service is not installed or is not configured properly. No information is
        available for Compute resources.</i> This error message is expected as no Compute service is
      configured for this deployment. Please ignore the error message. <b>Performance and token
        creation/validation</b>
      <!-- docs-3431-->
      <p>Keystone in OpenStack Mitaka (on which <keyword keyref="kw-hos-phrase"/> is based) is known
        to have degraded performance in token validation and creation operations compared to the
        previous Liberty release. This is due mainly to the databse schema changes that result in
        many additional database queries per token operation. In <keyword keyref="kw-hos-phrase"/>,
        both token validation and creation operations have been tuned by increasing the number of
        Keystone processes (from 10 - 15), resulting in a large perfomance gain. </p><p>The
        following is the benchmark of the performance that is based on 150 concurrent requests and
        run for 10 minute periods of stable load time. <table frame="all" rowsep="1" colsep="1"
          id="table_azp_jcl_bx">
          <tgroup cols="3">
            <colspec colname="c1" colnum="1" colwidth="1*"/>
            <colspec colname="c2" colnum="2" colwidth="2.42*"/>
            <colspec colname="newCol3" colnum="3" colwidth="2.48*"/>
            <thead>
              <row>
                <entry>Operation </entry>
                <entry>In  <keyword keyref="kw-hos-phrase"/>  (secs/request)</entry>
                <entry>In  <keyword keyref="kw-hos-phrase-30"/> (secs/request)</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>Token Creation </entry>
                <entry>0.86</entry>
                <entry>0.42</entry>
              </row>
              <row>
                <entry>Token Validation</entry>
                <entry>0.47</entry>
                <entry>0.41</entry>
              </row>
            </tbody>
          </tgroup>
        </table></p>
      <p>Considering that token creation operations don't happen as frequently as token validation
        operations, your are likely to experience less of a performance problem regardless of the
        extended time for token creation.</p>
      <b>System cron jobs need setup</b>
      <p id="cron_jobs"> Keystone relies on two cron jobs to periodically clean up expired tokens
        and for token revocation. The following is how the cron jobs appear on the
        system:<codeblock>1 1 * * * /opt/stack/service/keystone/venv/bin/keystone-manage token_flush 
1 1,5,10,15,20 * * * /opt/stack/service/keystone/venv/bin/revocation_cleanup.sh </codeblock>By
        default, the two cron jobs are enabled on controller node 1 only, not on the other two
        nodes. When controller node 1 is down or has failed for any reason, these two cron jobs must
        be manually set up on one of the other two nodes.</p>
      <!-- docs 3828 -->
    </section>
  </body>
</topic>
