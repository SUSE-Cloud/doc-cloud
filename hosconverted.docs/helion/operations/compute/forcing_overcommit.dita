<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_pqr_lyx_yw">
  <title><ph conkeyref="HOS-conrefs/product-title"/>Forcing CPU and RAM Overcommit Settings</title>
  <body>
    <p><keyword keyref="kw-hos"/> supports overcommitting of CPU and RAM resources on compute nodes.
      Overcommitting is a technique of allocating more virtualized CPUs and/or memory than there are
      physical resources.</p>
    <p>The default settings for this are:</p>
    <table frame="all" rowsep="1" colsep="1" id="table_jgd_l2y_yw">
      <tgroup cols="3">
        <colspec colname="c1" colnum="1"/>
        <colspec colname="c2" colnum="2"/>
        <colspec colname="c3" colnum="3"/>
        <thead>
          <row>
            <entry>Setting</entry>
            <entry>Default Value</entry>
            <entry>Description</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>cpu_allocation_ratio</entry>
            <entry>16</entry>
            <entry>Virtual CPU to physical CPU allocation ratio which affects all CPU filters. This
              configuration specifies a global ratio for CoreFilter. For AggregateCoreFilter, it
              will fall back to this configuration value if no per-aggregate setting found.
                <note>This can be set per-compute, or if set to 0.0, the value set on the scheduler
                node(s) will be used and defaulted to 16.0.</note></entry>
          </row>
          <row>
            <entry>ram_allocation_ratio</entry>
            <entry>1.0</entry>
            <entry>Virtual ram to physical ram allocation ratio which affects all ram filters. This
              configuration specifies a global ratio for RamFilter. For AggregateRamFilter, it will
              fall back to this configuration value if no per-aggregate setting found. <note>This
                can be set per-compute, or if set to 0.0, the value set on the scheduler node(s)
                will be used and defaulted to 1.5.</note></entry>
          </row>
          <row>
            <entry>disk_allocation_ratio</entry>
            <entry>1.0</entry>
            <entry>This is the virtual disk to physical disk allocation ratio used by the
              disk_filter.py script to determine if a host has sufficient disk space to fit a
              requested instance. A ratio greater than 1.0 will result in over-subscription of the
              available physical disk, which can be useful for more efficiently packing instances
              created with images that do not use the entire virtual disk,such as sparse or
              compressed images. It can be set to a value between 0.0 and 1.0 in order to preserve a
              percentage of the disk for uses other than instances. <note>This can be set
                per-compute, or if set to 0.0, the value set on the scheduler node(s) will be used
                and defaulted to 1.0.</note></entry>
          </row>
        </tbody>
      </tgroup>
    </table>

    <section id="change">
      <title>Changing the overcommit ratios for your entire environment</title>
      <p>If you wish to change the CPU and/or RAM overcommit ratio settings for your entire
        environment then you can do so via your lifecycle manager with these steps.</p>
      <ol>
        <li>Log in to the lifecycle manager.</li>
        <li>Edit the Nova configuration settings located in this file:
          <codeblock>~/helion/my_cloud/config/nova/nova.conf.j2</codeblock></li>
        <li>Add or edit the following lines to specify the ratios you wish to use:
          <codeblock>cpu_allocation_ratio = 16
ram_allocation_ratio = 1.0</codeblock></li>
        <li>Commit your configuration to the <xref href="../../installation/using_git.dita">local
            git repo</xref>, as follows:
          <codeblock>cd ~/helion/hos/ansible
git add -A
git commit -m "setting Nova overcommit settings"</codeblock></li>
        <li>Run the configuration processor:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
        <li>Update your deployment directory:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
        <li>Run the Nova reconfigure playbook:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts nova-reconfigure.yml</codeblock></li>
      </ol>
    </section>
  </body>
</topic>
