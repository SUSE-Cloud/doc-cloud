<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="crt_deployment">
  <title>Deployment</title>
  <body>
    <section id="deployment">
      <p>Monasca Transform and Spark will be deployed on the same control plane 
        nodes along with Logging and Monitoring Service (Monasca).</p>
      <p><b>Security Consideration during deployment of Monasca Transform and Spark</b></p>
      <p> The Helion Monitoring system connects internally to the Kafka and Spark technologies
        without authentication. If you choose to deploy Monitoring, configure it to use only trusted
        networks such as the Management network, as illustrated on the network diagrams below for
        Entry Scale Deployment and Mid Scale Deployment.</p>
        
      <p><b>Entry Scale Deployment</b></p>
      <p> In Entry Scale Deployment Monasca Transform and Spark will be deployed on Shared Control
        Plane along with other Openstack Services along with Monitoring and Logging <image
          href="../../../media/entryScale/Entry-ScaleAllNetworks.png" id="entry_scale_deployment"/></p>
      
      <p><b>Mid scale Deployment</b></p>
      <p>
        In a Mid Scale Deployment Monasca Transform and Spark will be deployed 
        on dedicated  Metering Monitoring and Logging (MML) control plane along 
        with other data processing intensive services like Metering, Monitoring 
        and Logging

        <image href="../../../media/networkImages/Mid-Scale-AllNetworks.png" id="midscale"/></p>
      
      <p><b>Multi Control Plane Deployment</b></p>
      <p>
        In a Multi Region Control Plane Deployment Monasca Transform and Spark 
        will be deployed on the Shared Control plane along with rest of Monasca 
        Components.
      </p>
      
      <p><b>Start, Stop and Status for Monasca Transform and Spark processes</b></p>
      <p>
        The service management methods for monasca-transform and spark follow the 
        convention for services in the HOS platform.  Executing from the deployer 
        node the commands are as follows:
      </p>
      
      <p><b>Status</b></p>
      <p>
        <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts spark-status.yml
ansible-playbook -i hosts/verb_hosts monasca-transform-status.yml</codeblock>
      </p>
      
      <p><b>Start</b></p>
      <p>
        As monasca-transform depends on spark for the processing of the metrics 
        spark will need to be started before monasca-transform.
        <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts spark-start.yml
ansible-playbook -i hosts/verb_hosts monasca-transform-start.yml</codeblock>
      </p>
      
      <p><b>Stop</b></p>
      <p>
        As a precaution it is wise to stop the monasca-transform service before 
        taking spark down.  Interruption to the spark service altogether while 
        monasca-transform is still running can result in a monasca-transform 
        process that is unresponsive and needing to be tidied up.
        <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts monasca-transform-stop.yml
ansible-playbook -i hosts/verb_hosts spark-stop.yml</codeblock>
      </p>
    </section>
  </body>
</topic>
