<?xml version="1.0"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [ <!ENTITY % entities SYSTEM "entities.xml"> %entities; ]><section id="swiftrings_recovery">
   <title>
      <phrase/>Swift Rings Recovery</title>
    <para>To recover your Swift rings in the event of a disaster, follow the procedure that applies to
      your situation: either recover the rings from one Swift node if possible, or use the SSH
      backup that you have set up.</para>
    
      <bridgehead renderas="sect4">Restore from the Swift deployment backup</bridgehead>
      <para>See <xref linkend="topic_gbz_13t_mt"/>.</para>
   
    
      <bridgehead renderas="sect4">Restore from the SSH Freezer backup</bridgehead>
      <para>In the very specific use case where you lost all system disks of all object nodes, and
        Swift proxy nodes are corrupted, you can recover the rings because a copy of the Swift rings
        is stored in Freezer. This means that Swift data is still there (the disks used by Swift
        needs to be still accessible).</para>
      <para>Recover the rings with these steps.</para>
      <orderedlist>
        <listitem>
            <para>Log in to a node that has the freezer-agent installed.</para>
         </listitem>
        <listitem>
            <para>Become root: </para>
            <screen>sudo su</screen>
         </listitem>
        <listitem>
            <para>Create the temporary directory to restore your files to:
          </para>
            <screen>mkdir /tmp/swift_builder_dir_restore/</screen>
         </listitem>
        <listitem>
            <para>Create a restore file with the following content:
          </para>
            <screen>cat &lt;&lt; EOF &gt; ./restore_config.ini
[default]
action = restore
storage = ssh
compression = bzip2
restore_abs_path = /tmp/swift_builder_dir_restore/
ssh_key = /etc/freezer/ssh_key
ssh_host = &lt;freezer_ssh_host&gt;
ssh_port = &lt;freezer_ssh_port&gt;
ssh_user name = &lt;freezer_ssh_user name&gt;
container = &lt;freezer_ssh_base_rid&gt;/freezer_swift_backup_name = freezer_swift_builder_backup
hostname = &lt;hostname of the old first Swift-Proxy (SWF-PRX[0])&gt;
EOF</screen>
         </listitem>
        <listitem>
            <para>Edit the file and repave all &lt;tags&gt; with the right information.
          </para>
            <screen>vim ./restore_config.ini</screen>
            <para>You will also need to put the SSH key used
          to do the backups in /etc/freezer/ssh_key and remember to set the right permissions:
          600.</para>
         </listitem>
        <listitem>
            <para>Execute the restore
          job:</para>
            <screen>freezer-agent --config ./restore_config.ini</screen>
            <para>You now have the
          Swift rings in <literal>/tmp/swift_builder_dir_restore/</literal>
            </para>
         </listitem>
        <listitem>
            <para>If the SWF-PRX[0] is already deployed, copy the contents of the restored directory
            (<literal>/tmp/swift_builder_dir_restore/</literal>) to
            <literal>/etc/swiftlm/builder_dir/</literal> on the SWF-PRX[0] Then from the lifecycle
          manager run:
          </para>
            <screen>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts swift-reconfigure.yml</screen>
         </listitem>
        <listitem>
            <para>If the SWF-ACC[0] is<emphasis role="bold"> not </emphasis>deployed, from the lifecycle manager run these
          playbooks:</para>
            <screen>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts guard-deployment.yml
ansible-playbook -i hosts/verb_hosts osconfig-run.yml --limit &lt;SWF-ACC[0]-hostname&gt;</screen>
         </listitem>
        <listitem>
            <para>Copy the contents of the restored directory
            (<literal>/tmp/swift_builder_dir_restore/</literal>) to
            <literal>/etc/swiftlm/builder_dir/</literal> on the SWF-ACC[0] You will have to create the
          directories : <literal>/etc/swiftlm/builder_dir/</literal>
            </para>
         </listitem>
        <listitem>
            <para>From the lifecycle manager, run the <literal>hlm-deploy.yml</literal> playbook:
          </para>
            <screen>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts hlm-deploy.yml</screen>
         </listitem>
      </orderedlist>
   
  </section>
