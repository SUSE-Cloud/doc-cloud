<?xml version="1.0" encoding="UTF-8"?>
<!--Edit status: not edited-->
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="config_ceph_rgw">
  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring the Ceph RADOS Gateway
    Service</title>
  <abstract><shortdesc outputclass="hdphidden">Configuration steps for your Ceph RADOS
      Gateway.</shortdesc>This page describes how to configure your Ceph RADOS Gateway. for the
    Helion Entry-scale with Ceph cloud model. It consists of the following steps:</abstract>
  <body>
    <!--not tested-->
    <p conkeyref="HOS-conrefs/applies-to"/>



    <section id="notes">
      <title outputclass="headerH">Notes</title>
      <sectiondiv outputclass="expandall">
        <p>This page describes how to:</p>
        <ul>
          <li><xref href="#config_ceph_rgw/users-api" format="dita"/></li>
          <li><xref href="#config_ceph_rgw/users" format="dita"/></li>
          <li><xref href="#config_ceph_rgw/subuser" format="dita"/></li>
        </ul>
      </sectiondiv>
    </section>
    <section>
      <title outputclass="headerH">Prerequisites</title>
      <sectiondiv outputclass="expandall">
        <p>The <keyword keyref="kw-hos-tm"/> Entry-scale KVM Ceph input model cloud <xref
            href="configure_ceph.dita#config_ceph">must be fully deployed</xref>.</p>
      </sectiondiv>
    </section>

    <section id="expandCollapse">
      <sectiondiv outputclass="expandall">Expand All Sections</sectiondiv>
      <sectiondiv outputclass="collapseall">Collapse All Sections</sectiondiv>
    </section>

    <section id="users-api">
      <title outputclass="headerH">Configure users to access RADOS gateway using Swift and
        S3-compatible API</title>
      <sectiondiv outputclass="insideSection">
        <p>Configuring the RADOS Gateway with OpenStack Keystone, sets up the gateway to accept
          Keystone as the users authority. A user that Keystone authorizes to access the gateway
          will also be automatically created for the Ceph RADOS Gateway (if one doesn't already
          exist). A token that Keystone validates will be considered as valid by the gateway. A Ceph
          Object Gateway user is mapped into a Keystone tenant. The RADOS Gateway service offers two
          types of users:</p>
        <ul id="ul_iyy_dz2_sv">
          <li>RADOS Gateway users that can access objects using both S3 and Swift API</li>
          <li>Keystone users that can access objects ONLY using Swift API</li>
        </ul>
        <p>When the RADOS Gateway is deployed in the Entry Scale KVM Ceph model, by default, the
          RADOS Gateway exists alongside OpenStack Swift (since the Keystone service type for RADOS
          Gateway defaults to <codeph>ceph-object-store</codeph>). In this mode, the Horizon
          interface works only with Swift for all the Object Store operations.</p><p>A RADOS Gateway
          native user can be configured to access both the Swift and S3 APIs provided by Ceph RADOS
          Gateway. To achieve this, create a RADOS Gateway user (only has S3 access) and a subuser
          to get Swift API access. The following sections describe how to perform these tasks.
          </p><b>Creating a new user and subuser</b><p>You can create a new user for interacting
          with Ceph Object Gateway services.</p><ul id="ul_qnm_t1f_sv">
          <li><b>User:</b> A <codeph>user</codeph> can access the S3 interface.</li>
          <li><b>Subuser:</b> A <codeph>subuser</codeph> can access the Swift interface and is
            associated to a user . A subuser needs a Swift access key. </li>
        </ul><p><note>Creating a user also creates an access_key and secret_key entry for use with
            any S3 API-compatible client.</note>To create a user and subuser:<ol id="ol_jqf_1bf_sv">
            <li>Log into a RADOS Gateway server.</li>
            <li>Execute the following command to create a user:
                <codeblock>sudo radosgw-admin user create --uid="{username}" --display-name="{Display Name}" --email="{email}"</codeblock><p>For
                example:<codeblock>sudo radosgw-admin user create --uid=rgwuser --display-name="RadosGatewayUser" --email="rgwuser@test.com"</codeblock></p></li>
            <li>Execute the following command to create sub-user for Swift and generate secret
                key:<codeblock>sudo radosgw-admin subuser create --uid={username} --subuser={username}:{subusername} --access=full --key-type=swift --gen-secret</codeblock><p>For
                example:<codeblock>sudo radosgw-admin subuser create --uid="rgwuser" --subuser="rgwuser:rgwswiftuser" --access=full --key-type=swift --gen-secret</codeblock></p><note>A
                Ceph Object Gateway <codeph>user:subuser</codeph> tuple maps to the
                  <codeph>tenant:user</codeph> tuple expected by Swift. </note></li>
          </ol></p></sectiondiv>
    </section>
    <section id="users">
      <title outputclass="headerH">Configure a Keystone user to access the RADOS Gateway
        functionality using Swift API </title>
      <sectiondiv outputclass="insideSection">
        <p>The OpenStack Swift command line interface can be tuned to communicate with both
          OpenStack Swift and RADOS Gateway.</p>
        <ol id="ol_jkf_2cf_sv">
          <li>Execute the following command to interact with Swift (default):
            <codeblock>export OS_SERVICE_TYPE=object-store</codeblock></li>
          <li>Execute the following command to interact with RADOS Gateway:
            <codeblock>export OS_SERVICE_TYPE=ceph-object-store</codeblock> You can use Swift CLI to
            perform object operations on Ceph.</li>
        </ol>
      </sectiondiv>
    </section>
    <section id="subuser">
      <title outputclass="headerH">Configure a Keystone user to access the RADOS Gateway
        functionality using S3</title>
      <sectiondiv outputclass="insideSection"><p>By default, a Keystone user can access the RADOS
          Gateway functionality using the Swift API. In order to configure a Keystone user for S3
          API access the RADOS Gateway, perform the following tasks:</p><p>The details to achieve
          each of the following is explained in the sections below.</p><ol id="ol_qhv_xls_sv">
          <li>Configure the RADOS Gateway to use Keystone authentication for S3: <ol
              id="ol_lhg_1ms_sv">
              <li>Login to lifecycle manager node. </li>
              <li>Edit the <codeph>~/helion/my_cloud/config/ceph/settings.yml</codeph> file to add
                the following section. The following example assumes the RADOS Gateway user name is
                default: <codeph>gateway</codeph>:
                <codeblock>extra: 
  client.radosgw.gateway: 
    rgw_s3_auth_use_keystone: true</codeblock></li>
              <li>Commit your configuration changes:
                <codeblock>cd ~/helion/hos/ansible 
git add -A 
git commit -m "&lt;commit message>"</codeblock></li>
              <li>Execute the ready-deployment playbook:
                <codeblock>cd ~/helion/hos/ansible 
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
              <li>Execute the ceph-reconfigure playbook:
                <codeblock>cd ~/scratch/ansible/next/hos/ansible 
ansible-playbook -i hosts/verb_hosts ceph-reconfigure.yml</codeblock></li>
            </ol></li>
          <li>Update Ceph cluster configuration file on all Rados Gateway nodes. <p>The RADOS
              Gateway uses the Keystone V2 API. You need to update the Keystone URL to use the admin
              port instead of public port using the following steps on each RADOS Gateway node in
              the deployment:</p><ol id="ol_lcj_k4s_sv">
              <li>Login to a RADOS Gateway node. </li>
              <li>Edit the Ceph cluster configuration file:
                <codeblock>cat /etc/ceph/ceph.conf</codeblock></li>
              <li>In the <codeph>radosgw</codeph> section (default:
                  <codeph>client.radosgw.gateway</codeph>) change a the <codeph>rgw keystone url =
                  https://helion-cp1-vip-KEY-API-mgmt:</codeph> port from 5000 to 35357.
                <codeblock>CHANGE: 
rgw keystone url = https://helion-cp1-vip-KEY-API-mgmt:5000 
TO: 
rgw keystone url = https://helion-cp1-vip-KEY-API-mgmt:35357</codeblock></li>
              <li>Restart the <codeph>radosgw</codeph> service so that it reloads the configuration
                changes: <codeblock>sudo service radosgw restart</codeblock><p>
                  <note>The changes made above will be overwritten if you run the
                      <codeph>ceph-deploy.yml</codeph> and <codeph>ceph-reconfigure.yml</codeph>
                    playbooks. Perform these configuration tasks each time either of those playbooks
                    is executed for the RADOS Gateway nodes. </note>
                </p></li>
            </ol></li>
          <li>Create the EC2 credentials. <ol id="ol_qth_qps_sv">
              <li>Login to a controller node and source the admin user credentials:
                <codeblock>source ~/service.osrc</codeblock></li>
              <li>Execute the following commands to generate the EC2 credentials for the OpenStack
                user:
                <codeblock>openstack ec2 credentials create --project &lt;project-name> --user &lt;user-name></codeblock>
                For example, to generate the EC2 credentials for user <b>demo</b> for the project
                  <b>demo</b>:
                <codeblock>openstack ec2 credentials create --project demo --user demo</codeblock></li>
            </ol></li>
        </ol></sectiondiv>
    </section>

    <!-- REMOVED PER REQUEST
    <section id="replace">
      <title outputclass="headerH">Replacing Swift with RADOS Gateway for Cloud Object
        Storage</title>
      <sectiondiv outputclass="insideSection">
        <p>If you do not want the Ceph and Swift object storage solutions in the same cloud, you can
          deploy a cloud with only the Ceph RADOS Gateway.</p>
        <p><b>Deploying Ceph RADOS Gateway as a replacement for OpenStack Swift in new cloud</b></p>
        <p>An <keyword keyref="kw-hos-tm"/> cloud can be deployed with Ceph RADOS Gateway as a
          replacement for OpenStack Swift. The input model needs to be tuned in the following way to
          achieve this. </p>
        <ol id="ol_pzz_w4c_5v">
          <li>Login to the deployer node and remove all the <codeph>swift</codeph> components except
              <codeph>swift-client</codeph> from
              <codeph>~/helion/my_cloud/definition/data/control_plane.yml</codeph> file. Remove the
            following Swift service components:
            <codeblock>swift-ring-builder
swift-proxy 
swift-account
swift-container 
swift-object </codeblock></li>
          <li>Modify the <codeph>rgw_keystone_service_type</codeph> in file
              <codeph>~/helion/my_cloud/config/ceph/settings.yml</codeph> as follows:
            <codeblock>rgw_keystone_service_type: object-store</codeblock></li>
          <li>Commit your configuration
            <codeblock>cd ~/helion/hos/ansible
git add -A 
git commit -m "&lt;commit message>" </codeblock></li>
          <li>Proceed with the cloud deployment steps from the Config Processor Run step. </li>
        </ol>
        <b>Replace swift with rados gateway in pre-deployed Helion cloud </b><p>To replace OpenStack
          Swift with Ceph RADOS Gateway in a running HOS cloud, perform the steps listed below:
          </p><ol id="ol_qmq_sgf_sv">
          <li>Login to controller node. </li>
          <li>Identify the Swift and Ceph service IDs using following commands. Look for Name
              <codeph>swift</codeph> and <codeph>ceph</codeph> and note the associated ID for eac:
            <codeblock>source ~/keystone.osrc 
openstack service list </codeblock></li>
          <li>Delete the Swift and Ceph services using the service ID identified in earlier step:
            <codeblock>source ~/keystone.osrc
openstack service delete &lt;swift-service-id> 
openstack service delete &lt;ceph-service-id></codeblock></li>
          <li>Update the service type for Ceph service, by logging in to the deployer node and
            modifying the <codeph>rgw_keystone_service_type</codeph> in file
              <codeph>~/helion/my_cloud/config/ceph/settings.yml</codeph> as follows:
            <codeblock>rgw_keystone_service_type: object-store</codeblock></li>
          <li>Commit your configuration
            <codeblock>cd ~/helion/hos/ansible
git add -A
git commit -m "&lt;commit message>" </codeblock></li>
          <li>Execute the ready-deployment playbook:
            <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml </codeblock></li>
          <li>Execute the ceph-reconfigure playbook:
            <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts ceph-reconfigure.yml</codeblock></li>
          <li>Execute the <codeph>swift-stop playbook</codeph> to stop the Swift service:
                <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts swift-stop.yml </codeblock><note><ul
                id="ul_wng_jhf_sv">
                <li>The above process does not migrate the existing objects in the Swift store to
                  the Ceph Object Store. So, existing objects will not be available after migrating
                  a running cluster to Ceph Object Store.</li>
                <li>The Swift services should be manually uninstalled and its data should be deleted
                  from the node(s), otherwise services like Monasca will report failure for Swift
                  services, logging services will have logs of Swift services, etc.</li>
              </ul></note></li>
        </ol>
      </sectiondiv>
    </section>
    -->
    <section id="rgw_verify">
      <title outputclass="headerH">Verify RADOS Gateway access using the Swift API with the Keystone
        user</title>
      <sectiondiv outputclass="insideSection">
        <p>To make sure that a Keystone user can access the RADOS Gateway using Swift, perform the
          following steps:<ol id="ol_mtr_fwt_vv">
            <li>Login to a controller node.</li>
            <li>Source the service.osrc file:<codeblock>source ~/service.osrc</codeblock></li>
            <li>Execute the following command to generate a list of the containers associated with
              the user:<codeblock>swift --os-service-type ceph-object-store list</codeblock>If the
              containers are listed, indicates the RADOS Gateway is accessible.</li>
          </ol></p>
      </sectiondiv>
    </section>
  </body>
</topic>
