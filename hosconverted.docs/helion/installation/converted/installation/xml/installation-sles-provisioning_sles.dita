<?xml version="1.0"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [ <!ENTITY % entities SYSTEM "entities.xml"> %entities; ]><section id="provisioning_sles">
   <title>
      <phrase/>Provisioning SLES Yourself</title>
        
        
        
      <bridgehead renderas="sect4">Introduction</bridgehead>
      <para>This article outlines the steps needed to manually provision a SLES node so that 
                it can be added to a new or existing <phrase/> cloud.</para>

   
        
        
      <bridgehead renderas="sect4">Configure Lifecycle Manager to Enable SLES</bridgehead>
      <itemizedlist>
                    <listitem>
               <para>Take note of the lifecycle manager's IP address. It will be used below
                        during <ulink url="#provisioning_sles/add_zypper"/>.</para>
            </listitem>
                    <listitem>
               <para>Mount or copy the contents of SLE-12-SP2-Server-DVD-x86_64-GM-DVD1.iso to <literal>/opt/hlm_packager/hlm/sles12/zypper/OS/</literal></para>
            </listitem>
                    <listitem>
               <para>Mount or copy the contents of SLE-12-SP2-SDK-DVD-x86_64-GM-DVD1.iso to <literal>/opt/hlm_packager/hlm/sles12/zypper/SDK/</literal></para>
            </listitem>
                </itemizedlist>
<note>
            <para>If you choose to mount an ISO, we recommend creating an /etc/fstab entry to ensure the ISO is mounted after a reboot.</para>
         </note>

   
        
        
      <bridgehead renderas="sect4">Install SLES 12 SP2</bridgehead>
      <para>Install SLES 12 SP2 using the standard iso
                (SLE-12-SP2-Server-DVD-x86_64-GM-DVD1.iso)</para>

   
        
        
      <bridgehead renderas="sect4">Assign a static IP</bridgehead>
      <orderedlist>
                <listitem>
            <para> Use the <literal>ip addr</literal> command to find out what network devices are
                    on your system:
                    </para>

            <screen>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host
       valid_lft forever preferred_lft forever
2: <emphasis role="bold">eno1</emphasis>: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP qlen 1000
    link/ether <emphasis role="bold">f0:92:1c:05:89:70</emphasis> brd ff:ff:ff:ff:ff:ff
    inet 10.13.111.178/26 brd 10.13.111.191 scope global eno1
       valid_lft forever preferred_lft forever
    inet6 fe80::f292:1cff:fe05:8970/64 scope link
       valid_lft forever preferred_lft forever
3: eno2: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP qlen 1000
    link/ether f0:92:1c:05:89:74 brd ff:ff:ff:ff:ff:ff</screen>
         </listitem>
                
                <listitem>
            <para>Identify the one that matches the MAC address of your server and edit the
                    corresponding config file in <literal>/etc/sysconfig/network-scripts</literal>.
                    </para>

            <screen>vi /etc/sysconfig/network-scripts/<emphasis role="bold">ifcfg-eno1</emphasis> 
            </screen>
         </listitem>
                
                <listitem>
            <para>Edit the <literal>IPADDR</literal> and <literal>NETMASK</literal> values to match
                    your environment. Note that the <literal>IPADDR</literal> is used in the
                    corresponding stanza in <literal>servers.yml</literal>. You may also need to set
                        <literal>BOOTPROTO</literal> to <literal>none</literal>.
                    </para>

            <screen>TYPE=Ethernet
<emphasis role="bold">BOOTPROTO=none</emphasis>
DEFROUTE=yes
PEERDNS=yes
PEERROUTES=yes
IPV4_FAILURE_FATAL=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_PEERDNS=yes
IPV6_PEERROUTES=yes
IPV6_FAILURE_FATAL=no
NAME=eno1
UUID=36060f7a-12da-469b-a1da-ee730a3b1d7c
DEVICE=eno1
ONBOOT=yes
<emphasis role="bold">NETMASK=255.255.255.192</emphasis>
               <emphasis role="bold">IPADDR=10.13.111.14</emphasis>
            </screen>
         </listitem>
                
                <listitem>
            <para>[OPTIONAL] Reboot your SLES node and ensure that it can be accessed from the
                    lifecycle manager.</para>

         </listitem>
                
            </orderedlist>
   
        
        
      <bridgehead renderas="sect4">Add <literal>stack</literal> user and home directory</bridgehead>
      <screen>useradd -m stack
passwd stack</screen>
   
        
        
        
      <bridgehead renderas="sect4">Allow user <literal>stack</literal> to <literal>sudo</literal> without password</bridgehead>
      <para>Setting up sudo on SLES is covered in the SUSE documentation, <ulink url="https://www.suse.com/documentation/sles-12/book_sle_admin/data/sec_sudo_conf.html">Configuring sudo</ulink>. </para>

      <para>The recommendation is to create user specific sudo config files under /etc/sudoers.d,
                therefore creating an /etc/sudoers.d/stack config file with the following content
                will allow sudo commands without the requirement of a password.
                </para>
<screen>stack ALL=(ALL) NOPASSWD:ALL</screen>

   
        
        
        
        
        
        
        
      <bridgehead renderas="sect4">Add zypper repository</bridgehead>
      <para>Using the ISO-based repositories created above, add the zypper repositories.</para>

      <para>Follow these steps. Update the value of deployer_ip as necessary.
                </para>
<screen>deployer_ip=192.168.10.254
zypper addrepo --no-gpgcheck --refresh http://$deployer_ip:79/hlm/sles12/zypper/OS SLES-OS
zypper addrepo --no-gpgcheck --refresh http://$deployer_ip:79/hlm/sles12/zypper/SDK SLES-SDK</screen>

      <para>To verify that the repositories have been added, run:
                </para>
<screen>zypper repos --detail</screen>

      <para>
                You can find more information on Using Zypper in the SLES 12 Admin guide: <ulink url="https://www.suse.com/documentation/sles-12/book_sle_admin/data/sec_zypper.html"/></para>

      
   
        
        
        
        
        
        
      <bridgehead renderas="sect4">Add Required Packages</bridgehead>
      <para>As documented in the  section of , you will need to add some
                extra packages that are required.
                
                <phrase>Ensure that <literal>openssh-server</literal>,
                    <literal>python</literal>, <!--<codeph>python-apt</codeph>,--> and <literal>rsync</literal> are
                    installed.</phrase></para>

   
 
 
        
        
      <bridgehead renderas="sect4">Set up passwordless SSH access</bridgehead>
      <para>Once you have started your installation using the lifecycle manager, or if you are
                adding a SLES node to an existing cloud, you need to copy the lifecycle manager
                public key to the SLES node. One way of doing this is to copy the
                    <literal>/home/stack/.ssh/authorized_keys</literal> from another node in the cloud
                to the same location on the SLES node. If you are installing a new cloud, this file
                will be available on the nodes after running the <literal>bm-reimage.yml</literal>
                playbook. </para>
<important>
            <para> Ensure that there is global read access to the
                    file <literal>/home/stack/.ssh/authorized_keys</literal>. </para>
         </important>

      <para>Now test passwordless ssh from the deployer and check your ability to remotely
                execute sudo commands:
                </para>
<screen>ssh  stack@&lt;&lt;ip of sles node&gt;&gt; "sudo tail -5 /var/log/messages"</screen>

   
                

                

            

    </section>
