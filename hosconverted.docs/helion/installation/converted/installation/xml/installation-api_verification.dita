<?xml version="1.0"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [ <!ENTITY % entities SYSTEM "entities.xml"> %entities; ]><!--Edit status: not edited-->
<section id="api_verification">
   <title>
      <phrase/>API Verification</title>

    
    <para><phrase/> provides a tool, Tempest, that you can use to verify that
        your cloud deployment completed successfully:</para>

   <itemizedlist>
        <listitem>
         <para><ulink url="#api_verification/prereqs">Prerequisites</ulink></para>

      </listitem>
        <listitem>
         <para><ulink url="#api_verification/tempest">Tempest Integration Tests</ulink></para>

         <itemizedlist>
            <listitem>
               <para><ulink url="#api_verification/running">Running the Tests</ulink></para>

            </listitem>
            <listitem>
               <para><ulink url="#api_verification/results">Viewing Test Results</ulink></para>

            </listitem>
            <listitem>
               <para><ulink url="#api_verification/custom">Customizing the Test Run</ulink></para>

            </listitem>
          </itemizedlist>
      </listitem>
        <listitem/>
        <listitem/>
      </itemizedlist>

    
      <bridgehead renderas="sect4">Prerequisites</bridgehead>
      <para>The verification tests rely on you having an external network setup and a cloud image in
        your image (Glance) repository. Run the following playbook to configure your cloud: </para>

      <screen>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts hlm-cloud-configure.yml</screen>
   

    
      <bridgehead renderas="sect4">Tempest Integration Tests</bridgehead>
      <para>Tempest is a set of integration tests for OpenStack API validation, scenarios, and other
        specific tests to be run against a live OpenStack cluster. 
      
      In <phrase/>,  Tempest has been modelled as a service and this gives you the ability to 
            locate Tempest anywhere in the cloud. It is recommended that you install Tempest on your lifecycle manager node
          - that is where it resides by default in a new installation.
      </para>

      <para>A version of the upstream <ulink url="http://docs.openstack.org/developer/tempest/">Tempest</ulink> integration tests is pre-deployed on the
          <phrase/> lifecycle manager node. For details on what Tempest is testing,
        you can check the contents of this file on your lifecycle
        manager:</para>
<screen>/opt/stack/tempest/run_filters/ci.txt</screen>

      <para>You can use these embedded tests to verify if the deployed cloud is functional.</para>

      <para>For more information on running Tempest tests, see <ulink url="https://git.openstack.org/cgit/openstack/tempest/tree/README.rst">Tempest - The OpenStack Integration Test Suite</ulink>. </para>
<important>
            <para>Running these tests requires access to the deployed cloud's identity
          admin credentials</para>
         </important>

      <para>Tempest creates and deletes test accounts and test resources for test purposes.</para>

      <para>In certain cases Tempest might fail to clean-up some of test resources after a test is
        complete, for example in case of failed tests.</para>

   
    
      <bridgehead renderas="sect4">Running the Tests</bridgehead>
      <para>To run the default set of Tempest tests:</para>

      <orderedlist>
        <listitem>
            <para>Log in to the lifecycle manager.</para>

         </listitem>
        <listitem>
            <para>Ensure you can access your cloud:
          </para>

            <screen>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts cloud-client-setup.yml
source /etc/environment</screen>
         </listitem>
        <listitem>
            <para>Run the tests:
          </para>

            <screen>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts tempest-run.yml</screen>
         </listitem>
      </orderedlist>
      <para>Optionally, you can <ulink url="#api_verification/custom" type="section">customize Tempest
          to run specific tests</ulink>.</para>

   
    
    
      <bridgehead renderas="sect4">Viewing Test Results</bridgehead>
      <para>Tempest is deployed under <literal>/opt/stack/tempest</literal>. Test results are written in
        a log file in the following directory:</para>

      <screen>/opt/stack/tempest/logs</screen>
      <para>A detailed log file is written to:
        </para>
<screen>/opt/stack/tempest/tempest.log</screen>

      <para>The results are also stored in the <literal>testrepository</literal> database.</para>

      <para>To access the results after the run:</para>

      <orderedlist>
        <listitem>
            <para>Log in to the lifecycle manager.</para>

         </listitem>
        <listitem>
            <para>Change to the <literal>tempest</literal> directory and list the test results:</para>

            <screen>cd /opt/stack/tempest
./venv/bin/testr last</screen>
         </listitem>
      </orderedlist>
      <important>
         <para>If you encounter an error saying "local variable 'run_subunit_content'
        referenced before assignment", you may need to log in as the <literal>tempest</literal> user
        to run this command. This is due to a known issue as reported <ulink url="https://bugs.launchpad.net/testrepository/+bug/1348970">here</ulink>.</para>

      </important>
      <para>See <ulink url="https://testrepository.readthedocs.org/en/latest/">Test Repository Users Manual</ulink> for more details on how to manage the
        test result repository.</para>

   
    
    
    
    
      <bridgehead renderas="sect4">Customizing the Test Run</bridgehead>
      <para>There are several ways available to customize which tests will be executed.</para>

      <itemizedlist>
          <!--   <li>s
            <xref type="section" href="#tempest/service">Run Tests for a Specific Service</xref>
          </li> -->
          <listitem>
               <para><ulink url="#api_verification/services" type="section">Run Tests for Specific Services
              and Exclude Specific Features</ulink></para>
            </listitem>
            <listitem>
               <para><ulink url="#api_verification/list" type="section">Run Tests Matching a Series of White
              and Blacklists</ulink></para>
            </listitem>
        </itemizedlist>

   
    
    
      <bridgehead renderas="sect4">Run Tests for Specific Services and Exclude Specific
        Features</bridgehead>
      <para>Tempest allows you to test specific services and features using the
          <literal>tempest.conf</literal> configuration file.</para>

      <para>A working configuration file with inline documentation is deployed under
          <literal>/opt/stack/tempest/etc/</literal>.</para>

      <para>To use this, follow these steps:</para>

      <orderedlist>
        <listitem>
            <para>Log in to the lifecycle manager.</para>

         </listitem>
        <listitem>
            <para>Edit the <literal>/opt/stack/tempest/configs/tempest_region1.conf</literal> file.</para>

         </listitem>
        <listitem>
            <para>To test specific service, edit the <literal>[service_available]</literal> section and
          clear the comment character <literal>#</literal> and set a line to <literal>true</literal> to
          test that service or <literal>false</literal> to not test that service.
          </para>

            <screen>cinder = true
neutron = false</screen>
         </listitem>
        <listitem>
            <para>To test specific features, edit any of the <literal>*_feature_enabled</literal> sections
            to enable or disable tests on specific features of a service.
          </para>

            <screen>[volume-feature-enabled]
[compute-feature-enabled]
[identity-feature-enabled]
[image-feature-enabled]
[network-feature-enabled]
[object-storage-feature-enabled]</screen>
            <screen>#Is the v2 identity API enabled (boolean value)
api_v2 = true
#Is the v3 identity API enabled (boolean value)
api_v3 = false</screen>
         </listitem>
        <listitem>
            <para>Then run tests normally</para>

         </listitem>
      </orderedlist>
   
    
      <bridgehead renderas="sect4">Run Tests Matching a Series of White and Blacklists</bridgehead>
      <para>You can run tests against specific scenarios by editing or creating a run filter file.</para>

      <para>Run filter files are deployed under <literal>/opt/stack/tempest/run_filters</literal>.</para>

      <para>Use run filters to whitelist or blacklist specific tests or groups of tests:</para>

      <itemizedlist>
        <listitem>
            <para>lines starting with # or empty are ignored</para>

         </listitem>
        <listitem>
            <para>lines starting with <literal>+</literal> are whitelisted</para>

         </listitem>
        <listitem>
            <para>lines starting with <literal>-</literal> are blacklisted</para>

         </listitem>
        <listitem>
            <para>lines not matching any of the above conditions are blacklisted</para>

         </listitem>
      </itemizedlist>
      <para>If whitelist is empty, all available tests are fed to blacklist. If blacklist is empty, all
        tests from whitelist are returned.</para>

      <para>Whitelist is applied first. The blacklist is executed against the set of tests returned by
        the whitelist.</para>

      <para>To run whitelist and blacklist tests:</para>

      <orderedlist>
        <listitem>
            <para>Log in to the lifecycle manager. </para>

         </listitem>
        <listitem>
            <para>Make sure you can access the cloud:
          </para>

            <screen>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts cloud-client-setup.yml
source /etc/environment</screen>
         </listitem>
        <listitem>
            <para>Run the tests:
          </para>

            <screen>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts tempest-run.yml  -e run_filter &lt;run_filter_name&gt;</screen>
         </listitem>
      </orderedlist>
      <para>Note that the run_filter_name is the name of the run_filter file except for the extension.
        For instance, to run using the filter from the file /opt/stack/tempest/run_filters/ci.txt,
        use the following:</para>

      <screen>ansible-playbook -i hosts/verb_hosts tempest-run.yml -e run_filter=ci</screen>
      <para>Documentation on the format of white and black-lists is available at:
        </para>
<screen>/opt/stack/tempest/tests2skip.py</screen>

      <para>Example:</para>

      <para>The following entries run API tests, exclude tests that are less relevant for deployment
        validation, such as negative, admin, cli and thirdparty (EC2) tests:</para>

      <screen>+tempest\.api\.*
*[Aa]dmin.*
*[Nn]egative.*
- tempest\.cli.*
- tempest\.thirdparty\.*</screen>
   
    
  </section>
