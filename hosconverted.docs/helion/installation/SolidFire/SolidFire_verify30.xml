<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="SolidFire_verify">
  <title>Verify SolidFire Integration</title>
  <body>

    <p>To verify that SolidFire is integrated with <keyword keyref="kw-hos"/>, you can use the
      graphical user interface in Horizon to test that the supported operations can be successfully
      completed. Horizon is an OpenStack project that provides a dashboard to bring together all
      OpenStack projects in one place. By building custom dashboards it is possible to seamlessly
      integrate external components or services with OpenStack.</p>

    <p>To verify SolidFire integration, complete the following checklist:</p>

    <p>
      <table frame="all" rowsep="1" colsep="1" id="table_test_sldfr">
        <tgroup cols="2">
          <colspec colname="c1" colnum="1" colwidth="1*"/>
          <colspec colname="c2" colnum="2" colwidth="19*"/>
          <thead>
            <row>
              <entry>&#9744;</entry>
              <entry>Item</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry/>
              <entry><xref type="section" href="#SolidFire_verify/SF_Cinder_config">Verify the
                  Cinder Configuration File</xref></entry>
            </row>
            <row>
              <entry/>
              <entry><xref type="section" href="#SolidFire_verify/SF_Horizon">Access the Horizon
                  Dashboard</xref></entry>
            </row>
            <row>
              <entry/>
              <entry><xref type="section" href="#SolidFire_verify/SF_TestVol">Verify the SolidFire
                  Integration</xref></entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </p>
    <note type="attention">The following scenarios cannot be tested because it is not supported by
      SolidFire: <ul>
        <li>Create consistency groups</li>
        <li>Delete consistency groups</li>
        <li>Create consistency group snapshot</li>
        <li>List consistency group snapshots</li>
        <li>Delete consistency group snapshots</li>
      </ul>
    </note>

    <section id="SF_Cinder_config">
      <title>Verify the Cinder Configuration File</title>
      <p>To check the Cinder config file:</p>
      <ol>
        <li>Log in to the lifecycle manager.</li>
        <li>In a text editor, open the following file:
          <codeblock>~/helion/my_cloud/config/cinder/cinder.conf.j2</codeblock></li>
        <li>In the file, find the SolidFire iSCSI cluster section and verify it looks similar to the
          sample below. If the section does not exist, create it now.
          <codeblock># SolidFire
[SolidFire_iSCSI]
volume_driver = cinder.volume.drivers.solidfire.SolidFireDriver
san_ip = 10.2.17.252
san_login = openstack
san_password = temp123
sf_emulate_512 = True
volume_backend_name = solidfire
# end solidfire</codeblock></li>
        <li>If the section exists and contains the correct values, close the file. <note
            type="attention">If you had to create the SolidFire section or make changes, you must
            rerun the configuration processor using the following steps: <ol>
              <li>To commit your configuration changes to a local git repository, run:
                <codeblock>cd ~/helion/hos/ansible
git add -A
git commit -m "&lt;Added SolidFire to Cinder Backend Storage&gt;"</codeblock></li>
              <li>To use an ansible playbook to run the configuration processor, run:
                <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
              <li>To use an ansible playbook to create a deployment directory, run:
                <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
              <li>To complete the configuration, run:
                <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts cinder-reconfigure.yml</codeblock></li>
            </ol>
          </note>
        </li>
      </ol>
    </section>
    <lines>
      
    </lines>
    <section id="SF_Horizon">
      <title>Accessing Horizon</title>
      <p>Horizon dashboards provide a web-based user interface to <keyword keyref="kw-hos"/>
        services including Compute, Volume Operations, Networking, and Identity.</p>
      <p>To access a Horizon dashboard, you must know its hostname or IP address. If your
        administrator set a hostname value during the configuration process for your cloud, then
        Horizon will be accessed over port 80 on that hostname. If your administrator did not set a
        hostname value, then you can run a command to determine which IP address to use.</p>
      <p>To log on to a Horizon dashboard, you must also know the username and password. The default
        username for the Administrator user is admin. In order to find the randomized password that
        is created by default you will need to look into a service file on the lifecycle
        manager.</p>
      <p><b>To find the hostname or IP address:</b></p>
      <ol>
        <li>Log on to the lifecycle manager node (deployer node).</li>
        <li>Find and open the following file in a text editor:
          <codeblock>network_groups.yml</codeblock></li>
        <li>To check if your administrator set a hostname, find the following variable:
          <codeblock>external_name</codeblock></li>
        <li>If there is a value for external_name, then Horizon will be accessed over port 80 on
          that hostname. <note type="note">For example: If external_name=mycloud, then use
            <codeblock>mycloud:80</codeblock> to access Horizon.</note></li>
        <li>If there is no value set for external_name, then to find the IP address, run:
          <codeblock>grep HZN-WEB /etc/hosts</codeblock></li>
        <li>Use the output of that command as the virtual IP address to access the Horizon
          dashboard.</li>
      </ol>
      <p><b> To find the password:</b></p>
      <ol>
        <li>Log on to the lifecycle manager node (deployer node).</li>
        <li>To find the password, run: <codeblock>cat ~/service.osrc</codeblock></li>
      </ol>
      <p><b>To access and log on to a Horizon dashboard:</b></p>
      <ol>
        <li>Open a web browser that has both JavaScript and cookies enabled.</li>
        <li>In the address bar, enter the host name or IP address for the dashboard.</li>
        <li> On the <b>Log In</b> page, enter your user name and password and then click <b>Sign
            In</b>.</li>
      </ol>
    </section>
    <lines>
      
    </lines>
    <section id="SF_TestVol">
      <title>Verify SolidFire Integration</title>
      <p>To verify the SolidFire backend is running:</p>
      <ol>
        <li>Ensure you are logged into the Horizon dashboard.</li>
        <li>In the Horizon dashboard, in the menu on the left side, verify you can see the
            <b>Admin</b> option.</li>
        <li>In the menu on the left side, click <b>System</b> and then <b>System
          Information</b>.</li>
        <li>On the System Information screen, at the top, click <b>Block Storage Services</b>.</li>
        <li>On the Block Storage Services screen, verify the Cinder volume for the SolidFire host
          you created is listed.</li>
      </ol>
      <p>Use the following screenshot for reference.</p>
      <p><image href="../../../media/sysinfo.png"/></p>
      <p>To create a new volume in Horizon:</p>
      <ol>
        <li>Ensure you are logged into the Horizon dashboard.</li>
        <li>In the Horizon dashboard, on the left side menu, click <b>Project</b>, and then
            <b>Compute</b>.</li>
        <li>On the left side menu, click <b>Volumes</b>.</li>
        <li>On the Volumes screen, at the top, click the <b>+ Create Volume</b> button.</li>
        <li>On the Create Volume screen, enter the following information and then click <b>Create
            Volume</b>: <ol>
            <li><b>Volume Name</b></li>
            <li><b>Description</b></li>
            <li><b>Type</b>. Volume Types are used to specify a standard Block Storage backed and
              collection of extra specifications for your volumes.</li>
            <li><b>Size (GB)</b>. On the right side of the screen, under Volume Limits you can see
              how much space is available.</li>
            <li><b>Availability Zone</b>. These zones are used to specify logical separation within
              your cloud based on the physical isolation or redundancy you have set up.</li>
          </ol></li>
        <li>On the Block Storage Services screen, verify the Cinder volume for the SolidFire host
          you created is listed.</li>
      </ol>
    </section>

  </body>
</topic>
