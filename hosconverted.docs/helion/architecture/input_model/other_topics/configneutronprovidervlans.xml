<?xml version="1.0" encoding="UTF-8"?>
<!--Edit status: not edited-->
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="configneutronprovidervlans">
    <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring Neutron Provider VLANs</title>
    <body><!--not tested-->
        <p conkeyref="HOS-conrefs/applies-to"/>
        

    <p>Neutron provider VLANs are networks that map directly to an 802.1Q VLAN in the cloud
        providerâ€™s physical network infrastructure. There are four aspects to a provider VLAN
        configuration:</p>
    <ul>
        <li>Network infrastructure configuration (e.g. the top-of-rack switch)</li>
        <li>Server networking configuration (for compute nodes and Neutron network nodes)</li>
        <li>Neutron configuration file settings</li>
        <li>Creation of the corresponding network objects in Neutron</li>
    </ul>
    <p>The physical network infrastructure must be configured to convey the provider VLAN traffic
        as tagged VLANs to the cloud compute nodes and Neutron network nodes. Configuration of the
        physical network infrastructure is outside the scope of the <keyword keyref="kw-hos-phrase"/>
        software.</p>
    <p><keyword keyref="kw-hos-phrase"/> automates the server networking configuration and the Neutron
        configuration based on information in the cloud definition. To configure the system for
        provider VLANs, specify the <codeph>neutron.networks.vlan</codeph> tag with a
        <codeph>provider-physical-network</codeph> attribute on one or more
        <uicontrol>network-groups</uicontrol> as described in the <xref
            keyref="configobj_networktags/neutron.networks.vlan">Network Groups</xref> section. For example (some
        attributes omitted for brevity):</p>
        <codeblock>
  network-groups:

    - name: NET_GROUP_A
      tags:
        - neutron.networks.vlan:
              provider-physical-network: physnet1
        
    - name: NET_GROUP_B
      tags:
        - neutron.networks.vlan:
              provider-physical-network: physnet2</codeblock>
    <p>A <uicontrol>network-group</uicontrol> is associated with a server network interface via an
        <uicontrol>interface-model</uicontrol> as described in the <xref
            keyref="configobj_interfacemodels">Interface Models</xref> section. For example (some
        attributes omitted for brevity):</p>
        <codeblock>
  interface-models:
     - name: INTERFACE_SET_X
       network-interfaces:
        - device:
              name: bond0
          network-groups:
            - NET_GROUP_A
        - device:
              name: hed3
          network-groups:
            - NET_GROUP_B</codeblock>
    <p>A <uicontrol>network-group</uicontrol> used for provider VLANs may contain only a single 
        <keyword keyref="kw-hos"/> <uicontrol>network</uicontrol>, because that VLAN must span all compute
        nodes and any Neutron network nodes/controllers (i.e. it is a single L2 segment). The 
        <keyword keyref="kw-hos"/> <uicontrol>network</uicontrol> must be defined with <codeph>tagged-vlan:
            false</codeph>, otherwise a linux VLAN network interface will be created. For example:</p>
        <codeblock>
  networks:
     - name: NET_A
       tagged-vlan: false
       network-group: NET_GROUP_A
     - name: NET_B
       tagged-vlan: false
       network-group: NET_GROUP_B</codeblock>
    <p>When the cloud is deployed, <keyword keyref="kw-hos-phrase"/> will create the appropriate bridges on
        the servers, and set the appropriate attributes in the Neutron configuration files (e.g.
        bridge_mappings).</p>
    <p>After the cloud has been deployed, create Neutron network objects for each provider VLAN
        using the Neutron CLI:</p>
    <codeblock>neutron net-create --provider:network_type vlan --provider:physical_network physnet1 --provider:segmentation_id 101 mynet101</codeblock>
    <codeblock>neutron net-create --provider:network_type vlan --provider:physical_network physnet2 --provider:segmentation_id 234 mynet234</codeblock>


    </body>
</topic>

