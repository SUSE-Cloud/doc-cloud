<?xml version="1.0" encoding="UTF-8"?>
<!--Edit status: not edited-->
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="concept_networkgroups">
    <title><ph conkeyref="HOS-conrefs/product-title"/>Network Groups</title>
    <body><!--not tested-->
        <p conkeyref="HOS-conrefs/applies-to"/>
        
        

    <p><i>Service endpoints attach to <uicontrol>networks</uicontrol> in a specific
        <uicontrol>network-group</uicontrol>.</i></p>
    <p><i><uicontrol>Network-groups</uicontrol> can define routes to other
        <uicontrol>networks</uicontrol>.</i></p>
    <p><i><uicontrol>Network-groups</uicontrol> encapsulate the configuration for
        <uicontrol>services</uicontrol> via <uicontrol>network-tags</uicontrol></i></p>
    <p>A <uicontrol>network-group</uicontrol> defines the traffic separation model and all of the
        properties that are common to the set of L3 networks that carry each type of traffic. They
        define where services are attached to the network model and the routing within that
        model.</p>
    <p>In terms of <uicontrol>service</uicontrol> connectivity, all that has to be captured in the
        <uicontrol>network-groups</uicontrol> definition is the same service-component names that
        are used when defining <uicontrol>control-planes</uicontrol>. <keyword keyref="kw-hos"/> also
        allows a default attachment to be used to specify "all service-components" that aren't
        explicitly connected to another <uicontrol>network-group</uicontrol>. So, for example, to
        isolate Swift traffic, the swift-account, swift-container, and swift-object service
        components are attached to an "Object" <uicontrol>network-group</uicontrol> and all other
        services are connected to "Management" <uicontrol>network-group</uicontrol> via the default
        relationship.</p>
    <p>The details of how each service connects, such as what port it uses, if it should be behind
        a load balancer, if and how it should be registered in Keystone, and so forth, are defined
        in the service definition files provided by <keyword keyref="kw-hos"/>.</p>
    <p>In any configuration with multiple networks, controlling the routing is a major
        consideration. In <keyword keyref="kw-hos"/>, routing is controlled at the
        <uicontrol>network-group</uicontrol> level. First, all <uicontrol>networks</uicontrol> are
        configured to provide the route to any other <uicontrol>networks</uicontrol> in the same
        <uicontrol>network-group</uicontrol>. In addition, a <uicontrol>network-group</uicontrol>
        may be configured to provide the route any other <uicontrol>networks</uicontrol> in the same
        <uicontrol>network-group</uicontrol>; for example, if the internal APIs are in a dedicated
        <uicontrol>network-group</uicontrol> (a common configuration in a complex network because
        a network group with load balancers cannot be segmented) then other
        <uicontrol>network-groups</uicontrol> may need to include a route to the internal API
        <uicontrol>network-group</uicontrol> so that services can access the internal API
        endpoints. Routes may also be required to define how to access an external storage network
        or to define a general default route.</p>
    <p>As part of the <keyword keyref="kw-hos"/> deployment, networks are configured to act as the
        default route for all traffic that was received via that network (so that response packets
        always return via the network the request came from).</p>
    <p>Note that <keyword keyref="kw-hos"/> will configure the routing rules on the servers it deploys
        and will validate that the routes between services exist in the model, but ensuring that
        gateways can provide the required routes is the responsibility of your network
        configuration. The configuration processor provides information about the routes it is
        expecting to be configured.</p>
    <p>For a detailed description of how the configuration processor validates routes, refer to
        <xref keyref="networkroutevalidation">Network Route
            Validation</xref>.</p>

    </body>
</topic>


