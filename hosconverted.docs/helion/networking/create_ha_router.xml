<?xml version="1.0" encoding="UTF-8"?>
<!--Edit status: not edited-->
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd" >
<topic xml:lang="en-us" id="CreateHARouter">
  <title><ph conkeyref="HOS-conrefs/product-title"/>Creating a Highly Available Router</title>
  <body>
    <p conkeyref="HOS-conrefs/applies-to"/>
    
    <section id="CVRDVR">
      <title>CVR and DVR High Available Routers</title>
        <p>CVR (Centralized Virtual Routing) and DVR (Distributed Virtual Routing) are two types of 
        technologies which can be used to provide routing processes in <keyword keyref="kw-hos-phrase"/>.
        You can create Highly Available (HA) versions of CVR and DVR routers by using the options in the table 
        below when creating your router.
        </p>
        <p> The neutron command for creating a router <codeph>neutron router-create router_name
          --distributed=True|False --ha=True|False</codeph> requires administrative permissions. See
        the example in the next section, Creating a High Availability Router.
          <table frame="all" rowsep="1" colsep="1" id="table_vy3_hdl_bx">
          <title/>
          <tgroup cols="4" align="center">
            <colspec colname="c1" colnum="1" colwidth="1.28*"/>
            <colspec colname="c2" colnum="2" colwidth="1*"/>
            <colspec colname="c3" colnum="3" colwidth="1.45*"/>
            <colspec colname="c4" colnum="4" colwidth="4.68*" align="left"/>
            <thead>
              <row>
                <entry>--distributed</entry>
                <entry>--ha</entry>
                <entry>Router Type</entry>
                <entry>Description</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>False</entry>
                <entry>False</entry>
                <entry>CVR</entry>
                <entry>Centralized Virtual Router</entry>
              </row>
              <row>
                <entry>False</entry>
                <entry>True</entry>
                <entry>CVRHA</entry>
                <entry>Centralized Virtual Router with L3 High Availablity</entry>
              </row>
              <row>
                <entry>True</entry>
                <entry>False</entry>
                <entry>DVR</entry>
                <entry>Distributed Virtual Router without SNAT High Availability</entry>
              </row>
              <row>
                <entry>True</entry>
                <entry>True</entry>
                <entry>DVRHA</entry>
                <entry>Distributed Virtual Router with SNAT High Availability</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>

    </section>
    
    <section id="CreateRouter">
        <title>Creating a High Availability Router</title>
        <p>You can create a highly available router using the neutron command line interface.</p>
      
        <ol>
          <li>To create the HA router simply add <codeph>--ha=True</codeph> to the neutron
          router-create command. If you want to also make the router distributed, add
            <codeph>--distributed=True</codeph>. In this example, a DVR SNAT HA router is created
          with the name <codeph>routerHA</codeph>.
          <codeblock>$ neutron router-create routerHA --distributed=True --ha=True</codeblock></li>
          <li>Set the gateway for the external network and add interface
          <codeblock>$ neutron router-gateway-set routerHA &lt;ext-net-id&gt;
$ neutron router-interface-add routerHA &lt;private_subnet_id&gt;</codeblock></li>
          <li>Once the router is created, gateway set and interface attached, you now have a router
          with high availability.</li>
        </ol>
    </section>
    
   
    <section id="TestRouter">
      <title>Test Router for High Availability</title>
      <p>You can demonstrate that the router is HA by running a continuous ping from a VM instance
        that is running on the private network to an external server such as a public DNS. As the
        ping is running, list the l3 agents hosting the router and identify the agent that is
        responsible for hosting the active router. Induce the failover mechanism by creating a
        catastrophic event like shutting down node hosting the l3 agent. Once the node is shut down,
        you will see that the ping from the VM to the external network continues to run as the
        backup l3 agent takes over. To verify the agent hosting the primary router has changed, list
        the agents hosting the router. You will see a different agent is now hosting the active
        router. </p>
      <ol>
        <li>Boot an instance on the private network
          <codeblock>$ nova boot --image &lt;image_id&gt; --flavor &lt;flavor_id&gt; --nic net_id=&lt;private_net_id&gt; --key_name &lt;key> VM1</codeblock></li>
        <li>Log into the VM using the ssh keys
          <codeblock>ssh -i &lt;key> &lt;ipaddress of VM1></codeblock></li>
        <li>Start a ping to X.X.X.X. While pinging, make sure there is no packet loss and leave the
          ping running. <codeblock>$ ping X.X.X.X</codeblock></li>
        <li>Check which agent is hosting the active router
          <codeblock>$ neutron l3-agent-list-hosting-router &lt;router_id&gt;</codeblock></li>
        <li>Shutdown the node hosting the agent. </li>
        <li>Within 10 seconds, check again to see which L3 agent is hosting the active router
          <codeblock>$ neutron l3-agent-list-hosting-router &lt;router_id&gt;</codeblock></li>
        <li>You will see a different agent.</li>
      </ol>
    </section>
   

  </body>
</topic>
