<?xml version="1.0" encoding="UTF-8"?>
<!--Edit status: not edited-->
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" >
<topic xml:lang="en-us" id="ceilo_samples">
  <title><ph conkeyref="HOS-conrefs/product-title"/>Metering Service Samples</title>
  <body><!--not tested-->
    <p conkeyref="HOS-conrefs/applies-to"/>
   

    <section> Samples are discrete collections of a particular meter or the actual usage data
      defined by a meter description. Each sample is time-stamped and includes a variety of data
      that varies per meter but usually includes the project ID and UserID of the entity that
      consumed the resource represented by the meter and sample. <p>In a typical deployment, the
        number of samples can be in the tens of thousands if not higher for a specific collection
        period depending on overall activity. </p><p>Sample collection and data storage expiry
        settings are configured in Ceilometer. Use cases that include collecting data for monthly
        billing cycles are usually stored over a period of 45 days and require a large, scalable,
        back-end database to support the large volume of samples generated by production OpenStack
        deployments.</p>
      <b>Example configuration:</b>
      <codeblock>[database]
metering_time_to_live=-1</codeblock><p>In our example use case, to
        construct a complete billing record, an external billing application must collect all
        pertinent samples. Then the results must be sorted, summarized, and combine with the results
        of other types of metered samples that are required. This function is known as aggregation
        and is external to the Ceilometer service.</p><p>Meter data, or samples, can also be
        collected directly from the service APIs by individual Ceilometer polling agents. These
        polling agents directly access service usage by calling the API of each
        service.</p><p>OpenStack services such as Swift and Ceph currently only provide metered data
        through this function and some of the other OpenStack services provide specific metrics only
        through a polling action.</p>
    </section>
  </body>
</topic>
