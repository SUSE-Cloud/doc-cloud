<?xml version="1.0"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [ <!ENTITY % entities SYSTEM "entities.xml"> %entities; ]><!--Edit status: not edited-->
<section id="localizing_inputmodel">
   <title>
      <phrase/>Localizing the Input Model</title>
        <para/>

        
        
        
        
            <para>This section covers the minimum set of changes needed to localize the cloud for your
                environment. This assumes you are using other features of the example unchanged:</para>
            <itemizedlist>
                <listitem>
         <para>Update <literal>networks.yml</literal> to specify the network addresses (VLAN IDs and CIDR
                    values) for your cloud.</para>
      </listitem>
                <listitem>
         <para>Update <literal>nic_mappings.yml</literal> to specify the PCI bus information for your
                    servers' Ethernet devices.</para>
      </listitem>
                <listitem>
         <para>Update <literal>net_interfaces.yml</literal> to provide network interface configurations,
                    such as bond settings and bond devices.</para>
      </listitem>
                <listitem>
         <para>Update <literal>network_groups.yml</literal> to provide the public URL for your cloud and
                    to provide security certificates.</para>
      </listitem>
                <listitem>
         <para>Update <literal>servers.yml</literal> to provide information about your servers.</para>
      </listitem>
            </itemizedlist>
 
        
        
      <bridgehead renderas="sect4">networks.yml</bridgehead>
      <para>You will need to allocate site specific CIDRs and VLANs for these networks and update these
                values in the <literal>networks.yml</literal> file. The example models define the following
                networks:</para>
      <informaltable id="table_networks" colsep="1" rowsep="1">
         <tgroup cols="4">
                    <colspec colname="c1" colnum="1"/>
                    <colspec colname="c2" colnum="2"/>
                    <colspec colname="c3" colnum="3"/>
                    <colspec colname="c4" colnum="4"/>
                    <thead>
                        <row>
                            <entry>Network</entry>
                            <entry>CIDR</entry>
                            <entry>VLAN ID</entry>
                            <entry>Tagged / Untagged</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>External API</entry>
                            <entry>10.0.1.0/24</entry>
                            <entry>101</entry>
                            <entry>Tagged</entry>
                        </row>
                        <row>
                            <entry>External VM</entry>
                            <entry>Addresses configured by Neutron, leave blank in the file.</entry>
                            <entry>102</entry>
                            <entry>Tagged</entry>
                        </row>
                        <row>
                            <entry>Guest</entry>
                            <entry>10.1.1.0/24</entry>
                            <entry>103</entry>
                            <entry>Tagged</entry>
                        </row>
                        <row>
                            <entry>Management</entry>
                            <entry>192.168.10.0/24</entry>
                            <entry>100</entry>
                            <entry>Untagged</entry>
                        </row>
                    </tbody>
                </tgroup>
      </informaltable>
      <para>You will need to edit this file to provide your local values for these networks.</para>
      <para>The CIDR for the External VM network is configured separately using the Neutron API. (For
                instructions, see .) You will only specify
                its VLAN ID during the installation process.</para>
      <para>The Management network is shown as untagged. This is required if you are using this network
                to PXE install the operating system on the cloud nodes.</para>
      <para>The example <literal>networks.yml</literal> file is shown below. Modify the bolded fields to
                reflect your site values.</para>
      <screen>networks:
   #
   # This example uses the following networks
   #
   # Network       CIDR             VLAN
   # -------       ----             ----
   # External API  10.0.1.0/24      101 (tagged)
   # External VM   see note 1       102 (tagged)
   # Guest         10.1.1.0/24      103 (tagged)
   # Management    192.168.10.0/24  100 (untagged)
   #	
   # Notes:
   # 1. Defined as part of Neutron configuration
   #
   # Modify these values to match your environment
   #
   - name: EXTERNAL-API-NET
     vlanid: <emphasis role="bold">101</emphasis>
     tagged-vlan: true
     cidr: <emphasis role="bold">10.0.1.0/24</emphasis>
     gateway-ip: <emphasis role="bold">10.0.1.1</emphasis>
     network-group: EXTERNAL-API
        
   - name: EXTERNAL-VM-NET
     vlanid: <emphasis role="bold">102</emphasis>
     tagged-vlan: true
     network-group: EXTERNAL-VM
        
   - name: GUEST-NET
     vlanid: <emphasis role="bold">103</emphasis>
     tagged-vlan: true
     cidr: <emphasis role="bold">10.1.1.0/24</emphasis>
     gateway-ip: <emphasis role="bold">10.1.1.1</emphasis>
     network-group: GUEST
        
   - name: MANAGEMENT-NET
     vlanid: 100
     tagged-vlan: false
     cidr: <emphasis role="bold">192.168.10.0/24</emphasis>
     gateway-ip: <emphasis role="bold">192.168.10.1</emphasis>
     network-group: MANAGEMENT</screen>
   

        
      <bridgehead renderas="sect4">nic_mappings.yml</bridgehead>
      <para>This file maps Ethernet port names to specific bus slots. Due to inherent race conditions
                associated with multiple PCI device discovery there is no guarantee that Ethernet devices
                will be named as expected by the operating system, and it is possible that different port
                naming will exist on different servers with the same physical configuration.</para>
      <para>To provide a deterministic naming pattern, the input model supports an explicit mapping
                from PCI bus address to a user specified name. <phrase/> uses the prefix
                <emphasis role="bold">hed</emphasis> (Helion Ethernet Device) to name such devices to avoid any name clashes with
                the <emphasis role="bold">eth</emphasis> names assigned by the operating system.</para>
      <para>The example <literal>nic_mappings.yml</literal> file is shown below.</para>
      <screen>nic-mappings:
        
   - name: HP-DL360-4PORT
     physical-ports:
       - logical-name: hed1
         type: simple-port
         bus-address: "0000:07:00.0"
        
        - logical-name: hed2
          type: simple-port
          bus-address: "0000:08:00.0"
        
        - logical-name: hed3
          type: simple-port
          bus-address: "0000:09:00.0"
        
        - logical-name: hed4
          type: simple-port
          bus-address: "0000:0a:00.0"
        
    - name: MY-2PORT-SERVER
      physical-ports:
        - logical-name: hed3
          type: simple-port
          bus-address: "0000:04:00.0"
        
        - logical-name: hed4
          type: simple-port
          bus-address: "0000:04:00.1"</screen>
      <para>This defines two sets of NIC mappings, representing two different physical server types.
                The name of each mapping is used as a value in the <literal>servers.yml</literal> file to
                associate each server with its required mapping. This enables the use of different server
                models or servers with different network hardware.</para>
      <para>Each mapping lists a set of ports with the following information:</para>
      <itemizedlist>
                <listitem>
            <para>
               <emphasis role="bold">Logical name</emphasis> - <phrase/> uses the form
                    <literal>hedN</literal>.</para>
         </listitem>
                <listitem>
            <para>
               <emphasis role="bold">Type</emphasis> - Only simple-port types are supported in <phrase/>.</para>
         </listitem>
                <listitem>
            <para>
               <emphasis role="bold">Bus-address</emphasis> - The PIC bus address of the port.</para>
         </listitem>
            </itemizedlist>
      <para>The PCI bus address can be found using the <literal>lspci</literal> command on one of the
                servers. This command can produce a lot of output, so you can use the following command
                which will limit the output to list Ethernet class devices only:</para>
      <screen>sudo lspci -D |grep -i net</screen>
      <para>Here is an example output:</para>
      <screen>$ sudo lspci -D |grep -i net
0000:02:00.0 Ethernet controller: Broadcom Corporation NetXtreme BCM5719 Gigabit Ethernet PCIe (rev 01)
0000:02:00.1 Ethernet controller: Broadcom Corporation NetXtreme BCM5719 Gigabit Ethernet PCIe (rev 01)
0000:02:00.2 Ethernet controller: Broadcom Corporation NetXtreme BCM5719 Gigabit Ethernet PCIe (rev 01)
0000:02:00.3 Ethernet controller: Broadcom Corporation NetXtreme BCM5719 Gigabit Ethernet PCIe (rev 01)
0000:04:00.0 Ethernet controller: Intel Corporation 82599ES 10-Gigabit SFI/SFP+ Network Connection (rev 01)
0000:04:00.1 Ethernet controller: Intel Corporation 82599ES 10-Gigabit SFI/SFP+ Network Connection (rev 01)</screen>
      <para>To localize this file, replace the mapping names with the names of your choice and
                enumerate the ports as required.</para>
   
        
        
      <bridgehead renderas="sect4">net_interfaces.yml</bridgehead>
      <para>This file is used to define how the network interfaces are to be configured. The example
                reflects the slightly different configuration of controller, compute nodes, and VSA
                nodes.</para>
      <para>If network bonding is to be used, this file specifies how bonding is to be set up. It also
                specifies which networks are to be associated with each interface.</para>
      <para>The example uses a bond of interfaces <literal>hed3</literal> and <literal>hed4</literal>. You
                only need to modify this file if you have mapped your physical ports to different names, or
                if you need to modify the bond options.</para>
      <para>The section of configuration file is shown below, which will create a bonded interface
                using the named <literal>hed3</literal> and <literal>hed4</literal> NIC mappings described in
                the previous section.</para>
      <screen>
    - name: CONTROLLER-INTERFACES
      network-interfaces:
        - name: BOND0
          device:
              name: bond0
          bond-data:
              options:
                  mode: active-backup
                  miimon: 200
                  primary: hed3
          provider: linux
          devices:
              - name: hed3
              - name: hed4
          network-groups:
            - EXTERNAL-API
            - EXTERNAL-VM
            - GUEST
            - MANAGEMENT</screen>
      <para>If your system cannot support bonding, then you can modify this specification to specify a
                non-bonded interface, for example using device <literal>hed3</literal>:</para>
      <screen>
   - name: CONTROLLER-INTERFACES
     network-interfaces:
        - name: hed3
          device:
             name: hed3
          network-groups:
             - EXTERNAL-API
             - EXTERNAL-VM
             - GUEST
             - MANAGEMENT</screen>
   
        
        
      <bridgehead renderas="sect4">network_groups.yml</bridgehead>
      <para>This file defines the networks groups used in your cloud. A network-group defines the
                traffic separation model, and all of the properties that are common to the set of L3
                networks that carry each type of traffic. They define where services and load balancers are
                attached to the network model and the routing within that model.</para>
      <para>In this example, the following network groups are defined:</para>
      <itemizedlist>
                <listitem>
            <para>
               <emphasis role="bold">EXTERNAL-API</emphasis> - This network group is used for external IP traffic to the cloud.
                    In addition, it defines: </para>
            <itemizedlist>
                        <listitem>
                  <para>The characteristics of the load balancer to be used for the external API.</para>
               </listitem>
                        <listitem>
                  <para>The Transport Layer Security (TLS) attributes.</para>
               </listitem>
                    </itemizedlist>
         </listitem>
                <listitem>
            <para>
               <emphasis role="bold">EXTERNAL-VM</emphasis> - Floating IPs for virtual machines are created on this network
                    group. This is identified by the tag value
                    <literal>neutron.l3_agent.external_network_bridge</literal>.</para>
         </listitem>
                <listitem>
            <para>
               <emphasis role="bold">GUEST</emphasis> - Tenant VxLAN traffic is carried on this network group. This is identified
                    by the tag value <literal>neutron.networks.vxlan</literal>.</para>
         </listitem>
                <listitem>
            <para>
               <emphasis role="bold">MANAGEMENT</emphasis> - This is the default network group for traffic between service
                    components in the cloud. In addition, it defines: </para>
            <itemizedlist>
                        <listitem>
                  <para>An internal load balancer is defined on this network group for managing internal and
                            administrative API requests.</para>
               </listitem>
                    </itemizedlist>
         </listitem>
            </itemizedlist>
      <para>Most of the values in this file should be left unmodified if you are using the network
                model defined by the example. More complex modifications are supported but are outside the
                scope of this document.</para>
      <para>However, the values related to the external API network are site-specific and need to be
                modified:</para>
      <itemizedlist>
                <listitem>
            <para>Provide an external URL for the cloud.</para>
         </listitem>
                <listitem>
            <para>Provide the name of the security certificate to use.</para>
         </listitem>
            </itemizedlist>
      <para>The example <literal>network_groups.yml</literal> file is shown below, modify the bolded
                fields to reflect your site values.</para>
      <screen>
   # External API
   #
   # This is the network group that users will use to
   # access the public API endpoints of your cloud
   #
   - name: EXTERNAL-API
     hostname-suffix: extapi
        
     load-balancers:
       - provider: ip-cluster
         name: extlb
         # If external-name is set then public urls in keystone
         # will use this name instead of the IP address
         # You must either set this to a name that can be resolved
         # in your network 
         # or comment out this line to use IP addresses
         <emphasis role="bold">external-name</emphasis>:
        
         <emphasis role="bold">tls-components</emphasis>:
            - default
         roles:
            - public
         <emphasis role="bold">cert-file: my-public-kvm-vsa-cert</emphasis>
      </screen>
      <para>The above bolded sections as follows:</para>
      <para>
         <emphasis role="bold">external-name</emphasis> - The external name defines how the public URLs will be registered in
                Keystone. Users of your cloud will need to be able to resolve this URL to access the cloud
                APIs, and if you are using the TLS, the name must match the certificate used.</para>
      <para>Because this value is difficult to change after initial deployment, this value is left
                blank in the supplied example which prevents the configuration processor from running until
                a value has been supplied. If you want to register the public URLs as IP addresses instead
                of a name, then you can comment out this line.</para>
      <para>
         <emphasis role="bold">cert-file</emphasis> - Provide the name of the file located in
                <literal>~/helion/my_cloud/config/tls/certs/</literal> that will be used for your cloud
                endpoints. As shown above, this can be either a single certificate for all endpoints or a
                default certificate file and a set of service-specific certificate files.</para>
      <para>
         <emphasis role="bold">tls-components</emphasis> - If you do not want to use a TLS for the public URLs then change the
                entry that says <literal>tls-components</literal> to <literal>components</literal>.</para>
   
        
        
      <bridgehead renderas="sect4">servers.yml</bridgehead>
      <para>This file is where you provide the details of the physical servers that make up your cloud.
                There are two sections to this file: <literal>baremetal</literal> and
                <literal>servers</literal>:</para>
      <screen>
   baremetal:
      # NOTE: These values need to be changed to match your environment.
      # Define the network range that contains the ip-addr values for
      # the individual servers listed below.
      subnet: <emphasis role="bold">192.168.10.0</emphasis>
      netmask: <emphasis role="bold">255.255.255.0</emphasis>
      </screen>
      <para>The two values in this section are used to configure cobbler for operating system
                installation and must match the network values for the addresses given for the servers.</para>
      <para>The servers section below provides the details of each individual server. For example, here
                are the details for the first controller:</para>
      <screen>
   servers:
        
      # Controllers
      - id: controller1
        ip-addr: <emphasis role="bold">192.168.10.3</emphasis>
        role: CONTROLLER-ROLE
        server-group: RACK1
        nic-mapping: <emphasis role="bold">HP-DL360-4PORT</emphasis>
        mac-addr: <emphasis role="bold">b2:72:8d:ac:7c:6f</emphasis>
        ilo-ip: <emphasis role="bold">192.168.9.3</emphasis>
        ilo-password: <emphasis role="bold">password</emphasis>
        ilo-user: <emphasis role="bold">admin</emphasis>
      </screen>
      <para>Here is a description of each of the above bolded sections:</para>
      <para>
         <emphasis role="bold">id</emphasis> - A name you provide to uniquely identify a server. This can be any string which
                makes sense in your context, such as an asset tag, descriptive name, etc. The system will
                use this value to remember how the server has been allocated.</para>
      <para>
         <emphasis role="bold">ip-addr</emphasis> - The IP address that the system will use for SSH connections to the server
                for deployment and configuration changes. This address must be in the IP range of one of the
                networks in the model. In the example, the servers are provided with addresses from the
                MANAGEMENT network.</para>
      <para>
         <emphasis role="bold">role</emphasis> - A string that refers to an entry in <literal>server_roles.yml</literal> that
                tells the system how to configure the disks and network interfaces for this server. Roles
                are also used to define which servers can be used for specific purposes. Adding and changing
                roles is beyond the scope of this walkthrough - for more information, see .</para>
      <para>
         <emphasis role="bold">server-group</emphasis> - Tells the system how this server is physically related to networks
                and other servers. Server groups are used to ensure that servers in a cluster are selected
                from different physical groups. The example provides a set of server groups that divide the
                servers into three sets called <emphasis role="bold">RACK1</emphasis>, <emphasis role="bold">RACK2</emphasis>, and <emphasis role="bold">RACK3</emphasis>. Modifying the
                server group structure is beyond the scope of this walkthrough - for more information, see
                .</para>
      <para>
         <emphasis role="bold">nic-mapping</emphasis> - The name of a network port mapping definition (for more information,
                see ). You need to set this to the mapping that corresponds to this
                server.</para>
      <para>
         <emphasis role="bold">mac-addr</emphasis> - The MAC address of the interface associated with this server that will be
                used for PXE boot.</para>
      <para>
         <emphasis role="bold">ilo-ip</emphasis> - The IP address of the iLO or IPMI port for this server.</para>
      <para>
         <emphasis role="bold">ilo-user and ilo-password</emphasis> - The login details used to access the iLO or IPMI port of
                this server. The iLO password value can be provided as an OpenSSL encrypted string. (For
                instructions on how to generate encrypted passwords, see <xref linkend="install_kvm"/>.</para>
   
        
    </section>
