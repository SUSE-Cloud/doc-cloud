<?xml version="1.0"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [ <!ENTITY % entities SYSTEM "entities.xml"> %entities; ]><!--Edit status: not edited-->
<section id="barbicanUpgrade">
   <title>
      <phrase/>Enabling Barbican Support When Upgrading</title>
    
    <para/>

    
      <bridgehead renderas="sect4">Enabling Barbican in previous versions of <phrase/>
      </bridgehead>
      <para>
      Barbican was added in <phrase/> and is not available in 2.x
      distributions. (Details of the Barbican Key Management Service are discussed in <xref linkend="barbican"/>.) </para>
      <para/>
      <itemizedlist id="ul_exz_gkl_lx">
        <listitem>
            <para>For <phrase/> upgrades to <phrase/>:</para>
            <itemizedlist id="ul_fxz_gkl_lx">
               <listitem>
                  <para>If you had already added Barbican in your <phrase/>
              deployment, then no action is required.</para>
               </listitem>
               <listitem>
                  <para>However, if the Barbican service is not installed in your existing <phrase/> installation, follow the process outlined here to add
              Barbican after you have upgraded your cloud to <phrase/>.</para>
               </listitem>
            </itemizedlist>
         </listitem>
      </itemizedlist>
      <para>If you are upgrading to <phrase/> with your existing input model
      configuration files, you will have to include Barbican sections in the relevant input model
      files <emphasis>after performing the upgrade</emphasis>.</para>
   

    <para>There are three service components (barbican-api, barbican-client,
      barbican-worker) that need to be included in the service-components list. These
      service-components are provided in the control plane configuration file,<literal>
        control_plane.yml</literal> at
        <literal>~/helion/my_cloud/definition/data/control_plane.yml</literal>. These three Barbican
      components need to be defined for clusters that have a server-role of 'CONTROLLER-ROLE' or
      'CORE-ROLE' in their control plane definitions. Here is an example of the three Barbican
      components added to <literal>control_plane.yml</literal> under CONTROLLER-ROLE: </para>
   <screen>  control-planes:
        - name: control-plane-1
        ...
        ...
        clusters:
        - name: cluster1
        ...
        ...
        cluster-prefix: c1
        server-role: CONTROLLER-ROLE
        ...
        ...
        service-components:
        - lifecycle-manager
        - ntp-server
        ...
        ...
        - barbican-api
        - barbican-client
        - barbican-worker
        ...
        ...
        
        ...
        ...</screen>
   <para>After making the changes, you must run site.yml:</para>
    <screen>cd ~/scratch/ansible/next/hos/ansible 
ansible-playbook -i hosts/verb_hosts site.yml</screen>
    
    <formalpara id="tls">
      <title>TLS configuration </title>
      <para>
         <phrase/>
         <phrase/>
         <literal>barbican-api</literal>
         <literal>tls-component-endpoints:</literal>
         <literal>network_groups.yml</literal>
      </para>
   </formalpara>
    <para> Go to <literal>helion/my_cloud/definition/data/</literal> and edit
        <literal>network_groups.yml</literal>&gt;</para>
   <screen>cd ~/helion/my_cloud/definition/data/ </screen>
   <screen>.......
        .....
        tags:
        - neutron.networks.vxlan
        - neutron.networks.vlan:
        provider-physical-network: physnet1
        - nova.compute.iscsi
        
        tls-component-endpoints:
        - barbican-api
        component-endpoints:
        - default
        
        routes:
        - default
        load-balancers:
        - provider: ip-cluster
        load-balancers:
        - provider: ip-cluster
        name: lb
        tls-components:
        - default
        components:
        - vertica
        - rabbitmq
        - mysql
        - nova-metadata
        roles:
        - internal
        - admin
        cert-file: helion-internal-cert </screen>
   <para>
      Commit the changes </para>
   <screen>cd ~/helion
git add -A
git commit -m "My config"</screen>
   <para>
      Then run the following Ansible playbooks:
      </para>
   <screen>$ ansible-playbook -i hosts/localhost config-processor-run.yml -e encrypt="" -e rekey=""
$ ansible-playbook -i hosts/localhost ready-deployment.yml
$ cd ~/scratch/ansible/next/hos/ansible
$ ansible-playbook -i hosts/verb_hosts barbican-reconfigure.yml
$ ansible-playbook -i hosts/verb_hosts hlm-reconfigure.yml</screen>
    
    
    <para>For further information on the Key Management service, see <xref linkend="barbican"/> and <xref linkend="barbicanAdmin"/>.</para>
  </section>
