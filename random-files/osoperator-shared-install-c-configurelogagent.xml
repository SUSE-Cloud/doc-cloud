<?xml version="1.0"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [ <!ENTITY % entities SYSTEM "entities.ent"> %entities; ]>
<!-- Copyright FUJITSU LIMITED 2017 -->
<section id="idg-osoperator-shared-install-c-configurelogagent-xml-1">
 <title>Configuration</title>
 <para>
  The agent installation automatically configures the agent so that a minimum
  set of log data can instantly be retrieved. You can enhance the agent
  configuration or update the initial configuration, if required.
 </para>
 <para>
  The following sections provide information on the file that stores the agent
  configuration and describe how to update and enhance the configuration.
 </para>
 <bridgehead renderas="sect4">Configuration File</bridgehead>
 <para>
  The installer stores all configuration settings of the Log Agent in the
  following file:
 </para>
 <para>
  <literal>/etc/monasca/monasca-log-agent/agent.conf</literal>
 </para>
 <para>
  The file is composed of an input and an output section:
 </para>
 <itemizedlist>
  <listitem>
   <para>
    The input section specifies which log data is to be retrieved.
   </para>
   <para>
    The Log Agent is based on the so-called ELK stack, a solution for searching
    and analyzing log data that combines the open source projects
    Elasticsearch, Logstash, and Kibana. For details on the ELK stack, refer to
    the documentation on <ulink url="https://www.elastic.co/guide/index.html">Elasticsearch, Logstash, and Kibana</ulink>.
   </para>
   <para>
    <phrase>CMM</phrase> supports the file plugin of Logstash as input
    mechanism. The file plugin enables Logstash to read log data from any log
    file on your file system. Logstash supports additional plugins. For
    details, refer to
    <ulink url="https://www.elastic.co/guide/en/logstash/2.3/input-plugins.html">Logstash Input Plugins</ulink>. Contact your <phrase>CMM</phrase> support
    if you want to integrate a different plugin.
   </para>
  </listitem>
  <listitem>
   <para>
    The output section specifies all parameters required for retrieving the log
    data and sending it to the Monitoring Service for further processing.
   </para>
  </listitem>
 </itemizedlist>
 <bridgehead renderas="sect4">Updating the Configuration File</bridgehead>
 <para>
  To edit the <literal>agent.conf</literal> file, proceed as follows:
 </para>
 <orderedlist>
  <listitem>
   <para>
    Log in to the server where the agent is installed.
   </para>
  </listitem>
  <listitem>
   <para>
    To stop the agent, execute the following command:
   </para>
<screen>sudo systemctl stop openstack-monasca-log-agent</screen>
  </listitem>
  <listitem>
   <para>
    Open the file with your favorite editor.
   </para>
   <para>
    Example:
   </para>
<screen>sudo vim /etc/monasca/monasca-log-agent/agent.conf</screen>
  </listitem>
  <listitem>
   <para>
    Adapt the input section, if required.
   </para>
   <para>
    If you want to add files to be monitored, add a corresponding file block.
   </para>
   <para>
    If you want to define dimensions for the log files of a file block, define
    them with <literal>add_field</literal>. Dimensions allow you to collect
    meta information with the log data that is retrieved by the agent. The meta
    information is attached to each log entry. It is represented as a field in
    the log management window. For the user who is working with the log data,
    dimensions provide additional filtering options.
   </para>
   <para>
    Example configuration:
   </para>
<screen>input {
  file {
    path =&gt; "/var/log/keystone/*.log"
  }
   file {
    path =&gt; "/var/log/monasca/agent/*.log"
  }
  file {
    path =&gt; "/var/log/monasca/monasca-log-agent/*.log"
  }
  file {
    add_field =&gt; { "dimensions" =&gt; { "service" =&gt; "monasca-api" }}
    add_field =&gt; { "dimensions" =&gt; { "language" =&gt; "java" }}
    add_field =&gt; { "dimensions" =&gt; { "log_level" =&gt; "error" }}
    path =&gt; "/var/log/monasca/api/error.log"
  }
}</screen>
  </listitem>
  <listitem>
   <para>
    Adapt the output section, if required. Update the corresponding parameter
    values. Each value must be enclosed in double quotes
    (<literal>"</literal>).
   </para>
   <para>
    For details on the configuration settings that can be defined, refer to
    <xref linkend="idg-osoperator-shared-appendix-r-confsettings-logs-xml-1"/>.
   </para>
   <para>
    Example configuration:
   </para>
<screen>output {
  monasca_log_api {
    monasca_log_api_url =&gt; "http://192.168.10.4:5607/v3.0"
    keystone_api_url =&gt; "http://192.168.10.5:35357/v3"
    project_name =&gt; "monasca"  
    username =&gt; "monasca-agent" 
    password =&gt; "password"    
    domain_id =&gt; "default"
    dimensions =&gt; ['app_type:kafka', 'priority:high'] 
    num_of_logs =&gt; 100
    delay =&gt; 1
    elapsed_time_sec =&gt; 600
    max_data_size_kb =&gt; 5120
  }
}</screen>
  </listitem>
  <listitem>
   <para>
    To start the agent again, execute the following command:
   </para>
<screen>sudo systemctl start openstack-monasca-log-agent	</screen>
  </listitem>
 </orderedlist>
 <para>
  The agent is instantly available with the updated configuration settings.
 </para>
</section>
